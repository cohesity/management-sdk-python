consumes:
- application/json
produces:
- application/json
schemes:
- https
swagger: "2.0"
info:
  description: |-
    This API list provides operations for interfacing with the Cohesity
    Cluster.
  title: Cohesity REST API
  version: "1.0"
basePath: /irisservices/api/v1
paths:
  /public/accessTokens:
    post:
      description: |-
        Before making other REST API requests, your REST client must make a
        'POST /public/accessToken' request with a valid Cohesity username and
        password. This POST request returns an access token and type
        in the response that is generated by the Cohesity Cluster.
        Subsequent requests to other Cohesity REST API operations must
        specify the returned access token and type by setting 'Authorization'
        in the http header in the following format:

        Authorization: token_type access_token

        The generated token is valid for 24 hours. If a request is made with
        an expired token, the 'Token expired' error message is returned.
        Add code to your REST client to check for this error and request
        another access token before reissuing the request.
      tags:
      - AccessTokens
      summary: Generate an Access Token.
      operationId: GenerateAccessToken
      parameters:
      - x-go-name: Body
        description: Request to generate access token.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AccessTokenCredential'
      responses:
        "201":
          $ref: '#/responses/GenerateAccessTokenResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory:
    get:
      description: |-
        After a Cohesity Cluster has been joined to an Active Directory domain,
        the users and groups in the domain can be authenticated on the Cohesity Cluster
        using their Active Directory credentials.

        NOTE: The userName and password fields are not populated by this operation.
      tags:
      - ActiveDirectory
      summary: Lists the Active Directories that the Cohesity Cluster has joined.
      operationId: GetActiveDirectoryEntry
      parameters:
      - type: array
        items:
          type: string
        x-go-name: Domains
        description: Specifies the domains to fetch active directory entries.
        name: domains
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetActiveDirectoryResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        After a Cohesity Cluster has been joined to an Active Directory domain,
        the users and groups in the domain can be authenticated on the Cohesity Cluster
        using their Active Directory credentials.
      tags:
      - ActiveDirectory
      summary: Join the Cohesity Cluster to the specified Active Directory.
      operationId: CreateActiveDirectoryEntry
      parameters:
      - x-go-name: Body
        description: Request to join an Active Directory.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateActiveDirectoryEntryParams'
      responses:
        "201":
          $ref: '#/responses/CreateActiveDirectoryResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: |-
        Deletes the join of the Cohesity Cluster to the specified
        Active Directory domain. After the deletion, the Cohesity Cluster
        no longer has access to the principals on the Active Directory.
        For example, you can no longer log in to the Cohesity Cluster
        with a user defined in a principal group of the Active Directory domain.
      tags:
      - ActiveDirectory
      summary: Deletes the join with the Active Directory.
      operationId: DeleteActiveDirectoryEntry
      parameters:
      - x-go-name: Body
        description: Request to delete a join with an Active Directory.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ActiveDirectoryEntry'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/centrifyZones:
    get:
      tags:
      - ActiveDirectory
      summary: Fetches the list centrify zones of an active directory domain.
      operationId: ListCentrifyZones
      parameters:
      - type: string
        x-go-name: DomainName
        description: Specifies the fully qualified domain name (FQDN) of an Active
          Directory.
        name: domainName
        in: query
      responses:
        "200":
          $ref: '#/responses/ListCentrifyZonesResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/domainControllers:
    get:
      tags:
      - ActiveDirectory
      summary: List the domain controllers for a domain.
      operationId: GetActiveDirectoryDomainControllers
      parameters:
      - type: string
        x-go-name: DomainName
        description: Specifies the domain name
        name: domainName
        in: query
      responses:
        "200":
          $ref: '#/responses/ListDomainControllersResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/principals:
    get:
      description: |-
        Optionally limit the search results by specifying security identifiers (SIDs),
        an object class (user or group) or a substring.
        You can specify SIDs or a substring but not both.
      tags:
      - ActiveDirectory
      summary: |-
        List the user and group principals in the Active Directory that match the
        filter criteria specified using parameters.
      operationId: SearchActiveDirectoryPrincipals
      parameters:
      - type: string
        x-go-name: Domain
        description: |-
          Specifies the domain name of the principals to search. If specified
          the principals in that domain are searched. Domain could be an
          Active Directory domain joined by the Cluster or any one of the
          trusted domains of the Active Directory domain or the LOCAL domain.
          If not specified, all the domains are searched.
        name: domain
        in: query
      - enum:
        - kUser
        - kGroup
        - kComputer
        - kWellKnownPrincipal
        type: string
        x-go-name: ObjectClass
        description: |-
          Optionally filter by a principal object class such as 'kGroup' or 'kUser'.
          If 'kGroup' is specified, only group principals are returned.
          If 'kUser' is specified, only user principals are returned.
          If not specified, both group and user principals are returned.
          'kUser' specifies a user object class.
          'kGroup' specifies a group object class.
          'kComputer' specifies a computer object class.
          'kWellKnownPrincipal' specifies a well known principal.
        name: objectClass
        in: query
      - type: string
        x-go-name: Search
        description: |-
          Optionally filter by matching a substring. Only principals in
          the with a name or sAMAccountName that matches
          part or all of the specified substring are returned.
          If specified, a 'sids' parameter should not be specified.
        name: search
        in: query
      - type: array
        items:
          type: string
        x-go-name: Sids
        description: |-
          Optionally filter by a list of security identifiers (SIDs) found
          in the specified domain. Only principals matching
          the specified SIDs are returned.
          If specified, a 'search' parameter should not be specified.
        name: sids
        in: query
      - type: boolean
        x-go-name: IncludeComputers
        description: Specifies if Computer/GMSA accounts need to be included in this
          search.
        name: includeComputers
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchActiveDirectoryPrincipalsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        After a group or user has been added to a Cohesity Cluster,
        the referenced Active Directory principal can be used by the Cohesity Cluster.
        In addition, this operation maps Cohesity roles with a group or user and
        this mapping defines the privileges allowed on the Cohesity Cluster for the
        group or user.
        For example if an 'management' group is created on the Cohesity Cluster
        for the Active Directory 'management' principal group and is
        associated with the Cohesity 'View' role, all users in the
        referenced Active Directory 'management' principal group can log in to the
        Cohesity Dashboard but will only have view-only privileges.
        These users cannot create new Protection Jobs, Policies, Views, etc.

        NOTE: Local Cohesity users and groups cannot be created by this operation.
        Local Cohesity users or groups do not have an associated Active Directory
        principals and are created directly in the default LOCAL domain.
      tags:
      - ActiveDirectory
      summary: |-
        Add multiple groups or users on the Cohesity Cluster for the specified
        Active Directory principals. In addition, assign Cohesity roles to the
        users or groups to define their Cohesity privileges.
      operationId: AddActiveDirectoryPrincipals
      parameters:
      - x-go-name: Body
        description: Request to add groups or users to the Cohesity Cluster.
        name: body
        in: body
        schema:
          type: array
          items:
            $ref: '#/definitions/ActiveDirectoryPrincipalsAddParameters'
      responses:
        "201":
          $ref: '#/responses/AddActiveDirectoryPrincipalsResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/{name}/enableTrustedDomainState:
    post:
      tags:
      - ActiveDirectory
      summary: Updates the states of trusted domains discovery.
      operationId: EnableTrustedDomainDiscovery
      parameters:
      - x-go-name: Body
        description: Request to update enable trusted domains state of an Active Directory.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateTrustedDomainEnableParams'
      - type: string
        x-go-name: Name
        description: Specifies the Active Directory Domain Name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UpdateActiveDirectoryResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/{name}/idMappingInfo:
    put:
      tags:
      - ActiveDirectory
      summary: Updates the user id mapping info of an Active Directory.
      operationId: UpdateActiveDirectoryIdMapping
      parameters:
      - x-go-name: Body
        description: Request to update user id mapping of an Active Directory.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/IdMappingInfo'
      - type: string
        x-go-name: Name
        description: Specifies the Active Directory Domain Name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UpdateActiveDirectoryResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/{name}/ignoredTrustedDomains:
    put:
      tags:
      - ActiveDirectory
      summary: Updates the list of trusted domains to be ignored during trusted domain
        discovery of an Active Directory.
      operationId: UpdateActiveDirectoryIgnoredTrustedDomains
      parameters:
      - x-go-name: Body
        description: Request to update the list of ignored trusted domains of an AD.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateIgnoredTrustedDomainsParams'
      - type: string
        x-go-name: Name
        description: Specifies the Active Directory Domain Name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UpdateActiveDirectoryResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/{name}/ldapProvider:
    put:
      tags:
      - ActiveDirectory
      summary: Updates the LDAP provide Id for an Active Directory domain.
      operationId: UpdateActiveDirectoryLdapProvider
      parameters:
      - x-go-name: Body
        description: Request to update the LDAP provider info.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateLdapProviderParams'
      - type: string
        x-go-name: Name
        description: Specifies the Active Directory Domain Name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UpdateActiveDirectoryResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/{name}/machineAccounts:
    post:
      tags:
      - ActiveDirectory
      summary: Updates the machine accounts of an Active Directory.
      operationId: UpdateActiveDirectoryMachineAccounts
      parameters:
      - x-go-name: Body
        description: Request to update machine accounts of an Active Directory.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateMachineAccountsParams'
      - type: string
        x-go-name: Name
        description: Specifies the Active Directory Domain Name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UpdateActiveDirectoryMachineAccountsResponse'
        default:
          $ref: '#/responses/Error'
  /public/activeDirectory/{name}/preferredDomainControllers:
    put:
      description: Updates the preferred domain controllers of an Active Directory
      tags:
      - ActiveDirectory
      operationId: UpdatePreferredDomainControllers
      parameters:
      - x-go-name: Body
        description: Request to update preferred domain controllers of an Active Directory.
        name: body
        in: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/PreferredDomainController'
      - type: string
        x-go-name: Name
        description: Specifies the Active Directory Domain Name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UpdateActiveDirectoryResponse'
        default:
          $ref: '#/responses/Error'
  /public/alertCategories:
    get:
      description: Returns alert categories in Cohesity cluster.
      tags:
      - Alerts
      summary: Get alert categories in the Cohesity cluster.
      operationId: GetAlertCategories
      responses:
        "200":
          $ref: '#/responses/GetAlertCategoriesResponse'
        default:
          $ref: '#/responses/Error'
  /public/alertNotificationRules:
    get:
      description: |-
        Gets all alert notification rules containing criteria to deliver notification
        to delivery targets such as email addresses, invoking external apis etc.
      tags:
      - Alerts
      summary: Gets all alert notification rules.
      operationId: GetNotificationRules
      responses:
        "200":
          $ref: '#/responses/GetNotificationRulesResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        Updates delivery targets such as email addresses and external apis in an
        existing notification rule.
      tags:
      - Alerts
      summary: Updates an existing alert notification rule.
      operationId: UpdateNotificationRule
      responses:
        "200":
          $ref: '#/responses/UpdateNotificationRulesResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Creates a new notification rule with provided delivery targets such as email
        addresses and external apis.
      tags:
      - Alerts
      summary: Creates a new alert notification rule.
      operationId: CreateNotificationRule
      parameters:
      - x-go-name: Body
        description: Create Notification Rule argument.
        name: body
        in: body
        schema:
          $ref: '#/definitions/NotificationRule'
      responses:
        "201":
          $ref: '#/responses/CreateNotificationRulesResponse'
        default:
          $ref: '#/responses/Error'
  /public/alertNotificationRules/{ruleId}:
    delete:
      description: Deletes an existing alert notification rule matching the rule id.
      tags:
      - Alerts
      summary: Deletes an alert notification rule.
      operationId: DeleteNotificationRule
      parameters:
      - type: integer
        format: int64
        x-go-name: RuleId
        description: Specifies the rule id.
        name: ruleId
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/alertResolutions:
    get:
      description: |-
        Returns all Alert Resolution objects found on the Cohesity Cluster
        that match the filter criteria specified using parameters.
        If no filter parameters are specified,
        all Alert Resolution objects are returned.
        Each object provides details about the Alert Resolution such as
        the resolution summary and details.
      tags:
      - Alerts
      summary: List the Alert Resolutions on the Cohesity Cluster.
      operationId: GetResolutions
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ResolutionIdList
        description: Specifies list of Alert Resolution ids to filter resolutions
          by.
        name: resolutionIdList
        in: query
      - type: array
        items:
          type: string
        x-go-name: AlertIdList
        description: Specifies list of Alert Resolution ids to filter resolutions
          by.
        name: alertIdList
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: Specifies Start Time Unix epoch in microseconds to filter resolutions
          by.
        name: startDateUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: Specifies End Time Unix epoch in microseconds to filter resolutions
          by.
        name: endDateUsecs
        in: query
      - type: integer
        format: int32
        x-go-name: MaxResolutions
        description: |-
          Specifies the number of returned Resolutions to be returned. The newest
          Resolutions are returned.
        name: maxResolutions
        in: query
        required: true
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetResolutionsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Create an Alert Resolution and apply it to one or more Alerts.
        Mark the Alerts as resolved.
      tags:
      - Alerts
      summary: Create an Alert Resolution.
      operationId: CreateResolution
      parameters:
      - x-go-name: Body
        description: Request to create an Alert Resolution and apply it to the specified
          Alerts.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AlertResolutionRequest'
      responses:
        "201":
          $ref: '#/responses/CreateResolutionResponse'
        default:
          $ref: '#/responses/Error'
  /public/alertResolutions/{id}:
    get:
      description: |-
        Returns the Alert Resolution object corresponding to passed in Alert
        Resolution Id.
      tags:
      - Alerts
      summary: List details about a single Alert Resolution.
      operationId: GetResolutionById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Unique id of the Alert Resolution to return.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetResolutionByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        Apply an existing Alert Resolution to one or more additional Alerts.
        Mark those additional Alerts as resolved.
      tags:
      - Alerts
      summary: Apply an existing Alert Resolution to additional Alerts.
      operationId: UpdateResolution
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Unique id of the Alert Resolution to return.
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to apply an existing resolution to the specified Alerts.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateResolutionParams'
      responses:
        "200":
          $ref: '#/responses/UpdateResolutionResponse'
        default:
          $ref: '#/responses/Error'
  /public/alertTypes:
    get:
      description: |-
        Returns registered alerts in the Cohesity cluster that match the filter
        criteria specified using parameters. If no filter parameters are specified,
        all registered alerts in the Cohesity cluster are returned.
      tags:
      - Alerts
      summary: Get registered alerts in the Cohesity cluster.
      operationId: GetAlertTypes
      parameters:
      - x-go-name: Body
        description: Get alert types params.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/GetAlertTypesParams'
      responses:
        "200":
          $ref: '#/responses/GetAlertTypesResponse'
        default:
          $ref: '#/responses/Error'
  /public/alerts:
    get:
      description: |-
        Returns all Alert objects found on the Cohesity Cluster that
        match the filter criteria specified using parameters.
        The Cohesity Cluster creates an Alert when a potential problem
        is found or when a threshold has been exceeded on the Cohesity Cluster.
        If no filter parameters are specified, all Alert objects are returned.
        Each object provides details about the Alert such as the Status and Severity.
      tags:
      - Alerts
      summary: List the Alerts on the Cohesity Cluster.
      operationId: GetAlerts
      parameters:
      - type: array
        items:
          type: string
        x-go-name: AlertIdList
        description: Specifies list of Alert ids to filter alerts by.
        name: alertIdList
        in: query
      - type: array
        items:
          type: integer
          format: int32
        x-go-name: AlertTypeList
        description: Specifies list of Alert Types to filter alerts by.
        name: alertTypeList
        in: query
      - type: array
        items:
          enum:
          - kDisk
          - kNode
          - kCluster
          - kNodeHealth
          - kClusterHealth
          - kBackupRestore
          - kEncryption
          - kArchivalRestore
          - kRemoteReplication
          - kQuota
          type: string
        x-go-name: AlertCategoryList
        description: Specifies list of Alert Categories.
        name: alertCategoryList
        in: query
      - type: string
        x-go-name: PropertyKey
        description: Specifies name of the property to filter alerts by.
        name: propertyKey
        in: query
      - type: string
        x-go-name: PropertyValue
        description: Specifies value of the property to filter alerts by.
        name: propertyValue
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: Specifies start time Unix epoch time in microseconds to filter
          alerts by.
        name: startDateUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: Specifies end time Unix epoch time in microseconds to filter
          alerts by.
        name: endDateUsecs
        in: query
      - type: array
        items:
          enum:
          - kOpen
          - kResolved
          - kAlertSuppressed
          type: string
        x-go-name: AlertStateList
        description: Specifies list of Alert States to filter alerts by.
        name: alertStateList
        in: query
      - type: array
        items:
          enum:
          - kCritical
          - kWarning
          - kInfo
          type: string
        x-go-name: AlertSeverityList
        description: Specifies list of Alert severity to filter alerts by.
        name: alertSeverityList
        in: query
      - type: array
        items:
          enum:
          - kSoftware
          - kHardware
          - kService
          - kOther
          type: string
        x-go-name: AlertTypeBucketList
        description: |-
          Specifies the list of Alert type bucket.
          Specifies the Alert type bucket.
          kSoftware - Alerts which are related to Cohesity services.
          kHardware - Alerts related to hardware on which Cohesity software is running.
          kService - Alerts related to other external services.
          kOther - Alerts not of one of above categories.
        name: alertTypeBucketList
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ResolutionIdList
        description: Specifies alert resolution ids to filter alerts by.
        name: resolutionIdList
        in: query
      - type: integer
        format: int32
        x-go-name: MaxAlerts
        description: |-
          Specifies the number of returned Alerts to be returned. The newest Alerts
          are returned.
        name: maxAlerts
        in: query
        required: true
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetAlertsResponse'
        default:
          $ref: '#/responses/Error'
  /public/alerts/{id}:
    get:
      description: Returns the Alert object corresponding to the specified id.
      tags:
      - Alerts
      summary: List details about a single Alert.
      operationId: GetAlertById
      parameters:
      - type: string
        x-go-name: Id
        description: Unique id of the Alert to return.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetAlertByIdResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/analyzeJar:
    post:
      description: Returns the result of the jar analysis.
      tags:
      - Analytics
      summary: Analyze the uploaded jar.
      operationId: AnalyzeJar
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/AnalyseJarArg'
      responses:
        "200":
          $ref: '#/responses/AnalyzeJarResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/apps:
    get:
      description: |-
        If no parameters are specified, all Applications currently on
        the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      tags:
      - Analytics
      summary: List Applications filtered by the specified parameters.
      operationId: GetApplications
      responses:
        "200":
          $ref: '#/responses/GetApplicationsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created application.
      tags:
      - Analytics
      summary: Create an Application.
      operationId: CreateApplication
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/MapReduceInfo'
      responses:
        "201":
          $ref: '#/responses/ApplicationResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/apps/{id}:
    get:
      description: Returns the Application corresponding to the specified Application
        Id.
      tags:
      - Analytics
      summary: List details about a single Application.
      operationId: GetApplicationById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetApplicationByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated Application.
      tags:
      - Analytics
      summary: Update an Application.
      operationId: UpdateApplication
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/MapReduceInfo'
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/ApplicationResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns delete status upon completion.
      tags:
      - Analytics
      summary: Delete an Application.
      operationId: DeleteApplication
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/cancelAppInstanceRun/{id}:
    put:
      description: Returns the result.
      tags:
      - Analytics
      summary: Cancel a specific map reduce instance run.
      operationId: CancelMapReduceInstanceRun
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/CancelMapReduceInstanceRunResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/mappers:
    get:
      description: |-
        If no parameters are specified, all Mappers currently on
        the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      tags:
      - Analytics
      summary: List Mappers filtered by the specified parameters.
      operationId: GetMappers
      responses:
        "200":
          $ref: '#/responses/GetMappersResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created mapper.
      tags:
      - Analytics
      summary: Create a Mapper.
      operationId: CreateMapper
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/MapperInfo'
      responses:
        "201":
          $ref: '#/responses/MapperResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/mappers/{id}:
    get:
      description: Returns the Mapper corresponding to the specified Mapper Id.
      tags:
      - Analytics
      summary: List details about a single Mapper.
      operationId: GetMapperById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetMapperByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated Mapper.
      tags:
      - Analytics
      summary: Update a Mapper.
      operationId: UpdateMapper
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/MapperInfo'
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/MapperResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns delete status upon completion.
      tags:
      - Analytics
      summary: Delete a Mapper.
      operationId: DeleteMapper
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/mrAppRun/{id}:
    delete:
      description: Returns delete status upon completion.
      tags:
      - Analytics
      summary: Delete a Map-Reduce Application Instance Run.
      operationId: DeleteMapReduceInstanceRun
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/mrAppRuns:
    get:
      description: |-
        If no parameters are specified, all map reduce application instance runs
        currently on the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      tags:
      - Analytics
      summary: List map reduce application runs filtered by the specified parameters.
      operationId: GetMapReduceAppRuns
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/GetMapReduceAppRunsParams'
      responses:
        "200":
          $ref: '#/responses/GetMapReduceAppRunsResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/mrBaseJar:
    get:
      description: Returns a struct containing the map reduce base jar from the cluster.
      tags:
      - Analytics
      summary: Downloads the map reduce base jar.
      operationId: DownloadMRBaseJar
      responses:
        "200":
          $ref: '#/responses/DownloadResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/mrFileFormats:
    get:
      description: |-
        The Analytics workbench generates output files from map reduce instances run for
        a particular application. This API returns the output file formats available to
        the user for download.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Analytics
      summary: Used to retrieve supported output file formats from a map reduce instance.
      operationId: GetMapReduceFileFormats
      parameters:
      - type: string
        x-go-name: ResultFilePath
        description: |-
          Specifies the path where the map reduce instance has the result.
          file generated.
        name: resultFilePath
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: StorageDomainId
        description: Specifies the ID of the storage domain.
        name: storageDomainId
        in: query
        required: true
      - type: string
        x-go-name: ViewName
        description: |-
          Specifies the name of the view inside view box where map reduce instance.
          is run.
        name: viewName
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetMapReduceFileFormatsResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/mrOutputfiles:
    get:
      description: Returns a struct containing the map reduce instance run output
        files from Yoda.
      tags:
      - Analytics
      summary: Download map reduce base instance run output files from Yoda.
      operationId: DownloadMROutputFiles
      parameters:
      - type: boolean
        x-go-name: IsNfsFile
        description: If true, then extracts file from NFS, else from local file system.
        name: isNfsFile
        in: query
      - type: integer
        format: int64
        x-go-name: PartitionId
        description: Cluster partition id for the file to be read.
        name: partitionId
        in: query
      - type: integer
        format: int64
        x-go-name: ViewBoxId
        description: View box id for the file to be read. Required for nfs files only.
        name: viewBoxId
        in: query
      - type: string
        x-go-name: ViewName
        description: View name for the file to be read. Required for nfs files only.
        name: viewName
        in: query
      - type: string
        x-go-name: FilePath
        description: filepath of the file on NFS.
        name: filePath
        in: query
      - type: integer
        format: int64
        x-go-name: StartOffset
        description: start offset from where bytes will be read.
        name: startOffset
        in: query
      - type: integer
        format: int64
        x-go-name: LengthBytes
        description: Number of bytes to be read from start_offset.
        name: lengthBytes
        in: query
      responses:
        "200":
          $ref: '#/responses/DownloadResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/reducers:
    get:
      description: |-
        If no parameters are specified, all Reducers currently on
        the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      tags:
      - Analytics
      summary: List Reducers filtered by the specified parameters.
      operationId: GetReducers
      responses:
        "200":
          $ref: '#/responses/GetReducersResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created reducer.
      tags:
      - Analytics
      summary: Create a Reducer.
      operationId: CreateReducer
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/ReducerInfo'
      responses:
        "201":
          $ref: '#/responses/ReducerResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/reducers/{id}:
    get:
      description: Returns the Reducer corresponding to the specified Reducer Id.
      tags:
      - Analytics
      summary: List details about a single Reducer.
      operationId: GetReducerById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetReducerByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated reducer.
      tags:
      - Analytics
      summary: Update a Reducer.
      operationId: UpdateReducer
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/ReducerInfo'
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/ReducerResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns delete status upon completion.
      tags:
      - Analytics
      summary: Delete a Reducer.
      operationId: DeleteReducer
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/runAppInstance:
    put:
      description: Returns the updated Application.
      tags:
      - Analytics
      summary: Run a map-reduce application instance.
      operationId: RunMapReduceAppInstance
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/RunMapReduceParams'
      responses:
        "200":
          $ref: '#/responses/RunMapReduceAppInstanceResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/supportedPatterns:
    get:
      description: |-
        The Analytics workbench has ability to search for patterns which can be system
        defined or can be user defined. This API returns the patterns available for
        search.
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Analytics
      summary: Used to retrieve supported patterns available for search in an application.
      operationId: GetSupportedPatterns
      parameters:
      - type: integer
        format: int64
        x-go-name: ApplicationId
        description: Specifies the application Id.
        name: applicationId
        in: query
        required: true
      - type: integer
        format: int32
        x-go-name: ApplicationDataType
        description: Specifies the data type for which supported patterns can be fetched.
        name: applicationDataType
        in: query
      responses:
        "200":
          $ref: '#/responses/GetSupportedPatternsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        The Analytics workbench has ability to search for patterns which can be system
        defined or can be user defined. This API enables the user to save patterns for
        searching.
      tags:
      - Analytics
      summary: Used to save user patterns for search in an application.
      operationId: SavePattern
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/PatternRequestBody'
      responses:
        "201":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/uploadJar:
    post:
      description: |-
        Returns a struct containing the jar name and local mount path where the jar
        will be uploaded.
      tags:
      - Analytics
      summary: Upload a jar to pre-specified Yoda internal view.
      operationId: UploadJar
      responses:
        "200":
          $ref: '#/responses/UploadJarResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns delete status upon completion.
      tags:
      - Analytics
      summary: Delete the uploaded jar from temporary location.
      operationId: DeleteUploadedJar
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/UploadMRJarViewPathWrapper'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/analytics/uploadJarPath:
    get:
      description: Returns the mounted path to upload Jars.
      tags:
      - Analytics
      summary: Get details about the mounted path to upload Jars.
      operationId: GetMRUploadJarPath
      responses:
        "200":
          $ref: '#/responses/GetMRUploadJarPathResponse'
        default:
          $ref: '#/responses/Error'
  /public/antivirusGroups:
    get:
      description: Returns all the antivirus service group.
      tags:
      - AntivirusServiceGroup
      summary: Lists the antivirus service groups.
      operationId: GetAntivirusServiceGroup
      responses:
        "200":
          $ref: '#/responses/GetAntivirusServiceGroupResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated antivirus service group.
      tags:
      - AntivirusServiceGroup
      summary: Update an antivirus service group.
      operationId: UpdateAntivirusServiceGroup
      parameters:
      - x-go-name: Body
        description: Request to update an Antivirus Service Group.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateAntivirusServiceGroupParams'
      responses:
        "200":
          $ref: '#/responses/UpdateAntivirusServiceGroupResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created Antivirus service group.
      tags:
      - AntivirusServiceGroup
      summary: Create an Antivirus service group.
      operationId: CreateAntivirusServiceGroup
      parameters:
      - x-go-name: Body
        description: Request to create an Antivirus Service Group.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AntivirusServiceGroupParams'
      responses:
        "201":
          $ref: '#/responses/CreateAntivirusServiceGroupResponse'
        default:
          $ref: '#/responses/Error'
  /public/antivirusGroups/states:
    put:
      description: Returns the state of an antivirus service group upon completion.
      tags:
      - AntivirusServiceGroup
      summary: Change the state of an antivirus service group.
      operationId: AntivirusServiceGroupState
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/AntivirusServiceGroupStateParams'
      responses:
        "200":
          $ref: '#/responses/AntivirusServiceGroupStateResponse'
        default:
          $ref: '#/responses/Error'
  /public/antivirusGroups/{id}:
    delete:
      description: Returns delete status upon completion.
      tags:
      - AntivirusServiceGroup
      summary: |-
        Delete an antivirus service group corresponding to the specified antivirus
        service group Id.
      operationId: DeleteAntivirusServiceGroup
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the AntivirusServiceGroup Id.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/appInstanceSettings/{appInstanceId}:
    put:
      description: Changes the settings of the app instance.
      tags:
      - AppInstance
      summary: Updates app instance settings.
      operationId: UpdateAppInstanceSettings
      parameters:
      - type: integer
        format: int64
        x-go-name: AppInstanceId
        description: Specifies the app instance Id.
        name: appInstanceId
        in: path
        required: true
      - x-go-name: Body
        description: Request to update app instance settings.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateAppInstanceSettingsParameters'
      responses:
        "202":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/appInstances:
    get:
      description: |-
        Api provides the list of the app instances. Instances can be in different
        states including stopped.
      tags:
      - AppInstance
      summary: Lists the app instances.
      operationId: GetAppInstances
      responses:
        "200":
          $ref: '#/responses/GetAppInstancesResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Only installed apps can be launched.
      tags:
      - AppInstance
      summary: Starts the application instance launch on the cluster.
      operationId: LaunchAppInstance
      parameters:
      - x-go-name: Body
        description: Request to launch app.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/LaunchAppInstance'
      responses:
        "202":
          $ref: '#/responses/LaunchAppInstanceResponse'
        default:
          $ref: '#/responses/Error'
  /public/appInstances/{appInstanceId}/states:
    put:
      description: Changes the state of the app instances.
      tags:
      - AppInstance
      summary: Updates app instance state.
      operationId: UpdateAppInstanceState
      parameters:
      - type: integer
        format: int64
        x-go-name: AppInstanceId
        description: Specifies the app instance Id.
        name: appInstanceId
        in: path
        required: true
      - x-go-name: Body
        description: Request to update app instance state.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateAppInstanceStateParameters'
      responses:
        "202":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/apps:
    get:
      description: |-
        Api provides the list of the apps which are available for the user to install
        or are already installed. App object provides basic app information along with
        app metadata.
      tags:
      - App
      summary: Lists the apps.
      operationId: GetApps
      responses:
        "200":
          $ref: '#/responses/GetAppsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Api provides the list of the apps which are available for the user to install
        or are already installed. App object provides basic app information along with
        app metadata.
      consumes:
      - multipart/form-data
      tags:
      - App
      summary: Upload and install an app from image.
      operationId: UploadApp
      responses:
        "201":
          $ref: '#/responses/InstallAppResponse'
        default:
          $ref: '#/responses/Error'
  /public/apps/{appUid}/versions/{version}:
    post:
      description: Only purchased apps can be installed using this api.
      tags:
      - App
      summary: Starts the application installation on the cluster.
      operationId: InstallApp
      parameters:
      - type: integer
        format: int64
        x-go-name: AppUid
        description: Specifies the app Id.
        name: appUid
        in: path
        required: true
      - type: integer
        format: int64
        x-go-name: Version
        description: Specifies the app version.
        name: version
        in: path
        required: true
      responses:
        "201":
          $ref: '#/responses/InstallAppResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: App must already been installed for this api to work.
      tags:
      - App
      summary: Starts the application uninstall from the cluster.
      operationId: UninstallApp
      parameters:
      - type: integer
        format: int64
        x-go-name: AppUid
        description: Specifies the app Id.
        name: appUid
        in: path
        required: true
      - type: integer
        format: int64
        x-go-name: Version
        description: Specifies the app version.
        name: version
        in: path
        required: true
      responses:
        "202":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/auditLogs/actions:
    get:
      description: A string array of all the actions used to filter audit logs.
      tags:
      - Audit
      summary: Return list of audit log actions.
      operationId: GetAuditLogsActions
      responses:
        "200":
          $ref: '#/responses/GetAuditLogsActionsResponse'
        default:
          $ref: '#/responses/Error'
  /public/auditLogs/categories:
    get:
      description: A string array of all the categories used to filter audit logs.
      tags:
      - Audit
      summary: Return list of audit log categories.
      operationId: GetAuditLogsCategories
      responses:
        "200":
          $ref: '#/responses/GetAuditLogsCategoriesResponse'
        default:
          $ref: '#/responses/Error'
  /public/auditLogs/cluster:
    get:
      description: |-
        When actions (such as a login or a Job being paused) occur on the
        Cohesity Cluster, the Cluster generates Audit Logs.
        If no parameters are specified, all logs currently on the Cohesity Cluster
        are returned. Specifying the parameters filters the results that are returned.
      tags:
      - Audit
      summary: |-
        Lists the cluster audit logs on the Cohesity Cluster that match the filter
        criteria specified using parameters.
      operationId: SearchClusterAuditLogs
      parameters:
      - type: array
        items:
          type: string
        x-go-name: UserNames
        description: |-
          Filter by user names who cause the actions that generate Cluster Audit
          Logs.
        name: userNames
        in: query
      - type: array
        items:
          type: string
        x-go-name: Domains
        description: |-
          Filter by domains of users who cause the actions that trigger
          Cluster audit logs.
        name: domains
        in: query
      - type: array
        items:
          type: string
        x-go-name: EntityTypes
        description: |-
          Filter by entity types involved in the actions that generate the
          Cluster audit logs, such as User, Protection Job, View, etc.
          For a complete list, see the Category drop-down in the Admin > Audit Logs
          page of the Cohesity Dashboard.
        name: entityTypes
        in: query
      - type: array
        items:
          type: string
        x-go-name: Actions
        description: |-
          Filter by the actions that generate Cluster audit logs such as
          Activate, Cancel, Clone, Create, etc. For a complete list, see the
          Actions drop-down in the Admin > Audit Logs page of the Cohesity
          Dashboard.
        name: actions
        in: query
      - type: string
        x-go-name: Search
        description: |-
          Filter by matching a substring in entity name or details of the
          Cluster audit log.
        name: search
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by a start time. Only Cluster audit logs that were generated after
          the specified time are returned.
          Specify the start time as a Unix epoch Timestamp (in microseconds).
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by a end time specified as a Unix epoch Timestamp
          (in microseconds). Only Cluster audit logs that were generated before the
          specified end time are returned.
        name: endTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: StartIndex
        description: |-
          Specifies an index number that can be used to return subsets of items
          in multiple requests.
          Break up the items to return into multiple requests by setting pageCount
          and startIndex to return a subsets of items in the search result.
          For example, set startIndex to 0 to get the first set of pageCount items
          for the first request. Increment startIndex by pageCount
          to get the next set of pageCount items for a next request.
          Continue until all items are returned and therefore the total number of
          returned items is equal to totalCount. Default value is 0.
        name: startIndex
        in: query
      - type: integer
        format: int64
        x-go-name: PageCount
        description: |-
          Limit the number of items to return in the response for pagination
          purposes. Default value is 1000.
        name: pageCount
        in: query
      - type: string
        x-go-name: OutputFormat
        description: |-
          Specifies the format of the output such as csv and json.
          If not specified, the json format is returned. If csv is specified,
          a comma-separated list with a heading row is returned.
        name: outputFormat
        in: query
      - type: string
        x-go-name: TenantId
        description: TenantId specifies the tenant whose action resulted in the audit
          log.
        name: tenantId
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
          of tenant with id TenantId should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchClusterAuditLogsResponse'
        default:
          $ref: '#/responses/Error'
  /public/banners:
    get:
      description: |-
        Currently it returns a cluster specific banner for all requests. Later,
        depending on who is requesting it (which can be inferred from the URL),
        we would like to return most appropriate banner if set by the cluster
        admin (or Service Provider).
      tags:
      - Banner
      summary: List the banner for a persona.
      operationId: GetBanner
      responses:
        "200":
          $ref: '#/responses/GetBannerResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the banner that was updated on the Cohesity Cluster.
      tags:
      - Banner
      summary: Update an existing banner on the Cohesity Cluster.
      operationId: UpdateBanner
      parameters:
      - x-go-name: Body
        description: Request to update existing banner.
        name: body
        in: body
        schema:
          $ref: '#/definitions/BannerUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateBannerResponse'
        default:
          $ref: '#/responses/Error'
  /public/basicClusterInfo:
    get:
      description: |-
        All Active Directory domains that are currently joined to the Cohesity
        Cluster are returned. In addition, the default LOCAL domain on the
        Cohesity Cluster is returned as the first element of the domains array in
        the response.
      tags:
      - Cluster
      summary: |-
        List details about the Cohesity Cluster such as the name, type, version,
        language, locale and domains.
        This operation does not require authentication.
      operationId: GetBasicClusterInfo
      responses:
        "200":
          $ref: '#/responses/GetBasicClusterInfoResponse'
        default:
          $ref: '#/responses/Error'
  /public/certificates/global:
    get:
      description: Returns the all certificate and their details generated from this
        cluster.
      tags:
      - Certificates
      summary: List the certificates generated and deployed on hosts.
      operationId: GetCertificateList
      responses:
        "200":
          $ref: '#/responses/GetCertificateResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the global certificate for a single or multiple hosts.
      tags:
      - Certificates
      summary: Generate and deploy certificate for a single or multiple hosts.
      operationId: DeployHostCertificate
      parameters:
      - x-go-name: Body
        description: Request to generate and deploy a new certificate.
        name: body
        in: body
        schema:
          $ref: '#/definitions/DeployCertParameters'
      responses:
        "201":
          $ref: '#/responses/DeployHostCertResponse'
        default:
          $ref: '#/responses/Error'
  /public/certificates/webServer:
    get:
      description: Returns the Server Certificate configured on the cluster.
      tags:
      - Certificates
      summary: Get the Server Certificate configured on the Cluster.
      operationId: GetWebServerCertificate
      responses:
        "200":
          $ref: '#/responses/GetWebServerCertificateResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated Web Server Certificate on the cluster.
      tags:
      - Certificates
      summary: Update the Web Server Certificate on the Cluster.
      operationId: UpdateWebServerCertificate
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/SslCertificateConfig'
      responses:
        "200":
          $ref: '#/responses/UpdateWebServerCertificateResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns delete status upon completion.
      tags:
      - Certificates
      summary: Delete the SSL Certificate in the Cluster.
      operationId: DeleteWebServerCertificate
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/cluster:
    get:
      description: Returns information about this Cohesity Cluster.
      tags:
      - Cluster
      summary: List details about this Cohesity Cluster.
      operationId: GetCluster
      parameters:
      - type: boolean
        x-go-name: FetchStats
        description: If 'true', also get statistics about the Cohesity Cluster.
        name: fetchStats
        in: query
      - type: boolean
        x-go-name: FetchTimeSeriesSchema
        description: Specifies whether to get time series schema info of the cluster.
        name: fetchTimeSeriesSchema
        in: query
      responses:
        "200":
          $ref: '#/responses/ClusterResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated Cluster configuration.
      tags:
      - Cluster
      summary: Update the configuration of this Cohesity Cluster.
      operationId: UpdateCluster
      parameters:
      - description: Update Cluster Parameter.
        name: Body
        in: body
        schema:
          $ref: '#/definitions/UpdateClusterParams'
      responses:
        "200":
          $ref: '#/responses/UpdateClusterResponse'
        default:
          $ref: '#/responses/Error'
  /public/cluster/appSettings:
    get:
      description: Returns the app settings for the cluster.
      tags:
      - Cluster
      summary: Gets the app settings for the cluster.
      operationId: GetAppSettings
      responses:
        "200":
          $ref: '#/responses/GetAppSettingsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated app settings.
      tags:
      - Cluster
      summary: Update the app settings of the cluster.
      operationId: UpdateAppSettings
      parameters:
      - description: Update App Settings Parameter.
        name: Body
        in: body
        schema:
          $ref: '#/definitions/AppsConfig'
      responses:
        "200":
          $ref: '#/responses/UpdateAppSettingsResponse'
        default:
          $ref: '#/responses/Error'
  /public/cluster/backgroundActivitySchedule:
    get:
      description: Sends a request to get the apollo throttling settings applied for
        the cluster.
      tags:
      - Clusters
      summary: Get the Apollo Throttling schedule.
      operationId: GetBackgroundActivitySchedule
      responses:
        "200":
          $ref: '#/responses/GetBackgroundActivityScheduleResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        Sends a request to update the apollo throttling settings for the cluster.
        Returns the updated apollo throttling settings of the cluster.
      tags:
      - Clusters
      summary: Update the Apollo Throttling schedule.
      operationId: UpdateBackgroundActivitySchedule
      responses:
        "200":
          $ref: '#/responses/UpdateBackgroundActivityScheduleResponse'
        default:
          $ref: '#/responses/Error'
  /public/cluster/keys:
    get:
      description: Returns the Public Keys for the cluster.
      tags:
      - Clusters
      summary: List the Public Keys for the cluster.
      operationId: GetClusterKeys
      responses:
        "200":
          $ref: '#/responses/GetClusterKeysResponse'
        default:
          $ref: '#/responses/Error'
  /public/cluster/status:
    get:
      description: |-
        Sends a request to get the status of every node that is part of the current
        Cluster.
      tags:
      - Cluster
      summary: Get the status of a Cohesity Cluster.
      operationId: GetClusterStatus
      responses:
        "200":
          $ref: '#/responses/GetClusterStatusResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusterPartitions:
    get:
      description: |-
        If no parameters are specified, all Cluster Partitions currently on
        the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      tags:
      - ClusterPartitions
      summary: List Cluster Partitions filtered by the specified parameters.
      operationId: GetClusterPartitions
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: IdList
        description: |-
          Array of Cluster Partition Ids.

          Filter by a list of Cluster Partition ids. If empty, the Cluster Partitions
          are not filtered by id.
        name: ids
        in: query
      - type: array
        items:
          type: string
        x-go-name: NameList
        description: |-
          Array of Cluster Partition Names.

          Filter by a list of Cluster Partition Names. If empty, the Cluster
          Partitions are not filtered by names.
        name: names
        in: query
      responses:
        "200":
          $ref: '#/responses/GetClusterPartitionsResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusterPartitions/{id}:
    get:
      description: Returns the Cluster Partition corresponding to the specified Cluster
        Partition Id.
      tags:
      - ClusterPartitions
      summary: List details about a single Cluster Partition.
      operationId: GetClusterPartitionById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Cluster Partition to return.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/ClusterPartitionResponse'
        "404":
          $ref: '#/responses/NotFoundResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters:
    delete:
      description: |-
        Sends a request to destroy a Cohesity Cluster and returns some information
        about the operation and each Node.
      tags:
      - Clusters
      summary: Destroy a Cohesity Cluster.
      operationId: DestroyCluster
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/cloudEdition:
    post:
      description: |-
        Sends a request to create a new Cloud Edition Cohesity Cluster and returns
        the IDs, name, and software version of the new cluster. Also returns the
        status of each node.
      tags:
      - Clusters
      summary: Create a new Cloud Edition Cohesity Cluster.
      operationId: CreateCloudCluster
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateCloudClusterParameters'
      responses:
        "202":
          $ref: '#/responses/CreateCloudClusterResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/cloudEdition/nodes:
    post:
      description: |-
        Sends a request to expand a Cloud Edition Cohesity Cluster and returns some
        information about the request and each new Node.
      tags:
      - Clusters
      summary: Expand a Cloud Edition Cohesity Cluster.
      operationId: ExpandCloudCluster
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ExpandCloudClusterParameters'
      responses:
        "202":
          $ref: '#/responses/ExpandCloudClusterResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/creationProgress:
    get:
      description: |-
        Sends a request to check the progress of the creation of a new Cohesity
        Cluster and returns some information about the creation process along
        with an estimated time remaining and completion percentage.
      tags:
      - Clusters
      summary: Check the progress of the creation of a new Cohesity Cluster.
      operationId: GetClusterCreationProgress
      responses:
        "200":
          $ref: '#/responses/GetClusterCreationProgressResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/ioPreferentialTier:
    get:
      description: Get the IO preferential tiers of the cluster.
      tags:
      - Clusters
      summary: Return the IO preferential tiers of the cluster.
      operationId: GetIoPreferentialTier
      responses:
        "200":
          $ref: '#/responses/IoPreferentialTierResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    put:
      description: Update the IO preferential tiers of the cluster.
      tags:
      - Clusters
      summary: Update the IO preferential tiers and return the updated IO preferential
        tiers of the cluster.
      operationId: PutIoPreferentialTier
      parameters:
      - name: Body
        in: body
        required: true
        schema:
          $ref: '#/definitions/IoPreferentialTier'
      responses:
        "200":
          $ref: '#/responses/IoPreferentialTierResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/clusters/nodes/{id}:
    delete:
      description: Sends a request to remove a Node from a Cohesity Cluster.
      tags:
      - Clusters
      summary: Remove a Node from a Cohesity Cluster.
      operationId: RemoveNode
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the ID of the node being removed.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/physicalEdition:
    post:
      description: |-
        Sends a request to create a new Physical Edition Cohesity Cluster and returns
        the IDs, name, and software version of the new cluster. Also returns the
        status of each node.
      tags:
      - Clusters
      summary: Create a new Physical Edition Cohesity Cluster.
      operationId: CreatePhysicalCluster
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreatePhysicalClusterParameters'
      responses:
        "202":
          $ref: '#/responses/CreatePhysicalClusterResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/physicalEdition/nodes:
    post:
      description: |-
        Sends a request to expand a Physical Edition Cohesity Cluster and returns some
        information about the request and each new Node.
      tags:
      - Clusters
      summary: Expand a Physical Edition Cohesity Cluster.
      operationId: ExpandPhysicalCluster
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ExpandPhysicalClusterParameters'
      responses:
        "202":
          $ref: '#/responses/ExpandPhysicalClusterResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/services/states:
    get:
      description: Sends a request to list the states of all of the services on a
        Cluster.
      tags:
      - Clusters
      summary: List the states of the services on the Cluster.
      operationId: ListServiceStates
      responses:
        "200":
          $ref: '#/responses/ListServiceStatesResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Sends a request to either stop, start, or restart one or more of the services
        on a Cohesity Cluster and returns a message describing the result.
      tags:
      - Clusters
      summary: Change the state of one or more services on a Cohesity Cluster.
      operationId: ChangeServiceState
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ChangeServiceStateParameters'
      responses:
        "202":
          $ref: '#/responses/ChangeServiceStateResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/software:
    put:
      description: |-
        Sends a request to upgrade the software version of a Cohesity Cluster
        and returns a message specifying the result. Before using this, you need to
        use the /public/packages endpoint to upload a new package to the Cluster.
      tags:
      - Clusters
      summary: Upgrade a Cohesity Cluster.
      operationId: UpgradeCluster
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpgradeClusterParameters'
      responses:
        "202":
          $ref: '#/responses/UpgradeClusterResponse'
        default:
          $ref: '#/responses/Error'
  /public/clusters/virtualEdition:
    post:
      description: |-
        Sends a request to create a new Virtual Edition Cohesity Cluster and returns
        the IDs, name and software version of the new cluster.
      tags:
      - Clusters
      summary: Create a new Virtual Edition Cohesity Cluster.
      operationId: CreateVirtualCluster
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateVirtualClusterParameters'
      responses:
        "202":
          $ref: '#/responses/CreateVirtualClusterResponse'
        default:
          $ref: '#/responses/Error'
  /public/dashboard:
    get:
      description: If no parameters are specified, dashboard for the local cluster
        is returned.
      tags:
      - Dashboard
      summary: Returns the dashboard that match the filter criteria specified using
        parameters.
      operationId: GetDashboard
      parameters:
      - type: integer
        format: int64
        x-go-name: ClusterId
        description: |-
          Id of the remote cluster for which to fetch the data. If value is not
          specified, it is assumed to be local cluster.
        name: clusterId
        in: query
      - type: boolean
        x-go-name: AllClusters
        description: |-
          Summary data for all clusters. If this is set to true, all other
          parameters will be ignored.
        name: allClusters
        in: query
      - type: boolean
        x-go-name: Refresh
        description: Specifies whether to refresh the tiles selected.
        name: refresh
        in: query
      - type: array
        items:
          enum:
          - kHealthTile
          - kJobRunsTile
          - kRecoveriesTile
          - kProtectedObjectsTile
          - kProtectionTile
          - kAuditLogsTile
          - kIopsTile
          - kThroughputTile
          - kStorageEfficiencyTile
          type: string
        x-go-name: TileTypes
        description: |-
          Specifies the types of the tiles to be returned. If this is not
          specified, all the tiles are returned. This is ignored when allClusters
          is set to true.
          'kHealthTile' is the tile that shows health of the cluster and the alerts in
          the past 24 hours.
          'kJobRunsTile' is the tile that shows job runs in the past 24 hours.
          'kRecoveriesTile' is the tile that shows recoveries done in the past 30 days.
          'kProtectedObjectsTile' is the tile that shows the protected objects details.
          'kProtectionTile' is the tile that shows the protection information in the
          past 24 hours.
          'kAuditLogsTile' is the tile that shows the recent audit logs.
          'kIopsTile' is the tile that shows IP performance in the past 24 hours.
          'kThroughputTile' is the tile that shows job runs in the past 24 hours.
          'kStorageEfficiencyTile' is the tile that shows job runs in the past 7 days.
        name: tileTypes
        in: query
      responses:
        "200":
          $ref: '#/responses/GetDashboardResponse'
        default:
          $ref: '#/responses/Error'
  /public/externalClientSubnets:
    get:
      description: Returns the external Client Subnets for the cluster.
      tags:
      - Clusters
      summary: List the external Client Subnets for the cluster.
      operationId: GetExternalClientSubnets
      responses:
        "200":
          $ref: '#/responses/ExternalClientSubnetsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated external Client Subnets of the cluster.
      tags:
      - Clusters
      summary: Update the external Client Subnet of the Cluster.
      operationId: UpdateExternalClientSubnets
      parameters:
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/ExternalClientSubnets'
      responses:
        "200":
          $ref: '#/responses/ExternalClientSubnetsResponse'
        default:
          $ref: '#/responses/Error'
  /public/freeNodes:
    get:
      description: |-
        Sends a request to any Node to list all of the free Nodes that are present on
        the network.
      tags:
      - Nodes
      summary: List the free Nodes present on a network.
      operationId: ListFreeNodes
      responses:
        "200":
          $ref: '#/responses/ListFreeNodesResponse'
        default:
          $ref: '#/responses/Error'
  /public/groups:
    get:
      description: |-
        If no parameters are specified, all groups currently on the Cohesity Cluster
        are returned. Specifying parameters filters the results that are returned.
      tags:
      - Groups
      summary: List the groups that match the filter criteria specified using parameters.
      operationId: GetGroups
      parameters:
      - type: string
        x-go-name: Name
        description: |-
          Optionally specify a group name to filter by. All groups containing name
          will be returned.
        name: name
        in: query
      - type: string
        x-go-name: Domain
        description: |-
          If no domain is specified, all groups on the Cohesity Cluster are searched.
          If a domain is specified, only groups on the Cohesity Cluster
          associated with that domain are searched.
        name: domain
        in: query
      - type: boolean
        x-go-name: FilterByOwnedDomains
        description: |-
          If FilterByOwnedDomains is set to true, then the groups are filtered
          to show only the ones that are in the domains owned by the current tenant
          or user.
        name: filterByOwnedDomains
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetGroupsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the group that was updated on the Cohesity Cluster.
      tags:
      - Groups
      summary: |-
        Update an existing group on the Cohesity Cluster. Only group settings
        on the Cohesity Cluster are updated. No changes are made to the
        referenced group principal on the Active Directory.
      operationId: UpdateGroup
      parameters:
      - x-go-name: Body
        description: Request to update a group.
        name: body
        in: body
        schema:
          $ref: '#/definitions/GroupParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateGroupResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        If an Active Directory domain is specified, a new group is added to the
        Cohesity Cluster for the specified Active Directory group principal.
        If the LOCAL domain is specified, a new group is created directly in
        the default LOCAL domain on the Cohesity Cluster.

        Returns the created or added group.
      tags:
      - Groups
      summary: Create or add a new group to the Cohesity Cluster.
      operationId: CreateGroup
      parameters:
      - x-go-name: Body
        description: Request to add or create a Group.
        name: body
        in: body
        schema:
          $ref: '#/definitions/GroupParameters'
      responses:
        "201":
          $ref: '#/responses/CreateGroupResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: |-
        If the group on the Cohesity Cluster was added for an Active Directory user,
        the referenced principal group on the Active Directory domain is NOT deleted.
        Only the group on the Cohesity Cluster is deleted.

        Returns Success if the specified groups are deleted.
      tags:
      - Groups
      summary: Delete one or more groups on the Cohesity Cluster.
      operationId: DeleteGroups
      parameters:
      - x-go-name: Body
        description: Request to delete one or more groups on the Cohesity Cluster.
        name: body
        in: body
        schema:
          $ref: '#/definitions/GroupDeleteParameters'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/icapConnectionStatus:
    get:
      description: Returns the list of succeeded and failed connection statuses of
        Icap servers.
      tags:
      - AntivirusServiceGroup
      summary: Check the Icap server connection status.
      operationId: GetIcapConnectionStatus
      parameters:
      - type: array
        items:
          type: string
        x-go-name: IcapUris
        description: Specifies the list of icap uri.
        name: icapUris
        in: query
      responses:
        "200":
          $ref: '#/responses/GetIcapConnectionStatusResponse'
        default:
          $ref: '#/responses/Error'
  /public/idp/principals:
    post:
      description: |-
        After a group or user has been added to a Cohesity Cluster,
        the referenced Idp principal can be used by the Cohesity Cluster.
        In addition, this operation maps Cohesity roles with a group or user and
        this mapping defines the privileges allowed on the Cohesity Cluster for the
        group or user.
        For example if an 'management' group is created on the Cohesity Cluster
        for the Idp 'management' principal group and is associated with the
        Cohesity 'View' role, all users in the referenced Idp
        'management' principal group can log in to the Cohesity Dashboard but
        will only have view-only privileges. These users cannot create new
        Protection Jobs, Policies, Views, etc.

        NOTE: Local Cohesity users and groups cannot be created by this operation.
        Local Cohesity users or groups do not have an associated Idp
        principals and are created directly in the default LOCAL domain.
      tags:
      - Idps
      summary: |-
        Add multiple groups or users on the Cohesity Cluster for the specified
        Idp principals. In addition, assign Cohesity roles to the users or groups
        to define their Cohesity privileges.
      operationId: AddActiveIdpPrincipals
      responses:
        "201":
          $ref: '#/responses/AddIdpPrincipalsResponse'
        default:
          $ref: '#/responses/Error'
  /public/idps:
    get:
      description: |-
        Returns the Idps configured on the Cohesity Cluster corresponding to the filter
        parameters. If no filter is given, all Idp configurations are returned.
      tags:
      - Idps
      summary: List the IdPs configured on the Cluster.
      operationId: GetIdps
      parameters:
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      - type: array
        items:
          type: string
        x-go-name: Names
        description: |-
          Specifies the names of the IdP vendors like Okta. If specified, returns
          IdP configurations of the vendors matching the names in the parameters.
        name: names
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: Ids
        description: |-
          Specifies the Ids of the IdP configuration. If specified, returns IdP
          configurations of the matching Ids in the IdP configuration.
        name: ids
        in: query
      - type: array
        items:
          type: string
        x-go-name: Domains
        description: |-
          Specifies the domains of the IdP configurations. If specified, returns
          IdP configurations matching the domains in the parameters.
        name: domains
        in: query
      responses:
        "200":
          $ref: '#/responses/GetIdpsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the newly created IdP configuration.
      tags:
      - Idps
      summary: Create an IdP configuration.
      operationId: CreateIdp
      parameters:
      - x-go-name: Body
        description: Request to create a new IdP Configuration.
        name: body
        in: body
        schema:
          $ref: '#/definitions/CreateIdpConfigurationRequest'
      responses:
        "201":
          $ref: '#/responses/CreateIdpResponse'
        default:
          $ref: '#/responses/Error'
  /public/idps/login:
    get:
      description: Redirects the client to the IdP site with the URI to login.
      tags:
      - Idps
      summary: Login to Cohesity Cluster using an IdP.
      operationId: IdpLogin
      parameters:
      - type: string
        x-go-name: TenantId
        description: |-
          Specifies an optional tenantId for which the SSO login should be done.
          If this is not specified, Cluster SSO login is done.
        name: tenantId
        in: query
      responses:
        "302":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/idps/{id}:
    put:
      description: Returns the updated IdP configuration.
      tags:
      - Idps
      summary: Update an IdP configuration.
      operationId: UpdateIdp
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the Id assigned for the IdP Service by the Cluster.
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to update an Idp Configuration.
        name: body
        in: body
        schema:
          $ref: '#/definitions/UpdateIdpConfigurationRequest'
      responses:
        "200":
          $ref: '#/responses/UpdateIdpResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns Success if the IdP configuration is deleted.
      tags:
      - Idps
      summary: Delete one IdP configuration.
      operationId: DeleteIdp
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the Id assigned for the IdP Service by the Cluster.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/infectedFiles:
    get:
      description: Returns all the infected files matching with query parameters.
      tags:
      - AntivirusServiceGroup
      summary: Lists the infected files.
      operationId: GetInfectedFiles
      parameters:
      - type: array
        items:
          type: string
        x-go-name: ViewNameList
        description: Filter by a list of View names.
        name: viewNames
        in: query
      - type: boolean
        x-go-name: IncludeQuarantinedFiles
        description: Specifies whether to include quarantined files in the result.
        name: includeQuarantinedFiles
        in: query
      - type: boolean
        x-go-name: IncludeUnquarantinedFiles
        description: Specifies whether to include unquarantined files in the result.
        name: includeUnquarantinedFiles
        in: query
      - type: string
        x-go-name: FilePath
        description: |-
          Specifies the path of a file. If this is provided, infected file list
          would contain the scan and infection state of the file and pagination
          cookie will be ignored.
        name: filePath
        in: query
      - type: integer
        format: int64
        x-go-name: PageCount
        description: |-
          Specifies the number of items to return in the response for pagination
          purposes. Default value is 1000.
        name: pageCount
        in: query
      - type: string
        x-go-name: PaginationCookie
        description: |-
          Pagination cookie should be used from previous call to list infected
          files. It resumes (or gives the next set of values) from the result of the
          previous call.
        name: paginationCookie
        in: query
      responses:
        "200":
          $ref: '#/responses/GetInfectedFilesResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the list of update succeeded and update failed infected
        files.
      tags:
      - AntivirusServiceGroup
      summary: Update the list of infected files.
      operationId: UpdateInfectedFiles
      parameters:
      - x-go-name: Body
        description: Request to update the list of infected files.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateInfectedFileParams'
      responses:
        "200":
          $ref: '#/responses/UpdateInfectedFilesResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns the list of delete succeeded and delete failed infected
        files.
      tags:
      - AntivirusServiceGroup
      summary: Delete the list of infected files.
      operationId: DeleteInfectedFiles
      parameters:
      - x-go-name: Body
        description: Request to delete the list of infected files.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/DeleteInfectedFileParams'
      responses:
        "200":
          $ref: '#/responses/DeleteInfectedFilesResponse'
        default:
          $ref: '#/responses/Error'
  /public/interface:
    get:
      tags:
      - Interface
      summary: Show network interfaces.
      operationId: ListInterface
      parameters:
      - type: integer
        format: int64
        x-go-name: NodeId
        description: Specifies the id of the ndde.
        name: nodeId
        in: query
      - type: boolean
        x-go-name: Cache
        description: Specifies if interface is cached info.
        name: cache
        in: query
      - type: boolean
        x-go-name: BondInterfaceOnly
        description: Specifies if only show bond interface info.
        name: bondInterfaceOnly
        in: query
      - type: boolean
        x-go-name: IfaceGroupAssignedOnly
        description: Specifies if only show interface group assigned interface info.
        name: ifaceGroupAssignedOnly
        in: query
      responses:
        "200":
          $ref: '#/responses/ListInterfaceResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the update status upon completion.
      tags:
      - Interface
      summary: Update an interface.
      operationId: UpdateInterface
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/Interface'
      responses:
        "200":
          $ref: '#/responses/UpdateInterfaceResponse'
        default:
          $ref: '#/responses/Error'
  /public/interfaceGroups:
    get:
      description: Returns the interface groups for the Cohesity Cluster.
      tags:
      - InterfaceGroup
      summary: List the interface groups for the Cohesity Cluster.
      operationId: GetInterfaceGroups
      responses:
        "200":
          $ref: '#/responses/GetInterfaceGroupsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the update status upon completion.
      tags:
      - InterfaceGroup
      summary: Update an interface group on the Cohesity Cluster.
      operationId: UpdateInterfaceGroup
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/InterfaceGroup'
      responses:
        "200":
          $ref: '#/responses/UpdateInterfaceGroupResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the create status upon completion.
      tags:
      - InterfaceGroup
      summary: Create an interface group on the Cohesity Cluster.
      operationId: CreateInterfaceGroup
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/InterfaceGroup'
      responses:
        "201":
          $ref: '#/responses/CreateInterfaceGroupResponse'
        default:
          $ref: '#/responses/Error'
  /public/interfaceGroups/{name}:
    delete:
      description: Returns the delete status upon completion.
      tags:
      - InterfaceGroup
      summary: Delete the specified interface group from the Cohesity Cluster.
      operationId: DeleteInterfaceGroup
      parameters:
      - type: string
        x-go-name: Name
        description: Request to delete one interface group.
        name: name
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/ip:
    put:
      description: Returns the create status upon completion.
      tags:
      - Ip
      summary: Configure the specfied IP settings on the Cohesity Cluster.
      operationId: ConfigureIp
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/IpConfig'
      responses:
        "200":
          $ref: '#/responses/IpConfigResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns the delete status upon completion.
      tags:
      - Ip
      summary: Delete the specified IP settings on the Cohesity Cluster.
      operationId: UnconfigureIp
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/IpUnconfig'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/kmsConfig:
    get:
      tags:
      - KmsConfigurationResponse
      summary: List KMS configurations in the cluster.
      operationId: GetKmsConfig
      parameters:
      - type: integer
        format: int64
        x-go-name: ID
        description: The Id of a KMS server.
        name: id
        in: query
      responses:
        "200":
          $ref: '#/responses/GetKmsConfigResponse'
        default:
          $ref: '#/responses/Error'
    put:
      tags:
      - KmsUpdateRequestParameters
      summary: Update KMS configurations in the cluster.
      operationId: UpdateKmsConfig
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/KmsUpdateRequestParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateKmsConfigResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created KMS config.
      tags:
      - KmsConfiguration
      summary: Create a KMS config.
      operationId: CreateKmsConfig
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/KmsCreateRequestParameters'
      responses:
        "200":
          $ref: '#/responses/CreateKmsConfigResponse'
        default:
          $ref: '#/responses/Error'
  /public/ldapProvider:
    get:
      tags:
      - LdapProvider
      summary: Lists the LDAP providers.
      operationId: GetLdapProvider
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: Ids
        description: Specifies the ids of the LDAP providers to fetch.
        name: ids
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetLdapProviderResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated LDAP provider.
      tags:
      - LdapProvider
      summary: Update an LDAP provider.
      operationId: UpdateLdapProvider
      parameters:
      - x-go-name: Body
        description: Request to update a LDAP provider.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateLdapProviderParam'
      responses:
        "201":
          $ref: '#/responses/UpdateLdapProviderResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created LDAP provider.
      tags:
      - LdapProvider
      summary: Create a LDAP provider.
      operationId: CreateLdapProvider
      parameters:
      - x-go-name: Body
        description: Request to configure a LDAP provider.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/LdapProvider'
      responses:
        "201":
          $ref: '#/responses/CreateLdapProviderResponse'
        default:
          $ref: '#/responses/Error'
  /public/ldapProvider/{id}:
    delete:
      tags:
      - LdapProvider
      summary: Delete an LDAP provider.
      operationId: DeleteLdapProvider
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the LDAP Id.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/ldapProvider/{id}/status:
    get:
      tags:
      - LdapProvider
      summary: Get the connection status of an LDAP provider.
      operationId: GetLdapProviderStatus
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the LDAP Id.
        name: id
        in: path
        required: true
      responses:
        "201":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/licenseUsage:
    get:
      description: |-
        Sends a request to retrieve information about the current license usage
        of the cluster and the enitled license capacity of the Cohesity Account.
      tags:
      - License
      summary: Get the current license usage of a Cohesity Cluster.
      operationId: LicenseUsage
      responses:
        "200":
          $ref: '#/responses/LicenseUsageResponse'
        default:
          $ref: '#/responses/Error'
  /public/monitoring/jobRunInfo:
    get:
      description: Returns the run details for the job run.
      tags:
      - Monitoring
      summary: List info related to a job run.
      operationId: GetJobRunInfo
      parameters:
      - type: string
        x-go-name: JobType
        description: Specifies the job type of the needed run.
        name: jobType
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobId
        description: Specifies the job id of the needed run.
        name: jobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobRunId
        description: Specifies the job run id of the needed run.
        name: jobRunId
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetJobRunInfoResponse'
        default:
          $ref: '#/responses/Error'
  /public/monitoring/jobs:
    get:
      description: |-
        Returns the job runs for the filters.

        Specifying parameters can alter the results that are returned.
      tags:
      - Monitoring
      summary: List runs of all the jobs.
      operationId: GetAllJobRuns
      parameters:
      - type: array
        items:
          type: string
        x-go-name: JobTypes
        description: Specifies the job types for which runs are needed.
        name: jobTypes
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeMsecs
        description: Specifies the start time of the time range of interest.
        name: startTimeMsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EndTimeMsecs
        description: Specifies the end time of the time range of interest.
        name: endTimeMsecs
        in: query
        required: true
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kAzureNative
          - kKubernetes
          - kElastifile
          - kAD
          - kRDSSnapshotManager
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          type: string
        x-go-name: EnvTypes
        description: |-
          Specifies the environment types of the job.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        name: envTypes
        in: query
      - type: integer
        format: int32
        x-go-name: Page
        description: Specifies the page number in case of pagination of response.
        name: page
        in: query
      - type: integer
        format: int32
        x-go-name: PageSize
        description: Specifies the size of the page in case of pagination of response.
        name: pageSize
        in: query
      responses:
        "200":
          $ref: '#/responses/GetAllJobRunsResponse'
        default:
          $ref: '#/responses/Error'
  /public/monitoring/objectDetails:
    get:
      description: Returns the objects details for the job run.
      tags:
      - Monitoring
      summary: List details of objects in a job run.
      operationId: GetRunObjectsDetails
      parameters:
      - type: string
        x-go-name: JobType
        description: Specifies the job type of the needed run.
        name: jobType
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobId
        description: Specifies the job id of the needed run.
        name: jobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobRunId
        description: Specifies the job run id of the needed run.
        name: jobRunId
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetObjectsDetailsResponse'
        default:
          $ref: '#/responses/Error'
  /public/network/bonds:
    post:
      description: |-
        Sends a request to create a new network bond on the Cluster. This can only be
        performed on a Node before it is part of a Cluster.
      tags:
      - Network
      summary: Create a new network bond.
      operationId: CreateBond
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateBondParameters'
      responses:
        "200":
          $ref: '#/responses/CreateBondResponse'
        default:
          $ref: '#/responses/Error'
  /public/network/bonds/{name}:
    delete:
      description: |-
        Sends a request to delete a network bond from the Cluster. This can only be
        performed on a Node before it is part of a Cluster.
      tags:
      - Network
      summary: Delete a network bond.
      operationId: DeleteBond
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the name of the bond being deleted.
        name: name
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/network/hosts:
    get:
      description: |-
        Sends a request to get a list of the current entries in the hosts file
        on the Cluster.
      tags:
      - Network
      summary: Get the current entries in the hosts file on the Cluster.
      operationId: ListHosts
      responses:
        "200":
          $ref: '#/responses/ListHostsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Sends a request to edit one or more entries in the Cluster's /etc/hosts
        file.
      tags:
      - Network
      summary: Edit entries in the Cluster's /etc/hosts file.
      operationId: EditHosts
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/EditHostsParameters'
      responses:
        "200":
          $ref: '#/responses/EditHostsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Sends a request to add one or more new entries to the Cluster's /etc/hosts
        file.
      tags:
      - Network
      summary: Add new entries to the /etc/hosts file.
      operationId: AppendHosts
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/AppendHostsParameters'
      responses:
        "200":
          $ref: '#/responses/AppendHostsResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: |-
        Sends a request to remove one or more entries from the Cluster's
        etc/hosts file.
      tags:
      - Network
      summary: Remove entries from the /etc/hosts file.
      operationId: DeleteHosts
      parameters:
      - type: array
        items:
          type: string
        x-go-name: Ips
        description: |-
          Specifies a list of the IP addresses of entries to remove from the
          Cluster's /etc/hosts file.
        name: ips
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/DeleteHostsResponse'
        default:
          $ref: '#/responses/Error'
  /public/nlmLocks:
    get:
      description: |-
        If no parameters are specified, all NLM locks currently on the Cohesity Cluster
        are returned. Specifying parameters filters the results that are returned.
      tags:
      - Views
      summary: List the NLM locks that match the filter criteria specified using parameters.
      operationId: ListNlmLocks
      parameters:
      - type: string
        x-go-name: FilePath
        description: |-
          Specifies the filepath in the view relative to the root filesystem.
          If this field is specified, viewName field must also be specified.
        name: filePath
        in: query
      - type: string
        x-go-name: ViewName
        description: |-
          Specifies the name of the View in which to search. If a view name is not
          specified, all the views in the Cluster is searched.
          This field is mandatory if filePath field is specified.
        name: viewName
        in: query
      - type: integer
        format: int32
        x-go-name: PageCount
        description: |-
          Specifies the maximum number of NLM locks to return in the response.
          This field cannot be set above 1000. If this is not set, maximum of 1000
          entries are returned.
        name: pageCount
        in: query
      - type: string
        x-go-name: Cookie
        description: |-
          Specifies the opaque string returned in the previous response.
          If this is set, next set of active opens just after the previous
          response are returned. If this is not set, first set of NLM locks
          are returned.
        name: cookie
        in: query
      responses:
        "200":
          $ref: '#/responses/GetListNlmLocksResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns nothing upon success.
      tags:
      - Views
      summary: Clear NLM locks that match the filter criteria specified using parameters.
      operationId: ClearNlmLocks
      parameters:
      - x-go-name: Body
        description: Request to clear NLM locks.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ClearNlmLocksParameters'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/node/status:
    get:
      tags:
      - Nodes
      summary: Sends a request to a Node to get the status of that node.
      operationId: GetNodeStatus
      responses:
        "200":
          $ref: '#/responses/GetNodeStatusResponse'
        default:
          $ref: '#/responses/Error'
  /public/nodes:
    get:
      description: |-
        If no parameters are specified, all Nodes currently on the Cohesity Cluster are
        returned.
        Specifying parameters filters the results that are returned.
      tags:
      - Nodes
      summary: List Nodes of the cluster.
      operationId: GetNodes
      responses:
        "200":
          $ref: '#/responses/GetNodesResponse'
        default:
          $ref: '#/responses/Error'
  /public/nodes/software:
    put:
      description: |-
        Sends a request to upgrade the software version of a Node. By default, the
        Node that the request is sent to is the only one upgraded, but the user can
        specify if they want to attempt to upgrade all free nodes on the network.
        Before using this, you need to upload a new package to the Node you want to
        upgrade by using the /public/packages endpoint.
      tags:
      - Nodes
      summary: Upgrade the software on a Node.
      operationId: UpgradeNode
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpgradeNodeParameters'
      responses:
        "202":
          $ref: '#/responses/UpgradeNodeResponse'
        default:
          $ref: '#/responses/Error'
  /public/nodes/{id}:
    get:
      description: Returns the Node corresponding to the specified Node Id.
      tags:
      - Nodes
      summary: List details about a single node.
      operationId: GetNodeById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Id of the Node
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetNodeByIdResponse'
        default:
          $ref: '#/responses/Error'
  /public/packages:
    get:
      description: |-
        Sends a request retrieve information about all packages which are currently
        installed on the Cluster.
      tags:
      - Packages
      summary: List all currently installed packages on a Cohesity Cluster.
      operationId: ListPackages
      responses:
        "200":
          $ref: '#/responses/ListPackagesResponse'
        default:
          $ref: '#/responses/Error'
  /public/packages/url:
    post:
      description: Sends a request to download a package from a URL to the Cluster.
      tags:
      - Packages
      summary: |-
        Download a package to the Cluster by providing a URL where the package is
        hosted.
      operationId: DownloadPackage
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/DownloadPackageParameters'
      responses:
        "202":
          $ref: '#/responses/DownloadPackageResponse'
        default:
          $ref: '#/responses/Error'
  /public/physicalAgents/download:
    get:
      description: Host type could be Linux, Windows, AIX.
      tags:
      - ProtectionSources
      summary: Download the physical agent for a host type.
      operationId: DownloadPhysicalAgent
      parameters:
      - enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        type: string
        x-go-name: HostType
        description: |-
          Specifies the host type for which user wants to download the
          physical agent.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        name: hostType
        in: query
        required: true
      - enum:
        - kScript
        - kRPM
        - kSuseRPM
        - kDEB
        type: string
        x-go-name: LinuxPkgType
        description: |-
          Specifies the Linux installer package type applicable only to Linux
          OS and the value can be any of ("kScript","kRPM", "kSuseRPM", "kDEB")
          'kScript' indicates a script based agent installer.
          'kRPM' indicates a RPM agent installer.
          'kSuseRPM' indicates a Open Suse RPM installer.
          'kDEB' indicates a Debian agent installer.
        name: pkgType
        in: query
      - enum:
        - kCpp
        - kJava
        - kGo
        type: string
        x-go-name: AgentType
        description: |-
          Specifies agent type. Can be "kGo" for go agent and "kJava"
          for java agent and "kCpp" for c++ agent.
          'kCpp' indicates a c++ agent.
          'kJava' indicates a java agent.
          'kGo' indicates a go agent.
        name: agentType
        in: query
      responses:
        "200":
          $ref: '#/responses/DownloadPhysicalAgentResponse'
        default:
          $ref: '#/responses/Error'
  /public/physicalAgents/upgrade:
    post:
      description: |-
        If the request is successful, the Cohesity agents on the specified
        Physical Servers are upgraded to the agent release
        currently available from this Cohesity Cluster.
        For example if the Cluster is upgraded from 3.7.1 to 4.0,
        the agents on the specified Physical Servers can be upgraded to 4.0 using
        this POST operation.
        To get the agentIds to pass into this operation, call
        GET /public/protectionSources with the environment set to 'KPhysical'.
        In addition this GET operation returns the agentUpgradability field, that
        indicates if an agent can be upgraded. Use the agentUpgradability field
        to determine which Physical Servers to upgrade using this
        POST /public/physicalAgents/upgrade operation.

        WARNING: Only agents at a particular Cohesity release can be
        upgraded using this operation.
        See the Cohesity online help for details.

        Returns the status of the upgrade initiation.
      tags:
      - ProtectionSources
      summary: |-
        Initiate a request to upgrade Cohesity agents on one or more Physical Servers
        registered on the Cohesity Cluster.
      operationId: UpgradePhysicalAgents
      parameters:
      - x-go-name: Body
        description: Request to upgrade agents on Physical Servers.
        name: body
        in: body
        schema:
          $ref: '#/definitions/UpgradePhysicalServerAgents'
      responses:
        "201":
          $ref: '#/responses/UpgradePhysicalAgentsResponse'
        default:
          $ref: '#/responses/Error'
  /public/postgres:
    get:
      description: Returns the list of node information running postgres database.
      tags:
      - CustomReporting
      summary: List the postgres database running nodes on the cohesity cluster.
      operationId: GetPostgres
      responses:
        "200":
          $ref: '#/responses/GetPostgresResponse'
        default:
          $ref: '#/responses/Error'
  /public/principals/protectionSources:
    get:
      description: |-
        From the passed in list principals (specified by SIDs),
        return the list of Protection Sources objects and View names that each
        principal has permission to access.
      tags:
      - Principals
      summary: |-
        Returns the Protection Sources objects and View names that the principals
        have permissions to access.
      operationId: ListSourcesForPrincipals
      parameters:
      - type: array
        items:
          type: string
        x-go-name: Sids
        description: |-
          Specifies a list of security identifiers (SIDs) that specify user or
          group principals.
        name: sids
        in: query
      responses:
        "200":
          $ref: '#/responses/ListSourcesForPrincipalsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        Specify the security identifier (SID) of the principal to grant access
        permissions for.
      tags:
      - Principals
      summary: |-
        Set the Protection Sources and Views that the specified principal
        has permissions to access.
      operationId: UpdateSourcesForPrincipals
      parameters:
      - x-go-name: Body
        description: |-
          Request to set access permissions to Protection Sources and Views
          for a principal.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateSourcesForPrincipalsParams'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/principals/searchPrincipals:
    get:
      description: |-
        Optionally, limit the search results by specifying security identifiers (SIDs),
        an object class (user or group) or a substring.
        You can specify SIDs or a substring but not both.
      tags:
      - Principals
      summary: |-
        List the user and group principals that match the filter criteria specified
        using parameters.
      operationId: SearchPrincipals
      parameters:
      - type: string
        x-go-name: Domain
        description: |-
          Specifies the domain name of the principals to search. If specified
          the principals in that domain are searched. Domain could be an
          Active Directory domain joined by the Cluster or any one of the
          trusted domains of the Active Directory domain or the LOCAL domain.
          If not specified, all the domains are searched.
        name: domain
        in: query
      - enum:
        - kUser
        - kGroup
        - kComputer
        - kWellKnownPrincipal
        type: string
        x-go-name: ObjectClass
        description: |-
          Optionally filter by a principal object class such as 'kGroup' or 'kUser'.
          If 'kGroup' is specified, only group principals are returned.
          If 'kUser' is specified, only user principals are returned.
          If not specified, both group and user principals are returned.
          'kUser' specifies a user object class.
          'kGroup' specifies a group object class.
          'kComputer' specifies a computer object class.
          'kWellKnownPrincipal' specifies a well known principal.
        name: objectClass
        in: query
      - type: string
        x-go-name: Search
        description: |-
          Optionally filter by matching a substring. Only principals in
          the with a name or sAMAccountName that matches
          part or all of the specified substring are returned.
          If specified, a 'sids' parameter should not be specified.
        name: search
        in: query
      - type: array
        items:
          type: string
        x-go-name: Sids
        description: |-
          Optionally filter by a list of security identifiers (SIDs) found
          in the specified domain. Only principals matching
          the specified SIDs are returned.
          If specified, a 'search' parameter should not be specified.
        name: sids
        in: query
      - type: boolean
        x-go-name: IncludeComputers
        description: Specifies if Computer/GMSA accounts need to be included in this
          search.
        name: includeComputers
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchPrincipalsResponse'
        default:
          $ref: '#/responses/Error'
  /public/privileges:
    get:
      description: |-
        If the 'name' parameter is not specified, all privileges defined
        on the Cohesity Cluster are returned.
        In addition, information about each privilege is returned such as the
        associated category, description, name,  etc.
        If an exact privilege name (such as PRINCIPAL_VIEW) is specified in the
        'name' parameter, only information about that single privilege is returned.
      tags:
      - Privileges
      summary: List the privileges defined on the Cohesity Cluster.
      operationId: GetPrivileges
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the name of the privilege.
        name: name
        in: query
      responses:
        "200":
          $ref: '#/responses/GetPrivilegesResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionJobState/{id}:
    post:
      description: |-
        If the Protection Job is currently running (not paused) and true is passed in,
        this operation stops any new Runs of this Protection Job
        from stating and executing.
        However, any existing Runs that were already executing will continue to run.
        If this Projection Job is paused and false is passed in, this operation
        restores the Job to a running state and new Runs are started as defined
        by the schedule in the Policy associated with the Job.

        Returns success if the paused state is changed.
      tags:
      - ProtectionJobs
      summary: Pause future Runs or resume future Runs of the specified Protection
        Job.
      operationId: ChangeProtectionJobState
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Job.
        name: id
        in: path
        required: true
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/ChangeProtectionJobStateParam'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionJobs:
    get:
      description: |-
        If no parameters are specified, all Protection Jobs currently
        on the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      tags:
      - ProtectionJobs
      summary: List Protections Jobs filtered by the specified parameters.
      operationId: GetProtectionJobs
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: Ids
        description: Filter by a list of Protection Job ids.
        name: ids
        in: query
      - type: array
        items:
          type: string
        x-go-name: Names
        description: Filter by a list of Protection Job names.
        name: names
        in: query
      - type: array
        items:
          type: string
        x-go-name: PolicyIds
        description: |-
          Filter by Policy ids that are associated with Protection Jobs.
          Only Jobs associated with the specified Policy ids, are returned.
        name: policyIds
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kVCD
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kKubernetes
          - kElastifile
          type: string
        x-go-name: Environments
        description: |-
          Filter by environment types such as 'kVMware', 'kView', etc.
          Only Jobs protecting the specified environment types are returned.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: boolean
        x-go-name: IsActive
        description: |-
          Filter by Inactive or Active Jobs. If not set, all Inactive and
          Active Jobs are returned. If true, only Active Jobs are returned.
          If false, only Inactive Jobs are returned.
          When you create a Protection Job on a Primary Cluster
          with a replication schedule, the Cluster creates an
          Inactive copy of the Job on the Remote Cluster.
          In addition, when an Active and running Job is deactivated,
          the Job becomes Inactive.
        name: isActive
        in: query
      - type: boolean
        x-go-name: IsDeleted
        description: |-
          If true, return only Protection Jobs that have been deleted but still
          have Snapshots associated with them.
          If false, return all Protection Jobs except those Jobs that have
          been deleted and still have Snapshots associated with them.
          A Job that is deleted with all its Snapshots is not returned for
          either of these cases.
        name: isDeleted
        in: query
      - type: boolean
        x-go-name: OnlyReturnBasicSummary
        description: |-
          if true then only job descriptions and the most recent run of the job
          will be returned.
        name: onlyReturnBasicSummary
        in: query
      - type: boolean
        x-go-name: IncludeLastRunAndStats
        description: If true, return the last Protection Run of the Job and the summary
          stats.
        name: includeLastRunAndStats
        in: query
      - type: boolean
        x-go-name: IncludeRpoSnapshots
        description: |-
          If true, then the Protected Objects protected by RPO policies will also
          be returned.
        name: includeRpoSnapshots
        in: query
      - type: boolean
        x-go-name: IsLastRunSlaViolated
        description: |-
          IsLastRunSlaViolated is the parameter to filter the Protection Jobs based
          on the SLA violation status of the last Protection Run.
        name: isLastRunSlaViolated
        in: query
      - type: boolean
        x-go-name: OnlyReturnDataMigrationJobs
        description: |-
          OnlyReturnDataMigrationJobs specifies if only data migration jobs should be
          returned. If not set, no data migration job will be returned.
        name: onlyReturnDataMigrationJobs
        in: query
      - type: boolean
        x-go-name: PruneExcludedSourceIds
        description: |-
          If true, the list of exclusion sources will be omitted from the response.
          This can be used to improve performance when the exclusion sources are
          not needed.
        name: pruneExcludedSourceIds
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetProtectionJobsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created Protection Job.
      tags:
      - ProtectionJobs
      summary: Create a Protection Job.
      operationId: CreateProtectionJob
      parameters:
      - x-go-name: Body
        description: Request to create a Protection Job.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProtectionJobRequestBody'
      responses:
        "201":
          $ref: '#/responses/CreateProtectionJobResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionJobs/run/{id}:
    post:
      description: |-
        Immediately execute a single Job Run and ignore the schedule defined
        in the Policy.
        A Protection Policy associated with the Job may define up to three
        backup run types:
        1) Regular (CBT utilized), 2) Full (CBT not utilized) and 3) Log.
        The passed in run type defines what type of backup is done by the Job Run.
        The schedule defined in the Policy for the backup run type is ignored but
        other settings such as the snapshot retention and retry settings are used.
        Returns success if the Job Run starts.
      tags:
      - ProtectionJobs
      summary: Immediately execute a single Protection Job Run.
      operationId: RunProtectionJob
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Job.
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: |-
          Specifies the type of backup. If not specified, the 'kRegular'
          backup is run.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RunProtectionJobParam'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionJobs/states:
    post:
      description: |-
        Note that the pause or resume actions will take effect from next Protection
        Run. Also, user can specify only one type of action on all the Protection Jobs.
        Deactivate and activate actions are independent of pause and resume state.
        Deactivate and activate actions are useful in case of failover situations.

        Returns success if the state of all the Protection Jobs state is changed
        successfully.
      tags:
      - ProtectionJobs
      summary: |-
        Perform an action like pause, resume, activate, deactivate on all the specified
        Protection Jobs.
      operationId: UpdateProtectionJobsState
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/UpdateProtectionJobsStateRequestBody'
      responses:
        "200":
          $ref: '#/responses/UpdateProtectionJobsStateResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionJobs/{id}:
    get:
      description: Returns the Protection Job corresponding to the specified Job id.
      tags:
      - ProtectionJobs
      summary: List details about single Protection Job.
      operationId: GetProtectionJobById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Job.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetProtectionJobByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated Protection Job.
      tags:
      - ProtectionJobs
      summary: Update a Protection Job.
      operationId: UpdateProtectionJob
      parameters:
      - x-go-name: Body
        description: Request to update a protection job.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProtectionJobRequestBody'
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Job.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UpdateProtectionJobResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns Success if the Protection Job is deleted.
      tags:
      - ProtectionJobs
      summary: Delete a Protection Job.
      operationId: DeleteProtectionJob
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Job.
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to delete a protection job.
        name: body
        in: body
        schema:
          $ref: '#/definitions/DeleteProtectionJobParam'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionJobs/{id}/auditTrail:
    get:
      description: Returns the audit of specific protection job edit history.
      tags:
      - ProtectionJobs
      summary: List a protection job audit.
      operationId: GetProtectionJobAudit
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Job.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetProtectionJobAuditResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionObjects:
    put:
      description: Returns the Updated Protected Object.
      tags:
      - ProtectionObjects
      summary: Update a Protected Object.
      operationId: UpdateProtectionObject
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/UpdateProtectionObjectParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateProtectionObjectResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the Protected Object and its corresponding Protection Job
        information.
      tags:
      - ProtectionObjects
      summary: Protect an Object.
      operationId: ProtectObject
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/ProtectObjectParameters'
      responses:
        "201":
          $ref: '#/responses/ProtectObjectResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      tags:
      - ProtectionObjects
      summary: Unprotect a Protected Object.
      operationId: UnprotectObject
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/UnprotectObjectParams'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionObjects/summary:
    get:
      description: Returns the Protected Object and its corresponding Protection Job
        information.
      tags:
      - ProtectionObjects
      summary: Protect an Object.
      operationId: GetProtectionObjectSummary
      parameters:
      - type: integer
        format: int64
        x-go-name: ProtectionSourceId
        description: Specifies the id of the Protection Source.
        name: protectionSourceId
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetProtectionObjectSummaryResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionPolicies:
    get:
      description: |-
        If no parameters are specified, all Protection Policies currently on the
        Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      tags:
      - ProtectionPolicies
      summary: List Protection Policies filtered by some parameters.
      operationId: GetProtectionPolicies
      parameters:
      - type: array
        items:
          type: string
        x-go-name: Ids
        description: Filter by a list of Protection Policy ids.
        name: ids
        in: query
      - type: array
        items:
          type: string
        x-go-name: Names
        description: Filter by a list of Protection Policy names.
        name: names
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kVCD
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kKubernetes
          - kElastifile
          type: string
        x-go-name: Environments
        description: |-
          Filter by Environment type such as 'kVMware', 'kView', etc.
          Only Policies protecting the specified environment type are returned.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: VaultIds
        description: |-
          Filter by a list of Vault ids. Policies archiving to any of the
          specified vaults will be returned.
        name: vaultIds
        in: query
      - enum:
        - kHelios
        - kLocal
        type: string
        x-go-name: Origin
        description: |-
          Specifies the origin of the protection policy.
          'kHelios' means a global policy which was created on Helios.
          'kLocal' means a local policy which was created on the cluster.
        name: origin
        in: query
      - type: array
        items:
          enum:
          - kRegular
          - kRPO
          type: string
        x-go-name: Types
        description: |-
          Specifies the type of the protection policy.
          'kRegular' means a regular Protection Policy.
          'kRPO' means an RPO Protection Policy.
        name: types
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetProtectionPoliciesResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created Protection Policy.
      tags:
      - ProtectionPolicies
      summary: Create a Protection Policy.
      operationId: CreateProtectionPolicy
      parameters:
      - x-go-name: Body
        description: Request to create a Protection Policy.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProtectionPolicyRequest'
      responses:
        "201":
          $ref: '#/responses/CreateProtectionPolicyResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionPolicies/{id}:
    get:
      description: Returns the Protection Policy corresponding to the specified Policy
        Id.
      tags:
      - ProtectionPolicies
      summary: List details about a single Protection Policy.
      operationId: GetProtectionPolicyById
      parameters:
      - type: string
        x-go-name: Id
        description: Specifies a unique id of the Protection Policy to return.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetProtectionPolicyByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated Protection Policy.
      tags:
      - ProtectionPolicies
      summary: Update a Protection Policy.
      operationId: UpdateProtectionPolicy
      parameters:
      - x-go-name: Body
        description: Request to update a Protection Policy.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProtectionPolicyRequest'
      - type: string
        x-go-name: Id
        description: Specifies a unique id of the Protection Policy to return.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UpdateProtectionPolicyResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns Success if the Protection Policy is deleted.
      tags:
      - ProtectionPolicies
      summary: Delete a Protection Policy.
      operationId: DeleteProtectionPolicy
      parameters:
      - type: string
        x-go-name: Id
        description: Specifies a unique id of the Protection Policy to return.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionPolicySummary:
    get:
      tags:
      - ProtectionPolicies
      summary: List Protection Policy Summary.
      operationId: GetProtectionPolicySummary
      parameters:
      - type: string
        x-go-name: Id
        description: |-
          Specifies the id of the policy whose summary should be retrieved. If this is not
          set, the API will return error.
        name: id
        in: query
        required: true
      - type: boolean
        x-go-name: IncludeAggregatedLastRunSummary
        description: |-
          Specifies whether to include summary of the last Protection Run of
          each Protection Source.
        name: includeAggregatedLastRunSummary
        in: query
      - type: boolean
        x-go-name: IncludeAggregatedRunsSummary
        description: |-
          Specifies whether to include summary of all Protection Runs of the
          Protection Source or Protection Jobs. If this is set to true, then
          only the Protection Runs from the provided 'startTimeUsecs' and
          'endTimeUsecs' are processed.
        name: includeAggregatedRunsSummary
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by a start time specified as a Unix epoch Timestamp
          (in microseconds). Only Job Runs that started after the specified
          time are included in the aggregated runs summary result.
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by a end time specified as a Unix epoch Timestamp
          (in microseconds). Only Job Runs that completed before the specified
          end time are included int he aggregated runs summary result.
        name: endTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: PageCount
        description: |-
          Specifies the limit of the number of Protection Sources or Protection Jobs
          to be returned as a part of the Protection Policy Summary.
        name: pageCount
        in: query
      - type: string
        x-go-name: PaginationCookie
        description: |-
          If set, i.e. there are more results to display, use this value to get
          the next set of results, by using this value in paginationCookie param
          for the next request to GetProtectionPolicySummary.
        name: paginationCookie
        in: query
      responses:
        "200":
          $ref: '#/responses/GetProtectionPolicySummaryResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionRuns:
    get:
      description: |-
        If no parameters are specified, Job Runs currently
        on the Cohesity Cluster are returned. Both running and completed Job Runs
        are reported.
        Specifying parameters filters the results that are returned.
      tags:
      - ProtectionRuns
      summary: List Protection Job Runs filtered by the specified parameters.
      operationId: GetProtectionRuns
      parameters:
      - type: integer
        format: int64
        x-go-name: JobId
        description: |-
          Filter by a Protection Job that is specified by id.
          If not specified, all Job Runs for all Protection Jobs are returned.
        name: jobId
        in: query
      - type: boolean
        x-go-name: IncludeRpoSnapshots
        description: |-
          If true, then the snapshots for Protection Sources protected by Rpo
          policies will also be returned.
        name: includeRpoSnapshots
        in: query
      - type: integer
        format: int64
        x-go-name: StartedTimeUsecs
        description: |-
          Return a specific Job Run by specifying a time and a jobId.
          Specify the time when the Job Run started as a
          Unix epoch Timestamp (in microseconds).
          If this field is specified, jobId must also be
          specified.
        name: startedTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by a start time. Only Job Runs that started after the specified
          time are returned.
          Specify the start time as a Unix epoch Timestamp (in microseconds).
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by a end time specified as a Unix epoch Timestamp
          (in microseconds). Only Job Runs that completed before the specified
          end time are returned.
        name: endTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: NumRuns
        description: |-
          Specify the number of Job Runs to return.
          The newest Job Runs are returned.
        name: numRuns
        in: query
      - type: boolean
        x-go-name: ExcludeTasks
        description: |-
          If true, the individual backup status for all the objects protected by
          the Job Run are not populated in the response. For example in a VMware
          environment, the status of backing up each VM associated with a Job
          is not returned.
        name: excludeTasks
        in: query
      - type: integer
        format: int64
        x-go-name: SourceId
        description: |-
          Filter by source id. Only Job Runs protecting the specified source
          (such as a VM or View) are returned. The source id
          is assigned by the Cohesity Cluster.
        name: sourceId
        in: query
      - type: array
        items:
          type: string
        x-go-name: RunTypes
        description: |-
          Filter by run type such as 'kFull', 'kRegular' or 'kLog'.
          If not specified, Job Runs of all types are returned.
        name: runTypes
        in: query
      - type: boolean
        x-go-name: ExcludeErrorRuns
        description: |-
          Filter out Jobs Runs with errors by setting this field to 'true'.
          If not set or set to 'false', Job Runs with errors are returned.
        name: excludeErrorRuns
        in: query
      - type: boolean
        x-go-name: ExcludeNonRestoreableRuns
        description: |-
          Filter out jobs runs that cannot be restored by setting this field to
          'true'. If not set or set to 'false', Runs without any successful
          object will be returned. The default value is false.
        name: excludeNonRestoreableRuns
        in: query
      - type: boolean
        x-go-name: OnlyReturnShellInfo
        description: |-
          If passed as true, then only returns the summary information about run
          including details such as runs start time, status, type etc. It does not
          include extra details such as attempt/task info etc.
        name: onlyReturnShellInfo
        in: query
      responses:
        "200":
          $ref: '#/responses/GetProtectionRunsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        Update the expiration date (retention period) for the specified Protection
        Job Runs and their snapshots.
        After an expiration time is reached, the Job Run and its snapshots are deleted.
        If an expiration time of 0 is specified, a Job Run and its snapshots
        are immediately deleted.
      tags:
      - ProtectionRuns
      summary: |-
        Update how long Protection Job Runs and their snapshots are retained
        on the Cohesity Cluster.
      operationId: UpdateProtectionRuns
      parameters:
      - x-go-name: Body
        description: Request to update the expiration time of Protection Job Runs.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateProtectionJobRunsParam'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionRuns/cancel/{id}:
    post:
      tags:
      - ProtectionRuns
      summary: Cancel a Protection Job run.
      operationId: CancelProtectionJobRun
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Job.
        name: id
        in: path
        required: true
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/CancelProtectionJobRunParam'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionRuns/errors:
    get:
      description: |-
        jobId, startTimeUsecs and taskId have to be provided to get the a list of
        errors for a job run task.
      tags:
      - ProtectionRuns
      summary: List Protection Job Run Errors filtered by the specified parameters.
      operationId: GetProtectionRunErrors
      parameters:
      - type: integer
        format: int64
        x-go-name: JobId
        description: |-
          Specifies the id of the Protection Job whose runs are to be returned.
          This field is required.
        name: jobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Specifies the time when the Job Run started as a
          Unix epoch Timestamp (in microseconds).
          This field is required
        name: startTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: TaskId
        description: |-
          Specifies the id of the Protection Run task for which errors are to be
          returned. This field is required to get the errors list.
        name: taskId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: LimitNumberOfErrors
        description: Specifies the number of the results expected.
        name: limitNumberOfErrors
        in: query
      - type: string
        x-go-name: PaginationCookie
        description: Specifies the cookie for next set of results.
        name: paginationCookie
        in: query
      responses:
        "200":
          $ref: '#/responses/GetProtectionRunErrorsResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources:
    get:
      description: |-
        If no parameters are specified, all Protection Sources that are registered
        on the Cohesity Cluster are returned.
        In addition, an Object subtree gathered from each Source is returned.
        For example, the Cohesity Cluster interrogates a Source VMware vCenter Server
        and creates an hierarchical Object subtree that mirrors the
        Inventory tree on vCenter Server.
        The contents of the Object tree are returned as a "nodes" hierarchy
        of "protectionSource"s.
        Specifying parameters can alter the results that are returned.
      tags:
      - ProtectionSources
      summary: Returns the registered Protection Sources and their Object subtrees.
      operationId: ListProtectionSources
      parameters:
      - type: integer
        format: int64
        x-go-name: AfterCursorEntityId
        description: Specifies the entity id starting from which the items are to
          be returned.
        name: afterCursorEntityId
        in: query
      - type: integer
        format: int64
        x-go-name: BeforeCursorEntityId
        description: Specifies the entity id upto which the items are to be returned.
        name: beforeCursorEntityId
        in: query
      - type: integer
        format: int64
        x-go-name: NodeId
        description: |-
          Specifies the entity id for the Node at any level within the Source entity
          hierarchy whose children are to be paginated.
        name: nodeId
        in: query
      - type: integer
        format: int64
        x-go-name: PageSize
        description: Specifies the maximum number of entities to be returned within
          the page.
        name: pageSize
        in: query
      - type: integer
        format: int64
        x-go-name: Id
        description: Return the Object subtree for the passed in Protection Source
          id.
        name: id
        in: query
      - type: integer
        format: int32
        x-go-name: NumLevels
        description: |-
          Specifies the expected number of levels from the root node to be returned
          in the entity hierarchy response.
        name: numLevels
        in: query
      - type: array
        items:
          enum:
          - kVCenter
          - kFolder
          - kDatacenter
          - kComputeResource
          - kClusterComputeResource
          - kResourcePool
          - kDatastore
          - kHostSystem
          - kVirtualMachine
          - kVirtualApp
          - kStandaloneHost
          - kStoragePod
          - kNetwork
          - kDistributedVirtualPortgroup
          - kTagCategory
          - kTag
          type: string
        x-go-name: ExcludeTypes
        description: |-
          Filter out the Object types (and their subtrees) that match the passed
          in types such as 'kVCenter', 'kFolder', 'kDatacenter',
          'kComputeResource', 'kResourcePool', 'kDatastore', 'kHostSystem',
          'kVirtualMachine', etc.
          For example, set this parameter to 'kResourcePool' to
          exclude Resource Pool Objects from being returned.
        name: excludeTypes
        in: query
      - type: array
        items:
          enum:
          - kDomain
          - kOutlook
          - kMailbox
          - kUsers
          - kUser
          - kGroups
          - kGroup
          - kSites
          - kSite
          type: string
        x-go-name: ExcludeOffice365Types
        description: |-
          Specifies the Object types to be filtered out for Office 365 that match
          the passed in types such as 'kDomain', 'kOutlook', 'kMailbox', etc.
          For example, set this parameter to 'kMailbox' to exclude Mailbox Objects
          from being returned.
        name: excludeOffice365Types
        in: query
      - type: array
        items:
          enum:
          - kEC2Instance
          - kRDSInstance
          type: string
        x-go-name: ExcludeAwsTypes
        description: |-
          Specifies the Object types to be filtered out for AWS that match the
          passed in types such as 'kEC2Instance', 'kRDSInstance' etc.
          For example, set this parameter to 'kEC2Instance' to exclude ec2 instance
          from being returned.
        name: excludeAwsTypes
        in: query
      - type: boolean
        x-go-name: IncludeDatastores
        description: |-
          Set this parameter to true to also return kDatastore object types found in
          the Source in addition to their Object subtrees.
          By default, datastores are not returned.
        name: includeDatastores
        in: query
      - type: boolean
        x-go-name: IncludeNetworks
        description: |-
          Set this parameter to true to also return kNetwork object types found in
          the Source in addition to their Object subtrees.
          By default, network objects are not returned.
        name: includeNetworks
        in: query
      - type: boolean
        x-go-name: IncludeVMFolders
        description: |-
          Set this parameter to true to also return kVMFolder object types found in
          the Source in addition to their Object subtrees.
          By default, VM folder objects are not returned.
        name: includeVMFolders
        in: query
      - type: boolean
        x-go-name: IncludeSystemVApps
        description: |-
          Set this parameter to true to also return system VApp object types found
          in the Source in addition to their Object subtrees.
          By default, VM folder objects are not returned.
        name: includeSystemVApps
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNetapp
          - kGenericNas
          - kHyperV
          - kAcropolis
          - kAzure
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          type: string
        x-go-name: Environments
        description: |-
          Return only Protection Sources that match the passed in environment type
          such as 'kVMware', 'kSQL', 'kView' 'kPhysical', 'kPuppeteer', 'kPure',
          'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis', or 'kAzure'.
          For example, set this parameter to 'kVMware' to only return the Sources
          (and their Object subtrees) found in the 'kVMware'
          (VMware vCenter Server) environment.

          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: string
        x-go-name: Environment
        description: |-
          This field is deprecated. Use environments instead.
          deprecated: true
        name: environment
        in: query
      - type: boolean
        x-go-name: IncludeEntityPermissionInfo
        description: |-
          If specified, then a list of entites with permissions assigned to them are
          returned.
        name: includeEntityPermissionInfo
        in: query
      - type: array
        items:
          type: string
        x-go-name: Sids
        description: Filter the object subtree for the sids given in the list.
        name: sids
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/ListProtectionSourcesResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/applicationServers:
    get:
      description: |-
        Given the root node id of a Protection Source tree, returns the list of
        Application Servers registered under that tree based on the filters.
      tags:
      - ProtectionSources
      summary: Returns the registered Application Servers and their Object subtrees.
      operationId: ListApplicationServers
      parameters:
      - type: integer
        format: int64
        x-go-name: ProtectionSourcesRootNodeId
        description: |-
          Specifies the Protection Source Id of the root node of a Protection
          Sources tree. A root node represents a registered Source on the
          Cohesity Cluster, such as a vCenter Server.
        name: protectionSourcesRootNodeId
        in: query
      - enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        type: string
        x-go-name: Environment
        description: |-
          Specifies the environment such as 'kPhysical' or 'kVMware' of the
          Protection Source tree.
          overrideDescription: true
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        name: environment
        in: query
      - type: integer
        format: int64
        x-go-name: ProtectionSourceId
        description: |-
          Specifies the Protection Source Id of the 'kPhysical' or 'kVMware'
          entity in the Protection Source tree hosting the applications.
        name: protectionSourceId
        in: query
      - enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        type: string
        x-go-name: Application
        description: |-
          Specifies the application such as 'kSQL', 'kExchange' running on the
          Protection Source.
          overrideDescription: true
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        name: application
        in: query
      responses:
        "200":
          $ref: '#/responses/ListApplicationServersResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        Returns the Protection Source whose registration parameters of its
        Application Servers are modified upon success.
      tags:
      - ProtectionSources
      summary: |-
        Modifies the registration parameters of Application Servers in a Protection
        Source.
      operationId: UpdateApplicationServers
      parameters:
      - x-go-name: Body
        description: |-
          Request to modify the Application Servers registration of a Protection
          Source.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateApplicationServerParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateApplicationServersResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Registering Application Servers will help Cohesity Cluster such that any
        application specific data can be backed up.

        Returns the Protection Source registered upon success.
      tags:
      - ProtectionSources
      summary: |-
        Register a Protection Source as running one or more Application Servers like
        Microsoft SQL servers or Microsoft Exchange servers.
      operationId: RegisterApplicationServers
      parameters:
      - x-go-name: Body
        description: Request to register Application Servers in a Protection Source.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RegisterApplicationServersParameters'
      responses:
        "200":
          $ref: '#/responses/RegisterApplicationServersResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/applicationServers/{id}:
    delete:
      description: |-
        Unregistering Application Servers will fail if the Protection Source is
        currently being backed up.

        Returns the Protection Source whose Application Servers are unregistered upon
        success.
      tags:
      - ProtectionSources
      summary: |-
        Unregister Application Servers like Microsoft SQL servers or Microsoft Exchange
        servers running on a Protection Source.
      operationId: UnregisterApplicationServers
      parameters:
      - x-go-name: Body
        description: Request to register a protection source.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UnRegisterApplicationServersParameters'
      - type: integer
        format: int64
        x-go-name: Id
        description: |-
          Specifies a unique id of the Protection Source to unregister the
          Application Servers. If the Protection Source is currently being
          backed up, unregister operation will fail.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/UnregisterApplicationServersResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/datastores:
    get:
      tags:
      - ProtectionSources
      summary: Returns the datastore information in VMware environment.
      operationId: ListDataStoreInformation
      parameters:
      - type: integer
        format: int64
        x-go-name: SourceId
        description: Specifies the id of the virtual machine in vmware environment.
        name: sourceId
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/ListDataStoreInformationResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/diagnostics/{id}:
    post:
      description: |-
        If the request is successful, the diagnostics script is triggered on Cohesity
        agent which generates a tarball containing various diagnostics and uploads it
        to the Cohesity cluster. Host type could be Linux, Windows.
      tags:
      - ProtectionSources
      summary: Collect diagnostics of the protection source for a host type.
      operationId: RunDiagnostics
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the entity id.
        name: id
        in: path
        required: true
      responses:
        "201":
          $ref: '#/responses/RunDiagnosticsResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/downloadCftFile:
    get:
      tags:
      - ProtectionSources
      summary: Download the CFT.
      operationId: DownloadCftFile
      parameters:
      - x-go-name: Body
        description: Specifies the request to download CFT.
        name: body
        in: body
        schema:
          $ref: '#/definitions/DownloadCftParams'
      responses:
        "200":
          $ref: '#/responses/DownloadCftFileResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/exchangeDagHosts:
    get:
      description: |-
        Returns information about all the exchange hosts that belong to an Exchange
        DAG.
      tags:
      - ProtectionSources
      operationId: ListExchangeDagHosts
      parameters:
      - type: string
        x-go-name: Endpoint
        description: |-
          Specifies the endpoint of Exchange DAG or a host which is member of
          Exchange DAG or a standalone exchange server.
        name: endpoint
        in: query
      - type: integer
        format: int64
        x-go-name: ProtectionSourceId
        description: Specifies the Protection Source Id of the Exchange DAG source.
        name: protectionSourceId
        in: query
      responses:
        "200":
          $ref: '#/responses/ListExchangeDagHostsResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/objects:
    get:
      description: Returns the Protection Source objects corresponding to the specified
        ids.
      tags:
      - ProtectionSources
      summary: List details about Protection Source objects.
      operationId: GetProtectionSourcesObjects
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ObjectIds
        description: Specifies the ids of the Protection Source objects to return.
        name: objectIds
        in: query
      responses:
        "200":
          $ref: '#/responses/GetProtectionSourcesObjectsResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/objects/{id}:
    get:
      description: Returns the Protection Source object corresponding to the specified
        id.
      tags:
      - ProtectionSources
      summary: Get details about a single Protection Source Object.
      operationId: GetProtectionSourcesObjectById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Source to return.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetProtectionSourcesObjectByIdResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/protectedObjects:
    get:
      tags:
      - ProtectionSources
      summary: Returns the list of protected Objects in a registered Protection Source.
      operationId: ListProtectedObjects
      parameters:
      - enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        type: string
        x-go-name: Environment
        description: |-
          Specifies the environment type of the registered Protection Source
          such as 'kVMware', 'kSQL', 'kView' 'kPhysical', 'kPuppeteer', 'kPure',
          'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis', or 'kAzure'.
          For example, set this parameter to 'kVMware' if the registered
          Protection Source is of 'kVMware' environment type.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        name: environment
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: Id
        description: |-
          Specifies the Id of a registered Protection Source of the type
          given in environment.
        name: id
        in: query
        required: true
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      - type: boolean
        x-go-name: IncludeRpoSnapshots
        description: |-
          If true, then the Protected Objects protected by RPO policies will also
          be returned.
        name: includeRpoSnapshots
        in: query
      responses:
        "200":
          $ref: '#/responses/ListProtectedObjectsResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/refresh/{id}:
    post:
      description: |-
        Force an immediate refresh between the specified Protection Source tree
        on the Cohesity Cluster and the Inventory tree
        in the associated vCenter Server.

        For example if a new VM is added to the vCenter Server, after a refresh,
        a new Protection Source node for this VM is added to the Protection Sources
        tree.

        Success indicates the forced refresh has been completed. For larger sources it
        is possible for the operation to timeout before the force refresh has been
        completed. This timeout can be increased by modifying the
        'iris_post_timeout_msecs_to_magneto' gflag on the Iris service.
      tags:
      - ProtectionSources
      summary: Refresh the Object hierarchy of the Protection Sources tree.
      operationId: RefreshProtectionSourceById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: |-
          Id of the root node of the Protection Sources tree to refresh.

          Force a refresh of the Object hierarchy for the passed in Protection
          Sources Id.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/register:
    post:
      description: |-
        Register a Protection Source on the Cohesity Cluster.
        It could be the root node of a vCenter Server or a physical server.

        Returns the newly registered Protection Source upon success.
      tags:
      - ProtectionSources
      summary: Register a Protection Source.
      operationId: RegisterProtectionSource
      parameters:
      - x-go-name: Body
        description: Request to register a protection source.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RegisterProtectionSourceParameters'
      responses:
        "200":
          $ref: '#/responses/RegisterProtectionSourceResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/registrationInfo:
    get:
      description: |-
        Returns the registration and protection information of the registered
        Protection Sources.
      tags:
      - ProtectionSources
      operationId: ListProtectionSourcesRegistrationInfo
      parameters:
      - type: array
        items:
          enum:
          - kVMware
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNetapp
          - kGenericNas
          - kHyperV
          - kAcropolis
          - kAzure
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kVCD
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kKubernetes
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          type: string
        x-go-name: Environments
        description: |-
          Return only Protection Sources that match the passed in environment type
          such as 'kVMware', 'kSQL', 'kView' 'kPhysical', 'kPuppeteer', 'kPure',
          'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis', or 'kAzure'.
          For example, set this parameter to 'kVMware' to only return the Sources
          (and their Object subtrees) found in the 'kVMware'
          (VMware vCenter Server) environment.

          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: Ids
        description: Return only the registered root nodes whose Ids are given in
          the list.
        name: ids
        in: query
      - type: boolean
        x-go-name: IncludeEntityPermissionInfo
        description: |-
          If specified, then a list of entities with permissions assigned to them are
          returned.
        name: includeEntityPermissionInfo
        in: query
      - type: array
        items:
          type: string
        x-go-name: Sids
        description: Filter the registered root nodes for the sids given in the list.
        name: sids
        in: query
      - type: boolean
        x-go-name: IncludeApplicationsTreeInfo
        description: Specifies whether to return applications tree info or not.
        name: includeApplicationsTreeInfo
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/ListProtectionSourcesRegistrationInfoResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/rootNodes:
    get:
      description: |-
        Returns the root Protection Sources and the registration information for
        each of these Sources.
      tags:
      - ProtectionSources
      summary: Returns the top level (root) Protection Sources with registration information.
      operationId: ListProtectionSourcesRootNodes
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Return the registration information for the Protection Source
          id.
        name: id
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNetapp
          - kGenericNas
          - kHyperV
          - kAcropolis
          - kAzure
          type: string
        x-go-name: Environments
        description: |-
          Return only the root Protection Sources that match the passed in
          environment type such as 'kVMware', 'kSQL', 'kView', 'kPuppeteer',
          'kPhysical', 'kPure', 'kNetapp', 'kGenericNas', 'kHyperV', 'kAcropolis'
          'kAzure'.
          For example, set this parameter to 'kVMware' to
          only return the root Protection Sources found in the 'kVMware'
          (VMware vCenter) environment. In addition, the registration
          information for each Source is returned.

          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: string
        x-go-name: Environment
        description: |-
          This field is deprecated. Use environments instead.
          deprecated: true
        name: environment
        in: query
      responses:
        "200":
          $ref: '#/responses/ListProtectionSourcesRootNodesResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/sqlAagHostsAndDatabases:
    get:
      description: |-
        Given a list of Protection Source Ids registered as SQL servers, returns
        AAGs found and the databases in AAG(Always on Availablity Group).
      tags:
      - ProtectionSources
      summary: Returns the registered Protection Sources and their Object subtrees.
      operationId: ListSqlAagHostsAndDatabases
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: SqlProtectionSourceIds
        description: |-
          Specifies a list of Ids of Protection Sources registered as SQL servers.
          These sources may have one or more SQL databases in them. Some of them
          may be part of AAGs(Always on Availability Group).
        name: sqlProtectionSourceIds
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/ListSqlAagHostsAndDatabasesResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/virtualMachines:
    get:
      description: |-
        Returns all Virtual Machines found in all the vCenter Servers registered
        on the Cohesity Cluster that match the filter criteria specified using
        parameters.
        If an id is specified, only VMs found in the specified vCenter Server
        are returned.
        Only VM Objects are returned.
        Other VMware Objects such as datacenters are not returned.
      tags:
      - ProtectionSources
      summary: Returns the Virtual Machines in a vCenter Server.
      operationId: ListVirtualMachines
      parameters:
      - type: integer
        format: int64
        x-go-name: VCenterId
        description: |-
          Limit the VMs returned to the set of VMs found in a specific
          vCenter Server.
          Pass in the root Protection Source id for the vCenter Server
          to search for VMs.
        name: vCenterId
        in: query
      - type: array
        items:
          type: string
        x-go-name: Names
        description: |-
          Limit the returned VMs to those that exactly match the passed in VM name.
          To match multiple VM names, specify multiple "names" parameters that each
          specify a single VM name.
          The string must exactly match the passed in VM name and wild cards are
          not supported.
        name: names
        in: query
      - type: array
        items:
          type: string
        x-go-name: Uuids
        description: Limit the returned VMs to those that exactly match the passed
          in UUIDs.
        name: uuids
        in: query
      - type: boolean
        x-go-name: Protected
        description: |-
          Limit the returned VMs to those that have been protected
          by a Protection Job.
          By default, both protected and unprotected VMs are returned.
        name: protected
        in: query
      responses:
        "200":
          $ref: '#/responses/ListVirtualMachinesResponse'
        default:
          $ref: '#/responses/Error'
  /public/protectionSources/{id}:
    delete:
      tags:
      - ProtectionSources
      summary: Unregister a previously registered Protection Source.
      operationId: UnregisterProtectionSource
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: |-
          Specifies a unique id of the Protection Source to unregister.
          If the Protection Source is currently being backed up, unregister
          operation will fail.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
    patch:
      tags:
      - ProtectionSources
      summary: Update a previously registered Protection Source with new details.
      operationId: UpdateProtectionSource
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Protection Source to update.
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to update protection source.
        name: body
        in: body
        schema:
          $ref: '#/definitions/UpdateProtectionSourceParameters'
      responses:
        "200":
          $ref: '#/responses/UpdatedProtectionSourceResponse'
        default:
          $ref: '#/responses/Error'
  /public/qosPolicies:
    get:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Fetches QoS Policies of a view.
      operationId: GetQoSPolicies
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: Ids
        description: Specifies the Ids of QoS Policies to filter by.
        name: ids
        in: query
      - type: array
        items:
          type: string
        x-go-name: Names
        description: Specifies the names of QoS Policies to filter by.
        name: names
        in: query
      responses:
        "200":
          $ref: '#/responses/GetQoSPoliciesResponse'
        default:
          $ref: '#/responses/Error'
  /public/remoteClusters:
    get:
      description: |-
        Cohesity Clusters involved in replication, must be registered to each other.
        For example, if Cluster A is replicating Snapshots to Cluster B, Cluster
        B must be registered on Cluster A and Cluster B must be registered
        on Cluster A.
      tags:
      - RemoteCluster
      summary: |-
        List the remote Cohesity Clusters that are registered on this local
        Cohesity Cluster that match the filter criteria specified using parameters.
      operationId: GetRemoteClusters
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ClusterIds
        description: Filter by a list of Cluster ids.
        name: clusterIds
        in: query
      - type: array
        items:
          type: string
        x-go-name: ClusterNames
        description: Filter by a list of Cluster names.
        name: clusterNames
        in: query
      - type: boolean
        x-go-name: PurposeReplication
        description: Filter for purpose as Replication.
        name: purposeReplication
        in: query
      - type: boolean
        x-go-name: PurposeRemoteAccess
        description: Filter for purpose as Remote Access.
        name: purposeRemoteAccess
        in: query
      responses:
        "200":
          $ref: '#/responses/GetRemoteClustersResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        For a Protection Job to replicate Snapshots from one Cluster
        to another Cluster, the Clusters must be paired together by
        registering each Cluster on the other Cluster.
        For example, Cluster A must be registered on Cluster B
        and Cluster B must be registered on Cluster A.
      tags:
      - RemoteCluster
      summary: Register a remote Cluster on this local Cluster for replication.
      operationId: CreateRemoteCluster
      parameters:
      - x-go-name: Body
        description: Request to register a remote Cluster.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RegisterRemoteCluster'
      responses:
        "201":
          $ref: '#/responses/CreateRemoteClusterResponse'
        default:
          $ref: '#/responses/Error'
  /public/remoteClusters/{id}:
    get:
      description: |-
        Returns the details about the remote Cluster with the specified Cluster id
        that is registered on this local Cluster.
      tags:
      - RemoteCluster
      summary: List details about a single remote Cluster registered on this local
        Cluster.
      operationId: GetRemoteClusterById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: id of the remote Cluster
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetRemoteClusterByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        Update the connection settings of the specified remote Cluster that is
        registered on this Cluster.
      tags:
      - RemoteCluster
      summary: Update the connection settings of the registered remote Cluster.
      operationId: UpdateRemoteCluster
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: id of the remote Cluster
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to update a remote Cluster.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RegisterRemoteCluster'
      responses:
        "200":
          $ref: '#/responses/UpdateRemoteClusterResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: |-
        Delete the specified remote Cluster registration connection
        on this Cluster.
      tags:
      - RemoteCluster
      summary: Delete a remote Cluster registration connection.
      operationId: DeleteRemoteCluster
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: id of the remote Cluster
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/remoteVaults/encryptionKeys/{id}:
    put:
      description: |-
        This request contains multiple files stored as multipart mime data.
        Each file has a key used to encrypt data between a remote Cluster and the
        remote Vault.
        Content of the file should be same as the file downloaded from the remote
        Cluster.
      tags:
      - RemoteRestore
      summary: |-
        Upload the encryption keys required to restore data from a remote Vault.
        (CloudRetrieve)
      operationId: UploadVaultEncryptionKeys
      parameters:
      - x-go-name: Body
        description: Request to upload encryption keys of a remote Vault.
        name: body
        in: body
        schema:
          type: array
          items:
            $ref: '#/definitions/VaultEncryptionKey'
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Vault.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/remoteVaults/restoreTasks:
    get:
      description: |-
        A remote Vault restore task can restore archived data from a Vault
        (External Target) to this local Cluster.
        This is part of the CloudRetrieve functionality for finding and restoring
        archived data from remote Vaults to an alternative (non-original) Cluster.
      tags:
      - RemoteRestore
      summary: |-
        List the remote Vault restore tasks that have completed or are running on
        this Cohesity Cluster. (CloudRetrieve)
      operationId: ListRemoteVaultRestoreTasks
      responses:
        "200":
          $ref: '#/responses/ListRemoteVaultRestoreTasksStatusResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Returns the id of the remote Vault restore Task that was created.

        After a Vault is searched by a search Job, this operation can be
        called to create a task that restores the indexes and/or the Snapshots
        of a Protection Job, which were archived on a remote Vault (External Target).
        This is part of the CloudRetrieve functionality for finding and restoring
        archived data from remote Vaults to an alternative (non-original) Cluster.
      tags:
      - RemoteRestore
      summary: Create a remote Vault restore task. (CloudRetrieve)
      operationId: CreateRemoteVaultRestoreTask
      parameters:
      - x-go-name: Body
        description: Request to create a remote Vault restore task.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateRemoteVaultRestoreTaskParameters'
      responses:
        "201":
          $ref: '#/responses/CreateRemoteVaultRestoreTaskResponse'
        default:
          $ref: '#/responses/Error'
  /public/remoteVaults/searchJobResults:
    get:
      description: |-
        Specify a unique id of the search Job using a combination of the
        searchJobId, clusterId, and clusterIncarnationId parameters,
        which are all required.

        The results can be optionally filtered by the remote Cluster name.
        This is part of the CloudRetrieve functionality for finding and restoring
        archived data from a remote Vault.
      tags:
      - RemoteRestore
      summary: |-
        List details about the Job Runs of Protection Jobs found by a single search
        of a remote Vault. (CloudRetrieve)
      operationId: GetRemoteVaultSearchJobResults
      parameters:
      - type: integer
        format: int64
        x-go-name: SearchJobId
        description: |-
          Specifies the id of the remote Vault search Job assigned
          by the Cohesity Cluster. Used in combination with the clusterId
          and clusterIncarnationId to uniquely identify the search Job.
        name: searchJobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: ClusterId
        description: |-
          Specifies the Cohesity Cluster id where the search Job was created.
          Used in combination with the searchJobId and clusterIncarnationId
          to uniquely identify the search Job.
        name: clusterId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        description: |-
          Specifies the incarnation id of the Cohesity Cluster where the
          search Job was created.
          Used in combination with the searchJobId and clusterId to uniquely
          identify the search Job.
        name: clusterIncarnationId
        in: query
        required: true
      - type: integer
        format: int32
        x-go-name: PageCount
        description: |-
          Specifies the number of Protection Jobs to return in the response
          to support pagination.
        name: pageCount
        in: query
      - type: string
        x-go-name: ClusterName
        description: Optionally filter the result by the remote Cohesity Cluster name.
        name: clusterName
        in: query
      - type: string
        x-go-name: Cookie
        description: |-
          Specifies the opaque string cookie returned by the previous response, to
          get next set of results. Used in combination with pageCount to support
          pagination.
        name: cookie
        in: query
      responses:
        "200":
          $ref: '#/responses/GetRemoteVaultSearchJobResultsResponse'
        default:
          $ref: '#/responses/Error'
  /public/remoteVaults/searchJobs:
    get:
      description: |-
        List all the searches of remote Vaults (External Targets) that
        have run or are running on this Cohesity Cluster.
        A search finds Protection Jobs that have archived to a
        Vault (External Target).
        This is part of the CloudRetrieve functionality for finding and restoring
        archived data from remote Vaults to an alternative (non-original) Cluster.

        NOTE: A Vault is equivalent to an External Target in the Cohesity Dashboard.
        A search Job is equivalent to a search task in the Cohesity Dashboard.
      tags:
      - RemoteRestore
      summary: List all the searches of remote Vaults. (CloudRetrieve)
      operationId: ListRemoteVaultSearchJobs
      responses:
        "200":
          $ref: '#/responses/ListRemoteVaultSearchJobsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        A search Job finds Protection Jobs that archived data to a
        Vault (External Target) which also match the specified search criteria.
        The results can be optionally filtered by specifying a Cluster match string,
        a Protection Job match string, a start time and an end time.
        This is part of the CloudRetrieve functionality for finding and restoring
        archived data from remote Vaults to an alternative (non-original) Cluster.

        NOTE: A Vault is equivalent to an External Target in the Cohesity Dashboard.
        A search Job is equivalent to a search task in the Cohesity Dashboard.
      tags:
      - RemoteRestore
      summary: Create a search of a remote Vault. (CloudRetrieve)
      operationId: CreateRemoteVaultSearchJob
      parameters:
      - x-go-name: Body
        description: Request to create a search of a remote Vault.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateRemoteVaultSearchJobParameters'
      responses:
        "201":
          $ref: '#/responses/CreateRemoteVaultSearchJobResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: |-
        This is part of the CloudRetrieve functionality for finding and restoring
        archived data from remote Vaults to an alternative (non-original) Cluster.
      tags:
      - RemoteRestore
      summary: Stop a search of a remote Vault (External Target). (CloudRetrieve)
      operationId: StopRemoteVaultSearchJob
      parameters:
      - x-go-name: Body
        description: Request to stop a Remote Vault Search Job.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/StopRemoteVaultSearchJobParameters'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/remoteVaults/searchJobs/{id}:
    get:
      description: |-
        Specify an id for a completed or running search Job.
        A search Job finds data that has been archived to a Vault (External Target).
        The returned results do not include Job Run (Snapshot) information.
        It is part of the CloudRetrieve functionality for finding and restoring
        archived data from remote Vaults to an alternative (non-original) Cluster.
      tags:
      - RemoteRestore
      summary: List details about a single search Job of a remote Vault. (CloudRetrieve)
      operationId: ListRemoteVaultSearchJobById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the id of the remote Vault search Job to return.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/ListRemoteVaultSearchJobByIdResponse'
        default:
          $ref: '#/responses/Error'
  /public/replicationEncryptionKey:
    get:
      description: |-
        Get the encryption key that is used for encrypting replication data
        between this Cluster and a remote Cluster.
      tags:
      - RemoteCluster
      summary: Get the encryption key on this Cluster.
      operationId: GetReplicationEncryptionKey
      responses:
        "200":
          $ref: '#/responses/GetReplicationEncryptionKeyResponse'
        default:
          $ref: '#/responses/Error'
  /public/reports/agents:
    get:
      description: |-
        Get the list of all the installed agents which includes the health status and
        upgradability of the agent.
      tags:
      - Reports
      operationId: GetAgentDeploymentReport
      parameters:
      - type: array
        items:
          enum:
          - kLinux
          - kWindows
          - kAix
          - kSolaris
          - kSapHana
          - kOther
          type: string
        x-go-name: HostOsType
        description: |-
          Specifies the host type on which the Cohesity agent is installed.
          Setting this parameter will filter the response based on host OS type on
          which agent is running.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        name: hostOsType
        in: query
      - type: string
        x-go-name: CompactVersion
        description: |-
          Specifies the compact version of Cohesity agent. For example, 6.0.1.
          Setting this parameter will filter the response based on installed agent
          version.
        name: compactVersion
        in: query
      - type: string
        x-go-name: OutputFormat
        description: |-
          Specifies the format for the output such as 'csv' or 'json'.
          If not specified, the json format is returned.
          If 'csv' is specified, a comma-separated list with a heading
          row is returned.
        name: outputFormat
        in: query
      - type: array
        items:
          enum:
          - kUnknown
          - kUnreachable
          - kHealthy
          - kDegraded
          type: string
        x-go-name: HealthStatus
        description: |-
          Specifies the health status of the Cohesity agent. Setting this parameter
          will filter the response based on agent health status.
          Specifies the status of the agent running on a physical source.
          'kUnknown' indicates the Agent is not known. No attempt to connect
          to the Agent has occurred.
          'kUnreachable' indicates the Agent is not reachable.
          'kHealthy' indicates the Agent is healthy.
          'kDegraded' indicates the Agent is running but in a degraded state.
        name: healthStatus
        in: query
      responses:
        "200":
          $ref: '#/responses/GetAgentDeploymentReportResponse'
        default:
          $ref: '#/responses/Error'
  /public/reports/dataTransferFromVaults:
    get:
      description: |-
        A Vault can provide an additional Cloud Tier where cold data of the
        Cohesity Cluster is stored in the Cloud.
        A Vault can also provide archive storage for backup data.
        This archive data is stored on Tapes and in Cloud Vaults.
      tags:
      - Reports
      summary: |-
        Get summary statistics about transferring data from Vaults
        (External Targets) to this Cohesity Cluster.
      operationId: GetDataTransferFromVaultsReportRequest
      parameters:
      - type: integer
        format: int64
        x-go-name: StartTimeMsecs
        description: |-
          Filter by a start time. Specify the start time as a Unix epoch Timestamp
          (in milliseconds).
          If startTimeMsecs and endTimeMsecs are not specified,
          the time period is the last 7 days.
        name: startTimeMsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeMsecs
        description: |-
          Filter by end time. Specify the end time as a Unix epoch Timestamp
          (in milliseconds).
          If startTimeMsecs and endTimeMsecs are not specified,
          the time period is the last 7 days.
        name: endTimeMsecs
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: VaultIds
        description: Filter by a list of Vault ids.
        name: vaultIds
        in: query
        required: true
      - type: string
        x-go-name: OutputFormat
        description: |-
          Specifies the format for the output such as 'csv' or 'json'.
          If not specified, the json format is returned.
          If 'csv' is specified, a comma-separated list with a heading
          row is returned.
        name: outputFormat
        in: query
      - type: integer
        format: int32
        x-go-name: GroupBy
        description: |-
          Specifies wheather the report should be grouped by target when scheduled
          or downloaded. If not set or set to false, report is grouped by protection
          jobs. It is ignored if outformat is not "csv" and response contains whole
          report.
        name: groupBy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetDataTransferFromVaultsSummaryResponse'
        default:
          $ref: '#/responses/Error'
  /public/reports/dataTransferToVaults:
    get:
      description: |-
        A Vault can provide an additional Cloud Tier where cold data of the
        Cohesity Cluster can be stored in the Cloud.
        A Vault can also provide archive storage for backup data.
        This archive data is stored on Tapes and in Cloud Vaults.
      tags:
      - Reports
      summary: |-
        Get summary statistics about transferring data from the
        Cohesity Cluster to Vaults (External Targets).
      operationId: GetDataTransferToVaultsReportRequest
      parameters:
      - type: integer
        format: int64
        x-go-name: StartTimeMsecs
        description: |-
          Filter by a start time. Specify the start time as a Unix epoch Timestamp
          (in milliseconds).
          If startTimeMsecs and endTimeMsecs are not specified,
          the time period is the last 7 days.
        name: startTimeMsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeMsecs
        description: |-
          Filter by end time. Specify the end time as a Unix epoch Timestamp
          (in milliseconds).
          If startTimeMsecs and endTimeMsecs are not specified,
          the time period is the last 7 days.
        name: endTimeMsecs
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: VaultIds
        description: Filter by a list of Vault ids.
        name: vaultIds
        in: query
        required: true
      - type: string
        x-go-name: OutputFormat
        description: |-
          Specifies the format for the output such as 'csv' or 'json'.
          If not specified, the json format is returned.
          If 'csv' is specified, a comma-separated list with a heading
          row is returned.
        name: outputFormat
        in: query
      - type: integer
        format: int32
        x-go-name: GroupBy
        description: |-
          Specifies wheather the report should be grouped by target when scheduled
          or downloaded. If not set or set to false, report is grouped by protection
          jobs. It is ignored if outformat is not "csv" and response contains whole
          report.
        name: groupBy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetDataTransferToVaultsSummaryResponse'
        default:
          $ref: '#/responses/Error'
  /public/reports/gdpr:
    get:
      description: Returns the GDPR report information.
      tags:
      - Reports
      summary: Get gdpr report related information.
      operationId: GetGdprReport
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ObjectIds
        description: Specifies the objects for which to get the gdpr information.
        name: id
        in: query
      - type: array
        items:
          type: string
        x-go-name: AccessibleUsers
        description: Specifies the users for which to get the accessible objects.
        name: accessibleUsers
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ParentSourceId
        description: Specifies the parent sources of objects for which to get info
          for.
        name: parentSourceId
        in: query
      - type: string
        x-go-name: OutputFormat
        description: |-
          Specifies the format for the output such as 'csv' or 'json'.
          If not specified, the json format is returned.
          If 'csv' is specified, a comma-separated list with a heading
          row is returned.
        name: outputFormat
        in: query
      - type: array
        items:
          type: string
        x-go-name: Actions
        description: Specifies the action for the audit logs.
        name: actions
        in: query
      - type: string
        x-go-name: Search
        description: Specifies the search string for the audit logs.
        name: search
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Specifies the start time for the audit logs as a Unix epoch Timestamp
          (in microseconds).
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Specifies the end time for the audit logsas a Unix epoch Timestamp
          (in microseconds).
        name: endTimeUsecs
        in: query
      responses:
        "200":
          $ref: '#/responses/GetGdprReportResponse'
        default:
          $ref: '#/responses/Error'
  /public/reports/protectedObjectsTrends:
    get:
      description: |-
        This gives a summary of protection trend for protected resources during the
        given time range.
        If no roll up is specified, then the trends will be grouped by days.
      tags:
      - Reports
      summary: Get protected objects trends grouped by days/weeks/months.
      operationId: GetProtectedObjectsTrendsReportRequest
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        description: |-
          Filter by a list of Job ids. Snapshots summary statistics
          for the specified Protection Jobs are reported.
        name: jobIds
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by a start time. Snapshot summary statistics
          for Job Runs that started after the specified time are reported.
          Specify the start time as a Unix epoch Timestamp (in microseconds).
        name: startTimeUsecs
        in: query
      - type: string
        x-go-name: Timezone
        description: |-
          Specifies the timezone to use when calculating day/week/month
          Specify the timezone in the following format: "Area/Location",
          for example: "America/New_York".
        name: timezone
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by end time. Snapshot summary statistics
          for Job Runs that ended before the specified time are returned.
          Specify the end time as a Unix epoch Timestamp (in microseconds).
        name: endTimeUsecs
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kAzureNative
          - kKubernetes
          - kElastifile
          - kAD
          - kRDSSnapshotManager
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          type: string
        x-go-name: Environments
        description: |-
          Filter by a list of environment types such as 'kVMware', 'kView', etc.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        name: environments
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectedObjectIds
        description: |-
          Filter by a list of leaf Protection Sources Objects (such as VMs).
          Snapshot summary statistics for the listed Protection Source Objects
          are reported.
        name: protectedObjectIds
        in: query
      - type: integer
        format: int64
        x-go-name: RegisteredEntityId
        description: |-
          Specifies an id of a top level Registered Source such as
          a vCenter Server. If specified, Snapshot summary statistics for all
          the leaf Protection Sources (such as VMs) that are children of this
          Registered Source are reported.
          NOTE: If specified, filtering by other fields is not supported.
        name: registeredSourceId
        in: query
      - type: string
        x-go-name: RollUp
        description: Roll up type for grouping. Valid values are day, week, month
        name: rollup
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/ProtectedObjectsTrendsReportResponse'
        default:
          $ref: '#/responses/Error'
  /public/reports/protectionSourcesJobRuns:
    get:
      description: |-
        Returns the Snapshots that contain backups of the specified
        Protection Source Objects and match the specified filter criteria.
      tags:
      - Reports
      summary: |-
        Get protection details about the specified list of leaf
        Protection Source Objects (such as a VMs).
      operationId: GetProtectionSourcesJobRunsReportRequest
      parameters:
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        description: |-
          Filter by a list of Job ids. Snapshots for the specified
          Protection Jobs are listed.
        name: jobIds
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by a start time. Snapshots that started after the
          specified time are returned.
          Specify the start time as a Unix epoch Timestamp (in microseconds).
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by a end time. Snapshots that ended before the
          specified time are returned.
          Specify the end time as a Unix epoch Timestamp (in microseconds).
        name: endTimeUsecs
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kVCD
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kKubernetes
          - kElastifile
          type: string
        x-go-name: Environments
        description: |-
          Filter by a list of environment types such as 'kVMware', 'kView', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionSourceIds
        description: |-
          Filter by a list of leaf Protection Sources Objects (such as VMs).
          Snapshots of the specified Protection Source Objects are returned.
        name: protectionSourceIds
        in: query
        required: true
      - type: string
        x-go-name: OutputFormat
        description: |-
          Specifies the format for the output such as 'cvs' or 'json'.
          If not specified, the json format is returned.
          If 'csv' is specified, a comma-separated list with a heading
          row is returned.
        name: outputFormat
        in: query
      - type: integer
        format: int32
        x-go-name: PageCount
        description: |-
          Specifies the number of Snapshots to return in the response for
          pagination purposes. Used in combination with the paginationCookie in
          the response to return multiple sets of Snapshots.
        name: pageCount
        in: query
      - type: array
        items:
          enum:
          - kSuccess
          - kRunning
          - kWarning
          - kCancelled
          - kError
          type: string
        x-go-name: RunStatus
        description: |-
          Filter by a list of run statuses such as 'kRunning',
          'kSuccess', 'kFailure' etc.
          Snapshots of Job Runs with the specified run statuses are reported.
          'kSuccess' indicates that the Job Run was successful.
          'kRunning' indicates that the Job Run is currently running.
          'kWarning' indicates that the Job Run was successful but warnings were
          issued.
          'kCancelled' indicates that the Job Run was canceled.
          'kError' indicates the Job Run encountered an error and did not run to
          completion.
        name: runStatus
        in: query
      responses:
        "200":
          $ref: '#/responses/ProtectionSourcesJobRunsReportResponse'
        default:
          $ref: '#/responses/Error'
  /public/reports/protectionSourcesJobsSummary:
    get:
      description: |-
        For example, if two Job ids are passed in, Snapshot summary statistics about
        all the leaf Objects that have been protected by the two specified
        Jobs are reported.
        For example, if a top level registered Source id is passed in, summary
        statistics about all the Snapshots backing up leaf Objects in
        the specified Source are reported.
      tags:
      - Reports
      summary: |-
        Get Job Run (Snapshot) summary statistics about the leaf Protection Sources
        Objects that match the specified filter criteria.
      operationId: GetProtectionSourcesJobsSummaryReportRequest
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        description: |-
          Filter by a list of Job ids. Snapshots summary statistics
          for the specified Protection Jobs are reported.
        name: jobIds
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by a start time. Snapshot summary statistics
          for Job Runs that started after the specified time are reported.
          Specify the start time as a Unix epoch Timestamp (in microseconds).
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by end time. Snapshot summary statistics
          for Job Runs that ended before the specified time are returned.
          Specify the end time as a Unix epoch Timestamp (in microseconds).
        name: endTimeUsecs
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kVCD
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kKubernetes
          - kElastifile
          type: string
        x-go-name: Environments
        description: |-
          Filter by a list of environment types such as 'kVMware', 'kView', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionSourceIds
        description: |-
          Filter by a list of leaf Protection Sources Objects (such as VMs).
          Snapshot summary statistics for the listed Protection Source Objects
          are reported.
        name: protectionSourceIds
        in: query
      - type: array
        items:
          enum:
          - kSuccess
          - kRunning
          - kWarning
          - kCancelled
          - kError
          type: string
        x-go-name: Statuses
        description: |-
          Filter by a list of run statuses.
          'kSuccess' indicates that the Job Run was successful.
          'kRunning' indicates that the Job Run is currently running.
          'kWarning' indicates that the Job Run was successful but warnings were
          issued.
          'kCancelled' indicates that the Job Run was canceled.
          'kError' indicates the Job Run encountered an error and did not run to
          completion.
        name: statuses
        in: query
      - type: string
        x-go-name: OutputFormat
        description: |-
          Specifies the format for the output such as 'csv' or 'json'.
          If not specified, the json format is returned.
          If 'csv' is specified, a comma-separated list with a heading
          row is returned.
        name: outputFormat
        in: query
      - type: integer
        format: int64
        x-go-name: RegisteredEntityId
        description: |-
          Specifies an id of a top level Registered Source such as
          a vCenter Server. If specified, Snapshot summary statistics for all
          the leaf Protection Sources (such as VMs) that are children of this
          Registered Source are reported.
          NOTE: If specified, filtering by other fields is not supported.
        name: registeredSourceId
        in: query
      - type: integer
        format: int32
        x-go-name: ConsecutiveFailures
        description: |-
          Filters out those jobs which have number of consecutive run failures less
          than consecutiveFailures.
        name: consecutiveFailures
        in: query
      - type: string
        x-go-name: ReportName
        description: Specifies the custom report name the user wants to set for this
          report.
        name: reportName
        in: query
      - type: integer
        format: int32
        x-go-name: ReportType
        description: |-
          Specifies the report type that will be used to set the right label &
          subject line for the report when downloaded or emailed because same API is
          used for 3 reports currently
          1. kAvailableLocalSnapshotsReport
          2. kFailedObjectsReport
          3. kProtectionSummaryByObjectTypeReport
        name: reportType
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/ProtectionSourcesJobsSummaryReportResponseBodyWrapper'
        default:
          $ref: '#/responses/Error'
  /public/restore/adDomainRootTopology:
    get:
      description: Returns the root topology for an AD domain.
      tags:
      - RestoreTasks
      summary: Gets Root Topology for an AD Domain.
      operationId: GetAdDomainRootTopology
      parameters:
      - type: integer
        format: int64
        x-go-name: RestoreTaskId
        description: |-
          Specifies the restoreTaskId corresponding to which we need to
          get the ad topology.
        name: restoreTaskId
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetAdDomainRootTopologyResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/adObjectAttributes:
    post:
      description: |-
        Returns the list of AD Objects after comparing attributes of AD Object from
        both Snapshot and Production AD.
      tags:
      - RestoreTasks
      summary: |-
        Compares the AD Object from both Snapshot and Production AD and returns
        the attributes with status whether they differ or not.
      operationId: CompareAdObjects
      parameters:
      - x-go-name: Body
        description: |-
          Specifies the Request to compare the AD Objects
          from both Snapshot and Production AD.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CompareAdObjectsRequest'
      responses:
        "200":
          $ref: '#/responses/CompareAdObjectsResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/adObjects:
    get:
      description: |-
        Returns the list of AD Objects along with status whether they are missing in
        Production AD, equal or not equal.
      tags:
      - RestoreTasks
      summary: |-
        Searches for AD Objects in both Production and Snapshot AD from given search
        base dn and offset.
      operationId: SearchAdObjects
      parameters:
      - type: integer
        format: int64
        x-go-name: RestoreTaskId
        description: |-
          Specifies the restoreTaskId corresponding to which we need to search
          AD objects.
        name: restoreTaskId
        in: query
        required: true
      - type: integer
        format: uint32
        x-go-name: NumObjects
        description: Specifies the number of AD Objects to be fetched.
        name: numObjects
        in: query
      - type: string
        x-go-name: SearchBaseDn
        description: |-
          Specifies the search base distinguished name from where the search
          should begin in the hierarchy of the AD in both Production
          and Snapshot AD.
        name: searchBaseDn
        in: query
      - type: boolean
        x-go-name: SubtreeSearchScope
        description: |-
          Specifies the search scope for the request.
          If subtree search scope is true all the children of Search Base DN
          are returned from given offset. If subtree search scope is false
          only all objects which are one level from the Search Base DN are returned.
        name: subtreeSearchScope
        in: query
      - type: boolean
        x-go-name: CompareObjects
        description: |-
          Specifies the option to compare the properties from Snapshot AD and
          Production AD if specifed and sets kNotEqual flag in the result when
          there is mismatch.
        name: compareObjects
        in: query
      - type: boolean
        x-go-name: ExcludeSystemProperties
        description: |-
          Specifies the option to exclude the system attributes while comparing the
          the objects from the Production AD and Snapshot AD.
        name: excludeSystemProperties
        in: query
      - type: string
        x-go-name: Filter
        description: |-
          Specifies the filter which can be used for searching the AD Objects from
          given Search Base DN.
          There are two types of filters supported. They are:
          1) If the string does not contain LDAP delimiters '(' and ')', then it is
          assumed to be ANR search "(anr=<ldap_filter>)"
          Eg: "a" will result in query to return all ANR fields with "a" characters
          (case insensitive) in them
          2) Search with OR and AND combination:
          "(|(&(objectClass=user)(distinguishedName=CN=Jone
          Doe,OU=Users,DC=corp,DC=cohesity,DC=com))(&(objectClass=user)
          (sAMAccountName=jdoe)))"
        name: filter
        in: query
      - type: integer
        format: uint32
        x-go-name: RecordOffset
        description: |-
          Specifies the offset from which AD objects should be searched in both
          the Snapshot and Production AD.
        name: recordOffset
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchAdObjectsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Returns the list of AD Objects that match the list of object guids,
        sam account names and distinguished names provided in the request.
      tags:
      - RestoreTasks
      summary: |-
        Searches for AD Objects that match the list of object guids,
        sam account names and distinguished names provided in the request.
      operationId: SearchProductionAdObjects
      parameters:
      - x-go-name: Body
        description: Specifies the Request to search the AD Objects from Production
          AD.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SearchProductionAdObjectsRequest'
      responses:
        "200":
          $ref: '#/responses/SearchAdObjectsResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/adObjects/searchResults:
    get:
      description: |-
        Search for AD objects to recover that match the specified search and filter criterias
        provided in the request.
      tags:
      - RestoreTasks
      operationId: GetAdObjects
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the name of the AD object.
        name: name
        in: query
      - type: string
        x-go-name: SamAccountName
        description: Specifies the sam account name of the AD object.
        name: samAccountName
        in: query
      - type: string
        x-go-name: ObjectType
        description: |-
          Specifies the type of the AD Object. The type may be user, computer,
          group or ou(organizational unit).
        name: objectType
        in: query
      - type: string
        x-go-name: Email
        description: Specifies the email of the AD object of type user or group.
        name: email
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: RegisteredSourceIds
        description: |-
          Specifies the Active Directory Application Server Ids which contains
          the AD objects.
        name: registeredSourceIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        description: |-
          Specifies the protection job Ids which have backed up Active Directory
          Application Server.
        name: jobIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIds
        description: |-
          Filter by a list of Domains (View Boxes) ids.
          Only items stored in the listed Domains (View Boxes) are returned.
        name: viewBoxIds
        in: query
      - type: string
        x-go-name: Domain
        description: domain of the AD object.
        name: domain
        in: query
      - type: string
        x-go-name: TenantId
        description: TenantId specifies the tenant whose action resulted in the audit
          log.
        name: tenantId
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
          of tenant with id TenantId should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchRestoredFilesResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/adObjects/status:
    get:
      description: |-
        Returns the Restore status of the AD objects which were restored from the
        snapshot AD to production AD as part of the restore task id specified in the
        parameters.
      tags:
      - RestoreTasks
      operationId: AdObjectsRestoreStatus
      parameters:
      - type: integer
        format: int64
        x-go-name: RestoreTaskId
        description: |-
          Specifies the restoreTaskId corresponding to which we need to get
          information about the restore of the AD objects.
        name: restoreTaskId
        in: query
      responses:
        "200":
          $ref: '#/responses/AdObjectsRestoreStatusResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/applicationsClone:
    post:
      description: Returns the created Restore Task.
      tags:
      - RestoreTasks
      summary: Create a Restore Task for cloning Applications like SQL Databases.
      operationId: CreateApplicationsCloneTask
      parameters:
      - x-go-name: Body
        description: Request to create a Restore Task for cloning Applications like
          SQL DB.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApplicationsRestoreTaskRequest'
      responses:
        "201":
          $ref: '#/responses/CreateCloneTaskResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/applicationsClone/refresh:
    post:
      description: |-
        Returns the created Clone Refresh Task which refreshes the clone with specified
        data.
      tags:
      - CloneRefreshTasks
      summary: Create a Clone Refresh Task to refresh the clone with the new data.
      operationId: CreateCloneRefreshTask
      parameters:
      - x-go-name: Body
        description: Request to create a Clone Refresh Task.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CloneRefreshRequest'
      responses:
        "201":
          $ref: '#/responses/CreateCloneRefreshTaskResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/applicationsRecover:
    post:
      description: Returns the created Restore Task.
      tags:
      - RestoreTasks
      summary: Create a Restore Task for recovering Applications like SQL Databases.
      operationId: CreateApplicationsRecoverTask
      parameters:
      - x-go-name: Body
        description: |-
          Request to create a Restore Task for recovering Applications like SQL DB.
          volumes to mount points.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApplicationsRestoreTaskRequest'
      responses:
        "201":
          $ref: '#/responses/CreateRecoverTaskResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/clone:
    post:
      description: Returns the created Restore Task that clones VMs or a View.
      tags:
      - RestoreTasks
      summary: Create a Restore Task for cloning VMs or a View.
      operationId: CreateCloneTask
      parameters:
      - x-go-name: Body
        description: Request to create a Restore Task for cloning VMs or a View.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CloneTaskRequest'
      responses:
        "201":
          $ref: '#/responses/CreateCloneTaskResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/clone/{id}:
    delete:
      tags:
      - RestoreTasks
      summary: Destroy a clone task with specified id.
      operationId: PublicDestroyCloneTask
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Clone Task to destroy.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/deploy:
    post:
      description: |-
        Returns the created Restore Task that deploys VMs on cloud. This operation
        returns the target where cloud is deployed. Currently, VMs can be deployed
        in either AWS target or Azure target.
      tags:
      - RestoreTasks
      summary: Create a Restore Task for deploying VMs or a View on cloud.
      operationId: CreateDeployTask
      parameters:
      - x-go-name: Body
        description: Request to create a Restore Task for deploying VMs or a View
          on cloud.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/DeployTaskRequest'
      responses:
        "201":
          $ref: '#/responses/CreateDeployTaskResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/downloadFilesAndFolders:
    post:
      description: Returns the created download Task information that downloads files
        and folders.
      tags:
      - RestoreTasks
      summary: Create a Download Task for downloading files and folders.
      operationId: CreateDownloadFilesAndFolders
      parameters:
      - x-go-name: Body
        description: |-
          Request to create a task for downloading list of files or
          folders.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/DownloadFilesAndFoldersParams'
      responses:
        "201":
          $ref: '#/responses/CreateDownloadFilesAndFoldersResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/files:
    get:
      description: |-
        Use the files and folders returned by this operation to populate the
        list of files and folders to recover in the
        POST /public/restore/files operation.
        If no search pattern or filter parameters are specified, all files
        and folders currently found on the Cohesity Cluster are returned.
        Specify a search pattern or parameters to filter the results that
        are returned.

        The term "items" below refers to files and folders that are found
        in the source objects (such as VMs).
      tags:
      - RestoreTasks
      summary: |-
        Search for files and folders to recover that match the specified search
        and filter criteria on the Cohesity Cluster.
      operationId: SearchRestoredFiles
      parameters:
      - type: array
        items:
          type: string
        x-go-name: MustHaveTags
        description: Specifies tags which must be all present in the document.
        name: mustHaveTags
        in: query
      - type: array
        items:
          type: string
        x-go-name: MightHaveTags
        description: |-
          Specifies list of tags, one of which might be present in the document.
          These are OR'ed together and the resulting criteria AND'ed with the
          rest of the query.
        name: mightHaveTags
        in: query
      - type: array
        items:
          type: string
        x-go-name: MustHaveSnapshotTags
        description: Specifies snapshot tags which must be all present in the document.
        name: mustHaveSnapshotTags
        in: query
      - type: array
        items:
          type: string
        x-go-name: MightHaveSnapshotTags
        description: |-
          Specifies list of snapshot tags, one of which might be present in the
          document. These are OR'ed together and the resulting criteria AND'ed
          with the rest of the query.
        name: mightHaveSnapshotTags
        in: query
      - type: boolean
        x-go-name: Paginate
        description: |-
          Specifies bool to control pagination of search results. Only valid
          for librarian queries. If this is set to true and a pagination cookie
          is provided, search will be resumed.
        name: paginate
        in: query
      - type: integer
        format: int32
        x-go-name: PageSize
        description: |-
          Specifies pagesize for pagination. Only valid for librarian queries.
          Effective only when Paginate is set to true.
        name: pageSize
        in: query
      - type: string
        x-go-name: PaginationCookie
        description: |-
          Specifies cookie for resuming search if pagination is being used. Only
          valid for librarian queries. Effective only when Paginate is set to true.
        name: paginationCookie
        in: query
      - type: string
        x-go-name: Search
        description: |-
          Filter by searching for sub-strings in the item name. The specified
          string can match any part of the item name.
          For example: "vm" or "123" both match the item name of "vm-123".
        name: search
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        description: |-
          Filter by a list of Protection Job ids.
          Only items backed up by the specified Jobs are listed.
        name: jobIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: RegisteredSourceIds
        description: |-
          Filter by a list of Registered Sources ids. Only items
          from the listed Registered Sources are returned.
        name: registeredSourceIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIds
        description: |-
          Filter by a list of Domains (View Boxes) ids.
          Only items stored in the listed Domains (View Boxes) are returned.
        name: viewBoxIds
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kVCD
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kKubernetes
          - kElastifile
          type: string
        x-go-name: Environments
        description: |-
          Filter by environment types such as 'kVMware', 'kView', etc.
          Only items from the specified environment types are returned.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by backup completion time by specifying a backup
          completion start and end times. Specified as a Unix epoch
          Timestamp (in microseconds).
          Only items created by backups that completed between the
          specified start and end times are returned.
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by backup completion time by specify a backup
          completion start and end times. Specified as a Unix epoch
          Timestamp (in microseconds).
          Only items created by backups that completed between the
          specified start and end times are returned.
        name: endTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: StartIndex
        description: |-
          Specifies an index number that can be used to return subsets of items
          in multiple requests.
          Break up the items to return into multiple requests
          by setting pageCount and using startIndex to return a subsets of items.
          For example, set startIndex to 0 to get the first set of items
          for the first request. Increment startIndex by pageCount
          to get the next set of items for a next request.
          Continue until all items are returned and therefore the total number of
          returned items is equal to totalCount.
        name: startIndex
        in: query
      - type: integer
        format: int64
        x-go-name: PageCount
        description: |-
          Limit the number of items to return in the response for pagination
          purposes.
        name: pageCount
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: SourceIds
        description: |-
          Filter by source ids. Only files and folders found in the listed sources
          (such as VMs) are returned.
        name: sourceIds
        in: query
      - type: boolean
        x-go-name: FolderOnly
        description: |-
          Filter by folders or files. If true, only folders are returned.
          If false, only files are returned. If not specified, both
          files and folders are returned.
        name: folderOnly
        in: query
      - type: string
        x-go-name: TenantId
        description: TenantId specifies the tenant whose action resulted in the audit
          log.
        name: tenantId
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
          of tenant with id TenantId should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchRestoredFilesResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created Restore Task that recovers files and folders.
      tags:
      - RestoreTasks
      summary: Create a Restore Task for recovering files and folders.
      operationId: CreateRestoreFilesTask
      parameters:
      - x-go-name: Body
        description: Request to create a Restore Task for recovering files or folders.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RestoreFilesTaskRequest'
      responses:
        "201":
          $ref: '#/responses/CreateRestoreFilesTaskResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/files/fstats:
    get:
      tags:
      - RestoreTasks
      summary: Get the fstat information about file provided using query parameters.
      operationId: GetFileFstatInformation
      parameters:
      - type: integer
        format: int64
        x-go-name: JobId
        description: |-
          JobId is the id of the local job that took the snapshot, which may or
          may not match the JobUidObjectId below depending on whether the object
          originally belonged to this local job or to a different remote job.
        name: jobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobUidObjectId
        description: |-
          JobUidObjectId is the globally unique id of the job that the object
          originally belonged to. If this object originally belonged to a job from a
          remote cluster, this field will contain the JobId of the remote job, else
          it will contain the JobId of the local job.
        name: jobUidObjectId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EntityId
        description: EntityId is the Id of the VM.
        name: entityId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobInstanceId
        description: JobInstanceId is the Id of the job run that backed up the entity.
        name: jobInstanceId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobStartTimeUsecs
        description: |-
          JobStartTimeUsecs is the start time in usecs of the job run that backed up
          the entity.
        name: jobStartTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: AttemptNum
        description: |-
          AttemptNum is the attempt number of the run that successfully created the
          snapshot.
        name: attemptNum
        in: query
      - type: string
        x-go-name: VolumeName
        description: |-
          VolumeName is the name of the volume that needs to be browsed. This should
          match the name returned in VolumeInfo.
        name: volumeName
        in: query
      - type: integer
        format: int64
        x-go-name: ViewBoxId
        description: Id of the View Box if a View is being browsed.
        name: viewBoxId
        in: query
      - type: string
        x-go-name: ViewName
        description: Name of the View if a View is being browsed.
        name: viewName
        in: query
      - type: integer
        format: uint64
        x-go-name: VolumeInfoCookie
        description: |-
          VolumeInfoCookie is the cookie to be passed in calls to reading a VM dir
          for this volume.
        name: volumeInfoCookie
        in: query
      - type: string
        x-go-name: FilePath
        description: FilePath is the full path of the file or directory whose stat
          needed.
        name: filePath
        in: query
        required: true
      - type: boolean
        x-go-name: UseLibrarian
        description: |-
          Specifies whether to use Librarian for file stat. This will be true if the
          browse is enabled via librarian.
        name: useLibrarian
        in: query
      responses:
        "200":
          $ref: '#/responses/GetFileFstatInformationResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/files/snapshotsInformation:
    get:
      tags:
      - RestoreTasks
      summary: Get the information about snapshots that contain the specified file
        or folder. In addition, information about the file or folder is provided.
      operationId: GetFileSnapshotsInformation
      parameters:
      - type: integer
        format: int64
        x-go-name: JobId
        description: |-
          Specifies the id of the Job that captured the snapshots.
          These snapshots are searched for the specified files or folders.
          This field is required.
        name: jobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: ClusterId
        description: |-
          Specifies the Cohesity Cluster id where the Job was created.
          This field is required.
        name: clusterId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        description: |-
          Specifies the incarnation id of the Cohesity Cluster where the Job
          was created.
          An incarnation id is generated when a Cohesity Cluster is initially
          created. This field is required.
        name: clusterIncarnationId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: SourceId
        description: |-
          Specifies the id of the Protection Source object (such as a VM) to search.
          When a Job Run executes, snapshots of the specified Protection Source
          object are captured. This operation searches the snapshots of the
          object for the file or folder. This field is required.
        name: sourceId
        in: query
        required: true
      - type: string
        x-go-name: Filename
        description: |-
          Specifies the name of the file or folder to find in the snapshots.
          This field is required.
        name: filename
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetFileSnapshotsInformationResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/objects:
    get:
      description: |-
        If no search pattern or filter parameters are specified, all backup objects
        currently found on the Cohesity Cluster are returned.
        Only leaf objects that have been protected by a Job are returned such as VMs,
        Views and databases.
        Specify a search pattern or parameters to filter the results that
        are returned.

        The term "items" below refers to leaf backup objects such as VMs,
        Views and databases.
      tags:
      - RestoreTasks
      summary: |-
        Find backup objects that match the specified search and filter criteria
        on the Cohesity Cluster.
      operationId: SearchObjects
      parameters:
      - type: string
        x-go-name: Search
        description: |-
          Filter by searching for sub-strings in the item name. The specified
          string can match any part of the item name.
          For example: "vm" or "123" both match the item name of "vm-123".
        name: search
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        description: |-
          Filter by a list of Protection Job ids.
          Only items backed up by the specified Jobs are listed.
        name: jobIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: RegisteredSourceIds
        description: |-
          Filter by a list of Registered Sources ids. Only items
          from the listed Registered Sources are returned.
        name: registeredSourceIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIds
        description: |-
          Filter by a list of Domains (View Boxes) ids.
          Only items stored in the listed Domains (View Boxes) are returned.
        name: viewBoxIds
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kVCD
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kKubernetes
          - kElastifile
          type: string
        x-go-name: Environments
        description: |-
          Filter by environment types such as 'kVMware', 'kView', etc.
          Only items from the specified environment types are returned.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
        name: environments
        in: query
      - type: array
        items:
          enum:
          - kDomain
          - kOutlook
          - kMailbox
          - kUsers
          - kGroups
          - kSites
          - kUser
          - kGroup
          - kSite
          type: string
        x-go-name: Office365SourceTypes
        description: |-
          Filter by Office365 types such as 'kUser', 'kSite', etc.
          Only items from the specified source types are returned.
        name: office365SourceTypes
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by backup completion time by specifying a backup
          completion start and end times. Specified as a Unix epoch
          Timestamp (in microseconds).
          Only items created by backups that completed between the
          specified start and end times are returned.
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by backup completion time by specify a backup
          completion start and end times. Specified as a Unix epoch
          Timestamp (in microseconds).
          Only items created by backups that completed between the
          specified start and end times are returned.
        name: endTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: StartIndex
        description: |-
          Specifies an index number that can be used to return subsets of items
          in multiple requests.
          Break up the items to return into multiple requests
          by setting pageCount and using startIndex to return a subsets of items.
          For example, set startIndex to 0 to get the first set of items
          for the first request. Increment startIndex by pageCount
          to get the next set of items for a next request.
          Continue until all items are returned and therefore the total number of
          returned items is equal to totalCount.
        name: startIndex
        in: query
      - type: integer
        format: int64
        x-go-name: PageCount
        description: |-
          Limit the number of items to return in the response for pagination
          purposes.
        name: pageCount
        in: query
      - type: array
        items:
          type: string
        x-go-name: OperatingSystems
        description: |-
          Filter by the Operating Systems running on VMs and Physical Servers.
          This filter is applicable only to VMs and physical servers.
        name: operatingSystems
        in: query
      - type: string
        x-go-name: Application
        description: |-
          Filter by application when the environment type is kSQL.
          For example, if SQL is specified the SQL databases are returned.
        name: application
        in: query
      - type: integer
        format: int64
        x-go-name: OwnerEntityId
        description: |-
          Filter objects by the Entity id of the owner VM. For example, if a
          ownerEntityId is provided while searching for SQL databases,
          only SQL databases belonging to the VM with the specified id
          are returned.
          ownerEntityId is only significant if application is set to SQL.
        name: ownerEntityId
        in: query
      - type: string
        x-go-name: TenantId
        description: TenantId specifies the tenant whose action resulted in the audit
          log.
        name: tenantId
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
          of tenant with id TenantId should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchObjectsResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/office365/onedrive/documents:
    get:
      description: |-
        Search for OneDrive files and folder to recover that match the specified
        search and filter criterias on the Cohesity cluster.
      tags:
      - RestoreTasks
      summary: Returns the OneDrive files and folders.
      operationId: GetOneDriveDocuments
      parameters:
      - type: string
        x-go-name: TenantId
        description: TenantId specifies the tenant whose action resulted in the audit
          log.
        name: tenantId
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
          of tenant with id TenantId should be returned.
        name: allUnderHierarchy
        in: query
      - type: string
        x-go-name: DocumentName
        description: Specifies the document(file/folder) name.
        name: documentName
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: DomainIds
        description: Specifies the domain Ids in which Users' OneDrives are registered.
        name: domainIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: UserIds
        description: Specifies the Office365 User Ids which is teh owner of the OneDrive.
        name: mailboxIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionJobIds
        description: |-
          Specifies the protection job Ids which have backed up mailbox(es)
          continaing emails/folders.
        name: protectionJobIds
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchRestoredFilesResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/office365/outlook/emails:
    get:
      description: |-
        Search for Emails and Emails' folders to recover that match the specified
        search and filter criterias on the Cohesity cluster.
      tags:
      - RestoreTasks
      summary: Returns the Outlook emails and folders containing emails.
      operationId: GetOutlookEmails
      parameters:
      - type: boolean
        x-go-name: HasAttachments
        description: Specifies whether the emails have any attachments.
        name: hasAttachments
        in: query
      - type: string
        x-go-name: SenderAddress
        description: Specifies the email address of the sender.
        name: senderAddress
        in: query
      - type: array
        items:
          type: string
        x-go-name: RecipientAddresses
        description: Specifies the email addresses of the recipients.
        name: recipientAddresses
        in: query
      - type: array
        items:
          type: string
        x-go-name: CcRecipientAddresses
        description: Specifies the email addresses of the cc recipients.
        name: ccRecipientAddresses
        in: query
      - type: array
        items:
          type: string
        x-go-name: BccRecipientAddresses
        description: Specifies the email addresses of the bcc recipients.
        name: bccRecipientAddresses
        in: query
      - type: integer
        format: int64
        x-go-name: SentTimeSeconds
        description: Specifies the unix time when the email was sent.
        name: sentTimeSeconds
        in: query
      - type: integer
        format: int64
        x-go-name: ReceivedTimeSeconds
        description: Specifies the unix time when the email was received.
        name: receivedTimeSeconds
        in: query
      - type: integer
        format: int64
        x-go-name: ReceivedStartTime
        description: Specifies the unix start time for querying on email's received
          time.
        name: receivedStartTime
        in: query
      - type: integer
        format: int64
        x-go-name: ReceivedEndTime
        description: Specifies the unix end time for querying on email's received
          time.
        name: receivedEndTime
        in: query
      - type: string
        x-go-name: EmailSubject
        description: Specifies the subject of the email.
        name: emailSubject
        in: query
      - type: string
        x-go-name: FolderName
        description: Specifies the parent folder name of the email.
        name: folderName
        in: query
      - type: boolean
        x-go-name: ShowOnlyEmailFolders
        description: Specifies whether the query result should include only Email
          folders.
        name: showOnlyEmailFolders
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: DomainIds
        description: Specifies the domain Ids in which mailboxes are registered.
        name: domainIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: MailboxIds
        description: Specifies the mailbox Ids which contains the emails/folders.
        name: mailboxIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionJobIds
        description: |-
          Specifies the protection job Ids which have backed up mailbox(es)
          continaing emails/folders.
        name: protectionJobIds
        in: query
      - type: string
        x-go-name: TenantId
        description: TenantId specifies the tenant whose action resulted in the audit
          log.
        name: tenantId
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
          of tenant with id TenantId should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchRestoredFilesResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/office365/sharepoint/documents:
    get:
      description: |-
        Search for Sharepoint files and folder to recover that match the specified
        search and filter criterias on the Cohesity cluster.
      tags:
      - RestoreTasks
      summary: Returns the Sharepoint Site's files and folders.
      operationId: GetSharepointDocuments
      parameters:
      - type: string
        x-go-name: TenantId
        description: TenantId specifies the tenant whose action resulted in the audit
          log.
        name: tenantId
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
          of tenant with id TenantId should be returned.
        name: allUnderHierarchy
        in: query
      - type: string
        x-go-name: DocumentName
        description: Specifies the document(file/folder) name.
        name: documentName
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: DomainIds
        description: Specifies the domain Ids in which Sharepoint Site's are registered.
        name: domainIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: SiteIds
        description: Specifies the Office365 Sharepoint Site Id.
        name: siteIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionJobIds
        description: |-
          Specifies the protection job Ids which have backed up sites
          containing the documents.
        name: protectionJobIds
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchRestoredFilesResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/pointsForTimeRange:
    post:
      description: Returns the snapshots in the time range specified.
      tags:
      - RestoreTasks
      summary: List Restore Points in a give time range.
      operationId: GetRestorePointsForTimeRange
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RestorePointsForTimeRangeParam'
      responses:
        "201":
          $ref: '#/responses/GetRestorePointsForTimeRangeResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/recover:
    put:
      description: |-
        Updates an existing restore task with additional params which are needed for
        features like Hot-Standby.
      tags:
      - RestoreTasks
      operationId: UpdateRestoreTask
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateRestoreTaskParams'
      responses:
        "200":
          $ref: '#/responses/UpdateRestoreTaskResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Returns the created Restore Task. This operation returns the following
        types of Restore Tasks: 1) A Restore Task that recovers VMs back to the
        original location or a new location. 2) A Restore Task that mounts the
        volumes of a Server (such as a VM or Physical Server) onto the specified
        target system. The Snapshots of the Server that contains the volumes
        that are mounted is determined by Array of Objects.
        The content of the Server is available from the mount point
        for the Granular Level Recovery (GLR) of application data. For example
        recovering Microsoft Exchange data using Kroll Ontrack® PowerControls™.

        NOTE: Volumes are mounted "instantly" if the Snapshot is stored locally on the
        Cohesity Cluster. If the Snapshot is archival target, it will take longer
        because it must be retrieved.
      tags:
      - RestoreTasks
      summary: Create a Restore Task for recovering VMs or instantly mounting volumes.
      operationId: CreateRecoverTask
      parameters:
      - x-go-name: Body
        description: |-
          Request to create a Restore Task for recovering VMs or mounting
          volumes to mount points.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RecoverTaskRequest'
      responses:
        "201":
          $ref: '#/responses/CreateRecoverTaskResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/tasks:
    get:
      description: |-
        If no parameters are specified, all Restore Tasks found
        on the Cohesity Cluster are returned. Both running and completed
        Restore Tasks are reported.
        Specifying parameters filters the results that are returned.
      tags:
      - RestoreTasks
      summary: List the Restore Tasks filtered by the specified parameters.
      operationId: GetRestoreTasks
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: TaskIds
        description: Filter by a list of Restore Task ids.
        name: taskIds
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Filter by a start time specified as a Unix epoch Timestamp
          (in microseconds). All Restore Tasks (both completed and running)
          on the Cohesity Cluster that started after the specified start time
          but before the specified end time are returned.
          If not set, the start time is creation time of the Cohesity Cluster.
        name: startTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: |-
          Filter by an end time specified as a Unix epoch Timestamp
          (in microseconds). All Restore Tasks (both completed and running)
          on the Cohesity Cluster that started after the specified start time
          but before the specified end time are returned.
          If not set, the end time is the current time.
        name: endTimeUsecs
        in: query
      - type: integer
        format: int64
        x-go-name: PageCount
        description: |-
          Specifies the number of completed Restore Tasks to return in the response
          for pagination purposes. Running Restore Tasks are always returned.
          The newest completed Restore Tasks are returned.
        name: pageCount
        in: query
      - type: array
        items:
          type: string
        x-go-name: TaskTypes
        description: |-
          Filter by the types of Restore Tasks such as 'kRecoverVMs',
          'kCloneVMs', 'kCloneView' or 'kMountVolumes'.
        name: taskTypes
        in: query
      - enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        type: string
        x-go-name: Environment
        description: |-
          Specifies the environment like VMware, SQL, where the
          Protection Source exists.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        name: environment
        in: query
      responses:
        "200":
          $ref: '#/responses/GetRestoreTasksResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/tasks/cancel/{id}:
    put:
      tags:
      - RestoreTasks
      summary: Cancel a recover or clone task with specified id.
      operationId: CancelRestoreTask
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id for the Restore Task.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/SuccessResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/tasks/{id}:
    get:
      description: Returns the Restore Task corresponding to the specified Restore
        Task id.
      tags:
      - RestoreTasks
      summary: List details about a single Restore Task.
      operationId: GetRestoreTaskById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id for the Restore Task.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetRestoreTaskByIdResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/virtualDiskInformation:
    get:
      tags:
      - RestoreTasks
      summary: Fetches information of virtual disk.
      operationId: GetVirtualDiskInformation
      parameters:
      - type: integer
        format: int64
        x-go-name: ClusterId
        description: Specifies the Cohesity Cluster id where the Job was created.
        name: clusterId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        description: |-
          Specifies the incarnation id of the Cohesity Cluster where the Job was
          created.
        name: clusterIncarnationId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobId
        description: Specifies the id of the Job that captured the snapshot.
        name: jobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobRunId
        description: Specifies the id of the Job Run that captured the snapshot.
        name: jobRunId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: |-
          Specifies the start time of the job run as a Unix epoch Timestamp in
          microseconds.
        name: startTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: SourceId
        description: Specifies the Id of the Protection Source object.
        name: sourceId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: VaultId
        description: Specifies the Id of the vault where snapshot was taken.
        name: vaultId
        in: query
      - type: string
        x-go-name: VaultName
        description: Specifies the name of the vault where snapshot was taken.
        name: vaultName
        in: query
      - enum:
        - kCloud
        - kTape
        - kNas
        type: string
        x-go-name: VaultType
        description: Specifes the type of the vault where snapshot was taken.
        name: vaultType
        in: query
      responses:
        "200":
          $ref: '#/responses/GetVirtualDiskInformationResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/vms/directoryList:
    get:
      tags:
      - RestoreTasks
      summary: Get the directory list based on the given directory name and other
        query parameters.
      operationId: GetVmDirectoryList
      parameters:
      - type: integer
        format: int64
        x-go-name: JobId
        description: |-
          JobId is the id of the local job that took the snapshot, which may or
          may not match the JobUidObjectId below depending on whether the object
          originally belonged to this local job or to a different remote job.
        name: jobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobUidObjectId
        description: |-
          JobUidObjectId is the globally unique id of the job that the object
          originally belonged to. If this object originally belonged to a job from a
          remote cluster, this field will contain the JobId of the remote job, else
          it will contain the JobId of the local job.
        name: jobUidObjectId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EntityId
        description: EntityId is the Id of the VM.
        name: entityId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobInstanceId
        description: JobInstanceId is the Id of the job run that backed up the entity.
        name: jobInstanceId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobStartTimeUsecs
        description: |-
          JobStartTimeUsecs is the start time in usecs of the job run that backed up
          the entity.
        name: jobStartTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: AttemptNum
        description: |-
          AttemptNum is the attempt number of the run that successfully created the
          snapshot.
        name: attemptNum
        in: query
      - type: string
        x-go-name: VolumeName
        description: |-
          VolumeName is the name of the volume that needs to be browsed. This should
          match the name returned in VolumeInfo.
        name: volumeName
        in: query
      - type: integer
        format: int64
        x-go-name: ViewBoxId
        description: Id of the View Box if a View is being browsed.
        name: viewBoxId
        in: query
      - type: string
        x-go-name: ViewName
        description: Name of the View if a View is being browsed.
        name: viewName
        in: query
      - type: string
        x-go-name: DirPath
        description: DirPath is the full path of the directory whose contents need
          to be listed.
        name: dirPath
        in: query
        required: true
      - type: integer
        format: int32
        x-go-name: MaxEntries
        description: |-
          MaxEntries is the maximum number of entries to return in this call. If
          there are more entries, server will return a cookie in the response that
          can be used to continue enumeration from the last call.
        name: maxEntries
        in: query
      - type: integer
        format: uint64
        x-go-name: VolumeInfoCookie
        description: |-
          VolumeInfoCookie is the cookie to be passed in calls to reading a VM dir
          for this volume.
        name: volumeInfoCookie
        in: query
      - type: string
        x-go-name: Cookie
        description: |-
          Cookie is used for paginating results. If ReadDirResult returned partial
          results, it will also return a cookie that can be used to resume the
          listing. The value returned in ReadDirResult should be passed in the next
          call. The first call should not have this value set. Note that this value
          is only a suggestion and server is free to do a short read (return fewer
          entries along with a cookie).
        name: cookie
        in: query
      - type: boolean
        x-go-name: StatFileEntries
        description: StatFileEntries specifies whether file stat data is returned.
        name: statFileEntries
        in: query
      - type: boolean
        x-go-name: BrowseIndexedData
        description: Specifies whether to use indexed data in Librarian for browse.
        name: browseIndexedData
        in: query
      responses:
        "200":
          $ref: '#/responses/GetVmDirectoryListResponse'
        default:
          $ref: '#/responses/Error'
  /public/restore/vms/volumesInformation:
    get:
      description: |-
        All required fields must be specified for this operation.
        To get values for these fields, invoke the GET /public/restore/objects
        operation.
        A specific Job Run is defined by the jobRunId, startedTimeUsecs, and
        attemptNumber fields.
      tags:
      - RestoreTasks
      summary: Get information about the logical volumes found in a VM.
      operationId: GetVmVolumesInformation
      parameters:
      - type: integer
        format: int64
        x-go-name: JobId
        description: |-
          Specifies the Job id for the Protection Job that is currently
          associated with the object.
          If the object was backed up on current Cohesity Cluster, this field
          contains the id for the Job that captured this backup object.
          If the object was backed up on a Primary Cluster and
          replicated to this Cohesity Cluster, a new Inactive Job is created,
          the object is now associated with new Inactive Job, and this field
          contains the id of the new Inactive Job.
        name: jobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: ClusterId
        description: Specifies the Cohesity Cluster id where the Job was created.
        name: clusterId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        description: |-
          Specifies the incarnation id of the Cohesity Cluster where the Job
          was created.
          An incarnation id is generated when a Cohesity Cluster is initially
          created.
        name: clusterIncarnationId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: JobRunId
        description: Specifies the id of the Job Run that captured the snapshot.
        name: jobRunId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: StartedTimeUsecs
        description: |-
          Specifies the time when the Job Run starts capturing a snapshot.
          Specified as a Unix epoch Timestamp (in microseconds).
        name: startedTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: AttemptNumber
        description: |-
          Specifies the number of the attempts made by the Job Run
          to capture a snapshot of the object. For example, if an snapshot
          is successfully captured after three attempts, this field equals 3.
        name: attemptNumber
        in: query
      - type: integer
        format: int64
        x-go-name: SourceId
        description: Specifies the id of the VM object to search for volumes.
        name: sourceId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: OriginalJobId
        description: |-
          Specifies the id for the Protection Job that originally captured
          the snapshots of the original object. If the object was backed up
          on a Primary Cluster replicated to this Cohesity Cluster,
          and a new Inactive Job is created,
          this field still contains the id of the original Job and NOT the
          id of the new Inactive Job.
          This field is used in combination with the clusterId and
          clusterIncarnationId to uniquely identify a Job.
        name: originalJobId
        in: query
        required: true
      - type: boolean
        x-go-name: SupportedVolumesOnly
        description: |-
          Specifies to return only supported volumes information. Unsupported
          volumes are not returned if this flag is set to true.
          Default is false.
        name: supportedVolumesOnly
        in: query
      - type: boolean
        x-go-name: ComputeVolumeInfo
        description: |-
          Specifies whether to compute volume information if it is not found.
          If `ComputeVolumeInfo` is false and volume information is not found it
          skips computation of volume information and returns KNotFound.
        name: computeVolumeInfo
        in: query
      responses:
        "200":
          $ref: '#/responses/GetVmVolumesInformationResponse'
        default:
          $ref: '#/responses/Error'
  /public/roles:
    get:
      description: |-
        If the 'name' parameter is not specified, all roles defined on the
        Cohesity Cluster are returned. In addition, information about each role
        is returned such as the name, description, assigned privileges, etc.
        If an exact role name (such as COHESITY_VIEWER) is specified in the
        'name' parameter, only information about that single role is returned.
      tags:
      - Roles
      summary: List the roles defined on the Cohesity Cluster.
      operationId: GetRoles
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the name of the role.
        name: name
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetRolesResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Returns the new custom role that was created.
        A custom role is a user-defined role that is created using the REST API,
        the Cohesity Cluster or the CLI.
      tags:
      - Roles
      summary: Create a new custom role.
      operationId: CreateRole
      parameters:
      - x-go-name: Body
        description: Request to create a new custom Role.
        name: body
        in: body
        schema:
          $ref: '#/definitions/RoleCreateParameters'
      responses:
        "201":
          $ref: '#/responses/CreateRoleResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns Success if all the specified Roles are deleted.
      tags:
      - Roles
      summary: Delete one or more custom Roles.
      operationId: DeleteRoles
      parameters:
      - x-go-name: Body
        description: Request to delete one or more Roles.
        name: body
        in: body
        schema:
          $ref: '#/definitions/RoleDeleteParameters'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/roles/{name}:
    put:
      description: |-
        For example, you could update the privileges assigned to a Role.
        Returns the updated role.
      tags:
      - Roles
      summary: Update a user-defined custom role.
      operationId: UpdateRole
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the name of the role to update.
        name: name
        in: path
        required: true
      - x-go-name: Body
        description: Request to update a custom role.
        name: body
        in: body
        schema:
          $ref: '#/definitions/RoleUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateRoleResponse'
        default:
          $ref: '#/responses/Error'
  /public/routes:
    get:
      description: Returns the Static Routes for the Cohesity Cluster.
      tags:
      - Routes
      summary: List the Static Routes for the Cohesity Cluster.
      operationId: GetRoutes
      responses:
        "200":
          $ref: '#/responses/GetRoutesResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the create status upon completion.
      tags:
      - Routes
      summary: Create a Static Route on the Cohesity Cluster.
      operationId: AddRoute
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/Route'
      responses:
        "200":
          $ref: '#/responses/AddRouteResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns the delete status upon completion.
      tags:
      - Routes
      summary: Delete the specified Static Route from the Cohesity Cluster.
      operationId: DeleteRoute
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/DeleteRouteParam'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/scheduler:
    get:
      description: |-
        Returns all the email report scheduler jobs that are scheduled to run.
        An email report scheduler job generates a report with the specified parameters
        and sends that report to the specified email accounts according to the defined
        schedule.
      tags:
      - Scheduler
      summary: List the email report schedule jobs that are scheduled to run.
      operationId: GetSchedulerJobs
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: Ids
        description: Specifies ids of scheduler jobs to fetch.
        name: ids
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      responses:
        "200":
          $ref: '#/responses/GetSchedulerJobsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated email report scheduler job.
      tags:
      - Scheduler
      summary: Update an existing email report schedule job.
      operationId: UpdateSchedulerJob
      parameters:
      - x-go-name: Body
        description: Update Job Parameter.
        name: body
        in: body
        schema:
          $ref: '#/definitions/SchedulerProto_SchedulerJob'
      responses:
        "200":
          $ref: '#/responses/UpdateSchedulerJobResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Returns the created email report scheduler job.
        An email report scheduler job generates a report with the specified parameters
        and sends that report to the specified email accounts according to the defined
        schedule.
        This operation may also be used to send a report once (with no schedule),
        by setting the EnableRecurring field to false.
      tags:
      - Scheduler
      summary: Create an email report scheduler job.
      operationId: CreateSchedulerJob
      parameters:
      - x-go-name: Body
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/SchedulerProto_SchedulerJob'
      responses:
        "200":
          $ref: '#/responses/EmailReportResponse'
        "201":
          $ref: '#/responses/CreateSchedulerJobResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Specify a list of email report schedule job ids to unschedule and
        delete.
      tags:
      - Scheduler
      summary: Delete one or more email report schedule jobs.
      operationId: DeleteSchedulerJobs
      parameters:
      - x-go-name: Ids
        description: Array of ids
        name: ids
        in: body
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/search/protectionRuns:
    get:
      description: |-
        Returns the information of latest snapshot of a particular object across
        all snapshot target locations.
      tags:
      - Search
      operationId: SearchProtectionRuns
      parameters:
      - type: string
        x-go-name: Uuid
        description: Specifies the unique id of the Protection Source.
        name: uuid
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/SearchProtectionRunsResponse'
        default:
          $ref: '#/responses/Error'
  /public/search/protectionSources:
    get:
      description: Returns list of all the objects along with the protection status
        information.
      tags:
      - Search
      summary: Performs search on all the objects which are registered to a cluster.
      operationId: SearchProtectionSources
      parameters:
      - type: array
        items:
          enum:
          - kDomain
          - kOutlook
          - kMailbox
          - kUsers
          - kGroups
          - kSites
          - kUser
          - kGroup
          - kSite
          type: string
        x-go-name: Office365ProtectionSourceTypes
        description: |-
          Specifies the Array of Office365 source types.
          Specifies the type of Office 365 entity
          'kDomain' indicates the O365 domain through which authentication occurs.
          'kOutlook' indicates the Exchange online entities.
          'kMailbox' indicates the user's mailbox account.
          'kUsers' indicates the container for User entities.
          'kGroups' indicates the container for Group entities.
          'kSites' indicates the container for Site entities.
          'kUser' indicates an Office365 User entity.
          'kGroup' indicates an Office365 Group entity.
          'kSite' indicates an Office365 SharePoint Site entity.
        name: office365ProtectionSourceTypes
        in: query
      - type: array
        items:
          type: string
        x-go-name: DepartmentList
        description: Specifies the list of departments to which an Office365 user
          may belong.
        name: departmentList
        in: query
      - type: array
        items:
          type: string
        x-go-name: TitleList
        description: Specifies the list of titles/desgination applicable to Office365
          users.
        name: titleList
        in: query
      - type: array
        items:
          type: string
        x-go-name: CountryList
        description: Specifies the list of countries to which Office365 user belongs.
        name: countryList
        in: query
      - type: string
        x-go-name: SearchString
        description: |-
          Specifies the search string to query the name of the Protection Source or
          the name of the job protecting a Protection Source.
        name: searchString
        in: query
      - type: array
        items:
          type: string
        x-go-name: ProtectionStatus
        description: |-
          Specifies the protection status of the object. If specified, the objects
          are filtered based on current protection status of that object on the
          cluster. Possible values that can be passed are "protected", "unprotected"
          or both. If not specified, all the objects are returned irrespective of
          protection status of the object.
        name: protectionStatus
        in: query
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kAzureNative
          - kKubernetes
          - kElastifile
          - kAD
          - kRDSSnapshotManager
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
          type: string
        x-go-name: Environments
        description: |-
          Specifies the environment type by which Protection Sources will be
          filtered.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        name: environments
        in: query
      - type: array
        items:
          type: integer
          format: int32
        x-go-name: LastProtectionJobRunStatus
        description: |-
          Specifies the last Protection Job run status of the object. If specified,
          objects will be filtered based on last job run status.
        name: lastProtectionJobRunStatus
        in: query
      - type: array
        items:
          enum:
          - kLinux
          - kWindows
          - kAix
          - kSolaris
          - kSapHana
          - kOther
          type: string
        x-go-name: PhysicalServerHostTypes
        description: |-
          Specifies physical server host OS type. If specified, the physical server
          objects will be filtered based on OS type of the server.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        name: physicalServerHostTypes
        in: query
      - type: array
        items:
          type: string
        x-go-name: RegisteredSourceUuids
        description: |-
          Specifies the list of Registered Sources Uuids. Only items from the listed
          Registered Sources are returned.
        name: registeredSourceUuids
        in: query
      - type: integer
        format: int32
        x-go-name: StartIndex
        description: |-
          Specifies an index number that can be used to return subsets of items
          in multiple requests.
          Break up the items to return into multiple requests by setting pageCount
          and using startIndex to return a subsets of items.

          For example, set startIndex to 0 to get the first set of items
          for the first request. Increment startIndex by pageCount
          to get the next set of items for a next request.
        name: startIndex
        in: query
      - type: integer
        format: int32
        x-go-name: PageCount
        description: |-
          Specifies the number of items to return in the response for pagination
          purposes. Default the pageCount to MaxSearchResponseSize if this is
          unspecified.
        name: pageCount
        in: query
      responses:
        "200":
          $ref: '#/responses/SearchProtectionSourcesResponse'
        default:
          $ref: '#/responses/Error'
  /public/sessionUser:
    get:
      tags:
      - Principals
      summary: Get the information of the logged in user.
      operationId: GetSessionUser
      responses:
        "200":
          $ref: '#/responses/GetSessionUserResponse'
        default:
          $ref: '#/responses/Error'
  /public/sessionUser/notifications:
    get:
      tags:
      - Notifications
      summary: List the notification of the session user.
      operationId: GetNotifications
      parameters:
      - x-go-name: Count
        name: count
        in: body
        schema:
          type: integer
          format: int64
      responses:
        "200":
          $ref: '#/responses/GetNotificationsResponse'
        default:
          $ref: '#/responses/Error'
    patch:
      description: Returns success or failure.
      tags:
      - Notifications
      summary: Perform operations on the notification of the session user.
      operationId: UpdateNotifications
      parameters:
      - x-go-name: Body
        description: Specifies the list of notificationIds and the operation to be
          performed.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateNotifications'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/sessionUser/preferences:
    get:
      tags:
      - Preferences
      summary: List the preferences of the session user.
      operationId: GetUserPreferences
      responses:
        "200":
          $ref: '#/responses/UserPreferencesResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated user preferences.
      tags:
      - Preferences
      summary: Update the preferences of the session user
      operationId: UpdateUserPreferences
      parameters:
      - x-go-name: Preferences
        description: Request to create or update User Preferences.
        name: preferences
        in: body
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          $ref: '#/responses/UserPreferencesResponse'
        default:
          $ref: '#/responses/Error'
    patch:
      description: Returns the updated user preferences.
      tags:
      - Preferences
      summary: Update specific preferences of the session user
      operationId: PatchUserPreferences
      parameters:
      - x-go-name: Preferences
        description: Request to create or update User Preferences.
        name: preferences
        in: body
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          $ref: '#/responses/UserPreferencesResponse'
        default:
          $ref: '#/responses/Error'
  /public/shares:
    get:
      description: |-
        If no parameters are specified, all shares on the Cohesity Cluster are
        returned. Specifying share name/prefix filters the results that are returned.
        NOTE: If maxCount is set and the number of Views returned exceeds the maxCount,
        there are more Views to return.
        To get the next set of Views, send another request and specify the pagination
        cookie from the previous response.
      tags:
      - Views
      summary: List shares filtered by name.
      operationId: GetViewsByShareName
      parameters:
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      - type: string
        x-go-name: ShareName
        description: |-
          The share name(substring) that needs to be searched against existing views
          and aliases.
        name: shareName
        in: query
      - type: integer
        format: int32
        x-go-name: MaxCount
        description: Specifies a limit on the number of Views returned.
        name: maxCount
        in: query
      - type: string
        x-go-name: PaginationCookie
        description: |-
          Expected to be empty in the first call to GetViewsByShareName.
          To get the next set of results, set this value to the pagination cookie
          value returned  in the response of the previous call.
        name: paginationCookie
        in: query
      - type: boolean
        x-go-name: MatchPartialNames
        description: |-
          If true, the names in viewNames are matched by prefix rather than
          exactly matched.
        name: matchPartialNames
        in: query
      responses:
        "200":
          $ref: '#/responses/GetViewsByShareNameResponse'
        default:
          $ref: '#/responses/Error'
  /public/smbConnections:
    get:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Fetches Smb Connection Status of a view.
      operationId: GetSmbConnections
      parameters:
      - type: array
        items:
          type: string
        x-go-name: ViewNames
        description: |-
          Parameters to get Smb Connections.
          List of names of views whose connections are to be fetched.
        name: viewNames
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewIds
        description: List of ids of views whose connections are to be fetched.
        name: viewIds
        in: query
      - type: integer
        format: int32
        x-go-name: MaxCount
        description: Maximum number of results to return.
        name: maxCount
        in: query
      - type: boolean
        x-go-name: IncludeSid
        description: Specifies whether to include list of sids in the result.
        name: includeSid
        in: query
      responses:
        "200":
          $ref: '#/responses/GetSmbConnectionsResponse'
        default:
          $ref: '#/responses/Error'
  /public/smbFileOpens:
    get:
      description: |-
        If no parameters are specified, all active SMB file opens currently on the
        Cohesity Cluster are returned. Specifying parameters filters the results that
        are returned.
      tags:
      - SMBFileOpens
      summary: |-
        List the active SMB file opens that match the filter criteria specified using
        parameters.
      operationId: GetSmbFileOpens
      parameters:
      - type: string
        x-go-name: FilePath
        description: |-
          Specifies the filepath in the view relative to the root filesystem.
          If this field is specified, viewName field must also be specified.
        name: filePath
        in: query
      - type: string
        x-go-name: ViewName
        description: |-
          Specifies the name of the View in which to search. If a view name is not
          specified, all the views in the Cluster is searched.
          This field is mandatory if filePath field is specified.
        name: viewName
        in: query
      - type: integer
        format: int32
        x-go-name: PageCount
        description: |-
          Specifies the maximum number of active opens to return in the response.
          This field cannot be set above 1000. If this is not set, maximum of 1000
          entries are returned.
        name: pageCount
        in: query
      - type: string
        x-go-name: Cookie
        description: |-
          Specifies the opaque string returned in the previous response.
          If this is set, next set of active opens just after the previous
          response are returned. If this is not set, first set of active opens
          are returned.
        name: cookie
        in: query
      responses:
        "200":
          $ref: '#/responses/GetSmbFileOpensResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns nothing upon success.
      tags:
      - SMBFileOpens
      summary: Closes an active SMB file open.
      operationId: CloseSmbFileOpen
      parameters:
      - x-go-name: Body
        description: Request to close an active SMB file open.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CloseSmbFileOpenParameters'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/statistics/entities:
    get:
      description: |-
        An entity is an object found on the Cohesity Cluster, such as a disk or a
        Node.
        In the Cohesity Dashboard, similar functionality is provided in Advanced
        Diagnostics.
      tags:
      - Statistics
      summary: Lists the entities for the specified schema.
      operationId: GetEntities
      parameters:
      - type: string
        x-go-name: SchemaName
        description: Specifies the entity schema to search for entities.
        name: schemaName
        in: query
        required: true
      - type: boolean
        x-go-name: IncludeAggrMetricSources
        description: |-
          Specifies whether to include the sources of aggregate metrics of an
          entity.
        name: includeAggrMetricSources
        in: query
      - type: array
        items:
          type: string
        x-go-name: MetricNames
        description: |-
          Specifies the list of metric names to return such as 'kRandomIos'
          which corresponds to 'Random IOs' in Advanced Diagnostics
          of the Cohesity Dashboard.
        name: metricNames
        in: query
      - type: integer
        format: int32
        x-go-name: MaxEntities
        description: |-
          Specifies the maximum entities returned in the result.
          By default this field is 500.
        name: maxEntities
        in: query
      responses:
        "200":
          $ref: '#/responses/GetEntitiesResponse'
        default:
          $ref: '#/responses/Error'
  /public/statistics/entitiesSchema:
    get:
      description: |-
        An entity schema specifies the meta-data associated with entity such as
        the list of attributes and a time series of data.
        For example, for a Disk entity, the entity schema specifies the Node that is
        using this Disk, the type of the Disk, and Metrics about the Disk such as Space
        Usage, Read IOs and Write IOs. Metrics define data points (time series data)
        to track over a period of time for a specific interval.
        If no parameters are specified, all entity schemas found on the Cohesity
        Cluster are returned.
        Specifying parameters filters the results that are returned.
        In the Cohesity Dashboard, similar functionality is provided in Advanced
        Diagnostics.
      tags:
      - Statistics
      summary: List the entity schemas filtered by the specified parameters.
      operationId: GetEntitiesSchema
      parameters:
      - type: array
        items:
          type: string
        x-go-name: SchemaNames
        description: |-
          Specifies the list of schema names to filter by such as
          'kIceboxJobVaultStats' which corresponds to 'External Target Job Stats'
          in Advanced Diagnostics of the Cohesity Dashboard.
        name: schemaNames
        in: query
      - type: array
        items:
          type: string
        x-go-name: MetricNames
        description: |-
          Specifies the list of metric names to filter by such as 'kRandomIos'
          which corresponds to 'Random IOs' in Advanced Diagnostics
          of the Cohesity Dashboard.
        name: metricNames
        in: query
      responses:
        "200":
          $ref: '#/responses/GetEntitiesSchemaResponse'
        default:
          $ref: '#/responses/Error'
  /public/statistics/entitiesSchema/{schemaName}:
    get:
      description: |-
        An entity schema specifies the meta-data associated with entity such as the
        list of attributes and a time series of data.
        For example, for a Disk entity, the entity schema specifies the Node that is
        using this Disk, the type of the Disk, and Metrics about the Disk such as
        Space Usage, Read IOs and Write IOs. Metrics define data points (time series
        data) to track over a period of time for a specific interval.
        In the Cohesity Dashboard, similar functionality is provided in Advanced
        Diagnostics.
      tags:
      - Statistics
      summary: Get the entity schema for the specified schema.
      operationId: GetEntitySchemaByName
      parameters:
      - type: string
        x-go-name: SchemaName
        description: Name of the Schema
        name: schemaName
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetEntitySchemaByNameResponse'
        default:
          $ref: '#/responses/Error'
  /public/statistics/timeSeriesSchema:
    get:
      description: |-
        Gets the Apollo schema information for an entity to list a series of data
        points.
      tags:
      - Statistics
      operationId: GetTimeSeriesSchema
      parameters:
      - enum:
        - Cluster
        - StorageDomain
        type: string
        x-go-name: EntityType
        description: |-
          Specifies the type of the entity.
          The following entity types are available:
          cluster, viewbox.
          EntityType represents the various values for the entity type.
          'Cluster' indicates entity type of Cluster.
          'StorageDomain' indicates entity type of Storage Domain.
        name: entityType
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EntityId
        description: Specifies the id of the entity.
        name: entityId
        in: query
        required: true
      - type: string
        x-go-name: EntityName
        description: Specifies the name of the entity.
        name: entityName
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetTimeSeriesSchemaResponse'
        default:
          $ref: '#/responses/Error'
  /public/statistics/timeSeriesStats:
    get:
      description: |-
        A Metric specifies a data point (such as CPU usage and IOPS) to track over a
        period of time.
        For example for a disk in the Cluster, you can report on the 'Disk Health'
        (kDiskAwaitTimeMsecs) Metric of the 'Disk Health Metrics' (kSentryDiskStats)
        Schema for the last week.
        You must specify the 'k' names as input and not the descriptive names.
        You must also specify the id of the entity that you are reporting on such as
        a Cluster, disk drive, job, etc.
        Get the entityId by running the GET /public/statistics/entities operation.
        In the Cohesity Dashboard, similar functionality is provided in Advanced
        Diagnostics.
      tags:
      - Statistics
      summary: |-
        List a series of data points for an entity of a metric in a schema,
        during the specified time period.
      operationId: GetTimeSeriesStats
      parameters:
      - type: string
        x-go-name: SchemaName
        description: Specifies the name of entity schema such as 'kIceboxJobVaultStats'.
        name: schemaName
        in: query
        required: true
      - type: string
        x-go-name: EntityId
        description: |-
          Specifies the id of the entity represented as a string.
          Get the entityId by running the GET
          public/statistics/entities operation.
        name: entityId
        in: query
      - type: array
        items:
          type: string
        x-go-name: EntityIdList
        description: |-
          Specifies an entity id list represented as a string. The stats result will
          be the sum over all these entities. If both EntityIdList and EntityId are
          specified, EntityId will be ignored.
        name: entityIdList
        in: query
      - type: string
        x-go-name: MetricName
        description: |-
          Specifies the name of the metric such as the 'kDiskAwaitTimeMsecs'
          which is displayed as 'Disk Health' in Advanced Diagnostics
          of the Cohesity Dashboard.
        name: metricName
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: StartTimeMsecs
        description: |-
          Specifies the start time for the series of metric data.
          Specify the start time as a Unix epoch Timestamp (in milliseconds).
        name: startTimeMsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EndTimeMsecs
        description: |-
          Specifies the end time for the series of metric data.
          Specify the end time as a Unix epoch Timestamp (in milliseconds).
          If not specified, the data points up to the current time are returned.
        name: endTimeMsecs
        in: query
      - type: string
        x-go-name: RollupFunction
        description: |-
          Specifies the rollup function to apply to the data points for
          the time interval specified by rollupInternalSecs.
          The following rollup functions are available:
          sum, average, count, max, min, median, percentile95, latest,
          and rate. For more information about the functions, see the
          Advanced Diagnostics in the Cohesity online help.
          If not specified, raw data is returned.
        name: rollupFunction
        in: query
      - type: integer
        format: int32
        x-go-name: RollupIntervalSecs
        description: |-
          Specifies the time interval granularity (in seconds)
          for the specified rollup function.
          Only specify a value if Rollup function is also specified.
        name: rollupIntervalSecs
        in: query
      responses:
        "200":
          $ref: '#/responses/GetTimeSeriesStatsResponse'
        default:
          $ref: '#/responses/Error'
  /public/stats/alerts:
    get:
      description: Compute the statistics on the active Alerts generated on the cluster
        based on the provided time interval.
      tags:
      - Stats
      summary: Compute the statistics on the active Alerts generated on the cluster.
      operationId: GetActiveAlertsStats
      parameters:
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: Specifies the start time Unix time epoch in microseconds from
          which the active alerts stats are computed.
        name: startTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: Specifies the end time Unix time epoch in microseconds to which
          the active alerts stats are computed.
        name: endTimeUsecs
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetActiveAlertsStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/consumers:
    get:
      tags:
      - Stats
      summary: Gets the statistics of consumers.
      operationId: GetConsumerStats
      parameters:
      - enum:
        - kViews
        - kProtectionRuns
        - kReplicationRuns
        - kViewProtectionRuns
        type: string
        x-go-name: ConsumerType
        description: |-
          Specifies the consumer type.
          Type of the consumer can be one of the following three,

          'kViews', indicates the stats info of Views used per organization (tenant)
          per view box (storage domain).
          'kProtectionRuns', indicates the stats info of Protection Runs used per
          organization (tenant) per view box (storage domain).
          'kReplicationRuns', indicates the stats info of Replication In used per
          organization (tenant) per view box (storage domain).
          'kViewProtectionRuns', indicates the stats info of View Protection Runs used
          per organization (tenant) per view box (storage domain).
        name: consumerType
        in: query
      - type: integer
        format: int64
        x-go-name: MaxCount
        description: Specifies a limit on the number of stats groups returned.
        name: maxCount
        in: query
      - type: string
        x-go-name: Cookie
        description: |-
          Specifies the opaque string returned in the previous response.
          If this is set, next set of active opens just after the previous
          response are returned. If this is not set, first set of active opens
          are returned.
        name: cookie
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ConsumerIdList
        description: Specifies a list of consumer ids.
        name: consumerIdList
        in: query
      - type: array
        items:
          type: string
        x-go-name: ConsumerEntityIdList
        description: |-
          Specifies a list of consumer entity ids. If this field is specified, each
          entity id must corresponds to the id in 'ConsumerIdList' in the same
          index, and the length of 'ConsumerEntityIdList' and 'ConsumerIdList' must
          be the same.
        name: consumerEntityIdList
        in: query
      - type: boolean
        x-go-name: FetchViewBoxName
        description: |-
          Specifies whether to fetch view box (storage domain) name for each
          consumer.
        name: fetchViewBoxName
        in: query
      - type: boolean
        x-go-name: FetchTenantName
        description: Specifies whether to fetch tenant (organization) name for each
          consumer.
        name: fetchTenantName
        in: query
      - type: boolean
        x-go-name: FetchProtectionPolicy
        description: |-
          Specifies whether to fetch protection policy for each consumer. This field
          is applicable only if 'consumerType' is 'kProtectionRuns' or
          'kReplicationRuns'.
        name: fetchProtectionPolicy
        in: query
      - type: boolean
        x-go-name: FetchProtectionEnvironment
        description: |-
          Specifies whether to fetch protection environment for each consumer. This
          field is applicable only if 'consumerType' is 'kProtectionRuns' or
          'kReplicationRuns'.
        name: fetchProtectionEnvironment
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxesIdList
        description: Specifies a list of view boxes (storage domain) id.
        name: viewBoxesIdList
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantsIdList
        description: Specifies a list of organizations (tenant) id.
        name: organizationsIdList
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          Specifies a list of organizations (tenant) id. This field is added to
          allow tenantIds json tag. This list will be concatenated with
          TenantsIdList to form full list of tenantsIdList.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: IncludeServiceProvider
        description: |-
          Specifies whether to fetch the consumption of external service providers.
          These information will be listed as a unique organization (tenant) in
          response. By default it is false.
        name: includeServiceProvider
        in: query
      responses:
        "200":
          $ref: '#/responses/GetConsumerStatsResponse'
        default:
          $ref: '#/responses/Error'
  /public/stats/files:
    get:
      description: Compute the file distribution statistics on a given entity like
        cluster or storage domain.
      tags:
      - Stats
      summary: Compute the file distribution statistics on a given entity like cluster
        or storage domain.
      operationId: GetFileDistributionStats
      parameters:
      - enum:
        - kCluster
        - kStorageDomain
        type: string
        x-go-name: EntityType
        description: Specifies the entity type on which file distribution stats are
          computed.
        name: entityType
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetFileDistributionStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/protectionRuns:
    get:
      description: Compute the statistics of the Protection Runs based on the input
        filters. This endpoint provides a snapshot of count of Protection Runs of
        a specified status on a specified time interval.
      tags:
      - Stats
      summary: Compute the statistics on the Protection Runs for the cluster.
      operationId: GetProtectionRunsStats
      parameters:
      - enum:
        - kSuccess
        - kFailure
        - kCanceled
        - kWarning
        type: string
        x-go-name: Status
        description: Specifies the Protection Run status for which stats has to be
          computed.
        name: status
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: Specifies the start time in Unix timestamp epoch in microseconds
          where the end time of the Protection Run is greater than the specified value.
        name: startTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: Specifies the end time in Unix timestamp epoch in microseconds
          where the end time of the Protection Run is lesser than the specified value.
        name: endTimeUsecs
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetProtectionRunsStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/protectionRuns/lastRun:
    get:
      description: Compute stats on last Protection Run for every job.
      tags:
      - Stats
      summary: Compute stats on last Protection Run for every job.
      operationId: GetLastProtectionRunStats
      responses:
        "200":
          $ref: '#/responses/GetLastProtectionRunStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/protectionSummary:
    get:
      description: Computes the protected objects summary on the cluster.
      tags:
      - Stats
      summary: Computes the protected objects summary on the cluster.
      operationId: GetProtectedObjectsSummary
      parameters:
      - type: array
        items:
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kVCD
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kAzureNative
          - kAD
          - kAWSSnapshotManager
          type: string
        x-go-name: ExcludeTypes
        description: Specifies the environment types to exclude.
        name: excludeTypes
        in: query
      responses:
        "200":
          $ref: '#/responses/GetProtectedObjectsSummaryResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/restores:
    get:
      description: Compute the statistics on the Restore tasks on the cluster based
        on the provided time interval.
      tags:
      - Stats
      summary: Compute the statistics on the Restore tasks on the cluster.
      operationId: GetRestoreStats
      parameters:
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: Specifies the start time Unix time epoch in microseconds from
          which the restore stats are computed.
        name: startTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: Specifies the end time Unix time epoch in microseconds to which
          the restore stats are computed.
        name: endTimeUsecs
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetRestoreStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/storage:
    get:
      description: Computes the storage stats on the cluster.
      tags:
      - Stats
      summary: Computes the storage stats on the cluster.
      operationId: GetStorageStats
      responses:
        "200":
          $ref: '#/responses/GetStorageStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/tenants:
    get:
      tags:
      - Stats
      summary: Gets the statistics of organizations (tenant).
      operationId: GetTenantStats
      parameters:
      - enum:
        - kViews
        - kProtectionRuns
        - kReplicationRuns
        - kViewProtectionRuns
        type: string
        x-go-name: ConsumerType
        description: |-
          Specifies the consumer type.
          Type of the consumer can be one of the following three,

          'kViews', indicates the stats info of Views used per organization (tenant)
          per view box (storage domain).
          'kProtectionRuns', indicates the stats info of Protection Runs used per
          organization (tenant) per view box (storage domain).
          'kReplicationRuns', indicates the stats info of Replication In used per
          organization (tenant) per view box (storage domain).
          'kViewProtectionRuns', indicates the stats info of View Protection Runs used
          per organization (tenant) per view box (storage domain).
        name: consumerType
        in: query
      - type: boolean
        x-go-name: SkipGroupByTenant
        description: |-
          Specifies if we should skip grouping by tenant. If false, and tenant has
          multiple storage domains, then the stats for the storage domains will be
          aggregated. If true, then the response will return each storage domain
          cross tenant independently.
        name: skipGroupByTenant
        in: query
      - type: integer
        format: int64
        x-go-name: MaxCount
        description: Specifies a limit on the number of stats groups returned.
        name: maxCount
        in: query
      - type: string
        x-go-name: Cookie
        description: |-
          Specifies the opaque string returned in the previous response.
          If this is set, next set of active opens just after the previous
          response are returned. If this is not set, first set of active opens
          are returned.
        name: cookie
        in: query
      - type: string
        x-go-name: OutputFormat
        description: |-
          Specifies what format to return the data in. Defaults to proto, but can
          select other options like csv.
        name: outputFormat
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxesIdList
        description: Specifies a list of view boxes (storage domain) id.
        name: viewBoxesIdList
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantsIdList
        description: Specifies a list of organizations (tenant) id.
        name: organizationsIdList
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          Specifies a list of organizations (tenant) id. This field is added to
          allow tenantIds json tag. This list will be concatenated with
          TenantsIdList to form full list of tenantsIdList.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: IncludeServiceProvider
        description: |-
          Specifies whether to fetch the consumption of external service providers.
          These information will be listed as a unique organization (tenant) in
          response. By default it is false.
        name: includeServiceProvider
        in: query
      responses:
        "200":
          $ref: '#/responses/GetTenantStatsResponse'
        default:
          $ref: '#/responses/Error'
  /public/stats/vaults:
    get:
      description: Compute the statistics on vaults.
      tags:
      - Stats
      summary: Compute the statistics on vaults.
      operationId: GetVaultStats
      responses:
        "200":
          $ref: '#/responses/GetVaultStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/vaults/providers:
    get:
      description: Compute the size and count of entities on vaults.
      tags:
      - Stats
      summary: Compute the size and count of entities on vaults.
      operationId: GetVaultProviderStats
      parameters:
      - enum:
        - kArchived
        - kRestored
        type: string
        x-go-name: RunType
        description: Specifies the type of the runs.
        name: runType
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetVaultProviderStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/vaults/runs:
    get:
      description: Compute the statistics on protection runs to or from a vault and
        return a trend line of the result.
      tags:
      - Stats
      summary: Compute the statistics on protection runs to or from a vault.
      operationId: GetVaultRunStats
      parameters:
      - enum:
        - kArchive
        - kRestore
        - kCloudSpin
        type: string
        x-go-name: RunType
        description: Specifies the type of the run.
        name: runType
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: StartTimeUsecs
        description: Specifies the start time Unix time epoch in microseconds from
          which the vault run stats are computed.
        name: startTimeUsecs
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: EndTimeUsecs
        description: Specifies the end time Unix time epoch in microseconds to which
          the vault run stats are computed.
        name: endTimeUsecs
        in: query
        required: true
      - enum:
        - kHour
        - kDay
        - kWeek
        type: string
        x-go-name: Interval
        description: Specifies the interval by which runs will be grouped together
          in the returned trend line.
        name: interval
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetVaultRunStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/viewBoxes:
    get:
      tags:
      - Stats
      summary: Gets the statistics of view boxes (storage domain).
      operationId: GetViewBoxStats
      parameters:
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxesIdList
        description: Specifies a list of view boxes (storage domain) id.
        name: viewBoxesIdList
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantsIdList
        description: Specifies a list of organizations (tenant) id.
        name: organizationsIdList
        in: query
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          Specifies a list of organizations (tenant) id. This field is added to
          allow tenantIds json tag. This list will be concatenated with
          TenantsIdList to form full list of tenantsIdList.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: IncludeServiceProvider
        description: |-
          Specifies whether to fetch the consumption of external service providers.
          These information will be listed as a unique organization (tenant) in
          response. By default it is false.
        name: includeServiceProvider
        in: query
      responses:
        "200":
          $ref: '#/responses/GetViewBoxStatsResponse'
        default:
          $ref: '#/responses/Error'
  /public/stats/views:
    get:
      description: Compute the statistics on Views.
      tags:
      - Stats
      summary: Compute the statistics on Views.
      operationId: GetViewStats
      parameters:
      - enum:
        - kSystemUsageBytes
        - kChunkBytesPhysical
        - kNumBytesWritten
        - kNumBytesRead
        - kPeakReadThroughput
        - kPeakWriteThroughput
        type: string
        x-go-name: Metric
        x-nullable: true
        description: Specifies the metric to which stats has to be sorted.
        name: metric
        in: query
      - minimum: 1
        type: integer
        format: int64
        x-go-name: NumTopViews
        x-nullable: true
        description: Specifies the number of views for which stats has to be computed.
          Specifying this field will return the Views sorted in the descending order
          on the metric specified. If specified, minimum value is 1. If not specified,
          all views will be returned. If metric is not specified, this parameter must
          also not be specified.
        name: numTopViews
        in: query
      responses:
        "200":
          $ref: '#/responses/GetViewStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/stats/views/protocols:
    get:
      description: Compute the protocol statistics on Views.
      tags:
      - Stats
      summary: Compute the protocol statistics on Views.
      operationId: GetViewProtocolStats
      responses:
        "200":
          $ref: '#/responses/GetViewProtocolStatsResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /public/tags/apply:
    put:
      description: Returns No Error if tagging done properly
      tags:
      - Tags
      summary: Apply Tags on existing objects in the Cohesity Cluster.
      operationId: ApplyTags
      parameters:
      - x-go-name: Body
        description: Request to add or update document tags.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TagsOperationParameters'
      responses:
        "200":
          $ref: '#/responses/TagsOperationResponse'
        default:
          $ref: '#/responses/Error'
  /public/tags/remove:
    put:
      description: Returns No Error if tagging done properly
      tags:
      - Tags
      summary: Remove Tags on existing objects in the Cohesity Cluster.
      operationId: RemoveTags
      parameters:
      - x-go-name: Body
        description: Request to add or update document tags.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TagsOperationParameters'
      responses:
        "200":
          $ref: '#/responses/TagsOperationResponse'
        default:
          $ref: '#/responses/Error'
  /public/tasks/status:
    get:
      tags:
      - Statistics
      summary: Gets the progress and status of tasks.
      operationId: GetTasks
      parameters:
      - type: array
        items:
          type: string
        x-go-name: TaskPaths
        description: |-
          Specifies a list of tasks path by which to filter the results. Otherwise
          all of the tasks will be returned.
        name: taskPaths
        in: query
      - type: boolean
        x-go-name: IncludeFinishedTasks
        description: |-
          Specifies whether or not to include finished tasks. By default,
          Pulse will only include unfinished tasks.
        name: includeFinishedTasks
        in: query
      - type: integer
        format: int64
        x-go-name: StartTimeSeconds
        description: |-
          Specifies a start time by which to filter tasks. Including a value
          here will result in tasks only being included if they started after
          the time specified.
        name: startTimeSeconds
        in: query
      - type: integer
        format: int64
        x-go-name: EndTimeSeconds
        description: |-
          Specifies an end time by which to filter tasks. Including a value
          here will result in tasks only being included if the ended before
          this time.
        name: endTimeSeconds
        in: query
      - type: integer
        format: int32
        x-go-name: MaxTasks
        description: Specifies the maximum number of tasks to display. Defaults to
          100.
        name: maxTasks
        in: query
      - type: boolean
        x-go-name: ExcludeSubTasks
        description: |-
          Specifies whether or not to include subtasks. By default all subtasks
          of any task matching a query will be returned.
        name: excludeSubTasks
        in: query
      - type: array
        items:
          type: string
        x-go-name: Attributes
        description: |-
          If specified, tasks matching the current query are further filtered by
          these KeyValuePairs. This gives client an ability to search by custom
          attributes that they specified during the task creation. Only the Tasks
          having 'all' of the specified key=value pairs will be returned.
          Attributes passed in should be separated by commas and each must follow
          the pattern "name:type:value". Valid types are "kInt64", "kDouble",
          "kString", and "kBytes".
        name: attributes
        in: query
      responses:
        "200":
          $ref: '#/responses/GetTasksResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants:
    get:
      description: Returns the list of tenants.
      tags:
      - Tenant
      summary: |-
        List the tenants on the cohesity cluster filtered by tenant ID prefixed to list
        tenants for the respective tenant admin.
      operationId: GetTenants
      parameters:
      - type: array
        items:
          type: string
        x-go-name: Ids
        name: ids
        in: query
      - type: array
        items:
          enum:
          - ViewBox
          - Vlan
          - ProtectionPolicy
          - Entity
          - ProtectionJob
          - Views
          - ActiveDirectory
          - LdapProvider
          - SwiftConfig
          type: string
        x-go-name: Properties
        description: |-
          'ViewBox' indicates view box data for tenant.
          'Vlan' indicates vlan data for tenant.
          'ProtectionPolicy' indicates protection policy for tenant.
          'ProtectionJob' indicates protection job for tenant.
          'Entity' indicates entity data for tenant.
          'Views' indicates view data for tenant.
          'ActiveDirectory' indicates active directory for tenant.
          'LdapProvider' indicates ldap provider for tenant.
          'SwiftConfig' indicates Swift configuration for tenant.
        name: properties
        in: query
      - type: boolean
        x-go-name: Hierarchy
        name: hierarchy
        in: query
      - type: boolean
        x-go-name: IncludeSelf
        name: includeSelf
        in: query
      - type: boolean
        x-go-name: SkipInvalidIds
        name: skipInvalidIds
        in: query
      - type: array
        items:
          enum:
          - Active
          - Deactivated
          - Deleted
          type: string
        x-go-name: Status
        description: Filter by tenant status.
        name: status
        in: query
      responses:
        "200":
          $ref: '#/responses/GetTenantsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the tenant that was updated on the Cohesity Cluster.
      tags:
      - Tenant
      summary: Update an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenant
      parameters:
      - x-go-name: Body
        description: Request to update existing tenant.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantUpdate'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        A tenant is required to support MultiTenant architecture for service provider
        (SP) to facilitate data and view segregations in the Cohesity Dashboard.

        Returns the created/added tenant.
      tags:
      - Tenant
      summary: Create/add a new tenant to the Cohesity Cluster.
      operationId: CreateTenant
      parameters:
      - x-go-name: Body
        description: Request to add or create a new tenant.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantCreateParameters'
      responses:
        "201":
          $ref: '#/responses/CreateTenantResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns success if the specified tenant is deleted.
      tags:
      - Tenant
      summary: Delete an existing tenant on the Cohesity Cluster.
      operationId: DeleteTenant
      parameters:
      - x-go-name: Body
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantIdData'
      responses:
        "204":
          $ref: '#/responses/GetTenantsResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/activeDirectory:
    put:
      description: |-
        Returns success if the update for Active Directory is successful for specified
        tenant.
      tags:
      - Tenant
      summary: Update Active Directory for an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantActiveDirectory
      parameters:
      - x-go-name: Body
        description: Request to update existing active directories.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantActiveDirectoryUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantActiveDirectoryResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/entity:
    put:
      description: |-
        Returns success if the update for entity permission data is successful for
        specified tenant.
      tags:
      - Tenant
      summary: Update entity permission for an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantEntity
      parameters:
      - x-go-name: Body
        description: Request to associate entity for tenant.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantEntityUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantEntityResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/groups:
    put:
      description: Returns success if the update for groups is successful for specified
        tenant.
      tags:
      - Tenant
      summary: Update existing groups to an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantGroups
      parameters:
      - x-go-name: Body
        description: Request to update existing tenant groups.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantGroupUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantGroupsResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/ldapProvider:
    put:
      description: |-
        Returns success if the update for Ldap Providers is successful for specified
        tenant.
      tags:
      - Tenant
      summary: Update Ldap Providers for an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantLdapProvider
      parameters:
      - x-go-name: Body
        description: Request to update existing ldap providers.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantLdapProviderUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantLdapProviderResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/policy:
    put:
      description: |-
        Returns success if the update for protection policy permission data is
        successful for the specified tenant.
      tags:
      - Tenant
      summary: |-
        Update protection policy permission for an existing tenant on the Cohesity
        Cluster.
      operationId: UpdateTenantProtectionPolicy
      parameters:
      - x-go-name: Body
        description: Request to update existing protection policies.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantProtectionPolicyUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantProtectionPolicyResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/protectionJob:
    put:
      description: |-
        Returns success if the update for protection job is successful for specified
        tenant.
      tags:
      - Tenant
      summary: Update protection job for an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantProtectionJob
      parameters:
      - x-go-name: Body
        description: Request to update existing protection jobs.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantProtectionJobUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantProtectionJobResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/proxies:
    get:
      description: Returns the list of proxies.
      tags:
      - Tenant
      summary: List proxies for tenant which are running within tenant's environment.
      operationId: GetTenantsProxies
      parameters:
      - type: array
        items:
          type: string
        x-go-name: Ids
        name: ids
        in: query
      responses:
        "200":
          $ref: '#/responses/GetTenantsProxiesResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/proxy/config:
    get:
      description: Returns the config for tenants proxy.
      tags:
      - Tenant
      summary: Get proxy config for tenant.
      operationId: GetTenantsProxyConfig
      parameters:
      - type: string
        x-go-name: Id
        description: Specifies the id of the tenant.
        name: id
        in: query
      - type: boolean
        x-go-name: ValidateOnly
        description: Specifies whether to only validate the config request.
        name: validateOnly
        in: query
      responses:
        "200":
          $ref: '#/responses/GetTenantsProxyConfigResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/proxy/image:
    get:
      description: Returns the tenant proxy to be downloaded.
      tags:
      - Tenant
      summary: Downloads the tenants proxy.
      operationId: DownloadTenantsProxy
      parameters:
      - type: string
        x-go-name: Id
        description: Specifies the id of the tenant.
        name: id
        in: query
      responses:
        "200":
          $ref: '#/responses/DownloadTenantsProxyResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/users:
    put:
      description: Returns success if the update for users data is successful for
        specified tenant.
      tags:
      - Tenant
      summary: Update existing users to an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantUsers
      parameters:
      - x-go-name: Body
        description: Request to update existing users.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantUserUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantUsersResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/view:
    put:
      description: |-
        Returns success if the update for views permission data is successful for
        specified tenant.
      tags:
      - Tenant
      summary: Update views permission for an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantView
      parameters:
      - x-go-name: Body
        description: Request to update existing views.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantViewUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantViewResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/viewBox:
    put:
      description: |-
        Returns success if the update for view box data is successful for specified
        tenant.
      tags:
      - Tenant
      summary: Update view box for an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantViewBox
      parameters:
      - x-go-name: Body
        description: Request to update existing tenant view box.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantViewBoxUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantViewBoxResponse'
        default:
          $ref: '#/responses/Error'
  /public/tenants/vlan:
    put:
      description: Returns success if the update for vlan data is successful for specified
        tenant.
      tags:
      - Tenant
      summary: Update vlan for an existing tenant on the Cohesity Cluster.
      operationId: UpdateTenantVlan
      parameters:
      - x-go-name: Body
        description: Request to update existing tenant vlan.
        name: body
        in: body
        schema:
          $ref: '#/definitions/TenantVlanUpdateParameters'
      responses:
        "200":
          $ref: '#/responses/UpdateTenantVlanResponse'
        default:
          $ref: '#/responses/Error'
  /public/users:
    get:
      description: |-
        If no parameters are specified, all users currently on the Cohesity Cluster
        are returned. Specifying parameters filters the results that are returned.
      tags:
      - Principals
      summary: |-
        List the users on the Cohesity Cluster that match the filter criteria
        specified using parameters.
      operationId: GetUsers
      parameters:
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      - type: array
        items:
          type: string
        x-go-name: Usernames
        description: |-
          Optionally specify a list of usernames to filter by. All users containing
          username will be returned.
        name: usernames
        in: query
      - type: array
        items:
          type: string
        x-go-name: EmailAddresses
        description: Optionally specify a list of email addresses to filter by.
        name: emailAddresses
        in: query
      - type: string
        x-go-name: Domain
        description: |-
          Optionally specify a domain to filter by.
          If no domain is specified, all users on the Cohesity Cluster are searched.
          If a domain is specified, only users on the Cohesity Cluster
          associated with that domain are searched.
        name: domain
        in: query
      - type: boolean
        x-go-name: PartialMatch
        description: |-
          Optionally specify whether to enable partial match. If set, all users
          with name containing Usernames will be returned. If set to false, only
          users with exact the same name as Usernames will be returned. By default
          this parameter is set to true.
        name: partialMatch
        in: query
      responses:
        "200":
          $ref: '#/responses/GetUsersResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the user that was updated on the Cohesity Cluster.
      tags:
      - Principals
      summary: |-
        Update an existing user on the Cohesity Cluster. Only user settings
        on the Cohesity Cluster are updated. No changes are made to the
        referenced user principal on the Active Directory.
      operationId: UpdateUser
      parameters:
      - x-go-name: Body
        description: Request to update an existing user.
        name: body
        in: body
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          $ref: '#/responses/UpdateUserResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        If an Active Directory domain is specified, a new user is added to the
        Cohesity Cluster for the specified Active Directory user principal.
        If the LOCAL domain is specified, a new user is created directly in
        the default LOCAL domain on the Cohesity Cluster.

        Returns the created or added user.
      tags:
      - Principals
      summary: Create or add a new user to the Cohesity Cluster.
      operationId: CreateUser
      parameters:
      - x-go-name: Body
        description: Request to add or create a new user.
        name: body
        in: body
        schema:
          $ref: '#/definitions/UserParameters'
      responses:
        "201":
          $ref: '#/responses/CreateUserResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: |-
        Only users from the same domain can be deleted by a single request.
        If the Cohesity user was created for an Active Directory user, the referenced
        principal user on the Active Directory domain is NOT deleted.
        Only the user on the Cohesity Cluster is deleted.
        Returns Success if the specified users are deleted.
      tags:
      - Principals
      summary: Delete one or more users on the Cohesity Cluster.
      operationId: DeleteUsers
      parameters:
      - x-go-name: Body
        description: Request to delete one or more users on the Cohesity Cluster.
        name: body
        in: body
        schema:
          $ref: '#/definitions/UserDeleteParameters'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/users/privileges:
    get:
      tags:
      - Principals
      summary: List the privileges of the session user.
      operationId: GetUserPrivileges
      responses:
        "200":
          $ref: '#/responses/GetUserPrivilegesResponse'
        default:
          $ref: '#/responses/Error'
  /public/users/s3SecretKey:
    post:
      description: Returns the new key that was generated.
      tags:
      - Principals
      summary: Reset the S3 secret access key for the specified user on the Cohesity
        Cluster.
      operationId: ResetS3SecretKey
      parameters:
      - x-go-name: Body
        description: Request to reset the S3 secret access key for the specified Cohesity
          user.
        name: body
        in: body
        schema:
          $ref: '#/definitions/ResetS3SecretKeyParameters'
      responses:
        "200":
          $ref: '#/responses/ResetS3SecretKeyResponse'
        default:
          $ref: '#/responses/Error'
  /public/users/{sid}/apiKeys:
    get:
      tags:
      - Principals
      summary: Fetch API keys for user.
      operationId: GetUserApiKeys
      parameters:
      - type: array
        items:
          type: string
        x-go-name: Ids
        description: Specifies a list of API key ids.
        name: ids
        in: query
      - type: string
        x-go-name: Sid
        description: Specifies the user sid.
        name: sid
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetApiKeysResponse'
        default:
          $ref: '#/responses/Error'
    post:
      tags:
      - Principals
      summary: Create an API key for user.
      operationId: CreateUserApiKey
      parameters:
      - type: string
        x-go-name: Sid
        description: Specifies the user sid.
        name: sid
        in: path
        required: true
      - x-go-name: Body
        description: Request to create an API key.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateApiKeyParams'
      responses:
        "201":
          $ref: '#/responses/CreateApiKeyResponse'
        default:
          $ref: '#/responses/Error'
  /public/users/{sid}/apiKeys/{id}:
    get:
      tags:
      - Principals
      summary: Fetch an API key for user by its id.
      operationId: GetUserApiKeyById
      parameters:
      - type: string
        x-go-name: Sid
        description: Specifies the user sid.
        name: sid
        in: path
        required: true
      - type: string
        x-go-name: Id
        description: Specifies the API key id.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetApiKeyByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      tags:
      - Principals
      summary: Update an API key.
      operationId: UpdateUserApiKey
      parameters:
      - x-go-name: Body
        description: Request to update an API key.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateApiKeyParams'
      - type: string
        x-go-name: Sid
        description: Specifies the user sid.
        name: sid
        in: path
        required: true
      - type: string
        x-go-name: Id
        description: Specifies the API key id.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/CreateApiKeyResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      tags:
      - Principals
      summary: Delete an API key for user.
      operationId: DeleteUserApiKey
      parameters:
      - type: string
        x-go-name: Sid
        description: Specifies the user sid.
        name: sid
        in: path
        required: true
      - type: string
        x-go-name: Id
        description: Specifies the API key id.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/users/{sid}/apiKeys/{id}/rotate:
    post:
      tags:
      - Principals
      summary: Fetch an API key for user by its id.
      operationId: RotateUserApiKey
      parameters:
      - type: string
        x-go-name: Sid
        description: Specifies the user sid.
        name: sid
        in: path
        required: true
      - type: string
        x-go-name: Id
        description: Specifies the API key id.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/RotateUserApiKeyResponse'
        default:
          $ref: '#/responses/Error'
  /public/usersApiKeys:
    get:
      tags:
      - Principals
      summary: Fetch API keys across all users.
      operationId: GetAllUserApiKeys
      parameters:
      - type: array
        items:
          type: string
        x-go-name: UserSids
        description: Specifies a list of user sids.
        name: userSids
        in: query
      responses:
        "200":
          $ref: '#/responses/GetApiKeysResponse'
        default:
          $ref: '#/responses/Error'
  /public/vaults:
    get:
      description: |-
        If no parameters are specified, all Vaults (External Targets) currently
        registered on the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
        A Vault is equivalent to an External Target in the Cohesity Dashboard.
      tags:
      - Vaults
      summary: |-
        List the Vaults (External Targets) registered on the Cohesity Cluster
        filtered by the specified parameters.
      operationId: GetVaults
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the id of Vault to return. If empty, all Vaults are
          returned.
        name: id
        in: query
      - type: string
        x-go-name: Name
        description: |-
          Specifies the name of the Vault to return. If empty, all Vaults are
          returned.
        name: name
        in: query
      - type: boolean
        x-go-name: IncludeMarkedForRemoval
        description: Specifies if Vaults that are marked for removal should be returned.
        name: includeMarkedForRemoval
        in: query
      responses:
        "200":
          $ref: '#/responses/GetVaultsResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: |-
        Returns the created Vault.
        A Vault is equivalent to an External Target in the Cohesity Dashboard.
      tags:
      - Vaults
      summary: Create a new Vault (External Target).
      operationId: CreateVault
      parameters:
      - x-go-name: Body
        description: Request to create a new Vault.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Vault'
      responses:
        "201":
          $ref: '#/responses/CreateVaultResponse'
        default:
          $ref: '#/responses/Error'
  /public/vaults/archiveMediaInfo:
    get:
      description: |-
        Returns the media information about the specified archive service uid
        (such as a QStar tape archive service).

        An archive service uid is uniquely identified using a combination of the
        following fields: clusterIncarnationId, entityIds and clusterId.
        These are all required fields.
      tags:
      - Vaults
      summary: List the media information for the specified archive service.
      operationId: GetArchiveMediaInfo
      parameters:
      - type: integer
        format: int64
        x-go-name: ClusterId
        description: |-
          Specifies the id of the Cohesity Cluster that archived to a
          QStar media Vault.
        name: clusterId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        description: |-
          Specifies the incarnation id of the Cohesity Cluster that archived
          to a QStar media Vault.
        name: clusterIncarnationId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: QStarArchiveJobId
        description: Specifies the id of the Job that archived to a QStar media Vault.
        name: qstarArchiveJobId
        in: query
        required: true
      - type: integer
        format: int64
        x-go-name: QStarRestoreTaskId
        description: |-
          Specifies the id of the restore task to optionally filter by.
          The restore task that is restoring data from the specified media Vault.
        name: qstarRestoreTaskId
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: EntityIds
        description: |-
          Specifies an array of entityIds to optionally filter by.
          An entityId is a unique id for a VM assigned by the Cohesity Cluster.
        name: entityIds
        in: query
      responses:
        "200":
          $ref: '#/responses/GetArchiveMediaInfoResponse'
        default:
          $ref: '#/responses/Error'
  /public/vaults/bandwidthSettings:
    get:
      description: Returns the upload and download bandwidth limits.
      tags:
      - Vaults
      summary: |-
        List the upload and download bandwidth limit and bandwidth overrides
        settings.
      operationId: GetBandwidthSettings
      responses:
        "200":
          $ref: '#/responses/GetBandwidthSettingsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated bandwidth limits.
      tags:
      - Vaults
      summary: Updates bandwidth limits.
      operationId: UpdateBandwidthSettings
      parameters:
      - x-go-name: Body
        description: Request to update global bandwidth limits settings.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/VaultBandwidthLimits'
      responses:
        "200":
          $ref: '#/responses/GetBandwidthSettingsResponse'
        default:
          $ref: '#/responses/Error'
  /public/vaults/encryptionKey/{id}:
    get:
      description: |-
        Get encryption information (such as the encryption key)
        for the specified Vault (External Target).
        To restore data to a remote Cluster (for example to support a disaster
        recovery scenario), you must get the encryption key of the Vault
        and store it outside the local source Cluster, before disaster strikes.
        If you have the encryption key and the local source Cluster goes down,
        you can restore the data to a remote Cluster from the Vault.
        The local source Cluster is the Cluster that archived the data on the Vault.
      tags:
      - Vaults
      summary: |-
        Get encryption information for a Vault (External Target).
        A Vault is equivalent to an External Target in the Cohesity Dashboard.
      operationId: GetVaultEncryptionKey
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Vault.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetVaultEncryptionKeyResponse'
        default:
          $ref: '#/responses/Error'
  /public/vaults/{id}:
    get:
      description: |-
        Returns the Vault corresponding to the specified Vault Id.
        A Vault is equivalent to an External Target in the Cohesity Dashboard.
      tags:
      - Vaults
      summary: List details about a single Vault (External Target).
      operationId: GetVaultById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Vault.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetVaultByIdResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: |-
        Update the settings of a Vault.
        A Vault is equivalent to an External Target in the Cohesity Dashboard.
        Returns the updated Vault.
      tags:
      - Vaults
      summary: Update a Vault (External Target).
      operationId: UpdateVault
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Vault.
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to update a Vault's settings.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Vault'
      responses:
        "200":
          $ref: '#/responses/UpdateVaultResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: |-
        Returns delete status upon completion.
        A Vault is equivalent to an External Target in the Cohesity Dashboard.
      tags:
      - Vaults
      summary: Delete a Vault (External Target).
      operationId: DeleteVault
      parameters:
      - type: boolean
        x-go-name: ForceDelete
        description: |-
          Specifies whether to force delete the vault.
          If the flag is set to true, the RemovalState of the vault is changed to
          'kMarkedForRemoval' and Eventually vault is removed from cluster config
          and archived metadata from scribe is removed without necessarily deleting
          the associated archived data.
        name: forceDelete
        in: query
      - type: boolean
        x-go-name: Retry
        description: Specifies whether to retry a request after failure.
        name: retry
        in: query
      - type: boolean
        x-go-name: IncludeMarkedForRemoval
        description: Specifies if Vaults that are marked for removal should be returned.
        name: includeMarkedForRemoval
        in: query
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id of the Vault.
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to delete vault.
        name: body
        in: body
        schema:
          $ref: '#/definitions/VaultDeleteParams'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/viewAliases:
    put:
      description: Returns the updated View Alias.
      tags:
      - Views
      summary: |-
        Update a View Alias. A View Alias allows a directory inside the view to be
        mounted without specifying the entire path.
      operationId: UpdateViewAlias
      parameters:
      - x-go-name: Body
        description: Request to update a View.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateViewAliasParam'
      responses:
        "201":
          $ref: '#/responses/UpdateViewAliasResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created View Alias.
      tags:
      - Views
      summary: |-
        Create a View Alias. A View Alias allows a directory inside the view to be
        mounted without specifying the entire path.
      operationId: CreateViewAlias
      parameters:
      - x-go-name: Body
        description: Request to create a View Alias.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ViewAlias'
      responses:
        "201":
          $ref: '#/responses/CreateViewAliasResponse'
        default:
          $ref: '#/responses/Error'
  /public/viewAliases/{name}:
    delete:
      description: Returns delete status upon completion.
      tags:
      - Views
      summary: Delete a View Alias.
      operationId: DeleteViewAlias
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the View Alias name.
        name: name
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/viewAliases/{name}/activate:
    post:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Activates the view aliases of a view from it's source view.
      operationId: ActivateViewAliases
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the View name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/ActivateViewAliasesResponse'
        default:
          $ref: '#/responses/Error'
  /public/viewBoxes:
    get:
      description: |-
        If no parameters are specified, all Domains (View Boxes) currently on
        the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
      tags:
      - ViewBoxes
      summary: List Domains (View Boxes) filtered by the specified parameters.
      operationId: GetViewBoxes
      parameters:
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: IdList
        description: |-
          Filter by a list of Storage Domain (View Box) ids.
          If empty, View Boxes are not filtered by id.
        name: ids
        in: query
      - type: array
        items:
          type: string
        x-go-name: NameList
        description: |-
          Filter by a list of Storage Domain (View Box) Names.
          If empty, Storage Domains (View Boxes) are not filtered by Name.
        name: names
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ClusterPartitionIdList
        description: Filter by a list of Cluster Partition Ids.
        name: clusterPartitionIds
        in: query
      - type: boolean
        x-go-name: FetchStats
        description: Specifies whether to include usage and performance statistics.
        name: fetchStats
        in: query
      - type: boolean
        x-go-name: FetchTimeSeriesSchema
        description: Specifies whether to get time series schema info of the view
          box.
        name: fetchTimeSeriesSchema
        in: query
      - type: integer
        format: int64
        x-go-name: TemplateId
        description: |-
          Filter list of Storage Domain (View Box) by the properties of the template
          like dedup, compression.
          If empty, Storage Domains (View Boxes) are not filtered.
        name: templateId
        in: query
      responses:
        "200":
          $ref: '#/responses/GetViewBoxesResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created Domain (View Box).
      tags:
      - ViewBoxes
      summary: Create a Domain (View Box).
      operationId: CreateViewBox
      parameters:
      - x-go-name: Body
        description: Request to create a Storage Domain (View Box) configuration.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateViewBoxParams'
      responses:
        "201":
          $ref: '#/responses/CreateViewBoxResponse'
        default:
          $ref: '#/responses/Error'
  /public/viewBoxes/{id}:
    get:
      description: |-
        Returns the Domain (View Box) corresponding to the specified Domain (View Box)
        Id.
      tags:
      - ViewBoxes
      summary: List details about a single Domain (View Box).
      operationId: GetViewBoxById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Id of the Storage Domain (View Box)
        name: id
        in: path
        required: true
      - type: boolean
        x-go-name: FetchStats
        description: Specifies whether to include usage and performance statistics.
        name: fetchStats
        in: query
      responses:
        "200":
          $ref: '#/responses/GetViewBoxByIdResponse'
        "404":
          $ref: '#/responses/NotFoundResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated Domain (View Box).
      tags:
      - ViewBoxes
      summary: Update a Domain (View Box).
      operationId: UpdateViewBox
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Id of the Storage Domain (View Box)
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to update a Storage Domain (View Box) configuration.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateViewBoxParams'
      responses:
        "200":
          $ref: '#/responses/UpdateViewBoxResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns delete status upon completion.
      tags:
      - ViewBoxes
      summary: Delete a Domain (View Box).
      operationId: DeleteViewBox
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Id of the Storage Domain (View Box)
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/viewDirectoryQuotas:
    get:
      tags:
      - Views
      summary: Gets directory quota info for a view. Returns error if op fails.
      operationId: GetViewDirQuotaInfo
      parameters:
      - type: string
        x-go-name: ViewName
        description: The name of the view.
        name: viewName
        in: query
        required: true
      responses:
        "200":
          $ref: '#/responses/GetDirQuotaInfoResponse'
        default:
          $ref: '#/responses/Error'
    put:
      tags:
      - Views
      summary: Updates a directory quota policy for a view. Returns error if op fails.
      operationId: UpdateViewDirQuota
      parameters:
      - x-go-name: Body
        description: Request to update view directory quota policy.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateDirQuotaArgs'
      responses:
        "200":
          $ref: '#/responses/UpdateViewDirQuotaResponse'
        default:
          $ref: '#/responses/Error'
  /public/viewUserQuotas:
    get:
      description: Returns error if op fails.
      tags:
      - Views
      summary: |-
        Get the quota policies, usage and summary for a view for all its users. It
        can also fetch the quota policies, usage and summary for a user in all his
        views.
      operationId: GetViewUserQuotas
      parameters:
      - type: string
        x-go-name: ViewName
        description: |-
          Specifies the name of the input view. If given, there could be three
          scenarios with the viewName input parameter:
          It gives the user quota overrides for this view, and the user quota
          settings. Returns 'usersQuotaAndUsage'.
          If given along with the user id, it returns the quota policy for this
          user on this view. Returns 'usersQuotaAndUsage'.
          If given along with SummaryOnly as true, a user quota summary for
          this view would be returned. Returns 'summaryForView'.
          If not given, then the user id is checked.
        name: viewName
        in: query
      - type: boolean
        x-go-name: IncludeUsage
        description: |-
          If set to true, the logical usage info is included only for users with
          quota overrides. By default, it is set to false.
        name: includeUsage
        in: query
      - type: boolean
        x-go-name: IncludeUserWithQuotaOnly
        description: |-
          If set to true, the result will only contain user with user quota enabled.
          By default, this field is set to false, and it's only in effect when
          'SummaryOnly' is set to false and 'ViewName' is specified.
        name: includeUserWithQuotaOnly
        in: query
      - type: boolean
        x-go-name: ExcludeUsersWithinAlertThreshold
        description: |-
          This field can be set only when includeUsage is set to true.
          By default, all the users with logical usage > 0 will be returned in the
          result. If this field is set to true, only the list of users who has
          exceeded the alert threshold will be returned.
        name: excludeUsersWithinAlertThreshold
        in: query
      - type: integer
        format: uint32
        x-go-name: UnixUid
        description: |-
          If interested in a user via unix-identifier, include UnixUid.
          Otherwise, If a valid unix-id to SID mappings are available (i.e., when
          mixed mode is enabled) the server will perform the necessary id mapping
          and return the correct usage irrespective of whether the unix id / SID is
          provided.
        name: unixUid
        in: query
      - type: string
        x-go-name: Sid
        description: |-
          If interested in a user via smb_client, include SID.
          Otherwise, If a valid unix-id to SID mappings are available (i.e., when
          mixed mode is enabled) the server will perform the necessary id mapping
          and return the correct usage irrespective of whether the unix id / SID is
          provided.
          The string is of following format -
          S-1-IdentifierAuthority-SubAuthority1-SubAuthority2-...-SubAuthorityn.
        name: sid
        in: query
      - type: array
        items:
          type: integer
          format: uint32
        x-go-name: UserUnixIdsForView
        description: |-
          While making a query for a view, this specifies a list of specific users
          with their unix uid for the result.
        name: userUnixIdsForView
        in: query
      - type: array
        items:
          type: string
        x-go-name: UserSidsForView
        description: |-
          While making a query for a view, this specifies a list of specific users
          with their Sid for the result.
        name: userSidsForView
        in: query
      - type: array
        items:
          type: string
        x-go-name: ViewNamesForUser
        description: |-
          While making a query for a user, this specifies a list of specific views
          for the result.
        name: viewNamesForUser
        in: query
      - type: boolean
        x-go-name: SummaryOnly
        description: |-
          Specifies a flag to just return a summary. If set to true, and if ViewName
          is not nil, it returns the summary of users for a view. Otherwise if
          UserId not nil, and ViewName is nil then it fetches the summary for a
          user in his views.  By default, it is set to false.
        name: summaryOnly
        in: query
      - type: integer
        format: int64
        x-go-name: PageCount
        description: Specifies the max entries that should be returned in the result.
        name: pageCount
        in: query
      - type: integer
        format: int64
        x-go-name: MaxViewId
        description: |-
          Related to fetching a particular user's quota and usage in all his views.
          It only pertains to the scenario where either UnixUid or Sid is specified,
          and ViewName is nil. Specify the maxViewId for All the views returned
          would have view_id's less than or equal to the given MaxViewId if it is
          >= 0.
        name: maxViewId
        in: query
      - type: string
        x-go-name: Cookie
        description: |-
          Cookie should be used from previous call to list user quota overrides. It
          resumes (or gives the next set of values) from the result of the previous
          call.
        name: cookie
        in: query
      - type: string
        x-go-name: OutputFormat
        description: |-
          OutputFormat is the Output format for the output. If it is not specified,
          default is json.
        name: outputFormat
        in: query
      responses:
        "200":
          $ref: '#/responses/GetViewUserQuotasResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Update a new quota policy for a user in a view.
      operationId: UpdateViewUserQuota
      parameters:
      - x-go-name: Body
        description: update user quota params.
        name: body
        in: body
        schema:
          $ref: '#/definitions/ViewUserQuotaParameters'
      responses:
        "201":
          $ref: '#/responses/UpdateViewUserQuotaResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Create a new quota policy for a user in a view.
      operationId: CreateViewUserQuota
      parameters:
      - x-go-name: Body
        description: update user quota params.
        name: body
        in: body
        schema:
          $ref: '#/definitions/ViewUserQuotaParameters'
      responses:
        "200":
          $ref: '#/responses/CreateViewUserQuotaResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Delete the quota policy overrides for users in a view.
      operationId: DeleteViewUsersQuota
      parameters:
      - x-go-name: Body
        description: update user quota params.
        name: body
        in: body
        schema:
          $ref: '#/definitions/DeleteViewUsersQuotaParameters'
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/viewUserQuotasSettings:
    put:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Update the user quota settings in a view.
      operationId: UpdateUserQuotaSettings
      parameters:
      - x-go-name: Body
        description: update user quota metadata params.
        name: body
        in: body
        schema:
          $ref: '#/definitions/UpdateUserQuotaSettingsForView'
      responses:
        "200":
          $ref: '#/responses/UserQuotaSettingsResponse'
        default:
          $ref: '#/responses/Error'
  /public/views:
    get:
      description: |-
        If no parameters are specified, all Views on the Cohesity Cluster are returned.
        Specifying parameters filters the results that are returned.
        NOTE: If maxCount is set and the number of Views returned exceeds the maxCount,
        there are more Views to return.
        To get the next set of Views, send another request and specify the id of the
        last View returned in viewList from the previous response.
      tags:
      - Views
      summary: List Views filtered by some parameters.
      operationId: GetViews
      parameters:
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      - type: array
        items:
          type: string
        x-go-name: ViewNameList
        description: Filter by a list of View names.
        name: viewNames
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewIdList
        description: Filter by a list of View ids.
        name: viewIds
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIdList
        description: Filter by a list of Storage Domains (View Boxes) specified by
          id.
        name: viewBoxIds
        in: query
      - type: array
        items:
          type: string
        x-go-name: ViewBoxNameList
        description: Filter by a list of View Box names.
        name: viewBoxNames
        in: query
      - type: boolean
        x-go-name: MatchPartialNames
        description: |-
          If true, the names in viewNames are matched by prefix rather than
          exactly matched.
        name: matchPartialNames
        in: query
      - type: integer
        format: int32
        x-go-name: MaxCount
        description: Specifies a limit on the number of Views returned.
        name: maxCount
        in: query
      - type: boolean
        x-go-name: IncludeProtectionJobs
        description: |-
          Specifies if Protection Jobs information needs to be returned along with
          view metadata. By default, if not set or set to true, Job information is
          returned.
        name: includeProtectionJobs
        in: query
      - type: integer
        format: int64
        x-go-name: MaxViewId
        description: |-
          If the number of Views to return exceeds the maxCount specified in the
          original request, specify the id of the last View
          from the viewList in the previous response
          to get the next set of Views.
        name: maxViewId
        in: query
      - type: boolean
        x-go-name: IncludeInactive
        description: |-
          Specifies if inactive Views on this Remote Cluster (which have
          Snapshots copied by replication) should also be returned.
          Inactive Views are not counted towards the maxCount.
          By default, this field is set to false.
        name: includeInactive
        in: query
      - type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        description: |-
          Filter by Protection Job ids. Return Views that are being protected by
          listed Jobs, which are specified by ids.
        name: jobIds
        in: query
      - type: boolean
        description: If set to true, the list is sorted descending by logical usage.
        name: SortByLogicalUsage
        in: query
      - type: boolean
        x-go-name: MatchAliasNames
        description: If true, view aliases are also matched with the names in viewNames.
        name: matchAliasNames
        in: query
      - type: boolean
        x-go-name: IncludeViewsWithAntivirusEnabledOnly
        description: |-
          If set to true, the list will contain only the views for which antivirus
          scan is enabled.
        name: includeViewsWithAntivirusEnabledOnly
        in: query
      - type: boolean
        x-go-name: IncludeStats
        description: |-
          If set to true, stats of views will be returned. By default this parameter
          is set to false.
        name: includeStats
        in: query
      - type: boolean
        x-go-name: IncludeViewsWithDataLockEnabledOnly
        description: |-
          If set to true, the list will contain only the views for which either
          file level data lock is enabled or view level data lock is enabled.
        name: includeViewsWithDataLockEnabledOnly
        in: query
      responses:
        "200":
          $ref: '#/responses/GetViewsResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated View.
      tags:
      - Views
      summary: Update a View.
      operationId: UpdateView
      parameters:
      - x-go-name: Body
        description: Request to update a view.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateViewParam'
      responses:
        "200":
          $ref: '#/responses/UpdateViewResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created View.
      tags:
      - Views
      summary: Create a View.
      operationId: CreateView
      parameters:
      - x-go-name: Body
        description: Request to create a View.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateViewRequest'
      responses:
        "201":
          $ref: '#/responses/CreateViewResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/clone:
    post:
      description: Returns the cloned View.
      tags:
      - Views
      summary: Clone a View.
      operationId: CloneView
      parameters:
      - x-go-name: Body
        description: Request to clone a View.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CloneViewRequest'
      responses:
        "201":
          $ref: '#/responses/CloneViewResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/cloneDirectory:
    post:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Clone a directory of a view.
      operationId: CloneDirectory
      parameters:
      - x-go-name: Body
        description: Request to clone a directory.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CloneDirectoryParams'
      responses:
        "201":
          $ref: '#/responses/CloneDirectoryResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/id/{id}:
    get:
      description: Returns the View corresponding to the specified View id.
      tags:
      - Views
      summary: List details about a single View.
      operationId: GetViewById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the View id.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetViewByIdResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns delete status upon completion.
      tags:
      - Views
      summary: Delete a View.
      operationId: DeleteViewById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the View id.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/id/{id}/fileLocks:
    get:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Fetches the lock status of a file in a view.
      operationId: GetFileLockStatusById
      parameters:
      - type: string
        x-go-name: Path
        description: Specifies the file path that needs to be locked.
        name: path
        in: query
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the View id.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetFileLockStatusResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Lock a file in a view and optionally update its expiry timestamp.
      operationId: LockFileById
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the View id.
        name: id
        in: path
        required: true
      - x-go-name: Body
        description: Request to lock a file.
        name: body
        in: body
        schema:
          $ref: '#/definitions/LockFileParams'
      responses:
        "200":
          $ref: '#/responses/GetFileLockStatusResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/overwrite:
    post:
      description: |-
        Specifies source and target view names as params.
        Returns the modified Target View.
      tags:
      - Views
      summary: Overwrites a Target view with contents of a Source view.
      operationId: OverwriteView
      parameters:
      - x-go-name: Body
        description: Request to overwrite a Target view with contents of a Source
          view.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/OverwriteViewParam'
      responses:
        "200":
          $ref: '#/responses/OverwriteViewResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/rename/id/{id}:
    post:
      description: |-
        Specify unique id of the View in the 'id' parameter.
        Returns the renamed View.
      tags:
      - Views
      summary: Rename a View.
      operationId: RenameViewById
      parameters:
      - x-go-name: Body
        description: Request to rename a View.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RenameViewParam'
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies the View id.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/RenameViewResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/rename/{name}:
    post:
      description: |-
        Specify original name of the View in the 'name' parameter.
        Returns the renamed View.
      tags:
      - Views
      summary: Rename a View.
      operationId: RenameView
      parameters:
      - x-go-name: Body
        description: Request to rename a View.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/RenameViewParam'
      - type: string
        x-go-name: Name
        description: Specifies the View name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/RenameViewResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/{name}:
    get:
      description: Returns the View corresponding to the specified View name.
      tags:
      - Views
      summary: List details about a single View.
      operationId: GetViewByName
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the View name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetViewByNameResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the updated View.
      tags:
      - Views
      summary: Update a View.
      operationId: UpdateViewByName
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the View name.
        name: name
        in: path
        required: true
      - x-go-name: Body
        description: Request to update a view.
        name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/UpdateViewParam'
      responses:
        "200":
          $ref: '#/responses/UpdateViewResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns delete status upon completion.
      tags:
      - Views
      summary: Delete a View.
      operationId: DeleteView
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the View name.
        name: name
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
  /public/views/{name}/fileLocks:
    get:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Fetches the lock status of a file in a view.
      operationId: GetFileLockStatus
      parameters:
      - type: string
        x-go-name: Path
        description: Specifies the file path that needs to be locked.
        name: path
        in: query
      - type: string
        x-go-name: Name
        description: Specifies the View name.
        name: name
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetFileLockStatusResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns error if op fails.
      tags:
      - Views
      summary: Lock a file in a view and optionally update its expiry timestamp.
      operationId: LockFile
      parameters:
      - type: string
        x-go-name: Name
        description: Specifies the View name.
        name: name
        in: path
        required: true
      - x-go-name: Body
        description: Request to lock a file.
        name: body
        in: body
        schema:
          $ref: '#/definitions/LockFileParams'
      responses:
        "200":
          $ref: '#/responses/GetFileLockStatusResponse'
        default:
          $ref: '#/responses/Error'
  /public/virtualDatacenters/{id}/storageProfiles:
    get:
      tags:
      - RestoreTasks
      summary: Fetches information of virtual disk.
      operationId: ListStorageProfiles
      parameters:
      - type: integer
        format: int64
        x-go-name: Id
        description: Specifies a unique id for the VDC.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/ListStorageProfilesResponse'
        default:
          $ref: '#/responses/Error'
  /public/vlans:
    get:
      description: Returns the VLANs for the Cohesity Cluster.
      tags:
      - Vlan
      summary: List the VLANs for the Cohesity Cluster.
      operationId: GetVlans
      parameters:
      - type: array
        items:
          type: string
        x-go-name: TenantIds
        description: |-
          TenantIds contains ids of the tenants for which objects are to be
          returned.
        name: tenantIds
        in: query
      - type: boolean
        x-go-name: AllUnderHierarchy
        description: |-
          AllUnderHierarchy specifies if objects of all the tenants under the
          hierarchy of the logged in user's organization should be returned.
        name: allUnderHierarchy
        in: query
      - type: boolean
        x-go-name: SkipPrimaryAndBondIface
        description: |-
          SkipPrimaryAndBondIface is to filter interfaces entries which are primary
          interface or bond interfaces.
        name: skipPrimaryAndBondIface
        in: query
      responses:
        "200":
          $ref: '#/responses/GetVlansResponse'
        default:
          $ref: '#/responses/Error'
    post:
      description: Returns the created VLAN on the Cohesity Cluster.
      tags:
      - Vlan
      summary: Creates a VLAN of the Cohesity Cluster.
      operationId: CreateVlan
      parameters:
      - name: Body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Vlan'
      responses:
        "200":
          $ref: '#/responses/VlanResponse'
        default:
          $ref: '#/responses/Error'
  /public/vlans/{id}:
    get:
      description: |-
        Returns the VLAN corresponding to the specified VLAN ID or a specified
        vlan interface group name.
        Example: /public/vlans/intf_group1.20
      tags:
      - Vlan
      summary: List the details about a single VLAN.
      operationId: GetVlanById
      parameters:
      - type: integer
        format: int32
        x-go-name: Id
        description: Specifies the id of the VLAN.
        name: id
        in: path
        required: true
      responses:
        "200":
          $ref: '#/responses/GetVlanByIdResponse'
        "404":
          $ref: '#/responses/NotFoundResponse'
        default:
          $ref: '#/responses/Error'
    put:
      description: Returns the created or updated VLAN on the Cohesity Cluster.
      tags:
      - Vlan
      summary: Creates or updates a VLAN of the Cohesity Cluster.
      operationId: UpdateVlan
      parameters:
      - type: integer
        format: int32
        x-go-name: Id
        description: Specifies the id of the VLAN.
        name: id
        in: path
        required: true
      - name: Body
        in: body
        schema:
          $ref: '#/definitions/Vlan'
      responses:
        "200":
          $ref: '#/responses/VlanResponse'
        default:
          $ref: '#/responses/Error'
    delete:
      description: Returns the delete status upon completion.
      tags:
      - Vlan
      summary: Remove the specified VLAN from the Cohesity Cluster.
      operationId: RemoveVlan
      parameters:
      - type: integer
        format: int32
        x-go-name: Id
        description: Specifies the id of the VLAN.
        name: id
        in: path
        required: true
      responses:
        "204":
          $ref: '#/responses/NoContentResponse'
        default:
          $ref: '#/responses/Error'
definitions:
  ADAttributeRestoreParam:
    type: object
    title: AD attribute recovery parameters for one or more AD objects.
    properties:
      excludedPropertyVec:
        description: |-
          Array of LDAP property names to excluded from 'property_vec'. Excluded
          property name cannot contain wildcard character '*'.  Property names are
          case insensitive.
        type: array
        items:
          type: string
        x-go-name: ExcludedPropertyVec
        x-nullable: true
      guidpairVec:
        description: |-
          Array of source and destination object guid pairs to restore attributes.
          Pair source guid refers to guid in AD snapshot in source_server
          endpoint. Destination guid refers to guid in production AD. If destination
          guid is empty, then source guid in AD snapshot should exist in production
          AD.
        type: array
        items:
          $ref: '#/definitions/ADGuidPair'
        x-go-name: GuidpairVec
        x-nullable: true
      optionFlags:
        description: Attribute restore option flags of type ADAttributeOptionFlags.
        type: integer
        format: uint32
        x-go-name: OptionFlags
        x-nullable: true
      propertyVec:
        description: |-
          Array of LDAP property(attribute) names. The name can be standard or
          custom property defined in AD schema partition. The property can contain
          wildcard character '*'. If this array is empty, then '*' is assigned,
          means restore all properties except default system excluded properties.
          Wildcards will be expanded. If 'memberOf' property is included, group
          membership of the objects specified in 'guid_vec' will be restored.
          Property that does not exist for an object is ignored and no error
          info is returned for that property. Property names are case insensitive.
          Caller may check the ADAttributeFlags.kSystem obtained during object
          compare to exclude system properties.
        type: array
        items:
          type: string
        x-go-name: PropertyVec
        x-nullable: true
      srcSysvolFolder:
        description: When restoring a GPO, need to know the absolute path for SYSVOL
          folder.
        type: string
        x-go-name: SrcSysvolFolder
        x-nullable: true
    x-go-package: magneto/agents/windows/stub/ad_param.pb
  ADGuidPair:
    type: object
    title: AD object guid string pair.
    properties:
      destination:
        description: |-
          Destination guid in production AD object corresponding to source. If
          empty, it assumed to be 'source' guid.
        type: string
        x-go-name: Destination
        x-nullable: true
      source:
        description: |-
          Source guid string of an AD object in mounted AD snapshot. This cannot be
          empty.
        type: string
        x-go-name: Source
        x-nullable: true
    x-go-package: magneto/agents/windows/stub/ad_param.pb
  ADObject:
    description: Represents the details about an AD object.
    type: object
    title: AD Object
    properties:
      description:
        description: Specifies the 'description' of an AD object.
        type: string
        x-go-name: Description
        x-nullable: true
      destinationGuid:
        description: |-
          Specifies the guid of object in the Production AD which is equivalent to
          the object in the Snapshot AD.
        type: string
        x-go-name: DestinationGuid
        x-nullable: true
      displayName:
        description: Specifies the display name of the AD object.
        type: string
        x-go-name: DisplayName
        x-nullable: true
      distinguishedName:
        description: |-
          Specifies the distinguished name of the AD object.
          Eg: CN=Jone Doe,OU=Users,DC=corp,DC=cohesity,DC=com
        type: string
        x-go-name: DistinguishedName
        x-nullable: true
      errorMessage:
        description: Specifies the error message while fetching the AD object.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      objectClass:
        description: |-
          Specifies the class name of an AD Object such as 'user','computer',
          'organizationalUnit'.
        type: string
        x-go-name: ObjectClass
        x-nullable: true
      searchResultFlags:
        description: |-
          Specifies the SearchResultFlags of the AD object.
          'kEqual' indicates the AD Object from Snapshot and Production
          AD are equal.
          'kNotEqual' indicates the AD Object from snapshot and production
          AD are not equal.
          'kRestorePasswordRequired' indicates when restoring this AD Object from
          Snapshot AD to Production AD, a password is required.
          'kMovedOnDestination' indicates the object has moved to another container or
          OU in Production AD compared to  Snapshot AD.
          'kDisableSupported' indicates the enable and disable is supported on the AD
          Object. AD Objects of type 'User' and 'Computers' support this operation.
        type: array
        items:
          type: string
          enum:
          - kEqual
          - kNotEqual
          - kRestorePasswordRequired
          - kMovedOnDestination
          - kDisableSupported
        x-go-name: SearchResultFlags
        x-nullable: true
      sourceGuid:
        description: Specifies the guid of the AD object in Snapshot AD.
        type: string
        x-go-name: SourceGuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ADObjectRestoreParam:
    type: object
    title: Restore AD objects from recycle bin or from a mounted AD snapshot database.
    properties:
      credentials:
        description: |-
          For restoring user type objects (user, inetOrgPerson or
          organizationalPerson LDAP classes) that is returned in search result with
          'kRestorePasswordRequired' flag, an initial password is required. The
          password is UTF8 string encoded. Password cannot be empty
          and must satisfy production AD password complexity. If
          'kFromDestRecycleBinIfFound' is true and the user is restored from
          production AD recycle bin, password will not be changed and the restored
          user retains their original password. For non-user type objects, this
          password value is ignored. The username field is ignored in the
          credentials.
        x-nullable: true
        $ref: '#/definitions/Credentials'
      guidVec:
        description: |-
          Array of AD object guids to restore either from recycle bin or from AD
          snapshot. The guid should not exist in production AD. If it exits, then
          kDuplicate error is output in status.
        type: array
        items:
          type: string
        x-go-name: GuidVec
        x-nullable: true
      optionFlags:
        description: Restore option flags of type ADObjectRestoreOptionFlags.
        type: integer
        format: uint32
        x-go-name: OptionFlags
        x-nullable: true
      ouPath:
        description: |-
          Distinguished name(DN) of the target Organization Unit (OU) to restore
          non-OU object. This can be empty, in which case objects are restored
          to their original OU. The 'credential' specified must have privileges to
          add objects to this OU. Example: 'OU=SJC,OU=EngOU,DC=contoso,DC=com'.
          This parameter is ignored for OU objects.
        type: string
        x-go-name: OuPath
        x-nullable: true
      srcSysvolFolder:
        description: When restoring a GPO, need to know the absolute path for SYSVOL
          folder.
        type: string
        x-go-name: SrcSysvolFolder
        x-nullable: true
    x-go-package: magneto/agents/windows/stub/ad_param.pb
  ADObjectRestoreStatus:
    type: object
    title: AD object restore status for an object such as user, computer, group, etc.
    properties:
      destGuid:
        description: |-
          Destination guid string of the AD object that is newly created on
          production AD corresponding to 'source_guid'. If the object was restored
          from production AD recycle Bin, this value can be empty or set to same
          value as 'source_guid'. If this value is non-empty and is different from
          source_guid, implying production AD object is a new object created
          in production AD as part of restore.
        type: string
        x-go-name: DestGuid
        x-nullable: true
      objectFlags:
        description: Object result flags of type ADObjectFlags.
        type: integer
        format: uint32
        x-go-name: ObjectFlags
        x-nullable: true
      propertyStatusVec:
        description: AD object attribute(property) restore status vector.
        type: array
        items:
          $ref: '#/definitions/ADObjectRestoreStatus_ADAttributeRestoreStatus'
        x-go-name: PropertyStatusVec
        x-nullable: true
      sourceGuid:
        description: |-
          Source guid of AD object that was restored. This
          will not be empty. This is populated from the source of request argument.
        type: string
        x-go-name: SourceGuid
        x-nullable: true
      status:
        description: |-
          Error status at object level. Callers should inspect 'property_status_vec'
          for individual attribute restore failures. The attribute restore failures
          will not be rolled into this status.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      timetakenMs:
        description: |-
          Time taken in milliseconds to restore the individual object or attribute
          update. If this object restore was part of a batch, it shows the time
          taken once the operation was dispatched to AD for the object. This time
          can be useful in answering why some objects took long time to restore.
          Note that this time is not the elapsed time when the request was made
          from Magneto.
        type: integer
        format: uint64
        x-go-name: TimetakenMs
        x-nullable: true
    x-go-package: magneto/agents/windows/stub/ad_param.pb
  ADObjectRestoreStatus_ADAttributeRestoreStatus:
    type: object
    title: AD attribute (property) restore status for a specific property.
    properties:
      attrstatusVec:
        description: |-
          Error status. If the 'attrstatus_vec' is empty or contains kNoError,
          treat the attribute restore as success. For multi-valued properties such
          as 'memberOf', this vector may contain failure to add or remove specific
          value within the multi-value set.
        type: array
        items:
          $ref: '#/definitions/ErrorProto'
        x-go-name: AttrstatusVec
        x-nullable: true
      ldapName:
        description: LDAP name of the attribute.
        type: string
        x-go-name: LdapName
        x-nullable: true
    x-go-package: magneto/agents/windows/stub/ad_param.pb
  ADRestoreStatus:
    description: |-
      Represents AD restore status for object/attribute recovery. Each
      ADRestoreStatus entry will contain object_info: information about the object
      getting restored and status: status of the restore operation. object_info
      is used to generate the audit information of the AD restore operations.
    type: object
    properties:
      objectInfo:
        description: |-
          The audit information about the AD object which was being recovered.
          This field will contain values like name,objectGUID,DN,objectClass and
          this information is used by the UI to show the audit information.
        x-nullable: true
        $ref: '#/definitions/CompareADObjectsResult_ADObject'
      status:
        description: |-
          Status object for AD objects/attributes for which the restores
          were done. This is an echo of the restore status sent by the agent
          for restore RPC call.
        x-nullable: true
        $ref: '#/definitions/ADObjectRestoreStatus'
    x-go-package: magneto/base/magneto.pb
  ADUpdateRestoreTaskOptions:
    type: object
    title: AD specific options to update an AD restore task.
    properties:
      objectAttributesParam:
        description: |-
          Object attributes restore params with the list of attributes to be
          restored. This is set only when type is kObjectAttributes.
        x-nullable: true
        $ref: '#/definitions/ADAttributeRestoreParam'
      objectParam:
        description: |-
          Object restore params with info about objects to be restored. This is
          set only when type is kObjects.
        x-nullable: true
        $ref: '#/definitions/ADObjectRestoreParam'
      type:
        description: Specifies the AD restore request type.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  AWSFleetParams:
    type: object
    title: Params for AWS fleets deployment.
    properties:
      fleetSubnetType:
        description: |-
          Fleet's subnet type. This field should always be set when specifying
          fleet params.
        type: integer
        format: int32
        x-go-name: FleetSubnetType
        x-nullable: true
      fleetTagVec:
        description: Optional list of tags to be associated with the fleets.
        type: array
        items:
          $ref: '#/definitions/AWSFleetParams_Tag'
        x-go-name: FleetTagVec
        x-nullable: true
      networkParams:
        description: |-
          Network information for the fleet. This will be only set when
          fleet_subnet_type is kCustom.
        x-nullable: true
        $ref: '#/definitions/AWSFleetParams_NetworkParams'
      networkParamsMap:
        description: |-
          Map for a region to network params, as network params can be defined
          per region. Only set when kCustom fleet subnet type is being used.
        type: array
        items:
          $ref: '#/definitions/AWSFleetParams_NetworkParamsMapEntry'
        x-go-name: NetworkParamsMap
        x-nullable: true
      networkParamsVec:
        description: |-
          Network information for the fleet. This will be only set when
          fleet_subnet_type is kCustom.
        type: array
        items:
          $ref: '#/definitions/AWSFleetParams_NetworkParams'
        x-go-name: NetworkParamsVec
        x-nullable: true
    x-go-package: magneto/base/entities/aws.pb
  AWSFleetParams_NetworkParams:
    type: object
    title: Network params for a VM.
    properties:
      region:
        description: Region for the VM.
        type: string
        x-go-name: Region
        x-nullable: true
      subnet:
        description: Subnet for the VM.
        type: string
        x-go-name: Subnet
        x-nullable: true
      vpc:
        description: VPC for the VM.
        type: string
        x-go-name: Vpc
        x-nullable: true
    x-go-package: magneto/base/entities/aws.pb
  AWSFleetParams_NetworkParamsMapEntry:
    type: object
    properties:
      key:
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        x-nullable: true
        $ref: '#/definitions/AWSFleetParams_NetworkParams'
    x-go-package: magneto/base/entities/aws.pb
  AWSFleetParams_Tag:
    type: object
    title: Tag information.
    properties:
      key:
        description: Key for the tag.
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        description: Value for the tag.
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: magneto/base/entities/aws.pb
  AWSSnapshotManagerParams:
    type: object
    title: Proto to encapsulate additional params for AWS snapshot manager jobs.
    properties:
      amiCreationFrequency:
        description: |-
          The frequency of AMI creation. This should be set if the option to create
          AMI is set. A value of n creates an AMI from the snapshots after every n
          runs. eg. n = 2 implies every alternate backup run starting from the first
          will create an AMI.
        type: integer
        format: int32
        x-go-name: AmiCreationFrequency
        x-nullable: true
      createAmiForRun:
        description: Whether we need to create an AMI for this run.
        type: boolean
        x-go-name: CreateAmiForRun
        x-nullable: true
      shouldCreateAmi:
        description: Whether we need to create an AMI after taking snapshots of the
          instance.
        type: boolean
        x-go-name: ShouldCreateAmi
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  AagAndDatabases:
    description: Specifies an AAG and the database members of the AAG.
    type: object
    title: AAG And Databases.
    properties:
      aag:
        description: Specifies an AAG Protection Source object on a VM or a Physical
          host.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      databases:
        description: Specifies databases found that are members of the AAG.
        type: array
        items:
          $ref: '#/definitions/ProtectionSource'
        x-go-name: Databases
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AccessToken:
    description: |-
      Specifies an Access Token that provides permissions for a client to access
      the Cohesity REST API available from a Cohesity Cluster.
    type: object
    title: Access Token.
    properties:
      accessToken:
        description: Generated access token.
        type: string
        x-go-name: AccessToken
        x-nullable: true
      privileges:
        description: Privileges for the user.
        type: array
        items:
          type: string
        x-go-name: Privileges
        x-nullable: true
      tokenType:
        description: Access token type.
        type: string
        x-go-name: TokenType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AccessTokenCredential:
    description: Specifies the Cohesity credentials required for generating an access
      token.
    type: object
    title: Create Access Token Credential Request.
    required:
    - username
    - password
    properties:
      domain:
        description: |-
          Specifies the domain the user is logging in to. For a Local user model,
          the domain is always LOCAL. For LDAP/AD user models, the domain will map to
          an LDAP connection string. A user is uniquely identified by a
          combination of username and domain. If this is not set, LOCAL is assumed.
        type: string
        x-go-name: Domain
        x-nullable: true
      password:
        description: Specifies the password of the Cohesity user account.
        type: string
        x-go-name: Password
        x-nullable: true
      username:
        description: Specifies the login name of the Cohesity user.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AcropolisProtectionSource:
    description: Specifies a Protection Source in Acropolis environment.
    type: object
    title: Acropolis Protection Source.
    properties:
      clusterUuid:
        description: |-
          Specifies the UUID of the Acropolis cluster instance to which this
          entity belongs to.
        type: string
        x-go-name: ClusterUuid
        x-nullable: true
      description:
        description: Specifies a description about the Protection Source.
        type: string
        x-go-name: Description
        x-nullable: true
      mountPath:
        description: |-
          Specifies whether the VM is an agent VM. This is applicable to
          acropolis entity of type kVirtualMachine.
        type: boolean
        x-go-name: IsAgentVm
        x-nullable: true
      name:
        description: Specifies the name of the Acropolis Object.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of an Acropolis Protection Source Object such as
          'kPrismCentral', 'kHost', 'kNetwork', etc.
          Specifies the type of an Acropolis source entity.
          'kPrismCentral' indicates a collection of multiple Nutanix clusters.
          'kStandaloneCluster' indicates a single Nutanix cluster.
          'kCluster' indicates a Nutanix cluster managed by a Prism Central.
          'kHost' indicates an Acropolis host.
          'kVirtualMachine' indicates a Virtual Machine.
          'kNetwork' indicates a Virtual Machine network object.
          'kStorageContainer' represents a storage container object.
        type: string
        enum:
        - kPrismCentral
        - kStandaloneCluster
        - kCluster
        - kHost
        - kVirtualMachine
        - kNetwork
        - kStorageContainer
        x-go-name: Type
        x-nullable: true
      uuid:
        description: |-
          Specifies the UUID of the Acropolis Object. This is unique within the
          cluster instance. Together with clusterUuid, this entity is unique
          within the Acropolis environment.
        type: string
        x-go-name: Uuid
        x-nullable: true
      version:
        description: Specifies the version of an Acropolis cluster or standalone cluster.
        type: string
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AcropolisRestoreParameters:
    description: |-
      This field defines the Acropolis specific params for restore tasks of type
      kRecoverVMs.
    type: object
    properties:
      disableNetwork:
        description: |-
          Specifies whether the network should be left in disabled state.
          Attached network is enabled by default. Set this flag to true to
          disable it.
        type: boolean
        x-go-name: DisableNetwork
        x-nullable: true
      networkId:
        description: |-
          Specifies a network configuration to be attached to the cloned or
          recovered object.
          For kCloneVMs and kRecoverVMs tasks, original network configuration
          is detached if the cloned or recovered object is kept under a different
          parent Protection Source or a different Resource Pool.
          By default, for kRecoverVMs task, original network configuration is
          preserved if the recovered object is kept under the same parent
          Protection Source and the same Resource Pool.
          Specify this field to override the preserved network configuration or
          to attach a new network configuration to the cloned or recovered objects.
          You can get the networkId of the kNetwork object by setting
          includeNetworks to 'true' in the GET /public/protectionSources operation.
          In the response, get the id of the desired kNetwork object, the resource
          pool, and the registered parent Protection Source.
        type: integer
        format: int64
        x-go-name: NetworkId
        x-nullable: true
      poweredOn:
        description: |-
          Specifies the power state of the cloned or recovered objects.
          By default, the cloned or recovered objects are powered off.
        type: boolean
        x-go-name: KeepPoweredOn
        x-nullable: true
      prefix:
        description: |-
          Specifies a prefix to prepended to the source object name to derive a
          new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Prefix
        x-nullable: true
      storageContainerId:
        description: |-
          A storage container where the VM's files should be restored to. This
          field is optional if the VM is being restored to its original parent
          source. If not specified, the VM's files will be restored to their
          original storage container(s). This field is mandatory if the VMs are
          being restored to a different parent source.
        type: integer
        format: int64
        x-go-name: StorageContainerId
        x-nullable: true
      suffix:
        description: |-
          Specifies a suffix to appended to the original source object name
          to derive a new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ActivateViewAliasesResult:
    description: |-
      Specifies the information of activated alias views created
      for a view.
    type: object
    title: Activate View Aliases Result.
    properties:
      aliases:
        description: |-
          Aliases created for the view. A view alias allows a directory path inside
          a view to be mounted using the alias name.
        type: array
        items:
          $ref: '#/definitions/ViewAlias'
        x-go-name: Aliases
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ActiveAlertsStats:
    description: Specifies the active alert statistics details.
    type: object
    title: Active Alert Statistics.
    properties:
      numCriticalAlerts:
        description: Specifies the count of active critical Alerts excluding alerts
          that belong to other bucket.
        type: integer
        format: int64
        x-go-name: NumCriticalAlerts
        x-nullable: true
      numCriticalAlertsCategories:
        description: Specifies the count of active critical alerts categories.
        type: integer
        format: int64
        x-go-name: NumCriticalAlertsCategories
        x-nullable: true
      numHardwareAlerts:
        description: Specifies the count of active hardware Alerts.
        type: integer
        format: int64
        x-go-name: NumHardwareAlerts
        x-nullable: true
      numHardwareCriticalAlerts:
        description: Specifies the count of active hardware critical Alerts.
        type: integer
        format: int64
        x-go-name: NumHardwareCriticalAlerts
        x-nullable: true
      numHardwareInfoAlerts:
        description: Specifies the count of active hardware info Alerts.
        type: integer
        format: int64
        x-go-name: NumHardwareInfoAlerts
        x-nullable: true
      numHardwareWarningAlerts:
        description: Specifies the count of active hardware warning Alerts.
        type: integer
        format: int64
        x-go-name: NumHardwareWarningAlerts
        x-nullable: true
      numInfoAlerts:
        description: Specifies the count of active info Alerts excluding alerts that
          belong to other bucket.
        type: integer
        format: int64
        x-go-name: NumInfoAlerts
        x-nullable: true
      numInfoAlertsCategories:
        description: Specifies the count of active info alerts categories.
        type: integer
        format: int64
        x-go-name: NumInfoAlertsCategories
        x-nullable: true
      numOtherAlerts:
        description: Specifies the count of active Alerts of other bucket
        type: integer
        format: int64
        x-go-name: NumOtherAlerts
        x-nullable: true
      numOtherCriticalAlerts:
        description: Specifies the count of active other critical Alerts.
        type: integer
        format: int64
        x-go-name: NumOtherCriticalAlerts
        x-nullable: true
      numOtherInfoAlerts:
        description: Specifies the count of active other info Alerts.
        type: integer
        format: int64
        x-go-name: NumOtherInfoAlerts
        x-nullable: true
      numOtherWarningAlerts:
        description: Specifies the count of active other warning Alerts.
        type: integer
        format: int64
        x-go-name: NumOtherWarningAlerts
        x-nullable: true
      numServiceAlerts:
        description: Specifies the count of active service Alerts.
        type: integer
        format: int64
        x-go-name: NumServiceAlerts
        x-nullable: true
      numServiceCriticalAlerts:
        description: Specifies the count of active service critical Alerts.
        type: integer
        format: int64
        x-go-name: NumServiceCriticalAlerts
        x-nullable: true
      numServiceInfoAlerts:
        description: Specifies the count of active service info Alerts.
        type: integer
        format: int64
        x-go-name: NumServiceInfoAlerts
        x-nullable: true
      numServiceWarningAlerts:
        description: Specifies the count of active service warning Alerts.
        type: integer
        format: int64
        x-go-name: NumServiceWarningAlerts
        x-nullable: true
      numSoftwareAlerts:
        description: Specifies the count of active software Alerts.
        type: integer
        format: int64
        x-go-name: NumSoftwareAlerts
        x-nullable: true
      numSoftwareCriticalAlerts:
        description: Specifies the count of active software critical Alerts.
        type: integer
        format: int64
        x-go-name: NumSoftwareCriticalAlerts
        x-nullable: true
      numSoftwareInfoAlerts:
        description: Specifies the count of active software info Alerts.
        type: integer
        format: int64
        x-go-name: NumSoftwareInfoAlerts
        x-nullable: true
      numSoftwareWarningAlerts:
        description: Specifies the count of active software warning Alerts.
        type: integer
        format: int64
        x-go-name: NumSoftwareWarningAlerts
        x-nullable: true
      numWarningAlerts:
        description: Specifies the count of active warning Alerts excluding alerts
          that belong to other bucket.
        type: integer
        format: int64
        x-go-name: NumWarningAlerts
        x-nullable: true
      numWarningAlertsCategories:
        description: Specifies the count of active warning alerts categories.
        type: integer
        format: int64
        x-go-name: NumWarningAlertsCategories
        x-nullable: true
  ActiveDirectoryEntry:
    description: Specifies the join settings for a Microsoft Active Directory domain.
    type: object
    title: Active Directory.
    properties:
      domainName:
        description: Specifies the fully qualified domain name (FQDN) of an Active
          Directory.
        type: string
        x-go-name: DomainName
        x-nullable: true
      fallbackUserIdMappingInfo:
        description: |-
          Specifies the fallback id mapping info which is used when an ID mapping
          for a user is not found via the above IdMappingInfo. Only supported for
          two types of fallback mapping types - 'kRid' and 'kFixed'.
        x-nullable: true
        $ref: '#/definitions/UserIdMapping'
      ignoredTrustedDomains:
        description: |-
          Specifies the list of trusted domains that were set by the user to be
          ignored during trusted domain discovery.
        type: array
        items:
          type: string
        x-go-name: IgnoredTrustedDomains
        x-nullable: true
      ldapProviderId:
        description: Specifies the LDAP provider id which is map to this Active Directory
        type: integer
        format: int64
        x-go-name: LdapProviderId
        x-nullable: true
      machineAccounts:
        description: |-
          Array of Machine Accounts.

          Specifies an array of computer names used to identify the Cohesity
          Cluster on the domain.
        type: array
        items:
          type: string
        x-go-name: MachineAccounts
        x-nullable: true
      ouName:
        description: Specifies an optional Organizational Unit name.
        type: string
        x-go-name: OuName
        x-nullable: true
      password:
        description: Specifies the password for the specified userName.
        type: string
        x-go-name: Password
        x-nullable: true
      preferredDomainControllers:
        description: |-
          Specifies Map of Active Directory domain names to its preferred domain
          controllers.
        type: array
        items:
          $ref: '#/definitions/PreferredDomainController'
        x-go-name: PreferredDomainControllers
        x-nullable: true
      taskPath:
        description: Specifies the task path for AD joining task.
        type: string
        x-go-name: TaskPath
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      trustedDomains:
        description: Specifies the trusted domains of the Active Directory domain.
        type: array
        items:
          type: string
        x-go-name: TrustedDomains
        x-nullable: true
        readOnly: true
      trustedDomainsEnabled:
        description: Specifies whether Trusted Domain discovery is disabled.
        type: boolean
        x-go-name: TrustedDomainsEnabled
        x-nullable: true
      unixRootSid:
        description: |-
          Specifies the SID of the Active Directory domain user to be mapped to
          Unix root user.
        type: string
        x-go-name: UnixRootSid
        x-nullable: true
      userIdMappingInfo:
        description: |-
          Specifies the information about how the Unix and Windows users are mapped
          for this domain.
        x-nullable: true
        $ref: '#/definitions/UserIdMapping'
      userName:
        description: Specifies a userName that has administrative privileges in the
          domain.
        type: string
        x-go-name: UserName
        x-nullable: true
      workgroup:
        description: Specifies an optional Workgroup name.
        type: string
        x-go-name: Workgroup
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ActiveDirectoryPrincipal:
    description: Specifies information about a single principal in an Active Directory.
    type: object
    title: Active Directory Principal.
    properties:
      domain:
        description: |-
          Specifies the domain name of the where the principal' account is
          maintained.
        type: string
        x-go-name: Domain
        x-nullable: true
      fullName:
        description: Specifies the full name (first and last names) of the principal.
        type: string
        x-go-name: FullName
        x-nullable: true
      objectClass:
        description: |-
          Specifies the object class of the principal (either 'kGroup' or 'kUser').
          'kUser' specifies a user object class.
          'kGroup' specifies a group object class.
          'kComputer' specifies a computer object class.
          'kWellKnownPrincipal' specifies a well known principal.
        type: string
        enum:
        - kUser
        - kGroup
        - kComputer
        - kWellKnownPrincipal
        x-go-name: ObjectClass
        x-nullable: true
      principalName:
        description: Specifies the name of the principal.
        type: string
        x-go-name: PrincipalName
        x-nullable: true
      sid:
        description: Specifies the unique Security id (SID) of the principal.
        type: string
        x-go-name: Sid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ActiveDirectoryPrincipalsAddParameters:
    description: |-
      Specifies the settings for adding new users and groups
      for Active Directory principals.
      These users and groups are added to the Cohesity Cluster.
      You cannot create users and groups in the default Cohesity domain
      called 'LOCAL' using this operation.
    type: object
    title: Add Groups or Users Request.
    properties:
      description:
        description: Specifies a description about the user or group.
        type: string
        x-go-name: Description
        x-nullable: true
      domain:
        description: |-
          Specifies the domain of the Active Directory where the
          referenced principal is stored.
        type: string
        x-go-name: Domain
        x-nullable: true
      objectClass:
        description: |-
          Specifies the type of the referenced Active Directory principal.
          If 'kGroup', the referenced Active Directory principal is a group.
          If 'kUser', the referenced Active Directory principal is a user.
          'kUser' specifies a user object class.
          'kGroup' specifies a group object class.
          'kComputer' specifies a computer object class.
          'kWellKnownPrincipal' specifies a well known principal.
        type: string
        enum:
        - kUser
        - kGroup
        - kComputer
        - kWellKnownPrincipal
        x-go-name: ObjectClass
        x-nullable: true
      principalName:
        description: |-
          Specifies the name of the Active Directory principal,
          that will be referenced by the group or user.
          The name of the Active Directory principal is used for naming
          the new group or user on the Cohesity Cluster.
        type: string
        x-go-name: PrincipalName
        x-nullable: true
      restricted:
        description: |-
          Whether the principal is a restricted principal. A restricted principal
          can only view the objects he has permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with this user or group
          such as 'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for this group or user.
          For example if the 'joe' user is added for the Active Directory
          'joe' user principal and is associated with the Cohesity
          'View' role, 'joe' can log in to the Cohesity Dashboard
          and has a read-only view of the data on the Cohesity Cluster.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdAttribute:
    description: |-
      Represnts the information about the AD attribute of the object.
      It also contains information regarding whether it is system attribute
      and whether the attribute is equal on both Snapshot and Production
      AD.
    type: object
    title: AdAttribute
    properties:
      adAttributeFlags:
        description: |-
          Specifies the flags related to the attribute of the AD object.
          'kEqual' indicates the attribute value of AD object from Snapshot and
          Production AD are equal.
          'kNotEqual' indicates the attribute value of AD object from Snapshot and
          Production AD are not equal.
          'kNotFound' indicates attribute of the AD object is missing from both
          Snapshot and Production AD.
          'kSystem' indicates this is system attribute. This can only be updated
          by the AD internal component.
          'kMultiValue' indicates that the attribute is mutli-value attribute. This
          attribute supports mutli-value merge during attribute restore operation.
        type: array
        items:
          type: string
          enum:
          - kEqual
          - kNotEqual
          - kNotFound
          - kSystem
          - kMultiValue
        x-go-name: AdAttributeFlags
        x-nullable: true
      destinationValue:
        description: |-
          Specifies the value of the attribute of the AD object present on the
          Production AD.
        x-nullable: true
        $ref: '#/definitions/AttributeValue'
      errorMessage:
        description: Specifies the error message regarding the attribute
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      name:
        description: Specifies the name of the attribute of the AD object.
        type: string
        x-go-name: Name
        x-nullable: true
      sameValue:
        description: |-
          Specifies the value of the attribute of the AD object here if attribute
          is equal on both Snapshot and Production AD. I
        x-nullable: true
        $ref: '#/definitions/AttributeValue'
      sourceValue:
        description: |-
          Specifies the value of the attribute of the AD object present on the
          Snapshot AD.
        x-nullable: true
        $ref: '#/definitions/AttributeValue'
    x-go-package: cohesity/iris/server/data/public
  AdDomain:
    description: Specifies information about an AD Domain.
    type: object
    title: AD Domain.
    properties:
      dnsRoot:
        description: Specifies DNS root.
        type: string
        x-go-name: DnsRoot
        x-nullable: true
      forest:
        description: Specifies AD forest name.
        type: string
        x-go-name: Forest
        x-nullable: true
      identity:
        description: Specifies Identity information of the domain.
        x-nullable: true
        $ref: '#/definitions/AdDomainIdentity'
      netbiosName:
        description: Specifies AD NetBIOS name.
        type: string
        x-go-name: NetbiosName
        x-nullable: true
      parentDomain:
        description: Specifies parent domain name.
        type: string
        x-go-name: ParentDomain
        x-nullable: true
      tombstoneDays:
        description: Specifies tombstone time in days.
        type: integer
        format: uint32
        x-go-name: TombstoneDays
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdDomainController:
    description: Specifies information about an AD domain controller.
    type: object
    title: AD Domain Controller.
    properties:
      backupSupported:
        description: Specifies whether backup of this domain controller is supported.
        type: boolean
        x-go-name: BackupSupported
        x-nullable: true
      backupUnsupportedReasons:
        description: Specifies any reason(s) for domain controller backup not supported.
        type: array
        items:
          type: string
        x-go-name: BackupUnsupportedReasons
        x-nullable: true
      domain:
        description: Specifies Domain hosted on this domain controller.
        x-nullable: true
        $ref: '#/definitions/AdDomain'
      hostName:
        description: Specifies FQDN host name of the domain controller.
        type: string
        x-go-name: HostName
        x-nullable: true
      isGlobalCatalog:
        description: Specifies whether this domain controller is a global catalog
          server.
        type: boolean
        x-go-name: IsGlobalCatalog
        x-nullable: true
      isReadOnly:
        description: Specifies whether this domain controller is read only.
        type: boolean
        x-go-name: IsReadOnly
        x-nullable: true
      utcOffsetMin:
        description: Specifies UTC time offset of this domain controller in minutes.
        type: integer
        format: int32
        x-go-name: UtcOffsetMin
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdDomainIdentity:
    description: AD domain identity information.
    type: object
    title: AD Domain Identity.
    properties:
      dn:
        description: Specifies distinguished name of the domain.
        type: string
        x-go-name: Dn
        x-nullable: true
      guid:
        description: Specifies Unique objectGUID for an AD domain.
        type: string
        x-go-name: ObjectGuid
        x-nullable: true
      name:
        description: Specifies display name of the domain.
        type: string
        x-go-name: Name
        x-nullable: true
      sid:
        description: Specifies domain SID.
        type: string
        x-go-name: Sid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdGuidPair:
    description: AdGuidPair is the AD object guid string pair.
    type: object
    title: |-
      Refer: ADGuidPair /magneto/agents/windows/stub/ad_param.proto
      AD GUID Pair
    properties:
      destination:
        description: |-
          Specifies the destination guid in production AD object corresponding to
          source. If empty, it assumed to be 'source' guid.
        type: string
        x-go-name: Destination
        x-nullable: true
      source:
        description: |-
          Specifies the source guid string of an AD object in mounted AD snapshot.
          This cannot be empty.
        type: string
        x-go-name: Source
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdObjectAttributeParameters:
    description: |-
      AdObjectAttributeParameters are AD attribute recovery parameters for one
      or more AD objects
    type: object
    title: AD Object Attribute Parameters
    properties:
      adGuidPairs:
        description: |-
          Specifies the array of source and destination object guid pairs to
          restore attributes.
        type: array
        items:
          $ref: '#/definitions/AdGuidPair'
        x-go-name: AdGuidPairs
        x-nullable: true
      excludeLdapProperties:
        description: |-
          Specifies the array of LDAP property names to excluded from
          'property_vec'. Excluded property name cannot contain wildcard character
          '*'.  Property names are case insensitive.
        type: array
        items:
          type: string
        x-go-name: ExcludeLdapProperties
        x-nullable: true
      ldapProperties:
        description: |-
          Specifies the array of LDAP property(attribute) names. The name can be
          standard or custom property defined in AD schema partition. The property
          can contain wildcard character '*'. If this array is empty, then '*' is
          assigned, means restore all properties except default system excluded
          properties. Wildcards will be expanded. If 'memberOf' property is
          included, group membership of the objects specified in 'guid_vec' will be
          restored. Property that does not exist for an object is ignored and no
          error info is returned for that property. Property names are case
          insensitive.
        type: array
        items:
          type: string
        x-go-name: LdapProperties
        x-nullable: true
      mergeMultiValProperties:
        description: |-
          Specifies the Option to merge multi-valued values vs clearing and setting
          values from the AD snapshot. Defaults is to overwrite production AD
          values from the source AD snapshot. When updating group membership (using
          'memberOf' property), setting this option to true will result in group
          membership merge. This is useful in cases where production AD has later
          updates that should not be overridden while restoring an attribute.
        type: boolean
        x-go-name: MergeMultiValProperties
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdObjectMetaData:
    description: Specifies details about the AD objects.
    type: object
    title: AD object Meta Data.
    properties:
      distinguishedName:
        description: Specifies the Distinguished name of the AD object.
        type: string
        x-go-name: DistinguishedName
        x-nullable: true
      domain:
        description: Domain of the AD object.
        type: string
        x-go-name: Domain
        x-nullable: true
      email:
        description: Specifies the email of the AD object of type user or group.
        type: string
        x-go-name: Email
        x-nullable: true
      guid:
        description: Specifies the Guid of the AD object.
        type: string
        x-go-name: Guid
        x-nullable: true
      name:
        description: Specifies the name of the AD object.
        type: string
        x-go-name: Name
        x-nullable: true
      objectType:
        description: |-
          Specifies the type of the AD Object. The type may be user, computer,
          group or ou.
        type: string
        x-go-name: ObjectType
        x-nullable: true
      samAccountName:
        description: Specifies the sam account name of the AD object.
        type: string
        x-go-name: SamAccountName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdObjectRestoreInformation:
    description: Represents the details about the restore of the AD object.
    type: object
    title: AD Object Restore Information.
    properties:
      attributeRestoreInfo:
        description: Specifies the list of attributes of the AD object whose restore
          failed.
        type: array
        items:
          $ref: '#/definitions/AttributeRestoreInformation'
        x-go-name: AttributeRestoreInfo
        x-nullable: true
      errorMessage:
        description: Specifies the error message while restoring the AD Object.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      name:
        description: Specifies the name of the AD object.
        type: string
        x-go-name: Name
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time of the restore of the AD object specified as a
          Unix epoch Timestamp(in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      timeTakenMsecs:
        description: |-
          Specifies the time taken for restore of AD Object and its attributes in
          milliseconds.
        type: integer
        format: uint64
        x-go-name: TimeTakenMsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdObjectRestoreParameters:
    description: |-
      AdObjectRestoreParameters are the parameters to restore AD objects from
      recycle bin or from a mounted AD snapshot database.
    type: object
    title: AD Object Restore Parameters
    properties:
      changePasswordOnNextLogon:
        description: |-
          Specifies the option for AD 'user' type of objects to change password when
          they next logon.
        type: boolean
        x-go-name: ChangePasswordOnNextLogon
        x-nullable: true
      leaveStateDisabled:
        description: |-
          Specifies the option to leave the restored object in disabled state for
          AD 'account' type of objects that support disabled state so that admin can
          do manual inspection before enabling the account. This property has no
          effect when restoring object from recycle bin. 'User' and 'Computer' are
          AD account types having enable/disable option.
        type: boolean
        x-go-name: LeaveStateDisabled
        x-nullable: true
      objectGuids:
        description: |-
          Specifies the array of AD object guids to restore either from recycle bin
          or from AD snapshot. The guid should not exist in production AD. If it
          exits, then kDuplicate error is output in status.
        type: array
        items:
          type: string
        x-go-name: ObjectGuids
        x-nullable: true
      organizationUnitPath:
        description: |-
          Specifies the Distinguished name(DN) of the target Organization Unit (OU)
          to restore non-OU object. This can be empty, in which case objects are
          restored to their original OU. The 'credential' specified must have
          privileges to add objects to this OU. Example:
          'OU=SJC,OU=EngOU,DC=contoso,DC=com'. This parameter is ignored for OU
          objects.
        type: string
        x-go-name: OrganizationUnitPath
        x-nullable: true
      password:
        description: |-
          Specifies the password for restoring user type objects (user,
          inetOrgPerson or organizationalPerson LDAP classes) that is returned in
          search result with 'kRestorePasswordRequired' flag, an initial password
          is required. The password is UTF8 string encoded in base64 format.
          Password cannot be empty and must satisfy production AD password
          complexity. If 'kFromDestRecycleBinIfFound' is true and the user is
          restored from production AD recycle bin, password will not be changed and
          the restored user retains their original password. For non-user type
          objects, this password value is ignored.
        type: string
        x-go-name: Password
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdObjectsRestoreStatus:
    description: |-
      Represents the details about the status of restore of the AD objects.
      It also has details about the number of objects whose restore is
      successfull, failure or in progress.
    type: object
    title: Ad Objects Restore Status.
    properties:
      adObjectsRestoreInfo:
        description: |-
          Specifies the status of all the AD Objects which were requested to
          be restored.
        type: array
        items:
          $ref: '#/definitions/AdObjectRestoreInformation'
        x-go-name: AdObjectsRestoreInfo
        x-nullable: true
      numObjectsFailed:
        description: Specifies the number of AD Objects whose restore is in progress.
        type: integer
        format: int32
        x-go-name: NumObjectsRunning
        x-nullable: true
      numObjectsSucceeded:
        description: Specifies the number of AD Objects whose restore is successfull.
        type: integer
        format: int32
        x-go-name: NumObjectsSucceeded
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdProtectionSource:
    description: Specifies an object representing an AD entity.
    type: object
    title: AD Protection Source.
    properties:
      domainController:
        description: Specifies the domain controller residing in this physical machine.
        x-nullable: true
        $ref: '#/definitions/AdDomainController'
      domainName:
        description: Specifies the domain name corresponding to the domain controller.
        type: string
        x-go-name: DomainName
        x-nullable: true
      name:
        description: Specifies the domain name of the AD entity.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: Specifies the entity id of the owner entity.
        type: integer
        format: int64
        x-go-name: OwnerId
        x-nullable: true
      type:
        description: |-
          Specifies the type of the managed object in AD Protection Source.
          Specifies the kind of AD protection source.
          'kRootContainer' indicates the entity is a root container to an AD
          domain controller.
          'kDomainController' indicates the domain controller hosted in this physical
          server.
        type: string
        enum:
        - kRootContainer
        - kDomainController
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID for the AD entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdRestoreOptions:
    description: |-
      AdRestoreOptions are the AD specific options for the restore task being
      updated
    type: object
    title: AD Restore Options
    properties:
      objectAttributeParameters:
        description: |-
          Specifies the object attributes restore parameters with the list of
          attributes to be restored. This is set only when type is
          kObjectAttributes.
        x-nullable: true
        $ref: '#/definitions/AdObjectAttributeParameters'
      objectParameters:
        description: |-
          Specifies the object restore params with info about objects to be
          restored. This is set only when type is kObjects.
        x-nullable: true
        $ref: '#/definitions/AdObjectRestoreParameters'
      type:
        description: |-
          Specifies the AD restore request type.
          Specifies the action type of AD restore.

          'kNone' specifies no special behaviour.
          'kObjects' specifies the user action to restore AD objects from a mounted
          AD snapshot database.
          'kObjectAttributes' specifies the user action to restore attributes of an
          AD object from a mounted AD snapshot database.
        type: string
        enum:
        - kNone
        - kObjects
        - kObjectAttributes
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdRestoreParameters:
    description: Specifies the parameters specific to Application domain controller.
    type: object
    title: AD Application Server Restore Parameters.
    properties:
      adOptions:
        description: Specifies the Active Directory options for the Restore task.
        x-nullable: true
        $ref: '#/definitions/AdRestoreOptions'
      credentials:
        description: Specifies the credentials which are needed to connect to Production
          AD.
        x-nullable: true
        $ref: '#/definitions/Credentials'
      mountAndRestore:
        description: |-
          Specifies the option to mount the AD snapshot database and restore
          the AD objects in a single restore task.
          AdOptions must be set if this is set to true.
        type: boolean
        x-go-name: MountAndRestore
        x-nullable: true
      port:
        description: |-
          Specifies the port on which the AD domain controller's NTDS database will
          be mounted.
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdRootTopologyObject:
    description: Represents a node in AD Topology tree.
    type: object
    title: AD Root Topology Object.
    properties:
      childObjects:
        description: Specifies the array of children of this object.
        type: array
        items:
          description: Represents a node in AD Topology tree.
          type: object
          title: AD Root Topology Object. (AdRootTopologyObject)
        x-go-name: ChildObjects
        x-nullable: true
      description:
        description: Specifies the 'description' of an object.
        type: string
        x-go-name: Description
        x-nullable: true
      destGuid:
        description: |-
          Specifies the guid of matching 'source_guid' from production AD.
          This is looked up  based on source_guid or distinguishedName
          attribute value.
        type: string
        x-go-name: DestinationGuid
        x-nullable: true
      displayName:
        description: Specifies the display name of the object in AD Topology tree.
        type: string
        x-go-name: DisplayName
        x-nullable: true
      distinguishedName:
        description: |-
          Specifies the distinguished name of the object in AD Topology tree.
          Eg: CN=Jone Doe,OU=Users,DC=corp,DC=cohesity,DC=com
        type: string
        x-go-name: DistinguishedName
        x-nullable: true
      errorMessage:
        description: Specifies the AD error while fetching the ADRootTopologyObject.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      objectClass:
        description: |-
          Specifies the LDAP class name such as 'user','computer',
          'organizationalUnit'.
        type: string
        x-go-name: ObjectClass
        x-nullable: true
      sourceGuid:
        description: Specifies the guid string of the object in AD snapshot database.
        type: string
        x-go-name: SourceGuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AddedActiveDirectoryPrincipal:
    description: |-
      Specifies a group or user added to the Cohesity Cluster for an Active
      Directory principal.
    type: object
    title: Non-LOCAL Group or User.
    properties:
      createdTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the group or user
          was added to the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      description:
        description: Specifies a description about the user or group.
        type: string
        x-go-name: Description
        x-nullable: true
      domain:
        description: |-
          Specifies the domain of the Active Directory where the
          referenced principal is stored.
        type: string
        x-go-name: Domain
        x-nullable: true
      lastUpdatedTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the group or user
          was last modified on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: LastUpdatedTimeMsecs
        x-nullable: true
      objectClass:
        description: |-
          Specifies the type of the referenced Active Directory principal.
          If 'kGroup', the referenced Active Directory principal is a group.
          If 'kUser', the referenced Active Directory principal is a user.
          'kUser' specifies a user object class.
          'kGroup' specifies a group object class.
          'kComputer' specifies a computer object class.
          'kWellKnownPrincipal' specifies a well known principal.
        type: string
        enum:
        - kUser
        - kGroup
        - kComputer
        - kWellKnownPrincipal
        x-go-name: ObjectClass
        x-nullable: true
      principalName:
        description: |-
          Specifies the name of the Active Directory principal,
          that will be referenced by the group or user.
          The name of the Active Directory principal is used for naming
          the new group or user on the Cohesity Cluster.
        type: string
        x-go-name: PrincipalName
        x-nullable: true
      restricted:
        description: |-
          Whether the principal is a restricted principal. A restricted principal
          can only view the objects he has permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with this user or group
          such as 'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for this group or user.
          For example if the 'joe' user is added for the Active Directory
          'joe' user principal and is associated with the Cohesity
          'View' role, 'joe' can log in to the Cohesity Dashboard
          and has a read-only view of the data on the Cohesity Cluster.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      sid:
        description: |-
          Specifies the unique Security ID (SID) of the Active Directory principal
          associated with this group or user.
        type: string
        x-go-name: Sid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AddedIdpPrincipal:
    description: |-
      Specifies a group or user added to the Cohesity Cluster for an Idp
      principal.
    type: object
    title: Non-LOCAL Group or User.
    properties:
      createdTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the group or user
          was added to the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      domain:
        description: |-
          Specifies the name of the Idp where the
          referenced principal is stored.
        type: string
        x-go-name: Domain
        x-nullable: true
      lastUpdatedTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the group or user
          was last modified on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: LastUpdatedTimeMsecs
        x-nullable: true
      objectClass:
        description: |-
          Specifies the type of the referenced Idp principal.
          If 'kGroup', the referenced Idp principal is a group.
          If 'kUser', the referenced Idp principal is a user.
          'kUser' specifies a user object class.
          'kGroup' specifies a group object class.
          'kComputer' specifies a computer object class.
          'kWellKnownPrincipal' specifies a well known principal.
        type: string
        enum:
        - kUser
        - kGroup
        - kComputer
        - kWellKnownPrincipal
        x-go-name: ObjectClass
        x-nullable: true
      principalName:
        description: |-
          Specifies the name of the Idp principal,
          that will be referenced by the group or user.
          The name of the Idp principal is used for naming
          the new group or user on the Cohesity Cluster.
        type: string
        x-go-name: PrincipalName
        x-nullable: true
      restricted:
        description: |-
          Whether the principal is a restricted principal. A restricted principal
          can only view the objects he has permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with this user or group
          such as 'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for this group or user.
          For example if the 'joe' user is added for the Active Directory
          'joe' user principal and is associated with the Cohesity
          'View' role, 'joe' can log in to the Cohesity Dashboard
          and has a read-only view of the data on the Cohesity Cluster.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      sid:
        description: |-
          Specifies the unique Security ID (SID) of the Idp principal
          associated with this group or user.
        type: string
        x-go-name: Sid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AdditionalConnectorParams:
    description: |-
      Message that encapsulates the additional connector params to establish a
      connection with a particular environment.
    type: object
    properties:
      o365Region:
        description: |-
          Optional o365_region proto to store the region info to be used while
          making ews/graph api calls in o365 adapter.
        x-nullable: true
        $ref: '#/definitions/O365RegionProto'
      useOutlookEwsOauth:
        description: |-
          Whether OAuth should be used for authentication with EWS API (outlook
          backup), applicable only for Exchange Online.
        type: boolean
        x-go-name: UseOutlookEwsOauth
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  AdditionalOracleDBParams:
    type: object
    title: Message to capture additional channel information for Oracle Database.
    properties:
      appEntityId:
        description: Database app id.
        type: integer
        format: int64
        x-go-name: AppEntityId
        x-nullable: true
      dbInfoChannelVec:
        description: |-
          The following proto message should be renamed to a more general message
          to represent parameters pertaining to a single unique Oracle database.
          Uniqueness of an Oracle database should be strictly determined by its
          database unique name. i.e. all backup parameters needed for a unique
          Oracle database should be expressed in the following proto.

          It is a vector for future support of backing up Data Guard sources. We
          may or may not need this to be vector to support Data Guard sources. For
          now, the size of this vector is always 1. When we rename this proto in
          the future, if we determine there is no need to use a vector for Data
          Guard support, we can choose to remove 'repeated'.
        type: array
        items:
          $ref: '#/definitions/OracleDBChannelInfo'
        x-go-name: DbInfoChannelVec
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  AgentDeploymentStatusResponse:
    description: Specifies the overview of the agent deployment status.
    type: object
    title: Agent Deployment Status Response.
    properties:
      compactVersion:
        description: Specifies the compact version of Cohesity agent. For example,
          6.0.1.
        type: string
        x-go-name: CompactVersion
        x-nullable: true
      healthStatus:
        description: |-
          Specifies the health status of the Cohesity agent.
          Specifies the status of the agent running on a physical source.
          'kUnknown' indicates the Agent is not known. No attempt to connect
          to the Agent has occurred.
          'kUnreachable' indicates the Agent is not reachable.
          'kHealthy' indicates the Agent is healthy.
          'kDegraded' indicates the Agent is running but in a degraded state.
        type: string
        enum:
        - kUnknown
        - kUnreachable
        - kHealthy
        - kDegraded
        x-go-name: HealthStatus
        x-nullable: true
      hostIp:
        description: Specifies the IP of the host on which the agent is installed.
        type: string
        x-go-name: HostIp
        x-nullable: true
      hostOsType:
        description: |-
          Specifies the host type on which the agent is installed.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostOsType
        x-nullable: true
      lastUpgradeStatus:
        description: |-
          Specifies the status of the last upgrade attempt.
          Specifies the status of the upgrade of the agent on a physical server.
          'kIdle' indicates there is no agent upgrade in progress.
          'kAccepted' indicates the Agent upgrade is accepted.
          'kStarted' indicates the Agent upgrade is in progress.
          'kFinished' indicates the Agent upgrade is completed.
        type: string
        enum:
        - kIdle
        - kAccepted
        - kStarted
        - kFinished
        x-go-name: LastUpgradeStatus
        x-nullable: true
      upgradability:
        description: |-
          Specifies the upgradability of the agent running on the server.
          Specifies the upgradability of the agent running on the physical server.
          'kUpgradable' indicates the Agent can be upgraded to the agent software
          version on the cluster.
          'kCurrent' indicates the Agent is running the latest version.
          'kUnknown' indicates the Agent's version is not known.
          'kNonUpgradableInvalidVersion' indicates the Agent's version is invalid.
          'kNonUpgradableAgentIsNewer' indicates the Agent's version is newer than
          the agent software version the cluster.
          'kNonUpgradableAgentIsOld' indicates the Agent's version is too old that
          does not support upgrades.
        type: string
        enum:
        - kUpgradable
        - kCurrent
        - kUnknown
        - kNonUpgradableInvalidVersion
        - kNonUpgradableAgentIsNewer
        - kNonUpgradableAgentIsOld
        x-go-name: Upgradability
        x-nullable: true
      upgradeStatusMessage:
        description: |-
          Specifies detailed message about the agent upgrade failure. This field
          is not set for successful upgrade.
        type: string
        x-go-name: UpgradeStatusMessage
        x-nullable: true
      version:
        description: |-
          Specifies the Cohesity software version of the agent. For example:
          6.0.1-release-YYYYMMDD_<hash>
        type: string
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AgentInformation:
    description: |-
      Specifies information about the Agent software running on the server or
      the Virtual Machine.
    type: object
    title: Agent Information.
    properties:
      cbmrVersion:
        description: Specifies the version if Cristie BMR product is installed on
          the host.
        type: string
        x-go-name: CbmrVersion
        x-nullable: true
      hostType:
        description: |-
          Specifies the host type where the agent is running. This is only set for
          persistent agents.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      id:
        description: Specifies the agent's id.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the agent's name.
        type: string
        x-go-name: Name
        x-nullable: true
      oracleMultiNodeChannelSupported:
        description: Specifies whether oracle multi node multi channel is supported
          or not.
        type: boolean
        x-go-name: OracleMultiNodeChannelSupported
        x-nullable: true
      registrationInfo:
        description: Specifies registration information for an Agent.
        x-nullable: true
        $ref: '#/definitions/RegisteredSourceInfo'
      sourceSideDedupEnabled:
        description: Specifies whether source side dedup is enabled or not.
        type: boolean
        x-go-name: SourceSideDedupEnabled
        x-nullable: true
      status:
        description: |-
          Specifies the agent status.
          Specifies the status of the agent running on a physical source.
          'kUnknown' indicates the Agent is not known. No attempt to connect
          to the Agent has occurred.
          'kUnreachable' indicates the Agent is not reachable.
          'kHealthy' indicates the Agent is healthy.
          'kDegraded' indicates the Agent is running but in a degraded state.
        type: string
        enum:
        - kUnknown
        - kUnreachable
        - kHealthy
        - kDegraded
        x-go-name: Status
        x-nullable: true
      statusMessage:
        description: Specifies additional details about the agent status.
        type: string
        x-go-name: StatusMessage
        x-nullable: true
      upgradability:
        description: |-
          Specifies the upgradability of the agent running on the physical server.
          Specifies the upgradability of the agent running on the physical server.
          'kUpgradable' indicates the Agent can be upgraded to the agent software
          version on the cluster.
          'kCurrent' indicates the Agent is running the latest version.
          'kUnknown' indicates the Agent's version is not known.
          'kNonUpgradableInvalidVersion' indicates the Agent's version is invalid.
          'kNonUpgradableAgentIsNewer' indicates the Agent's version is newer than
          the agent software version the cluster.
          'kNonUpgradableAgentIsOld' indicates the Agent's version is too old that
          does not support upgrades.
        type: string
        enum:
        - kUpgradable
        - kCurrent
        - kUnknown
        - kNonUpgradableInvalidVersion
        - kNonUpgradableAgentIsNewer
        - kNonUpgradableAgentIsOld
        x-go-name: Upgradability
        x-nullable: true
      upgradeStatus:
        description: |-
          Specifies the status of the upgrade of the agent on a physical server.
          Specifies the status of the upgrade of the agent on a physical server.
          'kIdle' indicates there is no agent upgrade in progress.
          'kAccepted' indicates the Agent upgrade is accepted.
          'kStarted' indicates the Agent upgrade is in progress.
          'kFinished' indicates the Agent upgrade is completed.
        type: string
        enum:
        - kIdle
        - kAccepted
        - kStarted
        - kFinished
        x-go-name: UpgradeStatus
        x-nullable: true
      upgradeStatusMessage:
        description: |-
          Specifies detailed message about the agent upgrade failure. This field
          is not set for successful upgrade.
        type: string
        x-go-name: UpgradeStatusMessage
        x-nullable: true
      version:
        description: Specifies the version of the Agent software.
        type: string
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AggregatedSubtreeInfo:
    description: Aggregated information about a node subtree.
    type: object
    title: Aggregated Subtree Info.
    properties:
      environment:
        description: |-
          Specifies the environment such as 'kSQL' or 'kVMware', where the
          Protection Source exists.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      leavesCount:
        description: Specifies the number of leaf nodes under the subtree of this
          node.
        type: integer
        format: int64
        x-go-name: LeavesCount
        x-nullable: true
      totalLogicalSize:
        description: |-
          Specifies the total logical size of the data under the subtree
          of this node.
        type: integer
        format: int64
        x-go-name: TotalLogicalSize
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Alert:
    description: |-
      Specifies information about an Alert such as the type, id assigned by
      the Cohesity Cluster, number of duplicates, severity, etc.
    type: object
    title: Alert.
    properties:
      alertCategory:
        description: |-
          Specifies the category of an Alert.
          kDisk - Alerts that are related to Disk.
          kNode - Alerts that are related to Node.
          kCluster - Alerts that are related to Cluster.
          kNodeHealth - Alerts that are related to Node Health.
          kClusterHealth - Alerts that are related to Cluster Health.
          kBackupRestore - Alerts that are related to Backup/Restore.
          kEncryption - Alerts that are related to Encryption.
          kArchivalRestore - Alerts that are related to Archival/Restore.
          kRemoteReplication - Alerts that are related to Remote Replication.
          kQuota - Alerts that are related to Quota.
          kLicense - Alerts that are related to License.
          kHeliosProActiveWellness - Alerts that are related to Helios ProActive Wellness.
          kHeliosAnalyticsJobs - Alerts that are related to Helios Analytics Jobs.
          kHeliosSignatureJobs - Alerts that are related to Helios Signature Jobs.
          kSecurity - Alerts that are related to Security.
          kAppsInfra - Alerts that are related to applications infra.
          kAntivirus - Alerts that are related to antivirus.
          kArchivalCopy - Alerts that are related to archival copies.
        type: string
        enum:
        - kDisk
        - kNode
        - kCluster
        - kNodeHealth
        - kClusterHealth
        - kBackupRestore
        - kEncryption
        - kArchivalRestore
        - kRemoteReplication
        - kQuota
        - kLicense
        - kHeliosProActiveWellness
        - kHeliosAnalyticsJobs
        - kHeliosSignatureJobs
        - kSecurity
        - kAppsInfra
        - kAntivirus
        - kArchivalCopy
        x-go-name: AlertCategory
        x-nullable: true
      alertCode:
        description: |-
          Specifies a unique code that categorizes the Alert,
          for example: CE00200014, where CE stands for Cohesity Error, the alert
          state next 3 digits is the id of the Alert Category
          (e.g. 002 for 'kNode') and the last 5 digits is the id of
          the Alert Type (e.g. 00014 for 'kNodeHighCpuUsage').
        type: string
        x-go-name: AlertCode
        x-nullable: true
      alertDocument:
        description: |-
          Specifies documentation about the Alert such as name, description, cause
          and how to resolve the Alert.
        x-nullable: true
        $ref: '#/definitions/AlertDocument'
      alertState:
        description: |-
          Specifies the current state of the Alert.
          kAlertNote - Alerts that are just for note.
          kAlertOpen - Alerts that are unresolved.
          kAlertResolved - Alerts that are already marked as resolved.
          kAlertSuppressed - Alerts that are suppressed due to snooze settings.
        type: string
        enum:
        - kNote
        - kOpen
        - kResolved
        - kSuppressed
        x-go-name: AlertState
        x-nullable: true
      alertType:
        description: |-
          Specifies a 5 digit unique digital id for the Alert Type, such as 00014
          for 'kNodeHighCpuUsage'. This id is used in alertCode.
        type: integer
        format: int32
        x-go-name: AlertType
        x-nullable: true
      alertTypeBucket:
        description: |-
          Specifies the Alert type bucket.
          Specifies the Alert type bucket.
          kSoftware - Alerts which are related to Cohesity services.
          kHardware - Alerts related to hardware on which Cohesity software is running.
          kService - Alerts related to other external services.
          kOther - Alerts not of one of above categories.
        type: string
        enum:
        - kSoftware
        - kHardware
        - kService
        - kOther
        x-go-name: AlertTypeBucket
        x-nullable: true
      clusterId:
        description: Specifies id of the cluster where the alert was raised.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterName:
        description: Specifies name of the cluster where the alert was raised.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      dedupCount:
        description: |-
          Specifies total count of duplicated Alerts even if there are more than
          25 occurrences.
        type: integer
        format: int32
        x-go-name: DedupCount
        x-nullable: true
      dedupTimestamps:
        description: |-
          Specifies Unix epoch Timestamps (in microseconds) for the last 25
          occurrences of duplicated Alerts that are stored with the original/primary
          Alert. Alerts are grouped into one Alert if the Alerts
          are the same type, are reporting on the same Object
          and occur within one hour.
          'dedupCount' always reports the total count of duplicated Alerts
          even if there are more than 25 occurrences.
          For example, if there are 100 occurrences of this Alert,
          dedupTimestamps stores the timestamps of the
          last 25 occurrences and dedupCount equals 100.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: DedupTimestamps
        x-nullable: true
      eventSource:
        description: Specifies source where the event occurred.
        type: string
        x-go-name: EventHost
        x-nullable: true
      firstTimestampUsecs:
        description: |-
          Specifies Unix epoch Timestamp (in microseconds) of the first
          occurrence of the Alert.
        type: integer
        format: int64
        x-go-name: FirstTimestampUsecs
        x-nullable: true
      id:
        description: Specifies unique id of this Alert.
        type: string
        x-go-name: Id
        x-nullable: true
      latestTimestampUsecs:
        description: |-
          Specifies Unix epoch Timestamp (in microseconds) of the most
          recent occurrence of the Alert.
        type: integer
        format: int64
        x-go-name: LatestTimestampUsecs
        x-nullable: true
      propertyList:
        description: |-
          Specifies array of key-value pairs associated with the Alert.
          The Cohesity Cluster may autogenerate properties depending on
          the Alert type. This list includes both autogenerated and specified
          properties.
        type: array
        items:
          $ref: '#/definitions/AlertProperty'
        x-go-name: PropertyList
        x-nullable: true
      resolutionDetails:
        description: |-
          Specifies information about the Alert Resolution such as a summary,
          id assigned by the Cohesity Cluster, user who resolved the Alerts, etc.
        x-nullable: true
        $ref: '#/definitions/AlertResolutionDetails'
      severity:
        description: |-
          Specifies the severity level of an Alert.
          kCritical - Alerts whose severity type is Critical.
          kWarning - Alerts whose severity type is Warning.
          kInfo - Alerts whose severity type is Info.
        type: string
        enum:
        - kCritical
        - kWarning
        - kInfo
        x-go-name: Severity
        x-nullable: true
      suppressionId:
        description: Specifies unique id generated when the Alert is suppressed by
          the admin.
        type: integer
        format: int64
        x-go-name: SuppressionId
        x-nullable: true
      tenantIds:
        description: Specifies the tenants for which this alert has been raised.
        type: array
        items:
          type: string
        x-go-name: TenantIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertCategoryName:
    description: AlertCategoryName returns alert category and its public facing string.
    type: object
    title: Alert Category Name
    properties:
      category:
        description: |-
          Specifies alert category.
          Specifies the category of an Alert.
          kDisk - Alerts that are related to Disk.
          kNode - Alerts that are related to Node.
          kCluster - Alerts that are related to Cluster.
          kNodeHealth - Alerts that are related to Node Health.
          kClusterHealth - Alerts that are related to Cluster Health.
          kBackupRestore - Alerts that are related to Backup/Restore.
          kEncryption - Alerts that are related to Encryption.
          kArchivalRestore - Alerts that are related to Archival/Restore.
          kRemoteReplication - Alerts that are related to Remote Replication.
          kQuota - Alerts that are related to Quota.
          kLicense - Alerts that are related to License.
          kHeliosProActiveWellness - Alerts that are related to Helios ProActive Wellness.
          kHeliosAnalyticsJobs - Alerts that are related to Helios Analytics Jobs.
          kHeliosSignatureJobs - Alerts that are related to Helios Signature Jobs.
          kSecurity - Alerts that are related to Security.
          kAppsInfra - Alerts that are related to applications infra.
          kAntivirus - Alerts that are related to antivirus.
          kArchivalCopy - Alerts that are related to archival copies.
        type: string
        enum:
        - kDisk
        - kNode
        - kCluster
        - kNodeHealth
        - kClusterHealth
        - kBackupRestore
        - kEncryption
        - kArchivalRestore
        - kRemoteReplication
        - kQuota
        - kLicense
        - kHeliosProActiveWellness
        - kHeliosAnalyticsJobs
        - kHeliosSignatureJobs
        - kSecurity
        - kAppsInfra
        - kAntivirus
        - kArchivalCopy
        x-go-name: Category
        x-nullable: true
      name:
        description: Specifies public facing string for alert enums.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertDocument:
    description: |-
      Specifies documentation about the Alert such as name, description, cause
      and how to resolve the Alert.
    type: object
    title: Alert Document.
    properties:
      alertCause:
        description: |-
          Specifies cause of the Alert that is included in the body of the email
          or any other type of notification.
        type: string
        x-go-name: AlertCause
        x-nullable: true
      alertDescription:
        description: |-
          Specifies brief description about the Alert that is used in the subject
          line when sending a notification email for an Alert.
        type: string
        x-go-name: AlertDescription
        x-nullable: true
      alertHelpText:
        description: |-
          Specifies instructions describing how to resolve the Alert that is
          included in the body of the email or any other type of notification.
        type: string
        x-go-name: AlertHelpText
        x-nullable: true
      alertName:
        description: |-
          Specifies short name that describes the Alert type such as DiskBad,
          HighCpuUsage, FrequentProcessRestarts, etc.
        type: string
        x-go-name: AlertName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertMetadata:
    description: |-
      AlertMetadata specifies metadata for a given alert type. All the alerts of a
      given alert type share the same metadata.
    type: object
    title: Alert Metadata
    properties:
      alertDocumentList:
        description: Specifies alert documentation one per each language supported.
        type: array
        items:
          $ref: '#/definitions/AlertDocument'
        x-go-name: AlertDocumentList
        x-nullable: true
      alertTypeBucket:
        description: |-
          Specifies the Alert type bucket.
          Specifies the Alert type bucket.
          kSoftware - Alerts which are related to Cohesity services.
          kHardware - Alerts related to hardware on which Cohesity software is running.
          kService - Alerts related to other external services.
          kOther - Alerts not of one of above categories.
        type: string
        enum:
        - kSoftware
        - kHardware
        - kService
        - kOther
        x-go-name: AlertTypeBucket
        x-nullable: true
      alertTypeId:
        description: Specifies unique id for the alert type.
        type: integer
        format: int32
        x-go-name: AlertTypeId
        x-nullable: true
      category:
        description: |-
          Specifies category of the alert type.
          Specifies the category of an Alert.
          kDisk - Alerts that are related to Disk.
          kNode - Alerts that are related to Node.
          kCluster - Alerts that are related to Cluster.
          kNodeHealth - Alerts that are related to Node Health.
          kClusterHealth - Alerts that are related to Cluster Health.
          kBackupRestore - Alerts that are related to Backup/Restore.
          kEncryption - Alerts that are related to Encryption.
          kArchivalRestore - Alerts that are related to Archival/Restore.
          kRemoteReplication - Alerts that are related to Remote Replication.
          kQuota - Alerts that are related to Quota.
          kLicense - Alerts that are related to License.
          kHeliosProActiveWellness - Alerts that are related to Helios ProActive Wellness.
          kHeliosAnalyticsJobs - Alerts that are related to Helios Analytics Jobs.
          kHeliosSignatureJobs - Alerts that are related to Helios Signature Jobs.
          kSecurity - Alerts that are related to Security.
          kAppsInfra - Alerts that are related to applications infra.
          kAntivirus - Alerts that are related to antivirus.
          kArchivalCopy - Alerts that are related to archival copies.
        type: string
        enum:
        - kDisk
        - kNode
        - kCluster
        - kNodeHealth
        - kClusterHealth
        - kBackupRestore
        - kEncryption
        - kArchivalRestore
        - kRemoteReplication
        - kQuota
        - kLicense
        - kHeliosProActiveWellness
        - kHeliosAnalyticsJobs
        - kHeliosSignatureJobs
        - kSecurity
        - kAppsInfra
        - kAntivirus
        - kArchivalCopy
        x-go-name: Category
        x-nullable: true
      dedupIntervalSeconds:
        description: |-
          Specifies dedup interval in seconds. If the same alert is raised multiple
          times by any client in this duration, only one of them will be reported.
        type: integer
        format: int32
        x-go-name: DedupIntervalSeconds
        x-nullable: true
      dedupUntilResolved:
        description: |-
          Specifies if the alerts are to be deduped until the current one (if
          any) is resolved.
        type: boolean
        x-go-name: DedupUntilResolved
        x-nullable: true
      hideAlertFromUser:
        description: Specifies whether to show the alert in the iris UI and CLI.
        type: boolean
        x-go-name: HideAlertFromUser
        x-nullable: true
      ignoreDuplicateOccurrences:
        description: Specifies whether to ignore duplicate occurrences completely.
        type: boolean
        x-go-name: IgnoreDuplicateOccurrences
        x-nullable: true
      primaryKeyList:
        description: Specifies properties that serve as primary keys.
        type: array
        items:
          type: string
        x-go-name: PrimaryKeyList
        x-nullable: true
      propertyList:
        description: |-
          Specifies list of properties that the client is supposed to provide when
          alert of this type is raised.
        type: array
        items:
          type: string
        x-go-name: PropertyList
        x-nullable: true
      sendSupportNotification:
        description: Specifies whether to send support notification for the alert.
        type: boolean
        x-go-name: SendSupportNotification
        x-nullable: true
      snmpNotification:
        description: Specifies whether an SNMP notification is sent when an alert
          is raised.
        type: boolean
        x-go-name: SnmpNotification
        x-nullable: true
      syslogNotification:
        description: Specifies whether an syslog notification is sent when an alert
          is raised.
        type: boolean
        x-go-name: SyslogNotification
        x-nullable: true
      version:
        description: Specifies version of the metadata.
        type: integer
        format: int32
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertProperty:
    description: Specifies a key-value pair associated with an Alert.
    type: object
    title: Alert Key-Value Pair
    properties:
      key:
        description: Specifies name of the property.
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        description: Specifies value of the property.
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertResolution:
    description: |-
      Provides Resolution details and the list of Alerts resolved by a Resolution,
      which are specified by Alert Ids.
    type: object
    title: Alert Resolution.
    properties:
      alertIdList:
        description: |-
          Specifies list of Alerts resolved by a Resolution, which are specified by
          Alert Ids.
        type: array
        items:
          type: string
        x-go-name: AlertIdList
        x-nullable: true
      resolutionDetails:
        description: |-
          Specifies information about the Alert Resolution such as a summary,
          id assigned by the Cohesity Cluster, user who resolved the Alerts, etc.
        x-nullable: true
        $ref: '#/definitions/AlertResolutionDetails'
      tenantIds:
        description: Specifies unique tenantIds of the alert contained in this resolution.
        type: array
        items:
          type: string
        x-go-name: TenantIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertResolutionDetails:
    description: |-
      Specifies information about the Alert Resolution such as a summary,
      id assigned by the Cohesity Cluster, user who resolved the Alerts, etc.
    type: object
    title: Alert Resolution.
    properties:
      resolutionDetails:
        description: Specifies detailed notes about the Resolution.
        type: string
        x-go-name: ResolutionDetails
        x-nullable: true
      resolutionId:
        description: Specifies Unique id assigned by the Cohesity Cluster for this
          Resolution.
        type: integer
        format: int64
        x-go-name: ResolutionId
        x-nullable: true
      resolutionSummary:
        description: Specifies short description about the Resolution.
        type: string
        x-go-name: ResolutionSummary
        x-nullable: true
      timestampUsecs:
        description: |-
          Specifies unix epoch timestamp (in microseconds) when the Alerts were
          resolved.
        type: integer
        format: int64
        x-go-name: TimestampUsecs
        x-nullable: true
      userName:
        description: Specifies name of the Cohesity Cluster user who resolved the
          Alerts.
        type: string
        x-go-name: UserName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertResolutionInfo:
    description: Short description and detailed notes about the Resolution.
    type: object
    title: Alert Resolution Info.
    properties:
      resolutionDetails:
        description: Specifies detailed notes about the Resolution.
        type: string
        x-go-name: ResolutionDetails
        x-nullable: true
      resolutionSummary:
        description: Specifies short description about the Resolution.
        type: string
        x-go-name: ResolutionSummary
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertResolutionRequest:
    description: |-
      Request that provides the details of a resolution and the list of
      Alert Ids to be marked resolved.
    type: object
    title: Create Alert Resolution Request.
    properties:
      alertIdList:
        description: |-
          Specifies list of alerts resolved by a Resolution, which are specified by
          Alert Ids.
        type: array
        items:
          type: string
        x-go-name: AlertIdList
        x-nullable: true
      resolutionDetails:
        description: Specifies short description and detailed notes about the Resolution.
        x-nullable: true
        $ref: '#/definitions/AlertResolutionInfo'
    x-go-package: cohesity/iris/server/data/public
  AlertingConfig:
    description: Specifies optional settings for alerting.
    type: object
    title: Alerting Config.
    properties:
      emailAddresses:
        description: Exists to maintain backwards compatibility with versions before
          eff8198.
        type: array
        items:
          type: string
        x-go-name: EmailAddresses
        x-nullable: true
      emailDeliveryTargets:
        description: |-
          Specifies additional email addresses where alert notifications (configured
          in the AlertingPolicy) must be sent.
        type: array
        items:
          $ref: '#/definitions/EmailDeliveryTarget'
        x-go-name: EmailDeliveryTargets
        x-nullable: true
      raiseObjectLevelFailureAlert:
        description: Specifies the boolean to raise per object alert for failures.
        type: boolean
        x-go-name: RaiseObjectLevelFailureAlert
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AlertingPolicyProto:
    type: object
    properties:
      deliveryTargetVec:
        description: The delivery targets to be alerted.
        type: array
        items:
          $ref: '#/definitions/DeliveryRuleProto_DeliveryTarget'
        x-go-name: DeliveryTargetVec
        x-nullable: true
      emails:
        description: |-
          The email addresses to send alerts to.
          This field has been deprecated in favor of the field delivery_target_vec.
          The clients should take care to ensure that the emails stored in here
          are migrated to that field, or else utilise both the fields when trying
          to obtain the complete list of delivery targets.
        type: array
        items:
          type: string
        x-go-name: Emails
        x-nullable: true
      policy:
        description: |-
          'policy' is declared as int32 because ORing the enums will generate values
          which are invalid as enums. Protobuf doesn't allow those invalid enums
          to be set.
        type: integer
        format: int32
        x-go-name: Policy
        x-nullable: true
      raiseObjectLevelFailureAlert:
        description: Raise per object alert for failures.
        type: boolean
        x-go-name: RaiseObjectLevelFailureAlert
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  AmazonCloudCredentials:
    description: |-
      Specifies the cloud credentials to connect to a Amazon
      service account. Glacier, S3, and S3-compatible clouds all use these
      credentials.
    type: object
    title: Amazon Cloud Credentials.
    properties:
      accessKeyId:
        description: |-
          Specifies the access key for Amazon service account.
          See the Cohesity online help for the value to specify for this field
          based on the current S3 Compatible Vault (External Target) type.
          For example for Iron Mountain, specify the user name from Iron Mountain
          for this field.
        type: string
        x-go-name: AccessKeyId
        x-nullable: true
      authMethod:
        description: |-
          Specifies the iauth method used for the request
          See the Cohesity online help for the value to specify for this field
          based on the current S3-compatible Vault (External Target) type.
          Specifies the authentication method to be used for API calls.
          'kUseIAMUser' indicates a user based authentication.
          'kUseIAMRole' indicates a role based authentication, used only for AWS CE.
        type: string
        enum:
        - kUseIAMUser
        - kUseIAMRole
        x-go-name: AuthMethod
        x-nullable: true
      c2sAccessPortal:
        description: |-
          Specifies the C2S Access Portal (CAP) which is used to get the aws
          credentials in Amazon Commercial Cloud Service(C2S).
        x-nullable: true
        $ref: '#/definitions/C2SAccessPortal'
      iamRoleArn:
        description: |-
          Specifies the iam role arn Amazon service account.
          See the Cohesity online help for the value to specify for this field
          based on the current S3-compatible Vault (External Target) type.
        type: string
        x-go-name: IamRoleArn
        x-nullable: true
      region:
        description: Specifies the region to use for the Amazon service account.
        type: string
        x-go-name: Region
        x-nullable: true
      secretAccessKey:
        description: |-
          Specifies the secret access key for Amazon service account.
          See the Cohesity online help for the value to specify for this field
          based on the current S3-compatible Vault (External Target) type.
        type: string
        x-go-name: SecretAccessKey
        x-nullable: true
      serviceUrl:
        description: |-
          Specifies the URL (Endpoint) for the service such as s3like.notamazon.com.
          This field is only significant for S3-compatible cloud services.
        type: string
        x-go-name: ServiceUrl
        x-nullable: true
      signatureVersion:
        description: |-
          Specifies the version of the S3 Compliance.
          This field must be set to 2 or 4 and the default version is 2.
          This field is only significant for S3-compatible cloud services.
          See the Cohesity online help for the supported S3-compatible Vault
          (External Target) types and the value to specify for this field
          based on the current S3-compatible Vault (External Target) type.
        type: integer
        format: int32
        x-go-name: SignatureVersion
        x-nullable: true
      tierType:
        description: |-
          Specifies the storage class of AWS.
          AmazonTierType specifies the storage class for AWS.
          'kAmazonS3Standard' indicates a tier type of Amazon properties that is
          accessed frequently.
          'kAmazonS3StandardIA' indicates a tier type of Amazon properties that is
          accessed less frequently, but requires rapid access when needed.
          'kAmazonGlacier' indicates a tier type of Amazon properties that is accessed
          rarely.
          'kAmazonS3OneZoneIA' indicates a tier type of Amazon properties for
          long-lived, but less frequently accessed data.
          'kAmazonS3IntelligentTiering' indicates a tier type of Amazon properties for
          data with unknown or changing access patterns.
          'kAmazonS3Glacier' indicates a tier type of Amazon properties for
          data that provides secure, durable object storage for long-term data
          retention and digital preservation. It provides three options for access to
          archives, from a few minutes to several hours.
          'kAmazonS3GlacierDeepArchive' indicates a tier type of Amazon properties for
          data that provides secure, durable object storage for long-term data
          retention and digital preservation. It provides two access options ranging
          from 12 to 48 hours.
        type: string
        enum:
        - kAmazonS3Standard
        - kAmazonS3StandardIA
        - kAmazonGlacier
        - kAmazonS3OneZoneIA
        - kAmazonS3IntelligentTiering
        - kAmazonS3Glacier
        - kAmazonS3GlacierDeepArchive
        x-go-name: TierType
        x-nullable: true
      useHttps:
        description: |-
          Specifies whether to use http or https to connect to the service.
          If true, a secure connection (https) is used.
          This field is only significant for S3-compatible cloud services.
        type: boolean
        x-go-name: UseHttps
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AnalyseJarArg:
    description: |-
      API to analyse a JAR file. This JAR may contain multiple mappers/reducers.
      Jar will be analysed and list of all mappers/reducers found in the jar will
      be returned.
    type: object
    title: Analyse Jar File.
    properties:
      jarName:
        description: Name of the JAR to be analysed.
        type: string
        x-go-name: JarName
        x-nullable: true
      jarPath:
        description: Path of the jar file.
        type: string
        x-go-name: JarPath
        x-nullable: true
      jarRelativePath:
        type: string
        x-go-name: JarRelativePath
        x-nullable: true
      saveEntities:
        description: If this flag is true, then also save mapper and reducers in scribe.
        type: boolean
        x-go-name: SaveEntities
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  AnalyseJarResult:
    type: object
    properties:
      error:
        description: Status code of http rpc.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      mappers:
        description: Name of all mapper classes found in jar file.
        type: array
        items:
          type: string
        x-go-name: Mappers
        x-nullable: true
      reducers:
        description: Name of all reducers classes found in jar file.
        type: array
        items:
          type: string
        x-go-name: Reducers
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  AntivirusScanConfig:
    description: Specifies the antivirus scan config settings for this View.
    type: object
    title: Antivirus scan config
    properties:
      blockAccessOnScanFailure:
        description: Specifies whether block access to the file when antivirus scan
          fails.
        type: boolean
        x-go-name: BlockAccessOnScanFailure
        x-nullable: true
      isEnabled:
        description: Specifies whether the antivirus service is enabled or not.
        type: boolean
        x-go-name: IsEnabled
        x-nullable: true
      maximumScanFileSize:
        description: |-
          Specifies maximum file size that will be sent to antivirus server for
          scanning. if greater than zero, the file size that exceeds this size
          would be skipped from virus scan.
        type: integer
        format: int64
        x-go-name: MaximumScanFileSize
        x-nullable: true
      scanFilter:
        description: |-
          Files extension that meets these filter criteria will be sent to
          antivirus server for the scan.
        x-nullable: true
        $ref: '#/definitions/FileExtensionFilter'
      scanOnAccess:
        description: Specifies whether to scan a file when it is opened.
        type: boolean
        x-go-name: ScanOnAccess
        x-nullable: true
      scanOnClose:
        description: Specifies whether to scan a file when it is closed after modify.
        type: boolean
        x-go-name: ScanOnClose
        x-nullable: true
      scanTimeoutUsecs:
        description: |-
          Specifies the maximum amount of time that a scan can take before timing
          out.
        type: integer
        format: int32
        x-go-name: ScanTimeoutUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AntivirusServiceConfig:
    description: Specifies configuration settings for antivirus service provider.
    type: object
    title: Antivirus Service Config.
    required:
    - icapUri
    properties:
      description:
        description: |-
          Specifies the description of the Antivirus service. This could be any
          additional information admin might associate with the Antivirus service.
        type: string
        x-go-name: Description
        x-nullable: true
      icapUri:
        description: |-
          Specifies the ICAP uri for this Antivirus service. It is of the form
          icap://<ip-address>[:<port>]/<service>
        type: string
        x-go-name: IcapUri
        x-nullable: true
      tag:
        description: |-
          Specifies the tag of antivirus service. This is service-specific "cookie"
          sent from Antivirus server to clients that represents a service's current
          state. This tag validates that previous Antivirus server responses can
          still be considered fresh by an Antivirus client that may be caching them.
          If a change on the AV server invalidates previous responses, the AV server
          can invalidate portions of the Antivirus client's cache by changing its
          service tag.
        type: string
        x-go-name: Tag
        x-nullable: true
      tagId:
        description: Specifies the tag Id of antivirus service.
        type: integer
        format: int64
        x-go-name: TagId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AntivirusServiceConfigParams:
    description: Specifies the parameters for an Antivirus service provider.
    type: object
    title: Antivirus Service Config parameters.
    required:
    - icapUri
    properties:
      description:
        description: |-
          Specifies the description of the Antivirus service. This could be any
          additional information admin might associate with the Antivirus service.
        type: string
        x-go-name: Description
        x-nullable: true
      icapUri:
        description: |-
          Specifies the ICAP uri for this Antivirus service. It is of the form
          icap://<ip-address>[:<port>]/<service>
        type: string
        x-go-name: IcapUri
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AntivirusServiceGroup:
    description: Specifies the configuration settings for an Antivirus service group.
    type: object
    title: Antivirus Group Config.
    required:
    - name
    - id
    properties:
      antivirusServices:
        description: Specifies the Antivirus Services belonging to this antivirus
          group.
        type: array
        items:
          $ref: '#/definitions/AntivirusServiceConfig'
        x-go-name: AntivirusServices
        x-nullable: true
      description:
        description: Specifies the description of the Antivirus service group.
        type: string
        x-go-name: Description
        x-nullable: true
      id:
        description: Specifies the Id of the Antivirus service group.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      isEnabled:
        description: Specifies whether the antivirus service group is enabled or not.
        type: boolean
        x-go-name: IsEnabled
        x-nullable: true
      name:
        description: Specifies the name of the Antivirus service group.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AntivirusServiceGroupParams:
    type: object
    title: Specifies the configuration settings for an Antivirus service group.
    required:
    - name
    properties:
      antivirusServices:
        description: Specifies the Antivirus services for this provider.
        type: array
        items:
          $ref: '#/definitions/AntivirusServiceConfigParams'
        x-go-name: AntivirusServices
        x-nullable: true
      description:
        description: Specifies the description of the Antivirus service group.
        type: string
        x-go-name: Description
        x-nullable: true
      name:
        description: Specifies the name of the Antivirus service group.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AntivirusServiceGroupStateParams:
    description: |-
      Specifies the configuration settings to change the state of an Antivirus
      service group.
    type: object
    required:
    - enable
    - id
    properties:
      enable:
        description: Specifies the enable flag to enable the Antivirus service group.
        type: boolean
        x-go-name: Enable
        x-nullable: true
      id:
        description: Specifies the Id of the Antivirus service group.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ApiKey:
    description: Specifies the parameters of an API key.
    type: object
    title: API key.
    properties:
      createdTimeMsecs:
        description: Specifies the API key created time in milli seconds.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      createdUserSid:
        description: Specifies the user sid who created this API key.
        type: string
        x-go-name: CreatedUserSid
        x-nullable: true
      createdUsername:
        description: Specifies the username who created this API key.
        type: string
        x-go-name: CreatedUsername
        x-nullable: true
      expiringTimeMsecs:
        description: Specifies a time stamp when the API key will expire in milli
          seconds.
        type: integer
        format: int64
        x-go-name: ExpiringTimeMsecs
        x-nullable: true
      id:
        description: Specifies the API key id.
        type: string
        x-go-name: Id
        x-nullable: true
      isActive:
        description: |-
          Specifies if the API key is active. Only an active and not expired API key
          can be used for authentication.
        type: boolean
        x-go-name: IsActive
        x-nullable: true
      isExpired:
        description: |-
          Specifies if the API key is expired. Expired API keys cannot be used for
          authentication.
        type: boolean
        x-go-name: IsExpired
        x-nullable: true
      name:
        description: Specifies the API key name.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerUserSid:
        description: Specifies the user sid who owns this API key.
        type: string
        x-go-name: OwnerUserSid
        x-nullable: true
      ownerUsername:
        description: Specifies the username who owns this API key.
        type: string
        x-go-name: OwnerUsername
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  App:
    description: App provides information about an application.
    type: object
    title: App information.
    properties:
      appId:
        description: Specifies unique id allocated by the AppStore.
        type: integer
        format: int64
        x-go-name: AppId
        x-nullable: true
      clusters:
        description: |-
          Specifies the list of clusters on which the app is installed for a
          particular account Id.
        type: array
        items:
          $ref: '#/definitions/ClusterInfo'
        x-go-name: Clusters
        x-nullable: true
      downloadProgressPct:
        description: Specifies app download progress percentage.
        type: number
        format: double
        x-go-name: DownloadProgressPct
        x-nullable: true
      externalIpRequired:
        description: Specifies if an external ip is required for the app.
        type: boolean
        x-go-name: ExternalIpRequired
        x-nullable: true
      externalNetworks:
        description: List of external network information available for the app.
        type: array
        items:
          $ref: '#/definitions/ExternalNetworkInfo'
        x-go-name: ExternalNetworks
        x-nullable: true
      installState:
        description: |-
          Specifies app installation status.
          Specifies status of the app installation.
          kNotInstalled - App yet to be installed.
          kInstallInProgress - App installation is in progress.
          kInstalled - App is installed successfully and can be launched.
          kInstallFailed - App installation failed.
          kUninstallInProgress - App uninstallation is in progress.
          kUninstallFailed - App uninstallation failed.
          kDownloadNotStarted - App download has not started.
          kDownloadInProgress - App download in progress.
          kDownloadComplete - App download completed.
          kDownloadFailed - App download failed.
        type: string
        enum:
        - kNotInstalled
        - kInstallInProgress
        - kInstalled
        - kInstallFailed
        - kUninstallInProgress
        - kUninstallFailed
        - kDownloadNotStarted
        - kDownloadInProgress
        - kDownloadComplete
        - kDownloadFailed
        x-go-name: InstallState
        x-nullable: true
      installTime:
        description: Specifies timestamp when the app was installed.
        type: integer
        format: int64
        x-go-name: InstallTime
        x-nullable: true
      instanceSizes:
        description: |-
          List of applicable instance size specifications (e.g. small/medium/large)
          for the app. Used to determine container resources.
        type: array
        items:
          type: string
        x-go-name: InstanceSizes
        x-nullable: true
      isLatest:
        description: |-
          Specifies whether the app currently installed on all clusters is the
          latest version or not.
        type: boolean
        x-go-name: IsLatest
        x-nullable: true
      latestVersion:
        description: |-
          Specifies application version assigned by the AppStore for the latest
          version of an app.
        type: integer
        format: int64
        x-go-name: LatestVersion
        x-nullable: true
      metadata:
        description: Specifies metadata information about the app.
        x-nullable: true
        $ref: '#/definitions/AppMetadata'
      requiredPrivileges:
        description: |-
          Specifies privileges that are required for this app.
          App privilege information.

          Specifies privileges that are required for this app.
          kReadAccess - App needs views for read access.
          kReadWriteAccess - App needs views for Read/write access.
          kManagementAccess - App needs management access via iris API.
          kAutoMountAccess - Whether to allow auto-mounting all the views.
          kUnrestrictedAppUIAccess - Whether app requires unrestricted UI access (i.e. without passing app access token in URL).
          kAuditLogViewReadAccess - Whether app requires read access to the internal audit log view.
          kProtectedObjectAccess - Whether app requires read access to protected objects.
        type: array
        items:
          type: string
          enum:
          - kReadAccess
          - kReadWriteAccess
          - kManagementAccess
          - kAutoMountAccess
          - kUnrestrictedAppUIAccess
          - kAuditLogViewReadAccess
          - kProtectedObjectAccess
        x-go-name: RequiredPrivileges
        x-nullable: true
      uninstallTime:
        description: Specifies timestamp when the app was uninstalled.
        type: integer
        format: int64
        x-go-name: UninstallTime
        x-nullable: true
      version:
        description: Specifies application version assigned by the AppStore.
        type: integer
        format: int64
        x-go-name: Version
        x-nullable: true
      vmNameInfoList:
        description: List of vm name info objects.
        type: array
        items:
          $ref: '#/definitions/VmNameInfo'
        x-go-name: VmNameInfoList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AppEntityBackupStatusInfo:
    description: Specifies the app level backup status and information.
    type: object
    title: App Entity Backup State Info
    properties:
      appId:
        description: |-
          Specifies the Id of the App entity. This is typically a database entity
          in case of SQL, Oracle jobs etc.
        type: integer
        format: int64
        x-go-name: AppId
        x-nullable: true
      error:
        description: |-
          Specifies if an error occurred (if any) while running this task.
          This field is populated when the status is equal to 'kFailure'.
        type: string
        x-go-name: Error
        x-nullable: true
      name:
        description: Specifies the name of the app entity.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: |-
          Specifies the owner id of the the app. Owner is the host under which
          the app is located. Example: SQL DB entities can be hosted by Physical
          host or virtual machine.
        type: integer
        format: int64
        x-go-name: OwnerId
        x-nullable: true
      status:
        description: |-
          Specifies the backup status for this app entity.
          'kAccepted' indicates the task is queued to run but not yet running.
          'kRunning' indicates the task is running.
          'kCanceling' indicates a request to cancel the task has occurred but
          the task is not yet canceled.
          'kCanceled' indicates the task has been canceled.
          'kSuccess' indicates the task was successful.
          'kFailure' indicates the task failed.
          'kWarning' indicates the task has finished with warning.
          'kOnHold' indicates the task is kept onHold.
          'kMissed' indicates the task is missed.
        type: string
        enum:
        - kAccepted
        - kRunning
        - kCanceling
        - kCanceled
        - kSuccess
        - kFailure
        - kWarning
        - kOnHold
        - kMissed
        x-go-name: Status
        x-nullable: true
      warnings:
        description: Specifies the warnings that occurred (if any) while running this
          task.
        type: array
        items:
          type: string
        x-go-name: Warnings
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AppInstance:
    description: AppInstance provides application instance's information.
    type: object
    title: App Instance.
    properties:
      appAccessToken:
        description: Specifies the token to access with the app.
        type: string
        x-go-name: AppAccessToken
        x-nullable: true
      appInstanceId:
        description: Specifies unique id across all instances of all apps.
        type: integer
        format: int64
        x-go-name: AppInstanceId
        x-nullable: true
      appName:
        description: Specifies name of the app that is launched in this instance.
        type: string
        x-go-name: AppName
        x-nullable: true
      appUid:
        description: Specifies id of the app that is launched in this instance.
        type: integer
        format: int64
        x-go-name: AppUid
        x-nullable: true
      appVersion:
        description: Specifies the version of the app that is launched in this instance.
        type: integer
        format: int64
        x-go-name: AppVersion
        x-nullable: true
      createdTimeUsecs:
        description: |-
          Specifies timestamp (in microseconds) when the app instance was first
          created.
        type: integer
        format: int64
        x-go-name: CreatedTimeUsecs
        x-nullable: true
      creationUid:
        description: |-
          Specifies a unique identifier generated by the client to let the backend
          identify retries of the app launch request.
        type: string
        x-go-name: CreationUid
        x-nullable: true
      description:
        description: Specifies user configured description for the app instance.
        type: string
        x-go-name: Description
        x-nullable: true
      devVersion:
        description: Specifies version of the app provided by the developer.
        type: string
        x-go-name: DevVersion
        x-nullable: true
      durationUsecs:
        description: Specifies duration (in microseconds) for which the app instance
          has run.
        type: integer
        format: int64
        x-go-name: DurationUsecs
        x-nullable: true
      healthDetail:
        description: |-
          Specifies the reason the app instance is unhealthy. Only set if app
          instance is unhealthy.
        type: string
        x-go-name: HealthDetail
        x-nullable: true
      healthStatus:
        description: Specifies the current health status of the app instance.
        type: integer
        format: int32
        x-go-name: HealthStatus
        x-nullable: true
      httpsUi:
        description: |-
          Specifies app ui http config. If set to true, the App's UI uses https.
          Otherwise it uses http.
        type: boolean
        x-go-name: HttpsUi
        x-nullable: true
      namespace:
        type: string
        x-go-name: Namespace
        x-nullable: true
      nodeIp:
        description: |-
          Specifies the ip of the node which can be used to contact app instance
          external services.
        type: string
        x-go-name: NodeIp
        x-nullable: true
      nodePort:
        description: |-
          Specifies the node port on which the app instance services external
          requests.
        type: integer
        format: int32
        x-go-name: NodePort
        x-nullable: true
      settings:
        description: Specifies settings used to launch an app instance.
        x-nullable: true
        $ref: '#/definitions/AppInstanceSettings'
      state:
        description: |-
          Specifies the current state of the app instance.
          Specifies operational status of an app instance.
          kInitializing - The app instance has been launched or resumed, but is not fully running yet.
          kRunning - The app instance is running. Check health_status for the actual health.
          kPausing - The app instance is being paused.
          kPaused - The app instance has been paused.
          kTerminating - The app instance is being terminated.
          kTerminated -  The app instance has been terminated.
          kFailed - The app instance has failed due to an unrecoverable error.
        type: string
        enum:
        - kInitializing
        - kRunning
        - kPausing
        - kPaused
        - kTerminating
        - kTerminated
        - kFailed
        x-go-name: State
        x-nullable: true
      stateDetail:
        description: Specifies the failure reason when the app instance's state is
          kFailed.
        type: string
        x-go-name: StateDetail
        x-nullable: true
      userSshKey:
        description: Specifies username and corresponding ssh key to be inserted into
          the VMs.
        x-nullable: true
        $ref: '#/definitions/UserSshKey'
      vmGroups:
        description: |-
          Specifies list of all VM groups for this application. Each VM group
          contains a list of VMs. Information needed for UI like the nodePort, the
          port type etc. is stored for each VM.
        type: array
        items:
          $ref: '#/definitions/VmGroup'
        x-go-name: VmGroups
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AppInstanceIdParameter:
    type: object
    title: AppInstanceIdParameter specifies app instance Id in path parameter.
    required:
    - appInstanceId
    properties:
      appInstanceId:
        description: |-
          Specifies the app instance Id.
          In: path
        type: integer
        format: int64
        x-go-name: AppInstanceId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AppInstanceSettings:
    description: |-
      AppInstanceSettings provides settings used while launching an app instance.
      Current settings include QoSTier to be used for the instance and views
      allowed to be accessed by the instance.
    type: object
    title: App instance settings.
    properties:
      externalNetworkInfo:
        description: External network information of the app instance.
        x-nullable: true
        $ref: '#/definitions/ExternalNetworkInfo'
      instanceSize:
        description: |-
          Instance size specification (e.g. small/medium/large). Used to determine
          container resources.
        type: string
        x-go-name: InstanceSize
        x-nullable: true
      protectedObjectPrivileges:
        description: |-
          Specifies which protected objects are allowed to be accessed by an app
          instance.
        x-nullable: true
        $ref: '#/definitions/ProtectedObjectPrivileges'
      qosTier:
        description: |-
          Specifies QoSTier of the app instance.
          Specifies QoS Tier for an app instance. App instances are allocated
          resources such as memory, CPU and IO based on their QoS Tier.
          kLow - Low QoS Tier.
          kMedium - Medium QoS Tier.
          kHigh - High QoS Tier.
          kMax - Max QoS Tier.
        type: string
        enum:
        - kLow
        - kMedium
        - kHigh
        - kMax
        x-go-name: QosTier
        x-nullable: true
      readViewPrivileges:
        description: |-
          Specifies views allowed to be accessed in read only mode by the app
          instance.
        x-nullable: true
        $ref: '#/definitions/ViewPrivileges'
      readWriteViewPrivileges:
        description: |-
          Specifies views allowed to be accessed in read/write mode by the app
          instance.
        x-nullable: true
        $ref: '#/definitions/ViewPrivileges'
      vmNumReplicasList:
        description: |-
          List of vm-name, replica count pairs to be used at the time of app
          instance launch.
        type: array
        items:
          $ref: '#/definitions/VmNumReplicas'
        x-go-name: VmNumReplicasList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AppMetadata:
    description: AppMetadata provides metadata information about an application.
    type: object
    title: App metadata information.
    properties:
      author:
        description: Specifies author of the app.
        type: string
        x-go-name: Author
        x-nullable: true
      createdDate:
        description: Specifies date when the first version of the app was created.
        type: string
        x-go-name: CreatedDate
        x-nullable: true
      description:
        description: Specifies description about what app does.
        type: string
        x-go-name: Description
        x-nullable: true
      devVersion:
        description: Specifies version of the app provided by the developer.
        type: string
        x-go-name: DevVersion
        x-nullable: true
      iconImage:
        description: Specifies application icon.
        type: string
        x-go-name: IconImage
        x-nullable: true
      lastModifiedDate:
        description: Specifies date when the app was last modified.
        type: string
        x-go-name: LastModifiedDate
        x-nullable: true
      name:
        description: Specifies name of the app.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AppOwnerRestoreInfo:
    type: object
    title: Message that captures information about an application's owner.
    properties:
      ownerObject:
        description: |-
          In the SQL and Oracle applications, this also specifies the
          full/incremental snapshot to use for non-PIT restore operations, and
          optionally PIT restore operations as well.
        title: |-
          The information about the owner object and its job details.
          This should be set to an object such as a VM.
        x-nullable: true
        $ref: '#/definitions/RestoreObject'
      ownerRestoreParams:
        description: The params to restore the owner object.
        x-nullable: true
        $ref: '#/definitions/RestoreObjectParams'
      performRestore:
        description: |-
          If this is set to true, then the owner object needs to be restored. The
          restore options that follow only apply if this field is set to true. If
          this field is not set, then the application objects will be restored to
          the original owner from where they were backed up.
        type: boolean
        x-go-name: PerformRestore
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  AppRunHistory:
    description: |-
      AppRunHistory is the struct containing the run information of the
      application instances. An application instance can be run only once. Each
      run of the application creates a new application instance.
    type: object
    title: Application Run History.
    properties:
      appInfo:
        description: AppInfo is the information about the map reduce application.
        x-nullable: true
        $ref: '#/definitions/MapReduceInfo'
      mrInstances:
        description: |-
          InstancesWrapper is the slice containing the information about the map
          reduce application instances.
        type: array
        items:
          $ref: '#/definitions/MapReduceInstanceWrapper'
        x-go-name: InstancesWrapper
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AppendHostsParameters:
    description: Specifies the parameters needed for an append hosts request.
    type: object
    title: Append Hosts Parameters.
    properties:
      hosts:
        description: |-
          Specifies the list of host entries to be added to the Cluster's
          etc/hosts file.
        type: array
        items:
          $ref: '#/definitions/HostEntry'
        x-go-name: Hosts
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ApplicationInfo:
    description: Specifies the application registered on the Cohesity Cluster.
    type: object
    title: Application Information.
    properties:
      applicationTreeInfo:
        description: |-
          Application Server and the subtrees below them.

          Specifies the application subtree used to store additional application
          level Objects. Different environments use the subtree to store
          application level information. For example for SQL Server, this subtree
          stores the SQL Server instances running on a VM or a Physical Server.
          overrideDescription: true
        type: array
        items:
          $ref: '#/definitions/ProtectionSourceNode'
        x-go-name: ApplicationTreeInfo
        x-nullable: true
      environment:
        description: |-
          Specifies the environment type of the application such as 'kSQL',
          'kExchange' registered on the Protection Source.
          overrideDescription: true
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ApplicationParameters:
    type: object
    title: Application specific parameters.
    properties:
      truncateExchangeLog:
        description: |-
          If true, after the Cohesity Cluster successfully captures a Snapshot
          during a Job Run, the Cluster truncates the Exchange transaction logs on
          a Microsoft Exchange Server. The default value is false.
        type: boolean
        x-go-name: TruncateExchangeLog
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ApplicationRestoreObject:
    description: |-
      Specifies the Application Server to restore and parameters specific to
      that application.
    type: object
    title: Application Server object to restore.
    properties:
      adRestoreParameters:
        description: Specifies parameters specific to Active Directory Application
          Server.
        x-nullable: true
        $ref: '#/definitions/AdRestoreParameters'
      applicationServerId:
        description: Specifies the Application Server to restore (for example, kSQL).
        type: integer
        format: int64
        x-go-name: ApplicationServerId
        x-nullable: true
      exchangeRestoreParameters:
        description: Specifies parameters speicific to Exchange Application Server.
        x-nullable: true
        $ref: '#/definitions/ExchangeRestoreParameters'
      sqlRestoreParameters:
        description: Specifies parameters specific to this Application Server.
        x-nullable: true
        $ref: '#/definitions/SqlRestoreParameters'
      targetHostId:
        description: |-
          Specifies the target host if the application is to be restored to a
          different host. If this is empty, then the application is restored to
          the original host, which is the hosting Protection Source.
        type: integer
        format: int64
        x-go-name: TargetHostId
        x-nullable: true
      targetRootNodeId:
        description: |-
          Specifies the registered root node, like vCenter, of targetHost.
          If this is empty, then it is assumed the root node of the target
          host is the same as the host Protection Source of the application.
        type: integer
        format: int64
        x-go-name: TargetRootNodeId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ApplicationRestoreParameters:
    description: Specifies the information regarding the application restore parameters.
    type: object
    title: Application Restore Parameters.
    properties:
      applicationEnvironment:
        description: |-
          Specifies the Environment of the Application server to restore like
          'kSQL','kAD',or 'kExchange'.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: ApplicationEnvironment
        x-nullable: true
      applicationRestoreObjects:
        description: Specifies the Application Server objects whose data should be
          restored.
        type: array
        items:
          $ref: '#/definitions/ApplicationRestoreObject'
        x-go-name: ApplicationRestoreObjects
        x-nullable: true
      hostingProtectionSource:
        description: |-
          Specifies the restore information for the Protection Source object that
          registered and hosts the Application Servers. This provides the
          snapshot details from which the application should be restored.
        x-nullable: true
        $ref: '#/definitions/RestoreObjectDetails'
      protectionSourceAndApplicationObjects:
        description: |-
          Specifies the list of hosting protection source and Application restore
          objects tuple.
        type: array
        items:
          $ref: '#/definitions/ProtectionSourceAndApplicationRestoreObjects'
        x-go-name: ProtectionSourceAndApplicationObjects
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ApplicationServerInfo:
    description: Specifies the Information about the Exchange Server Node.
    type: object
    title: Application Server Info
    properties:
      databaseCopyInfoList:
        description: |-
          Specifies the list of all the copies of the Exchange databases(that are
          part of DAG) that are present on this Exchange Node.
        type: array
        items:
          $ref: '#/definitions/ExchangeDatabaseCopyInfo'
        x-go-name: DatabaseCopyInfoList
        x-nullable: true
      databaseInfoList:
        description: |-
          Specifies the list of all the databases available on the standalone
          Exchange server node. This is populated for the Standlone Exchange
          Servers.
        type: array
        items:
          $ref: '#/definitions/ExchangeDatabaseInfo'
        x-go-name: DatabaseInfoList
        x-nullable: true
      fqdn:
        description: Specifies the fully qualified domain name of the Exchange Server.
        type: string
        x-go-name: Fqdn
        x-nullable: true
      guid:
        description: Specifies the Guid of the Exchange Application Server.
        type: string
        x-go-name: Guid
        x-nullable: true
      name:
        description: Specifies the display name of the Exchange Application Server.
        type: string
        x-go-name: Name
        x-nullable: true
      totalSizeBytes:
        description: |-
          Specifies the total size of all Exchange database copies in all the
          Exchange Application Servers that are part of the DAG.
        type: integer
        format: int64
        x-go-name: TotalSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ApplicationSpecialParameters:
    description: |-
      Specifies additional special settings applicable for a Protection Source
      of 'kSQL'/'kOracle' type in a Protection Job.
    type: object
    title: Application Special Job Parameters.
    properties:
      applicationEntityIds:
        description: |-
          Array of Ids of Application Entities like SQL/Oracle instances, and
          databases that should be protected in a Protection Source.

          Specifies the subset of application entities like SQL/Oracle instances, and
          databases to protect in a Protection Source of type 'kSQL'/'kOracle'. If
          not specified, all application entities on the Protection Source.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ApplicationEntityIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ApplicationsRestoreTaskRequest:
    description: |-
      Specifies the request to create a restore task for restoring Application
      Servers like SQL or Exchange servers hosted by a Protection Source.
    type: object
    title: Create Applications Restore Task Request.
    required:
    - name
    - applicationEnvironment
    - hostingProtectionSource
    properties:
      applicationEnvironment:
        description: |-
          Specifies the Environment of the Application to restore like 'kSQL', or
          'kExchange'.
          overrideDescription: true
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: ApplicationEnvironment
        x-nullable: true
      applicationRestoreObjects:
        description: |-
          Specifies the Application Server objects whose data should be restored
          and the restore parameters for each of them.
          This field will be deprecated. Use the field
          ProtectionSourceAndApplicationRestoreObjects.
          deprecated: true
        type: array
        items:
          $ref: '#/definitions/ApplicationRestoreObject'
        x-go-name: ApplicationRestoreObjects
        x-nullable: true
      hostingProtectionSource:
        description: |-
          Specifies the restore information for the Protection Source object that
          registered and hosts the Application Servers. This provides the
          snapshot details from which the applications should be restored.
          This field will be deprecated. Use the field
          ProtectionSourceAndApplicationRestoreObjects.
          deprecated: true
        x-nullable: true
        $ref: '#/definitions/RestoreObjectDetails'
      name:
        description: |-
          Specifies a name for the new task to be created. This field has to be
          set, and it needs to be unique across all restore tasks.
        type: string
        x-go-name: Name
        x-nullable: true
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      protectionSourceAndApplicationObjects:
        description: |-
          Specifies the list of hosting protection source and Application restore
          objects tuple.
        type: array
        items:
          $ref: '#/definitions/ProtectionSourceAndApplicationRestoreObjects'
        x-go-name: ProtectionSourceAndApplicationObjects
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
      vlanParameters:
        description: Specifies VLAN parameters for the restore operation.
        x-nullable: true
        $ref: '#/definitions/VlanParameters'
    x-go-package: cohesity/iris/server/data/public
  ApplicationsWrapper:
    description: |-
      ApplicationsWrapper is the struct to define the list of map-reduce
      applications.
    type: object
    title: Applications Wrapper.
    properties:
      applications:
        description: |-
          Applications specifies the list of available map-reduce applications
          in analytics workbench.
        type: array
        items:
          $ref: '#/definitions/MapReduceInfo'
        x-go-name: Applications
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AppsConfig:
    type: object
    title: Athena Apps Configuration.
    properties:
      allowExternalTraffic:
        description: Whether to allow pod external traffic.
        type: boolean
        x-go-name: AllowExternalTraffic
        x-nullable: true
      allowUnrestictedViewAccess:
        description: Whether to allow apps unrestricted view access.
        type: boolean
        x-go-name: AllowUnrestrictedViewAccess
        x-nullable: true
      appsMode:
        description: |-
          Specifies the various modes for running apps.
          'kDisabled' specifies that apps are disabled.
          'kBareMetal' specifies that apps could only run in containers
          on the node (no VM).
          'kVmOnly' specifies that apps could only run in containers on a VM
          hosted by the node.
        type: string
        enum:
        - kDisabled
        - kBareMetal
        - kVmOnly
        x-go-name: AppsMode
        x-nullable: true
      appsSubnet:
        description: The subnet for Athena apps.
        x-nullable: true
        $ref: '#/definitions/Subnet'
      overcommitMemoryPct:
        description: The system memory to overcommit for apps.
        type: integer
        format: int32
        x-go-name: OvercommitMemoryPct
        x-nullable: true
      reservedCpuMillicores:
        description: The CPU millicores to reserve for apps.
        type: integer
        format: int32
        x-go-name: ReservedCpuMillicores
        x-nullable: true
      reservedMemoryPct:
        description: The system memory to reserve for apps.
        type: integer
        format: int32
        x-go-name: ReservedMemoryPct
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ArchivalExternalTarget:
    description: Specifies settings about the Archival External Target (such as Tape
      or AWS).
    type: object
    title: Archival Target.
    properties:
      vaultId:
        description: Specifies the id of Archival Vault assigned by the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
      vaultName:
        description: Name of the Archival Vault.
        type: string
        x-go-name: VaultName
        x-nullable: true
      vaultType:
        description: |-
          Specifies the type of the Archival External Target such as 'kCloud',
          'kTape' or 'kNas'.
          'kCloud' indicates the archival location as Cloud.
          'kTape' indicates the archival location as Tape.
          'kNas' indicates the archival location as Network Attached Storage (Nas).
        type: string
        enum:
        - kCloud
        - kTape
        - kNas
        x-go-name: VaultType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ArchivalTarget:
    description: |-
      Message that specifies the details about an archival target (such as cloud
      or tape) where backup snapshots may be archived to.
    type: object
    properties:
      name:
        description: The name of the archival target.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: The type of the archival target.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      vaultId:
        description: The id of the archival vault.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  AttributeRestoreInformation:
    description: Represents the details about the restore of the AD attribute.
    type: object
    title: Attribute Restore Information.
    properties:
      errorMessage:
        description: Specifes the error messages corresponding to restore of the attribute.
        type: array
        items:
          type: string
        x-go-name: ErrorMessage
        x-nullable: true
      name:
        description: Specifies the name of the attribute of the AD object.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AttributeValue:
    description: Represents the information about the values of attribute of the ADObject.
    type: object
    title: AttributeValue
    properties:
      flags:
        description: |-
          Specifies the flags related to the attribute values of the AD object.
          'kError' indicates error in conversion of AD Object value to string.
          The value in the AdAttributValue contains the error message.
          'kTruncated' indicates the multi valued attribute is truncated when value
          exceeded 'truncate_multivalues' value specified in the request.
          'kCSV' indicates content in 'values' is a comma separated value (CSV) format
          of a complex object.
        type: array
        items:
          type: string
          enum:
          - kError
          - kTruncated
          - kCSV
        x-go-name: AttributeValFlags
        x-nullable: true
      values:
        description: Specifies list of values for the attribute.
        type: array
        items:
          type: string
        x-go-name: Values
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AuditLogsTile:
    description: Audit logs for Dashboard.
    type: object
    title: Audit Logs Tile.
    properties:
      clusterAuditLogs:
        description: |-
          Array of Cluster Audit Logs.

          Specifies a list of Cluster audit logs that match the specified
          filter criteria up to the limit specified in pageCount.
        type: array
        items:
          $ref: '#/definitions/ClusterAuditLog'
        x-go-name: ClusterAuditLogs
        x-nullable: true
      totalCount:
        description: |-
          Specifies the total number of logs that match the specified
          filter criteria. (This number might be larger than the size of the
          Cluster Audit Logs array.)
          This count is provided to indicate if additional requests must be
          made to get the full result.
        type: integer
        format: int64
        x-go-name: TotalCount
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AwsCredentials:
    description: Specifies the credentials to authenticate with AWS Cloud Platform.
    type: object
    title: AWS source Credentials.
    properties:
      accessKey:
        description: Specifies Access key of the AWS account.
        type: string
        x-go-name: AccessKey
        x-nullable: true
      amazonResourceName:
        description: |-
          Specifies Amazon Resource Name (owner ID) of the IAM user, act as an
          unique identifier of as AWS entity.
        type: string
        x-go-name: AmazonResourceName
        x-nullable: true
      authMethod:
        description: |-
          Specifies the authentication method to be used for API calls.
          Specifies the authentication method to be used for API calls.
          'kUseIAMUser' indicates a user based authentication.
          'kUseIAMRole' indicates a role based authentication, used only for AWS CE.
        type: string
        enum:
        - kUseIAMUser
        - kUseIAMRole
        x-go-name: AuthMethod
        x-nullable: true
      awsType:
        description: |-
          Specifies the entity type such as 'kIAMUser' if the environment is kAWS.
          Specifies the type of an AWS source entity.
          'kIAMUser' indicates a unique user within an AWS account.
          'kRegion' indicates a geographical region in the global infrastructure.
          'kAvailabilityZone' indicates an availability zone within a region.
          'kEC2Instance' indicates a Virtual Machine running in AWS environment.
          'kVPC' indicates a virtual private cloud (VPC) network within AWS.
          'kSubnet' indicates a subnet inside the VPC.
          'kNetworkSecurityGroup' represents a network security group.
          'kInstanceType' represents various machine types.
          'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine.
          'kTag' represents a tag attached to EC2 instance.
          'kRDSOptionGroup' represents a RDS option group for configuring database features.
          'kRDSParameterGroup' represents a RDS parameter group.
          'kRDSInstance' represents a RDS DB instance.
          'kRDSSubnet' represents a RDS subnet.
          'kRDSTag' represents a tag attached to RDS instance.
        type: string
        enum:
        - kIAMUser
        - kRegion
        - kAvailabilityZone
        - kEC2Instance
        - kVPC
        - kSubnet
        - kNetworkSecurityGroup
        - kInstanceType
        - kKeyPair
        - kTag
        - kRDSOptionGroup
        - kRDSParameterGroup
        - kRDSInstance
        - kRDSSubnet
        - kRDSTag
        x-go-name: AwsType
        x-nullable: true
      iamRoleArn:
        description: |-
          Specifies the IAM role which will be used to access the security
          credentials required for API calls.
        type: string
        x-go-name: IamRoleArn
        x-nullable: true
      secretAccessKey:
        description: Specifies Secret Access key of the AWS account.
        type: string
        x-go-name: SecretAccessKey
        x-nullable: true
      subscriptionType:
        description: |-
          Specifies the subscription type of AWS such as 'kAWSCommercial' or
          'kAWSGovCloud'.
          Specifies the subscription type of an AWS source entity.
          'kAWSCommercial' indicates a standard AWS subscription.
          'kAWSGovCloud' indicates a govt AWS subscription.
        type: string
        enum:
        - kAWSCommercial
        - kAWSGovCloud
        x-go-name: SubscriptionType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AwsFleetParams:
    description: Specifies various resources when deploying a VM to Fleet instances.
    type: object
    title: AWS Fleet Parameters.
    properties:
      fleetSubnetType:
        description: |-
          Specifies the subnet type of the fleet.
          Specifies the type of the fleet subnet.
          'kCluster' implies same subnet as of Cluster, valid only for Cloud Edition
          cluster.
          'kSourceVM' implies same subnet as of source vm.
          'kCustom' implies the custome subnet.
        type: string
        enum:
        - kCluster
        - kSourceVM
        - kCustom
        x-go-name: FleetSubnetType
        x-nullable: true
      fleetTags:
        description: Specifies the tag information for the fleet.
        type: array
        items:
          $ref: '#/definitions/FleetTag'
        x-go-name: FleetTags
        x-nullable: true
      networkParamsList:
        description: Specifies the list of network params for the fleet.
        type: array
        items:
          $ref: '#/definitions/FleetNetworkParams'
        x-go-name: NetworkParamsList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AwsKmsConfiguration:
    type: object
    title: AwsKmsConfiguration to define AWS KMS config.
    properties:
      accessKeyId:
        description: |-
          Access key id needed to access the cloud account.
          When update cluster config, should encrypte accessKeyId with cluster ID.
        type: string
        x-go-name: AccessKeyId
        x-nullable: true
      caCertificate:
        description: Specify the ca certificate path.
        type: string
        x-go-name: CaCertificate
        x-nullable: true
      cmkAlias:
        description: The string alias of the CMK.
        type: string
        x-go-name: CmkAlias
        x-nullable: true
      cmkArn:
        description: The Amazon Resource Number of AWS Customer Managed Key.
        type: string
        x-go-name: CmkArn
        x-nullable: true
      cmkKeyId:
        description: |-
          AWS keyId, and alias.
          Only need one of them to connect AWS.
          Alias is better, because keyId maybe rotated by AWS.
          The unique key id of the CMK.
        type: string
        x-go-name: CmkKeyId
        x-nullable: true
      region:
        description: |-
          AWS region, e.g. us-east-1, us-west-2, for the AWS Glacier service to
          be used to authenticate resources within this region by the configured
          AWS account.
        type: string
        x-go-name: Region
        x-nullable: true
      secretAccessKey:
        description: |-
          Secret access key needed to access the cloud account. This is
          encrypted with the cluster id.
        type: string
        x-go-name: SecretAccessKey
        x-nullable: true
      verifySSL:
        description: |-
          Specify whether to verify SSL when connect with AWS KMS.
          Default is true.
        type: boolean
        x-go-name: VerifySSL
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AwsKmsUpdateParams:
    type: object
    title: AwsKmsUpdateParams to define AWS KMS config.
    properties:
      accessKeyId:
        description: |-
          Access key id needed to access the cloud account.
          When update cluster config, should encrypte accessKeyId with cluster ID.
        type: string
        x-go-name: AccessKeyId
        x-nullable: true
      caCertificatePath:
        description: Specify the ca certificate path.
        type: string
        x-go-name: CaCertificate
        x-nullable: true
      secretAccessKey:
        description: |-
          Secret access key needed to access the cloud account. This is
          encrypted with the cluster id.
        type: string
        x-go-name: SecretAccessKey
        x-nullable: true
      verifySSL:
        description: |-
          Specify whether to verify SSL when connect with AWS KMS.
          Default is true.
        type: boolean
        x-go-name: VerifySSL
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AwsParams:
    description: Specifies various resources when converting and deploying a VM to
      AWS.
    type: object
    title: AWS Parameters.
    properties:
      instanceId:
        description: Specifies id of the AWS instance type in which to deploy the
          VM.
        type: integer
        format: int64
        x-go-name: InstanceId
        x-nullable: true
      networkSecurityGroupIds:
        description: Specifies ids of the network security groups within above VPC.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: NetworkSecurityGroupIds
        x-nullable: true
      rdsParams:
        description: Specifies Amazon RDS parameters.
        x-nullable: true
        $ref: '#/definitions/RdsParams'
      region:
        description: Specifies id of the AWS region in which to deploy the VM.
        type: integer
        format: int64
        x-go-name: Region
        x-nullable: true
      subnetId:
        description: Specifies id of the subnet within above VPC.
        type: integer
        format: int64
        x-go-name: SubnetId
        x-nullable: true
      virtualPrivateCloudId:
        description: Specifies id of the Virtual Private Cloud to chose for the instance
          type.
        type: integer
        format: int64
        x-go-name: VirtualPrivateCloudId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AwsProtectionSource:
    description: Specifies a Protection Source in AWS environment.
    type: object
    title: AWS Protection Source.
    properties:
      accessKey:
        description: Specifies Access key of the AWS account.
        type: string
        x-go-name: AccessKey
        x-nullable: true
      amazonResourceName:
        description: |-
          Specifies Amazon Resource Name (owner ID) of the IAM user, act as an
          unique identifier of as AWS entity.
        type: string
        x-go-name: AmazonResourceName
        x-nullable: true
      authMethod:
        description: |-
          Specifies the authentication method to be used for API calls.
          Specifies the authentication method to be used for API calls.
          'kUseIAMUser' indicates a user based authentication.
          'kUseIAMRole' indicates a role based authentication, used only for AWS CE.
        type: string
        enum:
        - kUseIAMUser
        - kUseIAMRole
        x-go-name: AuthMethod
        x-nullable: true
      awsFleetParams:
        description: |-
          Specifies information related to AWS fleets launched for various purposes.
          This will only be set for kIAMUser entity.
        x-nullable: true
        $ref: '#/definitions/AwsFleetParams'
      awsType:
        description: |-
          Specifies the entity type such as 'kIAMUser' if the environment is kAWS.
          Specifies the type of an AWS source entity.
          'kIAMUser' indicates a unique user within an AWS account.
          'kRegion' indicates a geographical region in the global infrastructure.
          'kAvailabilityZone' indicates an availability zone within a region.
          'kEC2Instance' indicates a Virtual Machine running in AWS environment.
          'kVPC' indicates a virtual private cloud (VPC) network within AWS.
          'kSubnet' indicates a subnet inside the VPC.
          'kNetworkSecurityGroup' represents a network security group.
          'kInstanceType' represents various machine types.
          'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine.
          'kTag' represents a tag attached to EC2 instance.
          'kRDSOptionGroup' represents a RDS option group for configuring database features.
          'kRDSParameterGroup' represents a RDS parameter group.
          'kRDSInstance' represents a RDS DB instance.
          'kRDSSubnet' represents a RDS subnet.
          'kRDSTag' represents a tag attached to RDS instance.
        type: string
        enum:
        - kIAMUser
        - kRegion
        - kAvailabilityZone
        - kEC2Instance
        - kVPC
        - kSubnet
        - kNetworkSecurityGroup
        - kInstanceType
        - kKeyPair
        - kTag
        - kRDSOptionGroup
        - kRDSParameterGroup
        - kRDSInstance
        - kRDSSubnet
        - kRDSTag
        x-go-name: AwsType
        x-nullable: true
      clusterNetworkInfo:
        description: |-
          Specifies information related to cluster. This is only valid for CE
          clusters. This is only populated for kIAMUser entity.
        x-nullable: true
        $ref: '#/definitions/FleetNetworkParams'
      dbEngineId:
        description: |-
          Specifies DB engine version info of the entity. This is populated only
          for RDSInstance, RDSOptionGroup and RDSParameterGroup entity types.
        type: string
        x-go-name: DbEngineId
        x-nullable: true
      hostType:
        description: |-
          Specifies the OS type of the Protection Source of type 'kVirtualMachine'
          such as 'kWindows' or 'kLinux'.
          overrideDescription: true
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      iamRoleArn:
        description: |-
          Specifies the IAM role which will be used to access the security
          credentials required for API calls.
        type: string
        x-go-name: IamRoleArn
        x-nullable: true
      ipAddresses:
        description: Specifies the IP address of the entity of type 'kVirtualMachine'.
        type: string
        x-go-name: IpAddress
        x-nullable: true
      name:
        description: |-
          Specifies the name of the Object set by the Cloud Provider.
          If the provider did not set a name for the object, this field is not set.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: |-
          Specifies the owner id of the resource in AWS environment. With type,
          name and ownerId gives a globally unique identity to the AWS entity.
        type: string
        x-go-name: OwnerId
        x-nullable: true
      physicalSourceId:
        description: |-
          Specifies the Protection Source id of the registered Physical Host.
          If the cloud entity is protected using a Physical Agent, it must be
          registered as a physical host.
        type: integer
        format: int64
        x-go-name: PhysicalSourceId
        x-nullable: true
      regionId:
        description: Specifies the region Id of the entity if the entity is an EC2
          instance.
        type: string
        x-go-name: RegionId
        x-nullable: true
      resourceId:
        description: Specifies the unique Id of the resource given by the cloud provider.
        type: string
        x-go-name: ResourceId
        x-nullable: true
      restoreTaskId:
        description: |-
          Specifies the id of the "convert and deploy" restore task that
          created the entity in the cloud.

          It is required to support the DR-to-cloud usecase where we replicate an
          on-prem entity to a cluster running in cloud, bring it up using
          "convert and deploy" mechanism, protect it using a cloud job that uses
          physical adapter, and convert it back to the on-prem format before
          replication.

          Before replicating, we need to update the backup task state of the backed
          up entity using the on-prem entity and on-prem entity's parent.
          The id is used to lookup the restore entity that contains details about
          the on-prem entity.

          It is set at the time of refreshing the cloud entity hierarchy if all the
          following conditions are met:
          Name of the current entity matches with name of any cloud entity
          deployed using the "convert and deploy" restore task.
          Restore entity associated with the above matched cloud entity has
          'failed_over' flag set to true in its cloud extension.
        type: integer
        format: int64
        x-go-name: RestoreTaskId
        x-nullable: true
      secretAccessKey:
        description: Specifies Secret Access key of the AWS account.
        type: string
        x-go-name: SecretAccessKey
        x-nullable: true
      subscriptionType:
        description: |-
          Specifies the subscription type of AWS such as 'kAWSCommercial' or
          'kAWSGovCloud'.
          Specifies the subscription type of an AWS source entity.
          'kAWSCommercial' indicates a standard AWS subscription.
          'kAWSGovCloud' indicates a govt AWS subscription.
        type: string
        enum:
        - kAWSCommercial
        - kAWSGovCloud
        x-go-name: SubscriptionType
        x-nullable: true
      tagAttributes:
        description: Specifies the list of AWS tag attributes.
        type: array
        items:
          $ref: '#/definitions/TagAttribute'
        x-go-name: TagAttributes
        x-nullable: true
      type:
        description: |-
          Specifies the type of an AWS Protection Source Object such as
          'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.
          Specifies the type of an AWS source entity.
          'kIAMUser' indicates a unique user within an AWS account.
          'kRegion' indicates a geographical region in the global infrastructure.
          'kAvailabilityZone' indicates an availability zone within a region.
          'kEC2Instance' indicates a Virtual Machine running in AWS environment.
          'kVPC' indicates a virtual private cloud (VPC) network within AWS.
          'kSubnet' indicates a subnet inside the VPC.
          'kNetworkSecurityGroup' represents a network security group.
          'kInstanceType' represents various machine types.
          'kKeyPair' represents a pair of public and private key used to login into a Virtual Machine.
          'kTag' represents a tag attached to EC2 instance.
          'kRDSOptionGroup' represents a RDS option group for configuring database features.
          'kRDSParameterGroup' represents a RDS parameter group.
          'kRDSInstance' represents a RDS DB instance.
          'kRDSSubnet' represents a RDS subnet.
          'kRDSTag' represents a tag attached to RDS instance.
        type: string
        enum:
        - kIAMUser
        - kRegion
        - kAvailabilityZone
        - kEC2Instance
        - kVPC
        - kSubnet
        - kNetworkSecurityGroup
        - kInstanceType
        - kKeyPair
        - kTag
        - kRDSOptionGroup
        - kRDSParameterGroup
        - kRDSInstance
        - kRDSSubnet
        - kRDSTag
        x-go-name: Type
        x-nullable: true
      userAccountId:
        description: Specifies the account id derived from the ARN of the user.
        type: string
        x-go-name: UserAccountId
        x-nullable: true
      userResourceName:
        description: Specifies the Amazon Resource Name (ARN) of the user.
        type: string
        x-go-name: UserResourceName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AwsSnapshotManagerParameters:
    description: |-
      Protection Job parameters applicable to 'kAWSSnapshotManager' Environment
      type.
      Specifies additional job parameters applicable for 'kAWSSnapshotManager'
      Environment type Protection Sources in a Protection Job.
    type: object
    title: AWS SnapshotManager Parameters.
    properties:
      amiCreationFrequency:
        description: |-
          Specifies the frequency of AMI creation. This should be set if the option
          to create AMI is set. A value of n creates an AMI from the snapshots after
          every n runs. eg. n = 2 implies every alternate backup run starting from
          the first will create an AMI.
        type: integer
        format: int32
        x-go-name: AmiCreationFrequency
        x-nullable: true
      createAmi:
        description: |-
          If true, creates an AMI after taking snapshots of the instance. It should
          be set only while backing up EC2 instances.
          CreateAmi creates AMI for the protection job.
        type: boolean
        x-go-name: CreateAmi
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AzureCloudCredentials:
    description: |-
      Specifies the cloud credentials to connect to a Microsoft
      Azure service account.
    type: object
    title: Azure Cloud Credentials.
    properties:
      storageAccessKey:
        description: |-
          Specifies the access key to use when accessing a storage tier
          in a Azure cloud service.
        type: string
        x-go-name: StorageAccessKey
        x-nullable: true
      storageAccountName:
        description: |-
          Specifies the account name to use when accessing a storage tier
          in a Azure cloud service.
        type: string
        x-go-name: StorageAccountName
        x-nullable: true
      tierType:
        description: |-
          Specifies the storage class of Azure.
          AzureTierType specifies the storage class for Azure.
          'kAzureTierHot' indicates a tier type of Azure properties that is accessed
          frequently.
          'kAzureTierCool' indicates a tier type of Azure properties that is
          accessed less frequently, and stored for at least 30 days.
          'kAzureTierArchive' indicates a tier type of Azure properties that is
          accessed rarely and stored for at least 180 days.
        type: string
        enum:
        - kAzureTierHot
        - kAzureTierCool
        - kAzureTierArchive
        x-go-name: TierType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AzureCredentials:
    description: Specifies the credentials to authenticate with Azure Cloud Platform.
    type: object
    title: Azure source Credentials.
    properties:
      applicationId:
        description: Specifies Application Id of the active directory of Azure account.
        type: string
        x-go-name: ApplicationId
        x-nullable: true
      applicationKey:
        description: Specifies Application key of the active directory of Azure account.
        type: string
        x-go-name: ApplicationKey
        x-nullable: true
      azureType:
        description: |-
          Specifies the entity type such as 'kSubscription' if the environment is
          kAzure.
          Specifies the type of an Azure source entity.
          'kSubscription' indicates a billing unit within Azure account.
          'kResourceGroup' indicates a container that holds related resources.
          'kVirtualMachine' indicates a Virtual Machine in Azure environment.
          'kStorageAccount' represents a collection of storage containers.
          'kStorageKey' indicates a key required to access the storage account.
          'kStorageContainer' represents a storage container within a storage account.
          'kStorageBlob' represents a storage blog within a storage container.
          'kStorageResourceGroup' indicates a container that holds related
          storage resources.
          'kNetworkSecurityGroup' represents a network security group.
          'kVirtualNetwork' represents a virtual network.
          'kNetworkResourceGroup' indicates a container that holds related
          network resources.
          'kSubnet' represents a subnet within the virtual network.
          'kComputeOptions' indicates the number of CPU cores and memory size
          available for a type of a Virtual Machine.
        type: string
        enum:
        - kSubscription
        - kResourceGroup
        - kVirtualMachine
        - kStorageAccount
        - kStorageKey
        - kStorageContainer
        - kStorageBlob
        - kStorageResourceGroup
        - kNetworkSecurityGroup
        - kVirtualNetwork
        - kNetworkResourceGroup
        - kSubnet
        - kComputeOptions
        x-go-name: AzureType
        x-nullable: true
      subscriptionId:
        description: |-
          Specifies Subscription id inside a customer's Azure account. It represents
          sub-section within the Azure account where a customer allows us to
          create VMs, storage account etc.
        type: string
        x-go-name: SubscriptionId
        x-nullable: true
      subscriptionType:
        description: |-
          Specifies the subscription type of Azure such as 'kAzureCommercial' or
          'kAzureGovCloud'.
          Specifies the subscription type of an Azure source entity.
          'kAzureCommercial' indicates a standard Azure subscription.
          'kAzureGovCloud' indicates a govt Azure subscription.
        type: string
        enum:
        - kAzureCommercial
        - kAzureGovCloud
        x-go-name: SubscriptionType
        x-nullable: true
      tenantId:
        description: Specifies Tenant Id of the active directory of Azure account.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AzureManagedDiskParams:
    description: |-
      Contains managed disk parameters needed to deploy to Azure using managed
      disk.
    type: object
    properties:
      dataDisksSkuType:
        description: SKU type for data disks.
        type: integer
        format: int32
        x-go-name: DataDisksSkuType
        x-nullable: true
      osDiskSkuType:
        description: SKU type for OS disk.
        type: integer
        format: int32
        x-go-name: OsDiskSkuType
        x-nullable: true
    x-go-package: magneto/base/cloud_deploy.pb
  AzureParams:
    description: Specifies various resources when converting and deploying a VM to
      Azure.
    type: object
    title: Azure Parameters.
    properties:
      dataDiskType:
        description: |-
          Specifies the disk type used by the data.
          'kPremiumSSD' is disk type backed by SSDs, delivers high performance, low
          latency disk support for VMs running I/O intensive workloads.
          'kStandardSSD' implies disk type that offers more consistent performance and
          reliability than HDD.
          'kStandardHDD' implies disk type backed by HDDs, delivers cost effective
          storage.
        type: string
        enum:
        - kPremiumSSD
        - kStandardSSD
        - kStandardHDD
        x-go-name: DataDiskType
        x-nullable: true
      instanceId:
        description: |-
          Specifies Type of VM (e.g. small, medium, large) when cloning the VM in
          Azure.
        type: integer
        format: int64
        x-go-name: InstanceId
        x-nullable: true
      networkResourceGroupId:
        description: Specifies id of the resource group for the selected virtual network.
        type: integer
        format: int64
        x-go-name: NetworkResourceGroupId
        x-nullable: true
      osDiskType:
        description: |-
          Specifies the disk type used by the OS.
          'kPremiumSSD' is disk type backed by SSDs, delivers high performance, low
          latency disk support for VMs running I/O intensive workloads.
          'kStandardSSD' implies disk type that offers more consistent performance and
          reliability than HDD.
          'kStandardHDD' implies disk type backed by HDDs, delivers cost effective
          storage.
        type: string
        enum:
        - kPremiumSSD
        - kStandardSSD
        - kStandardHDD
        x-go-name: OsDiskType
        x-nullable: true
      resourceGroup:
        description: |-
          Specifies id of the Azure resource group. Its value is globally unique
          within Azure.
        type: integer
        format: int64
        x-go-name: ResourceGroup
        x-nullable: true
      storageAccount:
        description: |-
          Specifies id of the storage account that will contain the storage
          container within which we will create the blob that will become the VHD
          disk for the cloned VM.
        type: integer
        format: int64
        x-go-name: StorageAccount
        x-nullable: true
      storageContainer:
        description: Specifies id of the storage container within the above storage
          account.
        type: integer
        format: int64
        x-go-name: StorageContainer
        x-nullable: true
      storageResourceGroupId:
        description: Specifies id of the resource group for the selected storage account.
        type: integer
        format: int64
        x-go-name: StorageResourceGroupId
        x-nullable: true
      subnetId:
        description: Specifies Id of the subnet within the above virtual network.
        type: integer
        format: int64
        x-go-name: SubnetId
        x-nullable: true
      tempVmResourceGroupId:
        description: Specifies the resource group where temporary VM needs to be created.
        type: integer
        format: int64
        x-go-name: TempVmResourceGroupId
        x-nullable: true
      tempVmStorageAccountId:
        description: Specifies the Storage account where temporary VM needs to be
          created.
        type: integer
        format: int64
        x-go-name: TempVmStorageAccountId
        x-nullable: true
      tempVmStorageContainerId:
        description: Specifies the Storage container where temporary VM needs to be
          created.
        type: integer
        format: int64
        x-go-name: TempVmStorageContainerId
        x-nullable: true
      tempVmSubnetId:
        description: Specifies the Subnet where temporary VM needs to be created.
        type: integer
        format: int64
        x-go-name: TempVmSubnetId
        x-nullable: true
      tempVmVirtualNetworkId:
        description: Specifies the Virtual network where temporary VM needs to be
          created.
        type: integer
        format: int64
        x-go-name: TempVmVirtualNetworkId
        x-nullable: true
      virtualNetworkId:
        description: Specifies Id of the Virtual Network.
        type: integer
        format: int64
        x-go-name: VirtualNetworkId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  AzureProtectionSource:
    description: Specifies a Protection Source in Azure environment.
    type: object
    title: Azure Protection Source.
    properties:
      applicationId:
        description: Specifies Application Id of the active directory of Azure account.
        type: string
        x-go-name: ApplicationId
        x-nullable: true
      applicationKey:
        description: Specifies Application key of the active directory of Azure account.
        type: string
        x-go-name: ApplicationKey
        x-nullable: true
      azureType:
        description: |-
          Specifies the entity type such as 'kSubscription' if the environment is
          kAzure.
          Specifies the type of an Azure source entity.
          'kSubscription' indicates a billing unit within Azure account.
          'kResourceGroup' indicates a container that holds related resources.
          'kVirtualMachine' indicates a Virtual Machine in Azure environment.
          'kStorageAccount' represents a collection of storage containers.
          'kStorageKey' indicates a key required to access the storage account.
          'kStorageContainer' represents a storage container within a storage account.
          'kStorageBlob' represents a storage blog within a storage container.
          'kStorageResourceGroup' indicates a container that holds related
          storage resources.
          'kNetworkSecurityGroup' represents a network security group.
          'kVirtualNetwork' represents a virtual network.
          'kNetworkResourceGroup' indicates a container that holds related
          network resources.
          'kSubnet' represents a subnet within the virtual network.
          'kComputeOptions' indicates the number of CPU cores and memory size
          available for a type of a Virtual Machine.
        type: string
        enum:
        - kSubscription
        - kResourceGroup
        - kVirtualMachine
        - kStorageAccount
        - kStorageKey
        - kStorageContainer
        - kStorageBlob
        - kStorageResourceGroup
        - kNetworkSecurityGroup
        - kVirtualNetwork
        - kNetworkResourceGroup
        - kSubnet
        - kComputeOptions
        x-go-name: AzureType
        x-nullable: true
      hostType:
        description: |-
          Specifies the OS type of the Protection Source of type 'kVirtualMachine'
          such as 'kWindows' or 'kLinux'.
          overrideDescription: true
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      ipAddresses:
        description: Specifies a list of IP addresses for entities of type 'kVirtualMachine'.
        type: array
        items:
          type: string
        x-go-name: IpAddresses
        x-nullable: true
      isManagedVm:
        description: |-
          Specifies whether VM is managed or not for entities of type
          'kVirtualMachine'.
        type: boolean
        x-go-name: IsManagedVm
        x-nullable: true
      location:
        description: Specifies the physical location of the resource group.
        type: string
        x-go-name: Location
        x-nullable: true
      memoryMbytes:
        description: |-
          Specifies the amount of memory in MegaBytes of the Azure resource of
          type 'kComputeOptions'.
        type: integer
        format: int64
        x-go-name: MemoryMbytes
        x-nullable: true
      name:
        description: |-
          Specifies the name of the Object set by the Cloud Provider.
          If the provider did not set a name for the object, this field is not set.
        type: string
        x-go-name: Name
        x-nullable: true
      numCores:
        description: |-
          Specifies the number of CPU cores of the Azure resource of
          type 'kComputeOptions'.
        type: integer
        format: int32
        x-go-name: NumCores
        x-nullable: true
      physicalSourceId:
        description: |-
          Specifies the Protection Source id of the registered Physical Host.
          If the cloud entity is protected using a Physical Agent, it must be
          registered as a physical host.
        type: integer
        format: int64
        x-go-name: PhysicalSourceId
        x-nullable: true
      resourceId:
        description: Specifies the unique Id of the resource given by the cloud provider.
        type: string
        x-go-name: ResourceId
        x-nullable: true
      restoreTaskId:
        description: |-
          Specifies the id of the "convert and deploy" restore task that
          created the entity in the cloud.

          It is required to support the DR-to-cloud usecase where we replicate an
          on-prem entity to a cluster running in cloud, bring it up using
          "convert and deploy" mechanism, protect it using a cloud job that uses
          physical adapter, and convert it back to the on-prem format before
          replication.

          Before replicating, we need to update the backup task state of the backed
          up entity using the on-prem entity and on-prem entity's parent.
          The id is used to lookup the restore entity that contains details about
          the on-prem entity.

          It is set at the time of refreshing the cloud entity hierarchy if all the
          following conditions are met:
          Name of the current entity matches with name of any cloud entity
          deployed using the "convert and deploy" restore task.
          Restore entity associated with the above matched cloud entity has
          'failed_over' flag set to true in its cloud extension.
        type: integer
        format: int64
        x-go-name: RestoreTaskId
        x-nullable: true
      subscriptionId:
        description: |-
          Specifies Subscription id inside a customer's Azure account. It represents
          sub-section within the Azure account where a customer allows us to
          create VMs, storage account etc.
        type: string
        x-go-name: SubscriptionId
        x-nullable: true
      subscriptionType:
        description: |-
          Specifies the subscription type of Azure such as 'kAzureCommercial' or
          'kAzureGovCloud'.
          Specifies the subscription type of an Azure source entity.
          'kAzureCommercial' indicates a standard Azure subscription.
          'kAzureGovCloud' indicates a govt Azure subscription.
        type: string
        enum:
        - kAzureCommercial
        - kAzureGovCloud
        x-go-name: SubscriptionType
        x-nullable: true
      tenantId:
        description: Specifies Tenant Id of the active directory of Azure account.
        type: string
        x-go-name: TenantId
        x-nullable: true
      type:
        description: |-
          Specifies the type of an Azure Protection Source Object such as
          'kStorageContainer', 'kVirtualMachine', 'kVirtualNetwork', etc.
          Specifies the type of an Azure source entity.
          'kSubscription' indicates a billing unit within Azure account.
          'kResourceGroup' indicates a container that holds related resources.
          'kVirtualMachine' indicates a Virtual Machine in Azure environment.
          'kStorageAccount' represents a collection of storage containers.
          'kStorageKey' indicates a key required to access the storage account.
          'kStorageContainer' represents a storage container within a storage account.
          'kStorageBlob' represents a storage blog within a storage container.
          'kStorageResourceGroup' indicates a container that holds related
          storage resources.
          'kNetworkSecurityGroup' represents a network security group.
          'kVirtualNetwork' represents a virtual network.
          'kNetworkResourceGroup' indicates a container that holds related
          network resources.
          'kSubnet' represents a subnet within the virtual network.
          'kComputeOptions' indicates the number of CPU cores and memory size
          available for a type of a Virtual Machine.
        type: string
        enum:
        - kSubscription
        - kResourceGroup
        - kVirtualMachine
        - kStorageAccount
        - kStorageKey
        - kStorageContainer
        - kStorageBlob
        - kStorageResourceGroup
        - kNetworkSecurityGroup
        - kVirtualNetwork
        - kNetworkResourceGroup
        - kSubnet
        - kComputeOptions
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BackupJobPreOrPostScript:
    description: |-
      A message to encapsulate the pre and post scripts associated with a backup
      job. Pre script is executed before backup run of a job starts. Post script
      is executed after backup run of a job finishes.
      Currently, pre and post script is only supported for backup job of type
      'kPuppeteer' and agent-based backup jobs.
    type: object
    properties:
      backupScript:
        description: |-
          Script specific to the incremental/regular backup. If the script is not
          specified, incremental backup run will fail.
          For agent-based backup jobs, only following script is considered. The
          script file will be looked in the agent installation directory. If the
          file is not present, then it will be logged in Pulse and backup job
          continues without throwing any error/warning.
        x-nullable: true
        $ref: '#/definitions/ScriptPathAndParams'
      fullBackupScript:
        description: |-
          Script specific to the full backup. If the script is not specified, full
          backup run will fail.
        x-nullable: true
        $ref: '#/definitions/ScriptPathAndParams'
      logBackupScript:
        description: |-
          Script specific to the log backup. If the script is not specified, log
          backup run will fail.
        x-nullable: true
        $ref: '#/definitions/ScriptPathAndParams'
      remoteHostParams:
        description: |-
          Connector params for the host on which script is executed. This field is
          mandatory for job of type kPuppeteer and optional for other job types.
        x-nullable: true
        $ref: '#/definitions/RemoteHostConnectorParams'
    x-go-package: magneto/base/magneto.pb
  BackupJobProto:
    type: object
    properties:
      abortInExclusionWindow:
        description: |-
          This field determines whether a backup run should be aborted when it hits
          an exclusion window (assuming that it was started earlier when it was not
          in an exclusion window).
        type: boolean
        x-go-name: AbortInExclusionWindow
        x-nullable: true
      alertingPolicy:
        description: Determines the alerting policy for jobs.
        x-nullable: true
        $ref: '#/definitions/AlertingPolicyProto'
      backupQosPrincipal:
        description: The backup QoS principal to use for the backup job.
        type: integer
        format: int32
        x-go-name: BackupQosPrincipal
        x-nullable: true
      backupSourceParams:
        description: |-
          This contains additional backup params that are applicable to sources
          that are captured as part of the backup job.
          NOTE: The sources could point to higher level entities (such as a
          "Cluster" in VMware environment), but the source params captured here
          will not be for the matching higher level entity, but instead be for
          leaf-level entities (such as VMs).
        type: array
        items:
          $ref: '#/definitions/BackupSourceParams'
        x-go-name: BackupSourceParams
        x-nullable: true
      continueOnQuiesceFailure:
        description: Whether to continue backing up on quiesce failure.
        type: boolean
        x-go-name: ContinueOnQuiesceFailure
        x-nullable: true
      createRemoteView:
        description: |-
          If set to false, a remote view will not be created.
          If set to true and:
          1) Remote view name is not provided by the user, a remote view is created
          with the same name as source view name.
          2) Remote view name is provided by the user, a remote view is created with
          the given name.
        type: boolean
        x-go-name: CreateRemoteView
        x-nullable: true
      dedupDisabledSourceIdVec:
        description: |-
          List of source ids for which source side dedup is disabled from the backup
          job.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: DedupDisabledSourceIdVec
        x-nullable: true
      deletionStatus:
        description: |-
          Determines if the job (and associated backups) should be deleted. Once a
          job has been deleted, its status cannot be changed.
        type: integer
        format: int32
        x-go-name: DeletionStatus
        x-nullable: true
      description:
        description: Job description (as entered by the user).
        type: string
        x-go-name: Description
        x-nullable: true
      drToCloudParams:
        x-nullable: true
        $ref: '#/definitions/BackupJobProto_DRToCloudParams'
      ehParentSource:
        description: |-
          We need to send this to the Rx cluster via Replication or Remote restore
          to generate entity mappings correctly.

          NOTE: This field is set only by Magneto.
        title: |-
          The parent source in entity hierarchy. This may be set for environments
          such as SQL and Oracle, where the 'parent_source' may be a SQL/Oracle
          root container, while the real parent source in entity hierarchy might be
          a Physical container or a vCenter.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      endTimeUsecs:
        description: The time (in usecs) after which no backup for the job should
          be scheduled.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      envBackupParams:
        description: |-
          Job level additional environment specific backup params. If this is not
          specified, we will take default actions (for example for NAS environments,
          we will backup all objects within the source).
        x-nullable: true
        $ref: '#/definitions/EnvBackupParams'
      excludeSources:
        description: |-
          The list of sources to exclude from backups. These can have non-leaf-level
          entities, but it's up to the creator to ensure that a child of these
          sources hasn't been explicitly added to 'sources'.
        type: array
        items:
          $ref: '#/definitions/BackupJobProto_ExcludeSource'
        x-go-name: ExcludeSources
        x-nullable: true
      excludeSources_DEPRECATED:
        description: |-
          The list of sources to exclude from backups. These can have non-leaf-level
          entities, but it's up to the creator to ensure that a child of these
          sources hasn't been explicitly added to 'sources'.
        type: array
        items:
          $ref: '#/definitions/EntityProto'
        x-go-name: ExcludeSources_DEPRECATED
        x-nullable: true
      exclusionRanges:
        description: Do not run backups in these time-ranges.
        type: array
        items:
          $ref: '#/definitions/BackupJobProto_ExclusionTimeRange'
        x-go-name: ExclusionRanges
        x-nullable: true
      fullBackupJobPolicy:
        description: Determines how often full backups should be run.
        x-nullable: true
        $ref: '#/definitions/JobPolicyProto'
      fullBackupSlaTimeMins:
        description: |-
          Same as 'sla_time_mins' above, but applies to full backups.
          NOTE: This value is considered only for full backups that are excepted
          i.e either scheduled or the first full backup and not for full backups
          that happen as a result of incremental backup failure.
        type: integer
        format: int64
        x-go-name: FullBackupSlaTimeMins
        x-nullable: true
      globalIncludeExclude:
        description: |-
          Determines global include and exclude filters which are applied to all
          sources in a physical job.
        x-nullable: true
        $ref: '#/definitions/PhysicalFileBackupParams_GlobalIncludeExclude'
      indexingPolicy:
        description: |-
          Determines the indexing policy (in Yoda) for objects backed up by this
          job.
        x-nullable: true
        $ref: '#/definitions/IndexingPolicyProto'
      isActive:
        description: |-
          Whether the backup job is active or not. Details about what an active job
          is can be found here: https://goo.gl/1mLvS3.
        type: boolean
        x-go-name: IsActive
        x-nullable: true
      isContinuousSnapshottingEnabled:
        description: |-
          Indicates if Magneto should continue taking source snapshots even if there
          is a pending run.
        type: boolean
        x-go-name: IsContinuousSnapshottingEnabled
        x-nullable: true
      isDeleted:
        description: Tracks whether the backup job has actually been deleted.
        type: boolean
        x-go-name: IsDeleted
        x-nullable: true
      isDirectArchiveEnabled:
        description: This field is set to true if this is a direct archive backup
          job.
        type: boolean
        x-go-name: IsDirectArchiveEnabled
        x-nullable: true
      isDirectArchiveNativeFormatEnabled:
        description: |-
          This field is set to true if native format should be used for archiving.
          Applicable for only direct archive jobs.
        type: boolean
        x-go-name: IsDirectArchiveNativeFormatEnabled
        x-nullable: true
      isPaused:
        description: |-
          Whether the backup job is paused. New backup runs are not scheduled for
          the paused backup job. Active run of a backup job (if any) is not
          impacted.
        type: boolean
        x-go-name: IsPaused
        x-nullable: true
      isRpoJob:
        description: |-
          Whether the backup job is an RPO policy job. These jobs are hidden from
          the user, and are created internally to have a backup schedule for the
          given source.
        type: boolean
        x-go-name: IsRpoJob
        x-nullable: true
      jobCreationTimeUsecs:
        description: Time when this job was first created.
        type: integer
        format: int64
        x-go-name: JobCreationTimeUsecs
        x-nullable: true
      jobId:
        description: |-
          A unique id for locally created jobs. This should only be used to identify
          jobs created on the local cluster. When Iris communicates with Magneto,
          Iris can continue to use this job_id field, which will always be assumed
          to refer to locally created jobs.

          For remotely created jobs, the 'job_uid' field should be used. The only
          time Iris should ever need to refer to a remote job is when restoring an
          object from a remote snapshot. In all such cases, Iris should use the
          job_uid field.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobPolicy:
        description: |-
          Determines how often the job should run and how long the snapshots of the
          job should be retained at various targets.
        x-nullable: true
        $ref: '#/definitions/JobPolicyProto'
      jobUid:
        description: The globally unique id of the job.
        x-nullable: true
        $ref: '#/definitions/UniversalIdProto'
      lastModificationTimeUsecs:
        description: Time when this job description was last updated.
        type: integer
        format: int64
        x-go-name: LastModificationTimeUsecs
        x-nullable: true
      lastPauseModificationTimeUsecs:
        description: Time when the job was last paused or unpaused.
        type: integer
        format: int64
        x-go-name: LastPauseModificationTimeUsecs
        x-nullable: true
      lastPauseReason:
        description: |-
          Last reason for pausing the backup job. Capturing the reason will help in
          resuming only the jobs that were paused because of a reason once the
          reason for pausing is not applicable.
        type: integer
        format: int32
        x-go-name: LastPauseReason
        x-nullable: true
      lastUpdatedUsername:
        description: The user who modified the job most recently.
        type: string
        x-go-name: LastUpdatedUsername
        x-nullable: true
      leverageSanTransport:
        description: |-
          This is set to true by the user in order to backup the objects via a
          dedicated storage area network (SAN), as opposed to transport via LAN or
          management network.
          NOTE: Not all adapters support this method. Currently only VMware.
        type: boolean
        x-go-name: LeverageSanTransport
        x-nullable: true
      leverageStorageSnapshots:
        description: |-
          Whether to leverage the storage array based snapshots for this backup
          job. To leverage storage snapshots, the storage array has to be registered
          as a source. If storage based snapshots can not be taken, job will
          fallback to the default backup method.
          NOTE: This will be set for Pure snapshots.
        type: boolean
        x-go-name: LeverageStorageSnapshots
        x-nullable: true
      leverageStorageSnapshotsForHyperflex:
        description: |-
          This is set to true by the user if hyperflex snapshots are requested
          NOTE: If this is set to true, then leverage_storage_snapshots above should
          be false.
        type: boolean
        x-go-name: LeverageStorageSnapshotsForHyperflex
        x-nullable: true
      logBackupJobPolicy:
        description: Determines how often log backups should be run (for SQL jobs).
        x-nullable: true
        $ref: '#/definitions/JobPolicyProto'
      maxAllowedSourceSnapshots:
        description: |-
          Determines the maximum number of source snapshots allowed for a given
          entity in the job. This is only applicable if
          'is_continuous_snapshotting_enabled' is set to true.
        type: integer
        format: int32
        x-go-name: MaxAllowedSourceSnapshots
        x-nullable: true
      name:
        description: The name of this backup job. This must be unique across all jobs.
        type: string
        x-go-name: Name
        x-nullable: true
      numSnapshotsToKeepOnPrimary:
        description: |-
          Specifies how many recent snapshots of each backed up entity to retain on
          the primary environment. If not specified, then snapshots will not be
          be deleted from the primary environment.
          NOTE: This is only applicable for certain environments like kPure.
        type: integer
        format: int64
        x-go-name: NumSnapshotsToKeepOnPrimary
        x-nullable: true
      parentSource:
        description: The registered source managing all the sources being backed up.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      performSourceSideDedup:
        description: Whether or not to perform source side dedup.
        type: boolean
        x-go-name: PerformSourceSideDedup
        x-nullable: true
      policyAppliedTimeMsecs:
        description: |-
          Epoch time in milliseconds when the policy was last applied to this job.
          This field will be used to determine whether a policy has changed after
          it was applied to a particular job.
        type: integer
        format: int64
        x-go-name: PolicyAppliedTimeMsecs
        x-nullable: true
      policyId:
        description: |-
          Id of the policy being applied to the backup job. It is expected to be of
          the form "cluster_id:cluster_instance_id:local_identifier".
        type: string
        x-go-name: PolicyId
        x-nullable: true
      policyName:
        description: |-
          The name of the policy referred to by policy_uid. This field can be stale
          and should not be relied upon for the latest name.
        type: string
        x-go-name: PolicyName
        x-nullable: true
      postBackupScript:
        description: Post backup script associated with the backup job.
        x-nullable: true
        $ref: '#/definitions/BackupJobPreOrPostScript'
      preScript:
        description: |-
          Pre script associated with the backup job. This field must be specified
          for 'kPuppeteer' job.
        x-nullable: true
        $ref: '#/definitions/BackupJobPreOrPostScript'
      primaryJobUid:
        description: |-
          The globally unique id of the original remote job from which this job was
          derived.
        x-nullable: true
        $ref: '#/definitions/UniversalIdProto'
      priority:
        description: |-
          The priority for the job. This is used at admission time - all admitted
          jobs are treated equally. This is also used to determine the Madrox
          replication priority.
        type: integer
        format: int32
        x-go-name: Priority
        x-nullable: true
      quiesce:
        description: |-
          Whether to take app-consistent snapshots by quiescing apps and the
          filesystem before taking a backup.
        type: boolean
        x-go-name: Quiesce
        x-nullable: true
      remoteJobUids:
        description: |-
          The globally unique ids of all remote jobs that are linked to this job
          (because of incoming replications). This field will only be populated for
          locally created jobs. This field is populated only for the local(stub) job
          during incoming replications. In the most common case of one cluster
          replicating to another, this field will only have one entry (which is the
          id of the job on Tx side) and matches the primary_job_uid.
          This will have multiple entries in the following situation:
          A->B, A->C replication.
          The backup is failed over to B, and B now starts replicating to C.
          In this case, the stub job at C will have two entries. One is the job
          id from cluster A, and another is the local(stub) job uid from B.
          Also note that since the job originated from A, primary_job_uid for
          all the replicated instances of this job across multiple clusters will
          remain the same (which is equal to the job id from the original cluster
          A).
        type: array
        items:
          $ref: '#/definitions/UniversalIdProto'
        x-go-name: RemoteJobUids
        x-nullable: true
      remoteViewName:
        description: |-
          A human readable name of the remote view. A remote view is created with
          name overwriting the latest snapshot.
        type: string
        x-go-name: RemoteViewName
        x-nullable: true
      requiredFeatureVec:
        description: |-
          The features that are strictly required to be supported by the cluster
          of the backup job. This is currently used in the following cases:
          1. Tx cluster looks at the Rx cluster's supported features and replicates
          the backup job only if all the features captured here are supported.
          2. When performing remote restore of a backup job from an archival, this
          job will be retrieved only if the cluster supports all the features
          listed here.
        type: array
        items:
          type: string
        x-go-name: RequiredFeatureVec
        x-nullable: true
      slaTimeMins:
        description: |-
          If specified, this variable determines the amount of time (after backup
          has started) in which backup is expected to finish for this job. An SLA
          violation is counted against this job if the amount of time taken exceeds
          this amount.
        type: integer
        format: int64
        x-go-name: SlaTimeMins
        x-nullable: true
      sourceFilters:
        description: |-
          Determines include and exclude filters which are applied to entities in
          a backup source. For SQL, this will be applicable only for auto protect
          sources.
        x-nullable: true
        $ref: '#/definitions/SourceFilters'
      sources:
        description: |-
          The list of sources that should be backed up. A source in this list could
          be a descendant of another source in the list (this will be used when
          specifying override backup schedules).
        type: array
        items:
          $ref: '#/definitions/BackupJobProto_BackupSource'
        x-go-name: Sources
        x-nullable: true
      startTime:
        description: |-
          The time when the backup runs for the job should start. This is only
          applicable if the policy for the job has a daily or monthly schedule.
        x-nullable: true
        $ref: '#/definitions/Time'
      stubbingPolicy:
        description: Scheduling and retention policy for stubbing jobs.
        x-nullable: true
        $ref: '#/definitions/StubbingPolicyProto'
      tagVec:
        description: |-
          Tags associated with the job. User can specify tags/keywords that can
          indexed by Yoda and can be later searched in UI. For example, user can
          create a 'kPuppeteer' job to backup Oracle DB for 'payroll' department.
          User can specify following tags: 'payroll', 'Oracle_DB'.
        type: array
        items:
          type: string
        x-go-name: TagVec
        x-nullable: true
      timezone:
        description: |-
          Timezone of the backup job. All time fields (i.e., TimeOfDay) in this
          backup job are stored wrt to this timezone.

          The time zones have unique names of the form "Area/Location",
          e.g. "America/New_York". We are using "America/Los_Angeles" as a default
          value so as to be backward compatible with pre-2.7 code.
        type: string
        x-go-name: Timezone
        x-nullable: true
      truncateLogs:
        description: |-
          Whether to truncate logs after a backup run. This is currently only
          relevant for full or incremental backups in a SQL environment.
        type: boolean
        x-go-name: TruncateLogs
        x-nullable: true
      type:
        description: The type of environment this backup job corresponds to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      userInfo:
        description: Information if any about the user that owns this job.
        x-nullable: true
        $ref: '#/definitions/UserInformation'
      viewBoxId:
        description: The view box to which data will be written.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  BackupJobProto_BackupSource:
    type: object
    properties:
      entities:
        description: |-
          Source entities.
          NOTE: Multiple sources can be specified here for non-leaf-level entities
          in the hierarchy. The sources obtained after expanding these will be
          intersected among each other to form the final set of sources.
          e.g. this can be used to backup only those VMs that have both the
          tags 'SQL' and '3hrs'.
        type: array
        items:
          $ref: '#/definitions/EntityProto'
        x-go-name: Entities
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  BackupJobProto_DRToCloudParams:
    description: |-
      A Proto needed in case objects backed up by this job need to DR to cloud.
      "Fail over" signifies the mechanism to move the workload to cloud.
    type: object
    title: DR to Cloud Parameters.
    properties:
      needToFailOver:
        description: |-
          Whether the objects in this job will be failed over to cloud.
          In case of VMs, we need to fetch information about the logical volumes
          present on the VM. Magneto might fail backup of a VM in case volume
          information can not be fetched (maybe because the agent is not installed
          or if the VM is turned off etc.).

          The VM will be backed up using the physical agent when it is running in
          the cloud. We might choose to backup the VM in the cloud using native
          API at a later point.

          This flag makes sense when configuring a job to backup on-prem VMs.
        type: boolean
        x-go-name: NeedToFailOver
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  BackupJobProto_ExcludeSource:
    type: object
    properties:
      entities:
        description: |-
          An intersection of leaf-level entities will be obtained after expanding
          the following entities.
        type: array
        items:
          $ref: '#/definitions/EntityProto'
        x-go-name: Entities
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  BackupJobProto_ExclusionTimeRange:
    description: |-
      A proto to specify a time range within a single day when backups are not
      permitted to run.
    type: object
    properties:
      day:
        description: If the day is not set, the time range applies to all days.
        type: integer
        format: int32
        x-go-name: Day
        x-nullable: true
      endTime:
        description: End time of the time range.
        x-nullable: true
        $ref: '#/definitions/Time'
      startTime:
        description: Start time of the time range.
        x-nullable: true
        $ref: '#/definitions/Time'
    x-go-package: magneto/base/magneto.pb
  BackupPolicyProto:
    description: |-
      If a backup does not get a chance to when it's due (either due to the system
      being busy or a conflict with another instance of the same job), the backup
      will still be run when the conflicts go away. But, if there are multiple
      instances of the same job that are due to be run, only the latest instance
      would be run.
    type: object
    title: DEPRECATED in 5.0!
    properties:
      continuousSchedule:
        description: Set if periodicity is kContinuous.
        x-nullable: true
        $ref: '#/definitions/BackupPolicyProto_ContinuousSchedule'
      dailySchedule:
        description: Set if periodicity is kDaily.
        x-nullable: true
        $ref: '#/definitions/BackupPolicyProto_DailySchedule'
      monthlySchedule:
        description: Set if periodicity is kMonthly.
        x-nullable: true
        $ref: '#/definitions/BackupPolicyProto_MonthlySchedule'
      name:
        description: A backup schedule can have an optional name.
        type: string
        x-go-name: Name
        x-nullable: true
      numDaysToKeep:
        description: |-
          Specifies how to determine the expiration time for snapshots created by
          a backup run. The snapshots will be marked as expiring (i.e., eligible
          to be garbage collected) in 'num_days_to_keep' days from when the
          snapshots were created.
        type: integer
        format: int64
        x-go-name: NumDaysToKeep
        x-nullable: true
      numRetries:
        description: The number of retries to perform (for retryable errors) before
          giving up.
        type: integer
        format: int32
        x-go-name: NumRetries
        x-nullable: true
      oneOffSchedule:
        description: Set if periodicity is kOneOff.
        x-nullable: true
        $ref: '#/definitions/BackupPolicyProto_OneOffSchedule'
      periodicity:
        description: Determines how often the job should be run.
        type: integer
        format: int32
        x-go-name: Periodicity
        x-nullable: true
      retryDelayMins:
        description: The number of minutes to wait before retrying a failed job.
        type: integer
        format: int32
        x-go-name: RetryDelayMins
        x-nullable: true
      scheduleEnd:
        description: Determines when this schedule ends (if at all).
        x-nullable: true
        $ref: '#/definitions/BackupPolicyProto_ScheduleEnd'
      startWindowIntervalMins:
        description: |-
          This field determines the amount of time (in minutes) after which a
          scheduled job will not be started. For example, if a job is scheduled to
          be run every Sunday at 5am, and this field is set to 30 minutes, but the
          job was unable to start by 5:30am on a Sunday due to other conflicts (say
          too many other jobs were already running), Magneto will not attempt to
          start the job until the next scheduled time (on the following Sunday).
          If this field is not set, the interval will be determined by the Magneto
          flag --magneto_master_default_start_window_interval_mins.
        type: integer
        format: int32
        x-go-name: StartWindowIntervalMins
        x-nullable: true
      truncateLogs:
        description: |-
          Whether to truncate logs after a backup run. This is currently only
          relevant for full or incremental backups in a SQL environment.
        type: boolean
        x-go-name: TruncateLogs
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  BackupPolicyProto_ContinuousSchedule:
    type: object
    properties:
      backupIntervalMins:
        description: |-
          If this field is set, backups will be performed periodically every
          'interval_mins' number of minutes. NOTE: This is the interval between
          the start time of two successive backups.
        type: integer
        format: int64
        x-go-name: BackupIntervalMins
        x-nullable: true
      exclusionRanges:
        description: |-
          Do not start backups in these time-ranges. It's possible for a
          previously started backup to spill over into an exclusion range.

          NOTE: This field has been deprecated. Use the exclusion_ranges field
          defined within BackupPolicyProto instead.
        type: array
        items:
          $ref: '#/definitions/BackupPolicyProto_ExclusionTimeRange'
        x-go-name: ExclusionRanges
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  BackupPolicyProto_DailySchedule:
    description: |-
      The daily schedule encompasses weekly schedules as well. This has been
      done so there is only one way of specifying a schedule (backing up daily
      is the same as backing up weekly, but on all days of the week).
    type: object
    properties:
      days:
        description: |-
          The days of the week backup must be performed. If no days are specified,
          then the backup will be performed on all days.
        type: array
        items:
          type: integer
          format: int32
        x-go-name: Days
        x-nullable: true
      time:
        description: The time when daily backups should be performed.
        x-nullable: true
        $ref: '#/definitions/Time'
    x-go-package: magneto/base/magneto.pb
  BackupPolicyProto_ExclusionTimeRange:
    description: |-
      A proto to specify a time range within a single day when backups are not
      permitted to run.
    type: object
    properties:
      day:
        description: If the day is not set, the time range applies to all days.
        type: integer
        format: int32
        x-go-name: Day
        x-nullable: true
      endTime:
        description: End time of the time range.
        x-nullable: true
        $ref: '#/definitions/Time'
      startTime:
        description: Start time of the time range.
        x-nullable: true
        $ref: '#/definitions/Time'
    x-go-package: magneto/base/magneto.pb
  BackupPolicyProto_MonthlySchedule:
    type: object
    properties:
      count:
        description: |-
          Count of the day on which to perform the backup (look above for a more
          detailed description).
        type: integer
        format: int32
        x-go-name: Count
        x-nullable: true
      day:
        description: The day of the month the backup is to be performed.
        type: integer
        format: int32
        x-go-name: Day
        x-nullable: true
      time:
        description: Time when the monthly backup should be performed.
        x-nullable: true
        $ref: '#/definitions/Time'
    x-go-package: magneto/base/magneto.pb
  BackupPolicyProto_OneOffSchedule:
    type: object
    properties:
      time:
        description: The time when the one-off backup should be performed.
        x-nullable: true
        $ref: '#/definitions/Time'
    x-go-package: magneto/base/magneto.pb
  BackupPolicyProto_ScheduleEnd:
    type: object
    title: Only one of the following fields should be set.
    properties:
      endAfterNumBackups:
        description: |-
          If specified, the backup job will no longer be run after it has been run
          these many times.
        type: integer
        format: int64
        x-go-name: EndAfterNumBackups
        x-nullable: true
      endTimeUsecs:
        description: If specified, the backup job will no longer be run after this
          time.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  BackupRun:
    description: |-
      Specifies details about the Backup task for a Job Run.
      A Backup task captures the original backup snapshots for each Protection
      Source in the Job.
    type: object
    title: Backup Run Task.
    properties:
      environment:
        description: |-
          Specifies the environment type that the task is protecting.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      error:
        description: |-
          Specifies if an error occurred (if any) while running this task.
          This field is populated when the status is equal to 'kFailure'.
        type: string
        x-go-name: Error
        x-nullable: true
      jobRunId:
        description: |-
          Specifies the id of the Job Run that ran the backup task and
          the copy tasks.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      message:
        description: |-
          Specifies a message after finishing the task successfully. This field
          is optionally populated when the status is equal to 'kSuccess'.
        type: string
        x-go-name: Message
        x-nullable: true
      metadataDeleted:
        description: |-
          Specifies if the metadata and snapshots associated with this Job Run
          have been deleted.
          This field is set to true when the snapshots, which are marked
          for deletion, are removed by garbage collection.
          The associated metadata is also deleted.
        type: boolean
        x-go-name: MetadataDeleted
        x-nullable: true
      quiesced:
        description: |-
          Specifies if app-consistent snapshot was captured. This field is set to
          true, if an app-consistent snapshot was taken by
          quiescing applications and the file system before taking a backup.
        type: boolean
        x-go-name: Quiesced
        x-nullable: true
      runType:
        description: |-
          Specifies the type of backup such as 'kRegular', 'kFull', 'kLog' or
          'kSystem'.
          'kRegular' indicates a incremental (CBT) backup. Incremental backups
          utilizing CBT (if supported) are captured of the target protection objects.
          The first run of a kRegular schedule captures all the blocks.
          'kFull' indicates a full (no CBT) backup. A complete backup
          (all blocks) of the target protection objects are always captured and
          Change Block Tracking (CBT) is not utilized.
          'kLog' indicates a Database Log backup. Capture the database
          transaction logs to allow rolling back to a specific point in time.
          'kSystem' indicates a system backup. System backups are used to do
          bare metal recovery of the system to a specific point in time.
        type: string
        enum:
        - kRegular
        - kFull
        - kLog
        - kSystem
        x-go-name: RunType
        x-nullable: true
      slaViolated:
        description: |-
          Specifies if the SLA was violated for the Job Run. This field is set
          to true, if time to complete the Job Run is longer than the SLA
          specified. This field is populated when the status is
          set to 'kSuccess' or 'kFailure'.
        type: boolean
        x-go-name: SlaViolated
        x-nullable: true
      snapshotsDeleted:
        description: |-
          Specifies if backup snapshots associated
          with this Job Run have been marked for deletion because of the
          retention settings in the Policy or
          if they were manually deleted from the Cohesity Dashboard.
        type: boolean
        x-go-name: SnapshotsDeleted
        x-nullable: true
      snapshotsDeletedTimeUsecs:
        description: |-
          Specifies if backup snapshots associated
          with this Job Run have been marked for deletion because of the
          retention settings in the Policy or
          if they were manually deleted from the Cohesity Dashboard.
        type: integer
        format: int64
        x-go-name: SnapshotsDeletedTimeUsecs
        x-nullable: true
      sourceBackupStatus:
        description: |-
          Array of Source Object Backup Status.

          Specifies the status of backing up each source objects (such as VMs)
          associated with the job.
        type: array
        items:
          $ref: '#/definitions/SourceBackupStatus'
        x-go-name: SourceBackupStatus
        x-nullable: true
      stats:
        description: |-
          Specifies the aggregated stats of all Backup Run tasks in a
          Protection Run.
        x-nullable: true
        $ref: '#/definitions/ProtectionJobRunStats'
      status:
        description: |-
          Specifies the status of Backup task such as 'kRunning', 'kSuccess',
          'kFailure' etc.
          'kAccepted' indicates the task is queued to run but not yet running.
          'kRunning' indicates the task is running.
          'kCanceling' indicates a request to cancel the task has occurred but
          the task is not yet canceled.
          'kCanceled' indicates the task has been canceled.
          'kSuccess' indicates the task was successful.
          'kFailure' indicates the task failed.
          'kWarning' indicates the task has finished with warning.
          'kOnHold' indicates the task is kept onHold.
          'kMissed' indicates the task is missed.
        type: string
        enum:
        - kAccepted
        - kRunning
        - kCanceling
        - kCanceled
        - kSuccess
        - kFailure
        - kWarning
        - kOnHold
        - kMissed
        x-go-name: Status
        x-nullable: true
      warnings:
        description: |-
          Array of Warnings.

          Specifies the warnings that occurred (if any) while running this task.
        type: array
        items:
          type: string
        x-go-name: Warnings
        x-nullable: true
      wormRetentionType:
        description: |-
          Specifies WORM retention type for the snapshot as given by the policy.
          When a WORM retention type is specified, the snapshot will be kept until
          the maximum of the snapshot retention time. During that time, the
          snapshot cannot be deleted.
          'kNone' implies there is no WORM retention set.
          'kCompliance' implies WORM retention is set for compliance reason.
          'kAdministrative' implies WORM retention is set for administrative purposes.
        type: string
        enum:
        - kNone
        - kCompliance
        - kAdministrative
        x-go-name: WormRetentionType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BackupScript:
    description: |-
      Specifies details about the pre and post backup scripts for 'kPhysical'
      jobs.
    type: object
    title: Backup Script.
    properties:
      fullBackupScript:
        description: |-
          Specifies the script that should run for the Full (no CBT) backup schedule
          of a Remote Adapter 'kPuppeteer' Job.
          This field is mandatory if the Policy associated with this Job
          has a Full (no CBT) backup schedule and this is Remote Adapter
          'kPuppeteer' Job.
        title: Full (No CBT) Script.
        allOf:
        - $ref: '#/definitions/RemoteScriptPathAndParams'
        x-nullable: true
      incrementalBackupScript:
        description: |-
          Specifies the script that should run for the CBT-based backup
          schedule of a Remote Adapter 'kPuppeteer' Job. A CBT-based backup
          schedule is utilizing Change Block Tracking when capturing Snapshots.
          This field is mandatory if the Policy associated with this Job
          has a CBT-based backup schedule and this is Remote Adapter
          'kPuppeteer' Job.
        title: CBT-based Script.
        allOf:
        - $ref: '#/definitions/RemoteScriptPathAndParams'
        x-nullable: true
      logBackupScript:
        description: |-
          Specifies the script that should run for the Log backup schedule
          of a Remote Adapter 'kPuppeteer' Job.
          This field is mandatory if the Policy associated with this Job
          has a Log backup schedule and this is Remote Adapter
          'kPuppeteer' Job.
        title: Log Script.
        allOf:
        - $ref: '#/definitions/RemoteScriptPathAndParams'
        x-nullable: true
      remoteHost:
        description: |-
          Specifies the remote host where the remote scripts are executed.
          This field must be set for Remote Adapter Jobs.
        allOf:
        - $ref: '#/definitions/RemoteHost'
        x-nullable: true
      username:
        description: |-
          Specifies the username that will be used to login to the remote host.
          For host type 'kLinux', it is expected that user has setup the
          password-less access. So only username field is required.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BackupSourceParams:
    description: Message to capture any additional backup params at the source level.
    type: object
    title: Backup Source Parameters.
    properties:
      appEntityIdVec:
        description: |-
          If we are backing up an application (such as SQL), this contains
          the entity ids of the app entities (such as SQL instances and databases)
          that will be protected on the backup source.

          If this vector is empty, it implies that we are protecting all app
          entities on the source.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: AppEntityIdVec
        x-nullable: true
      oracleParams:
        description: |-
          This is applicable to sources of type kOracle databases. These are
          additional backup parameters for kOracle.
        x-nullable: true
        $ref: '#/definitions/OracleSourceParams'
      physicalParams:
        description: This is applicable to sources of type kHost (kPhysical environment).
        x-nullable: true
        $ref: '#/definitions/PhysicalBackupSourceParams'
      skipIndexing:
        description: Set to true, if indexing is not required for given source.
        type: boolean
        x-go-name: SkipIndexing
        x-nullable: true
      sourceId:
        description: |-
          Source entity id.
          NOTE: This is expected to point to a leaf-level entity.
        type: integer
        format: int64
        x-go-name: SourceId
        x-nullable: true
      vmwareParams:
        description: |-
          This is applicable to sources of type kVirtualMachine (kVMware
          environment).
        x-nullable: true
        $ref: '#/definitions/VMwareBackupSourceParams'
    x-go-package: magneto/base/env_params.pb
  BackupSourceStats:
    description: |-
      Specifies statistics about a Backup task in a Protection Job Run.
      Specifies statistics for one backup task. One backup task is used to
      backup on Protection Source. This structure is also used to aggregate
      stats of a Backup tasks in a Protection Job Run.
    type: object
    title: Backup Run Statistics.
    properties:
      admittedTimeUsecs:
        description: |-
          Specifies the time the task was unqueued from the queue to start running.
          This field can be used to determine the following times:
          initial-wait-time = admittedTimeUsecs - startTimeUsecs
          run-time = endTimeUsecs - admittedTimeUsecs
          If the task ends up waiting in other queues, then actual run-time will
          be smaller than the run-time computed this way.
          This field is only populated for Backup tasks currently.
        type: integer
        format: int64
        x-go-name: AdmittedTimeUsecs
        x-nullable: true
      endTimeUsecs:
        description: |-
          Specifies the end time of the Protection Run. The end time
          is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time of the Protection Run. The start time
          is specified as a Unix epoch Timestamp (in microseconds).
          This time is when the task is queued to an internal queue where tasks
          are waiting to run.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      timeTakenUsecs:
        description: |-
          Specifies the actual execution time for the protection run to complete
          the backup task and the copy tasks. This time will not include the
          time waited in various internal queues.
          This field is only populated for Backup tasks currently.
        type: integer
        format: int64
        x-go-name: TimeTakenUsecs
        x-nullable: true
      totalBytesReadFromSource:
        description: Specifies the total amount of data read from the source (so far).
        type: integer
        format: int64
        x-go-name: TotalBytesReadFromSource
        x-nullable: true
      totalBytesToReadFromSource:
        description: |-
          Specifies the total amount of data expected to be read from the
          source.
        type: integer
        format: int64
        x-go-name: TotalBytesToReadFromSource
        x-nullable: true
      totalLogicalBackupSizeBytes:
        description: |-
          Specifies the size of the source object (such as a VM) protected by
          this task on the primary storage after the snapshot is taken.
          The logical size of the data on the source if the
          data is fully hydrated or expanded and not reduced
          by change-block tracking, compression and deduplication.
        type: integer
        format: int64
        x-go-name: TotalLogicalBackupSizeBytes
        x-nullable: true
      totalPhysicalBackupSizeBytes:
        description: |-
          Specifies the total amount of physical space used on the Cohesity
          Cluster to store the protected object after being reduced by change-block
          tracking, compression and deduplication. For example, if the logical
          backup size is 1GB, but only 1MB was used on the Cohesity Cluster
          to store it, this field be equal to 1MB.
        type: integer
        format: int64
        x-go-name: TotalPhysicalBackupSizeBytes
        x-nullable: true
      totalSourceSizeBytes:
        description: |-
          Specifies the size of the source object (such as a VM) protected by
          this task on the primary storage before the snapshot is taken.
          The logical size of the data on the source if the
          data is fully hydrated or expanded and not reduced
          by change-block tracking, compression and deduplication.
        type: integer
        format: int64
        x-go-name: TotalSourceSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BackupTaskInfo:
    type: object
    title: Parameters for a backup op.
    properties:
      instanceId:
        description: Id of that particular instance
        type: string
        x-go-name: InstanceId
        x-nullable: true
      name:
        description: Name of the recovery task.
        type: string
        x-go-name: Name
        x-nullable: true
      startTimeUsecs:
        description: Denotes the start time of the backuptask, needed for deeplinking.
        type: string
        x-go-name: StartTimeUSecs
        x-nullable: true
      taskId:
        description: Id of the recovery task.
        type: string
        x-go-name: TaskId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BandwidthLimit:
    description: |-
      Specifies settings for limiting the data transfer rate between
      the local and remote Clusters or bandwidth limiting schedule for apollo.
      Only one of RateLimitBytesPerSec or IoRate should be set in this struct and
      corresponding BandwidthLimitOverrides should also be in the same unit.
    type: object
    title: Bandwidth Limit.
    properties:
      bandwidthLimitOverrides:
        description: |-
          Array of Override Bandwidth Limits.

          Specifies a list of override bandwidth limits and time periods
          when those limits override the rateLimitBytesPerSec limit.
          If overlapping time periods are specified, the last one in the
          array takes precedence.
        type: array
        items:
          $ref: '#/definitions/BandwidthLimitOverride'
        x-go-name: BandwidthLimitOverrides
        x-nullable: true
      ioRate:
        description: |-
          Specifies the default IO Rate of the throttling schedule. This value is
          internally mapped to some notion of how many resources a process should be
          consuming.
        type: integer
        format: int32
        x-go-name: IoRate
        x-nullable: true
      rateLimitBytesPerSec:
        description: |-
          Specifies the maximum allowed data transfer rate between the local Cluster
          and remote Clusters. The value is specified in bytes per second.
          If not set, the data transfer rate is not limited.
        type: integer
        format: int64
        x-go-name: RateLimitBytesPerSec
        x-nullable: true
      timezone:
        description: |-
          Specifies a time zone for the specified time period.
          The time zone is defined in the following format: "Area/Location",
          for example: "America/New_York".
        type: string
        x-go-name: Timezone
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BandwidthLimitOverride:
    description: |-
      Specifies bandwidth limit override value to be enforced during
      the specified daily time period for the specified days of the week.
    type: object
    title: Bandwidth Limit Override
    properties:
      bytesPerSecond:
        description: |-
          Specifies the value to override the regular maximum bandwidth rate
          (rateLimitBytesPerSec) for the specified time period.
          The value is specified in bytes per second.
        type: integer
        format: int64
        x-go-name: BytesPerSecond
        x-nullable: true
      ioRate:
        description: |-
          Specifies the value to override the default IO rate for the specified
          time period.
        type: integer
        format: int32
        x-go-name: IoRate
        x-nullable: true
      timePeriods:
        description: |-
          Specifies a daily time period and days of the week when the
          regular maximum bandwidth rate should be overridden.
        x-nullable: true
        $ref: '#/definitions/TimeOfAWeek'
    x-go-package: cohesity/iris/server/data/public
  Banner:
    description: |-
      Banner is used for storing the banner content in scribe and also for
      transferring it over the wire.
    type: object
    properties:
      bannerId:
        description: |-
          Specifies a banner_id which can uniquely identify a banner. This may be
          the cluster_id, or the tenant_id, or the group_id, or the user SID etc.
          If this field is nil, the it is assumed to be the cluster_id.
          The content is stored against this 'row' in Scribe.
        type: string
        x-go-name: BannerId
        x-nullable: true
      content:
        description: Specifies the content of the banner.
        type: string
        x-go-name: Content
        x-nullable: true
      createdTimeMsecs:
        description: |-
          createdTimeMsecs field is deprecated.
          Timestamp at which banner was created.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      description:
        description: |-
          description field is deprecated.
          Specifies the description of this banner.
        type: string
        x-go-name: Description
        x-nullable: true
      lastUpdatedTimeMsecs:
        description: |-
          lastUpdatedTimeMsecs field is deprecated.
          Timestamp at which banner was last updated.
        type: integer
        format: int64
        x-go-name: LastUpdatedTimeMsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BannerUpdateParameters:
    description: Specifies the settings used to update a new banner.
    type: object
    title: Banner Update Request.
    properties:
      content:
        description: Specifies the content of the banner.
        type: string
        x-go-name: Content
        x-nullable: true
      description:
        description: |-
          description field is deprecated.
          Specifies the description of this banner.
        type: string
        x-go-name: Description
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BasicClusterInfo:
    description: Specifies basic information about the Cohesity Cluster.
    type: object
    title: Basic Cohesity Cluster Information.
    properties:
      authenticationType:
        description: |-
          Specifies the authentication scheme for the cluster.
          'kPasswordOnly' indicates the normal cohesity authentication type.
          'kCertificateOnly' indicates that certificate based authentication has
          been enabled and the password based authentication has been turned off.
          'kPasswordAndCertificate' indicates that both the authenticatio schemes
          are required.
        type: string
        enum:
        - kPasswordOnly
        - kCertificateOnly
        - kPasswordAndCertificate
        x-go-name: AuthenticationType
        x-nullable: true
      bannerEnabled:
        description: Specifies if banner is enabled on the cluster.
        type: boolean
        x-go-name: BannerEnabled
        x-nullable: true
      clusterSoftwareVersion:
        description: |-
          Specifies the current release of the Cohesity software running on
          this Cohesity Cluster.
        type: string
        x-go-name: ClusterSoftwareVersion
        x-nullable: true
      clusterType:
        description: |-
          Specifies the type of Cohesity Cluster.
          'kPhysical' indicates the Cohesity Cluster is hosted directly on hardware.
          'kVirtualRobo' indicates the Cohesity Cluster is hosted in a VM on
          a ESXi Host of a VMware vCenter Server using Cohesity's Virtual Edition.
          'kMicrosoftCloud' indicates the Cohesity Cluster is hosted in a VM
          on Microsoft Azure using Cohesity's Cloud Edition.
          'kAmazonCloud' indicates the Cohesity Cluster is hosted in a VM
          on Amazon S3 using Cohesity's Cloud Edition.
          'kGoogleCloud' indicates the Cohesity Cluster is hosted in a VM
          on Google Cloud Platform using Cohesity's Cloud Edition.
        type: string
        enum:
        - kPhysical
        - kVirtualRobo
        - kMicrosoftCloud
        - kAmazonCloud
        - kGoogleCloud
        x-go-name: ClusterType
        x-nullable: true
      domains:
        description: |-
          Array of Domains.

          Specifies a list of domains joined to the Cohesity Cluster,
          including the default LOCAL Cohesity domain used to store the
          local Cohesity users.
        type: array
        items:
          type: string
        x-go-name: Domains
        x-nullable: true
      idpConfigured:
        description: Specifies Idp is configured for the Cluster.
        type: boolean
        x-go-name: IdpConfigured
        x-nullable: true
      idpTenantExists:
        description: Specifies Idp is configured for a Tenant.
        type: boolean
        x-go-name: IdpTenantExists
        x-nullable: true
      languageLocale:
        description: Specifies the language and locale for the Cohesity Cluster.
        type: string
        x-go-name: LanguageLocale
        x-nullable: true
      mcmMode:
        description: |-
          Specifies whether server is running in mcm-mode. If set to true,
          it is in mcm-mode.
        type: boolean
        x-go-name: McmMode
        x-nullable: true
      mcmOnPremMode:
        description: |-
          Specifies whether server is running in mcm-on-prem-mode. If set to true,
          it is in mcm on prem mode. This need mcm-mode to be true.
        type: boolean
        x-go-name: McmOnPremMode
        x-nullable: true
      multiTenancyEnabled:
        description: Specifies if multi-tenancy is enabled on the cluster.
        type: boolean
        x-go-name: MultiTenancyEnabled
        x-nullable: true
      name:
        description: Specifies the name of the Cohesity Cluster.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BasicTaskInfo:
    type: object
    title: BasicTaskInfo handles the basic elements of the notification task.
    properties:
      name:
        description: Name of the recovery task.
        type: string
        x-go-name: Name
        x-nullable: true
      taskId:
        description: Id of the recovery task.
        type: string
        x-go-name: TaskId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BlackoutPeriod:
    description: |-
      Specifies a time range in a single day when new Job Runs of
      Protection Jobs cannot be started. For example, a Protection Job
      with a daily schedule could define a blackout period for Sunday.
    type: object
    title: Blackout Period.
    properties:
      Id:
        description: |-
          Specified the Id for a snapshot copy policy. This is generated when the
          policy is created.
        type: string
        x-nullable: true
      day:
        description: |-
          Blackout Day.

          Specifies a day in the week when no new Job Runs should be started
          such as 'kSunday'.
          If not set, the time range applies to all days.
          Specifies a day in a week such as 'kSunday', 'kMonday', etc.
        type: string
        enum:
        - kSunday
        - kMonday
        - kTuesday
        - kWednesday
        - kThursday
        - kFriday
        - kSaturday
        x-go-name: Day
        x-nullable: true
      endTime:
        description: Specifies the end time of the blackout time range.
        title: Blackout End Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
      startTime:
        description: Specifies the start time of the blackout time range.
        title: Blackout Start Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BondingOpts:
    description: Bonding Opts
    type: object
    properties:
      lacpRate:
        type: string
        x-go-name: LacpRate
        x-nullable: true
      mode:
        type: string
        x-go-name: Mode
        x-nullable: true
      xmitHashPolicy:
        type: string
        x-go-name: XmitHashPolicy
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  BulkInstallAppTaskInfo:
    description: Parameters for a bulk install app task.
    type: object
    title: Bulk Install App Task Information.
    properties:
      jobId:
        description: Job id of the task.
        type: string
        x-go-name: JobId
        x-nullable: true
      numMachinesFailed:
        description: Number of machines on which task is started.
        type: integer
        format: int32
        x-go-name: NumMachinesFailed
        x-nullable: true
      numMachinesPassed:
        description: Number of machines on which task is started.
        type: integer
        format: int32
        x-go-name: NumMachinesPassed
        x-nullable: true
      numMachinesTotal:
        description: Number of machines on which task is started.
        type: integer
        format: int32
        x-go-name: NumMachinesTotal
        x-nullable: true
      registeringApp:
        description: |-
          Application being registered.
          This param is used to indicate the app for which the job is created.
          'oracle' indicates that the job was created for oracle app.
          'msSql' indicates that the job was created for msSql app.
          'physical' indicates that the job was created for physical machine.
        type: string
        enum:
        - oracle
        - msSql
        - physical
        x-go-name: RegisteringApp
        x-nullable: true
      state:
        description: |-
          Current state of the task.
          This param is used to indicate the state of the job created by the bulk
          install app.
          'started' indicates that the job has been started by the user.
          'completed' indicates that the job has completed.
        type: string
        enum:
        - started
        - completed
        x-go-name: State
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  C2SAccessPortal:
    description: |-
      Specifies information required to connect to CAP to get AWS credentials.
      C2SAccessPortal(CAP) is AWS commercial cloud service access portal.
    type: object
    title: C2S Access Portal (CAP).
    properties:
      agency:
        description: Name of the agency.
        type: string
        x-go-name: Agency
        x-nullable: true
      baseUrl:
        description: The base url of C2S CAP server.
        type: string
        x-go-name: BaseUrl
        x-nullable: true
      clientCertificatePassword:
        description: Encrypted password of the client private key.
        type: string
        x-go-name: EncryptedPassword
        x-nullable: true
      mission:
        description: Name of the mission.
        type: string
        x-go-name: Mission
        x-nullable: true
      role:
        description: Role type.
        type: string
        x-go-name: Role
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CancelProtectionJobRunParam:
    type: object
    title: Cancel a Protection Job Run.
    properties:
      copyTaskUid:
        description: |-
          CopyTaskUid is the Uid of a copy task. If a particular copy task is to be
          cancelled, this field should be set to the id of that particular copy task.
          For example, if replication task is to be canceled, CopyTaskUid of the
          replication task has to be specified.
        x-nullable: true
        $ref: '#/definitions/UniversalId'
      jobRunId:
        description: |-
          Run Id of a Protection Job Run that needs to be cancelled. If this Run
          id does not match the id of an active Run in the Protection job, the job
          Run is not cancelled and an error will be
          returned.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CapacityByTier:
    description: |-
      CapacityByTier provides the physical capacity in bytes of each storage
      tier.
    type: object
    title: Capacity By Tier.
    properties:
      storageTier:
        description: |-
          StorageTier is the type of StorageTier.
          StorageTierType represents the various values for the Storage Tier.
          'kPCIeSSD' indicates storage tier type of Pci Solid State Drive.
          'kSATAHDD' indicates storage tier type of SATA Solid State Drive.
          'kSATAHDD' indicates storage tier type of SATA Hard Disk Drive.
          'kCLOUD' indicates storage tier type of Cloud.
        type: string
        enum:
        - kPCIeSSD
        - kSATASSD
        - kSATAHDD
        - kCLOUD
        x-go-name: StorageTier
        x-nullable: true
      tierMaxPhysicalCapacityBytes:
        description: |-
          TierMaxPhysicalCapacityBytes is the maximum physical capacity in bytes of
          the storage tier.
        type: integer
        format: int64
        x-go-name: TierMaxPhysicalCapacityBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CassandraAdditionalParams:
    description: |-
      Contains additional parameters required by the agents to backup data from
      Cassandra.
    type: object
    properties:
      cassandraClasspathSuffix:
        description: Cassandra classpath suffix.
        type: string
        x-go-name: CassandraClasspathSuffix
        x-nullable: true
      cassandraPartitioner:
        description: Required in compaction.
        type: string
        x-go-name: CassandraPartitioner
        x-nullable: true
      cassandraVersion:
        description: |-
          Cassandra and DSE Versions.
          Discovery code will attempt to discover the versions.
        type: string
        x-go-name: CassandraVersion
        x-nullable: true
      dataCenterVec:
        description: Data center information is required for backup and recovery.
        type: array
        items:
          type: string
        x-go-name: DataCenterVec
        x-nullable: true
      dseSolrInfo:
        description: In case this Cassandra has a Solr node.
        x-nullable: true
        $ref: '#/definitions/DSESolrInfo'
      dseVersion:
        type: string
        x-go-name: DseVersion
        x-nullable: true
      tieredStorageDirsMap:
        description: Map of nodes to tiered storage directories
        type: array
        items:
          $ref: '#/definitions/NodeToTieredStorageDirectoriesMap'
        x-go-name: TieredStorageDirsMap
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  CassandraBackupJobParams:
    description: |-
      Contains any additional cassandra environment specific backup params at the
      job level.
    type: object
    properties:
      cassandraAdditionalInfo:
        description: Additional parameters required for Cassandra backup.
        x-nullable: true
        $ref: '#/definitions/CassandraAdditionalParams'
      selectedDataCenterVec:
        description: The data centers selected for backup.
        type: array
        items:
          type: string
        x-go-name: SelectedDataCenterVec
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  CassandraCluster:
    description: Specifies an Object containing information about a Cassandra cluster.
    type: object
    title: Cassandra Cluster Info.
    properties:
      primaryHost:
        description: Primary host from this Cassandra cluster.
        type: string
        x-go-name: PrimaryHost
        x-nullable: true
      seeds:
        description: Seeds of this Cassandra Cluster.
        type: array
        items:
          type: string
        x-go-name: Seeds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CassandraConnectParams:
    description: |-
      Specifies an Object containing information about a registered cassandra
      source.
    type: object
    title: Cassandra Connect Params.
    properties:
      cassandraPortsInfo:
        description: Specifies the ports related info.
        x-nullable: true
        $ref: '#/definitions/CassandraPortsInfo'
      cassandraSecurityInfo:
        description: Specifies the security related info.
        x-nullable: true
        $ref: '#/definitions/CassandraSecurityInfo'
      cassandraVersion:
        description: Cassandra version
        type: string
        x-go-name: CassandraVersion
        x-nullable: true
      configDirectory:
        description: Specifies the Directory path containing Config YAML for discovery.
        type: string
        x-go-name: ConfigDirectory
        x-nullable: true
      dataCenters:
        description: |-
          Specifies the List of all physical data center or virtual data center.
          In most cases, the data centers will be listed after discovery operation
          however, if they are not listed, you must manually type the data center
          names. Leaving the field blank will disallow data center-specific backup
          or restore. Entering a subset of all data centers may cause problems
          in data movement.
        type: array
        items:
          type: string
        x-go-name: DataCenters
        x-nullable: true
      dseConfigDirectory:
        description: Specifies the Directory from where DSE specific configuration
          can be read.
        type: string
        x-go-name: DseConfigDirectory
        x-nullable: true
      isDseAuthenticator:
        description: Specifies whether this cluster has DSE Authenticator.
        type: boolean
        x-go-name: IsDseAuthenticator
        x-nullable: true
      isDseTieredStorage:
        description: Specifies whether this cluster has DSE tiered storage.
        type: boolean
        x-go-name: IsDseTieredStorage
        x-nullable: true
      isJmxAuthEnable:
        description: Specifies if JMX Authentication enabled in this cluster.
        type: boolean
        x-go-name: IsJmxAuthEnable
        x-nullable: true
      kerberosPrincipal:
        description: Specifies the Kerberos Principal for Kerberos connection
        type: string
        x-go-name: KerberosPrincipal
        x-nullable: true
      primaryHost:
        description: Specifies the Primary Host for the Cassandra cluster.
        type: string
        x-go-name: PrimaryHost
        x-nullable: true
      seeds:
        description: Specifies the Seed nodes of this Cassandra cluster.
        type: array
        items:
          type: string
        x-go-name: Seeds
        x-nullable: true
      solrNodes:
        description: Specifies the Solr node IP Addresses
        type: array
        items:
          type: string
        x-go-name: SolrNodes
        x-nullable: true
      solrPort:
        description: Specifies the Solr node Port.
        type: integer
        format: int32
        x-go-name: SolrPort
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CassandraKeyspace:
    description: Specifies an Object containing information about a Cassandra Keyspace.
    type: object
    title: Cassandra Keyspace Info.
    properties:
      childrenCount:
        description: Number of documents in this bucket.
        type: integer
        format: uint32
        x-go-name: ChildrenCount
        x-nullable: true
      dcList:
        description: |-
          If the replication strategy is set as kNetwork, then
          dc_list will have a list of data centers to which the
          keyspace is being replicated to.
        type: array
        items:
          type: string
        x-go-name: DcList
        x-nullable: true
      replicationStrategy:
        description: |-
          Replication stragegy for the keyspace.
          Specifies the type of an Cassandra source entity.
        type: string
        enum:
        - kSimple
        - kNetwork
        - kUnsupported
        x-go-name: ReplicationStrategy
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CassandraPortsInfo:
    description: Specifies an Object containing information on various Cassandra ports.
    type: object
    title: Cassandra Ports Info.
    properties:
      jmxPort:
        description: Specifies the Cassandra JMX port.
        type: integer
        format: uint32
        x-go-name: JmxPort
        x-nullable: true
      nativeTransportPort:
        description: Specifies the port for the CQL native transport.
        type: integer
        format: uint32
        x-go-name: NativeTransportPort
        x-nullable: true
      rpcPort:
        description: |-
          Specifies the Remote Procedure Call (RPC) port for general mechanism
          for client-server applications.
        type: integer
        format: uint32
        x-go-name: RpcPort
        x-nullable: true
      sslStoragePort:
        description: Specifies the SSL port for encrypted communication.
        type: integer
        format: uint32
        x-go-name: SslStoragePort
        x-nullable: true
      storagePort:
        description: Specifies the TCP port for data. Internally used by Cassandra
          bulk loader.
        type: integer
        format: uint32
        x-go-name: StoragePort
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CassandraProtectionSource:
    description: Specifies an Object representing Cassandra.
    type: object
    title: Cassandra Protection Source.
    properties:
      clusterInfo:
        description: |-
          Information of a Cassandra cluster, only valid for an entity of type
          kCluster.
        x-nullable: true
        $ref: '#/definitions/CassandraCluster'
      keyspaceInfo:
        description: |-
          Information of a cassandra keyspapce, only valid for an entity of type
          kKeyspace.
        x-nullable: true
        $ref: '#/definitions/CassandraKeyspace'
      name:
        description: Specifies the instance name of the Cassandra entity.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the managed Object in Cassandra Protection Source.
          Replication strategy options for a keyspace.
          'kCluster' indicates a Cassandra cluster distributed over several physical
          nodes.
          'kKeyspace' indicates a Keyspace enclosing one or more tables.
          'kTable' indicates a Table in the Cassandra environment.
        type: string
        enum:
        - kCluster
        - kKeyspace
        - kTable
        x-go-name: Type
        x-nullable: true
      uuid:
        description: |-
          Specifies the UUID for the Cassandra entity.
          Note : For each entity an ID unique within top level entity should be
          assigned by imanis backend. Example, UUID for a table can be the string
          <keyspace_name>.<table_name>
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CassandraRecoverJobParams:
    description: |-
      Contains any additional cassandra environment specific params for the
      recover job.
    type: object
    properties:
      cassandraAdditionalInfo:
        description: |-
          Additional parameters required for Cassandra recovery.
          TODO (faizan.khan) : Remove this.
        x-nullable: true
        $ref: '#/definitions/CassandraAdditionalParams'
      cassandraSourceVersion:
        description: Cassandra source version
        type: string
        x-go-name: CassandraSourceVersion
        x-nullable: true
      selectedDataCenterVec:
        description: The data centers selected for recovery.
        type: array
        items:
          type: string
        x-go-name: SelectedDataCenterVec
        x-nullable: true
      stagingDirectoryVec:
        description: Cassandra staging directory
        type: array
        items:
          type: string
        x-go-name: StagingDirectoryVec
        x-nullable: true
      suffix:
        description: |-
          A suffix that is to be applied to all recovered entities
          TODO (faizan.khan) : Remove this.
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  CassandraSecurityInfo:
    description: Specifies an Object containing information on Cassandra security.
    type: object
    title: CassandraSecurityInfo Cassandra security info.
    properties:
      cassandraAuthRequired:
        description: Is Cassandra authentication required ?
        type: boolean
        x-go-name: CassandraAuthRequired
        x-nullable: true
      cassandraAuthType:
        description: |-
          Cassandra Authentication type.
          Enum: [PASSWORD KERBEROS LDAP]
          Specifies the Cassandra auth type.
          'PASSWORD'
          'KERBEROS'
          'LDAP'
        type: string
        enum:
        - PASSWORD
        - KERBEROS
        - LDAP
        x-go-name: CassandraAuthType
        x-nullable: true
      cassandraAuthorizer:
        description: Cassandra Authenticator/Authorizer.
        type: string
        x-go-name: CassandraAuthorizer
        x-nullable: true
      clientEncryption:
        description: Is Client Encryption enabled for this cluster ?
        type: boolean
        x-go-name: ClientEncryption
        x-nullable: true
      dseAuthorization:
        description: Is DSE Authorization enabled for this cluster ?
        type: boolean
        x-go-name: DseAuthorization
        x-nullable: true
      serverEncryptionReqClientAuth:
        description: Is 'Server encryption request client authentication' enabled
          for this cluster ?
        type: boolean
        x-go-name: ServerEncryptionReqClientAuth
        x-nullable: true
      serverInternodeEncryptionType:
        description: '''Server internal node Encryption'' type for this cluster.'
        type: string
        x-go-name: ServerInternodeEncryptionType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CentrifyZone:
    description: |-
      Specifies the properties associated to a Centrify zone of an Active
      Directory domain.
    type: object
    title: Centrify Zone.
    properties:
      centrifySchema:
        description: |-
          Specifies the schema of this Centrify zone.
          The below list of schemas and their values are taken from the document
          Centrify Server Suite 2016 Windows API Programmer's Guide
          https://docs.centrify.com/en/css/suite2016/centrify-win-progguide.pdf
          'kCentrifyDynamicSchema_1_0' specifies dynamic schema, version 1.0.
          'kCentrifyDynamicSchema_2_0' specifies dynamic schema, version 2.0.
          'kCentrifyDynamicSchema_3_0' specifies dynamic schema, version 3.0.
          'kCentrifyDynamicSchema_5_0' specifies dynamic schema, version 5.0.
          'kCentrifySfu_3_0' specifies sfu schema, version 3.0.
          'kCentrifySfu_3_0_V5' specifies sfu schema, 3.0.5.
          'kCentrifySfu_4_0' specifies sfu schema, version 4.0.
          'kCentrifyCdcRfc2307' specifies cdcrfc2307 schema.
          'kCentrifyCdcRfc2307_2' specifies cdcrfc2307, version 2.
          'kCentrifyCdcRfc2307_3' specifies cdcrfc2307, version 3.
        type: string
        enum:
        - kCentrifyDynamicSchema_1_0
        - kCentrifyDynamicSchema_2_0
        - kCentrifySfu_3_0
        - kCentrifySfu_4_0
        - kCentrifyCdcRfc2307
        - kCentrifyDynamicSchema_3_0
        - kCentrifyCdcRfc2307_2
        - kCentrifyDynamicSchema_5_0
        - kCentrifyCdcRfc2307_3
        - kCentrifySfu_3_0_V5
        x-go-name: CentrifySchema
        x-nullable: true
      description:
        description: Specifies a description of the Centrify zone.
        type: string
        x-go-name: Description
        x-nullable: true
      distinguishedName:
        description: Specifies the distinguished name of the Centrify zone.
        type: string
        x-go-name: DistinguishedName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CertificateDetails:
    description: Specifies details about a certificate.
    type: object
    title: Certificate Details.
    properties:
      certFileName:
        description: |-
          Specifies the filename of the certificate. This is unique to each
          certificate generated.
        type: string
        x-go-name: CertFileName
        x-nullable: true
      expiryDate:
        description: Specifies the date in epoch till when the certificate is valid.
        type: string
        x-go-name: ExpiryDate
        x-nullable: true
      hostIps:
        description: |-
          Each certificate can be deployed to multiple hosts. List of all hosts
          is returned after deployment.
        type: array
        items:
          type: string
        x-go-name: HostIps
        x-nullable: true
      type:
        description: |-
          Specifies the type of the host such as 'kSapHana', 'kSapOracle', etc.
          Specifies the host type of host for generating and deploying a
          Certificate.
          'kOther' indicates it is any of the other hosts.
          'kSapOracle' indicates it is a SAP Oracle host.
          'kSapHana' indicates it is a SAP HANA host.
        type: string
        enum:
        - kOther
        - kSapOracle
        - kSapHana
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ChangeProtectionJobStateParam:
    description: Specifies if the Run state of a Protection Job should change.
    type: object
    title: Change Protection Job State Parameters.
    properties:
      pause:
        description: |-
          If true, the specified Protection Job is paused and no new Runs
          of the Job are started. Any Runs that were executing continue to run.
          If false and the Protection Job was in a paused state, the
          Protection Job resumes and new Runs are started according to the
          schedule defined in the associated Policy.
        type: boolean
        x-go-name: Pause
        x-nullable: true
      pauseReason:
        description: |-
          Specifies the reason of pausing the job so that depending on the pause
          reason, only specific jobs can be resumed. All the jobs paused manually by
          the user will be identified by nil PauseReason.
        type: integer
        format: int32
        x-go-name: PauseReason
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ChangeServiceStateParameters:
    description: |-
      Specifies the parameters needed to change the state of one or more
      services running on the Cluster.
    type: object
    title: Change Service State Parameters.
    properties:
      action:
        description: |-
          Specifies the action to take on the specified service.
          'kStop' indicates that the specified services will be stopped.
          'kStart' indicates that the specified services will be started.
          'kRestart' indicates that the specified services will be restarted.
        type: string
        enum:
        - kStop
        - kStart
        - kRestart
        x-go-name: Action
        x-nullable: true
      services:
        description: |-
          Specifies the list of services to take the specified action on.
          If none are specified, all Cluster services will be affected. It should
          also be noted that some Cluster services are not stoppable and may
          not be affected by the action specified.
          'kApollo' is a service for reclaiming freed disk sectors on Nodes in the
          SnapFS distributed file system.
          'kBridge' is a service for managing the SnapFS distributed file system.
          'kGenie' is a service that is responsible for monitoring hardware health
          on the Cluster.
          'kGenieGofer' is a service that links the Genie service to other services
          on the Cluster.
          'kMagneto' is the data protection service of the Cohesity Data Platform.
          'kIris' is the service which serves REST API calls to the UI, CLI, and any
          scripts written by customers.
          'kIrisProxy' is a service that links the Iris service to other services
          on the Cluster.
          'kScribe' is the service responsible for storing filesystem metadata.
          'kStats' is the service that is responsible for retrieving and aggregating
          disk metrics across the Cluster.
          'kYoda' is an elastic search indexing service.
          'kAlerts' is a publisher and subscribing service for alerts.
          'kKeychain' is a service for managing disk encryption keys.
          'kLogWatcher' is a service that scans the log directory and reduces
          the number of logs if required.
          'kStatsCollector' is a service that periodically logs system stats.
          'kGandalf' is a distributed lock service and coordination manager.
          'kNexus' indicates the Nexus service. This is the service that is
          responsible for creation of Clusters and configuration of Nodes and
          networking.
          'kNexusProxy' is a service that links the Nexus service to other services
          on the Cluster.
          'kStorageProxy' is a service for accessing data on external entities.
          'kTricorder' is a diagnostic health testing service for Clusters.
          'kRtClient' is a reverse tunneling client service.
          'kVaultProxy' is a service for managing external targets that Clusters
          can be backed up to.
          'kSmbProxy' is an SMB protocol service.
          'kBridgeProxy' is the service that links the Bridge service to other
          services on the Cluster.
          'kLibrarian' is an elastic search indexing service.
          'kGroot' is a service for managing replication of SQL databases across
          multiple nodes in a Cluster.
          'kEagleAgent' is a service that is responsible for retrieving information
          on Cluster health.
          'kAthena' is a service for running distributed containerized applications
          on the Cohesity Data Platform.
          'kBifrostBroker' is a service for communicating with the Cohesity proxies
          for multitenancy.
          'kSmb2Proxy' is a new SMB protocol service.
          'kOs' can be specified in order to do a full reboot.
          'kAtom' is a service for receiving data for the Continuous Data Protection.
        type: array
        items:
          type: string
          enum:
          - kApollo
          - kBridge
          - kGenie
          - kGenieGofer
          - kMagneto
          - kIris
          - kIrisProxy
          - kScribe
          - kStats
          - kYoda
          - kAlerts
          - kKeychain
          - kLogWatcher
          - kStatsCollecter
          - kGandalf
          - kNexus
          - kNexusProxy
          - kStorageProxy
          - kTricorder
          - kRtClient
          - kVaultProxy
          - kSmbProxy
          - kBridgeProxy
          - kLibrarian
          - kGroot
          - kEagleAgent
          - kAthena
          - kBifrostBroker
          - kSmb2Proxy
          - kOs
          - kAtom
        x-go-name: Services
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ChangeServiceStateResult:
    description: |-
      Specifies the result returned after a successful request to change the
      state of services running on the Cluster.
    type: object
    title: Change Service State Result.
    properties:
      message:
        description: Specifies a description of the result of the operation.
        type: string
        x-go-name: Message
        x-nullable: true
      statusUrl:
        description: |-
          Specifies a URL which can be queried to check the status of the
          operation.
        type: string
        x-go-name: StatusUrl
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ChassisInfo:
    description: ChassisInfo is the struct for the Chassis.
    type: object
    title: Chassis Information.
    properties:
      chassisId:
        description: ChassisId is a unique id assigned to the chassis.
        type: integer
        format: int64
        x-go-name: ChassisId
        x-nullable: true
      chassisName:
        description: |-
          ChassisName is the name of the chassis. This could be the chassis serial
          number by default.
        type: string
        x-go-name: ChassisName
        x-nullable: true
      chassisSerial:
        description: Chassis serial.
        type: string
        x-go-name: ChassisSerial
        x-nullable: true
      location:
        description: Location is the location of the chassis within the rack.
        type: string
        x-go-name: Location
        x-nullable: true
      rackId:
        description: Rack is the rack within which this chassis lives.
        type: integer
        format: int64
        x-go-name: RackId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CifsShareInfo:
    description: Specifies information about a CIFS share of a NetApp volume.
    type: object
    title: CIFS Share Information.
    properties:
      acls:
        description: |-
          Array of Access Control Lists.

          Specifies the ACLs for this share.
        type: array
        items:
          type: string
        x-go-name: Acls
        x-nullable: true
      name:
        description: |-
          Specifies the name of the CIFS share.
          This can be different from the volume name that this share belongs to.
          A single volume can export multiple CIFS shares,
          each with unique settings such as permissions.
        type: string
        x-go-name: Name
        x-nullable: true
      path:
        description: Specifies the path of this share under the Vserver's root.
        type: string
        x-go-name: Path
        x-nullable: true
      serverName:
        description: |-
          Specifies the CIFS server name (such as 'NETAPP-01') specified by the
          system administrator.
          This name is searchable within the active directory domain.
        type: string
        x-go-name: ServerName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClearNlmLocksParameters:
    description: Specifies parameters required to force clear NLM Locks.
    type: object
    title: Clear NLM Locks Parameters.
    properties:
      clientId:
        description: Specifies the id of the client, related NLM locks needs to be
          clear.
        type: string
        x-go-name: ClientId
        x-nullable: true
      filePath:
        description: |-
          Specifies the filepath in the view relative to the root filesystem.
          If this field is specified, viewName field must also be specified.
        type: string
        x-go-name: FilePath
        x-nullable: true
      viewName:
        description: |-
          Specifies the name of the View in which to search. If a view name is not
          specified, all the views in the Cluster is searched.
          This field is mandatory if filePath field is specified.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CloneAppViewInfoOracle:
    description: |-
      This message encapsulates backup view Clone operation information of a
      Oracle DB.
    type: object
    properties:
      mountPathInfoVec:
        type: array
        items:
          type: string
        x-go-name: MountPathInfoVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  CloneAppViewInfoProto:
    description: |-
      This message encapsulates the information of Clone operation of backup view
      of an App.
    type: object
    properties:
      oracleAppViewRestoreInfo:
        x-nullable: true
        $ref: '#/definitions/CloneAppViewInfoOracle'
    x-go-package: magneto/base/magneto.pb
  CloneAppViewParams:
    description: |-
      This message encapsulates the generic information required for cloning and
      App view.
    type: object
    properties:
      mountPathIdentifier:
        description: |-
          Mount path identifier, which identifies the sub-dir where the cohesity
          view for App recovery will be mounted.
        type: string
        x-go-name: MountPathIdentifier
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  CloneDirectoryParams:
    description: Specifies the params that have to be provided to clone a directory.
    type: object
    title: Clone Directory Request Params.
    properties:
      destinationDirectoryName:
        description: Name of the new directory which will contain the clone contents.
        type: string
        x-go-name: DestinationDirectoryName
        x-nullable: true
      destinationParentDirectoryPath:
        description: |-
          Specifies the path of the destination parent directory. The source dir
          would be cloned as a child of destination parent dir.
        type: string
        x-go-name: DestinationParentDirectoryPath
        x-nullable: true
      sourceDirectoryPath:
        description: Specifies the path of the source directory
        type: string
        x-go-name: SourceDirectoryPath
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CloneRefreshRequest:
    description: Specifies the settings for creating a new clone refresh task.
    type: object
    title: Clone Refresh Request Parameters.
    required:
    - name
    properties:
      cloneTaskId:
        description: |-
          Specifies the ID of the clone task. This is required to determine the
          details of the clone to be refreshed as clone task contains the details
          of the clone.
        type: integer
        format: int64
        x-go-name: CloneTaskId
        x-nullable: true
      continueOnError:
        description: |-
          Specifies if the Restore Task should continue when some operations on some
          objects fail. If true, the Cohesity Cluster ignores intermittent
          errors and restores as many objects as possible.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      name:
        description: |-
          Specifies the name of the Restore Task. This field must be set and
          must be a unique name.
        type: string
        x-go-name: Name
        x-nullable: true
      newParentId:
        description: |-
          Specify a new registered parent Protection Source. If specified
          the selected objects are cloned or recovered to this new Protection
          Source. If not specified, objects are cloned or recovered
          to the original Protection Source that was managing them.
        type: integer
        format: int64
        x-go-name: NewParentId
        x-nullable: true
      objects:
        description: |-
          Array of Objects.

          Specifies a list of Protection Source objects or Protection Job objects
          (with specified Protection Source objects).
        type: array
        items:
          $ref: '#/definitions/RestoreObjectDetails'
        x-go-name: Objects
        x-nullable: true
      refreshTimeSecs:
        description: |-
          Specifies a point in time (unix epoch) to which the database needs to be
          refreshed. This helps granular refresh of the database.
          If this is set, relevant archive logs (redo logs) will also be re-played
          to match with the specified time. For this, the log backup should be
          enabled in the backup policy.
          If this is not set, then only the incremental backup data will be used to
          refresh the target database.
        type: integer
        format: int64
        x-go-name: RefreshTimeSecs
        x-nullable: true
      sourceDatabaseId:
        description: |-
          Specifies the ID of the source database in the backup job snapshot. This
          is the entity ID of the database, which needs to be used as a source
          during the refresh process.
        type: integer
        format: int64
        x-go-name: SourceDatabaseId
        x-nullable: true
      vlanParameters:
        description: Specifies VLAN parameters for the restore operation.
        x-nullable: true
        $ref: '#/definitions/VlanParameters'
    x-go-package: cohesity/iris/server/data/public
  CloneTaskInfo:
    description: Parameters for a clone op.
    type: object
    title: Clone Task Information.
    properties:
      name:
        description: Name of the recovery task.
        type: string
        x-go-name: Name
        x-nullable: true
      taskId:
        description: Id of the recovery task.
        type: string
        x-go-name: TaskId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CloneTaskRequest:
    description: Specifies the settings for a Restore Task that clones VMs or Views.
    type: object
    title: Clone Restore Task Request.
    required:
    - name
    - type
    properties:
      cloneViewParameters:
        description: |-
          Specifies settings for cloning an existing View.
          This field is required for a 'kCloneView' Restore Task.
        title: Clone View.
        allOf:
        - $ref: '#/definitions/CloneViewRequest'
        x-nullable: true
      continueOnError:
        description: |-
          Specifies if the Restore Task should continue when some operations on some
          objects fail. If true, the Cohesity Cluster ignores intermittent
          errors and restores as many objects as possible.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      glacierRetrievalType:
        description: |-
          Specifies the way data needs to be retrieved from the external target.
          This information will be filled in by Iris and Magneto will pass it along
          to the Icebox as it is to support bulk retrieval from Glacier.
          Specifies the type of Restore Task.

          'kStandard' specifies retrievals that allow to access any of your archives
          within several hours. Standard retrievals typically complete within 3–5
          hours. This is the default option for retrieval requests that do not specify
          the retrieval option.
          'kBulk' specifies retrievals that are Glacier’s lowest-cost retrieval
          option, which can be used to retrieve large amounts, even petabytes, of data
          inexpensively in a day. Bulk retrieval typically complete within 5–12 hours.
          'kExpedited' specifies retrievals that allows to quickly access your data
          when occasional urgent requests for a subset of archives are required. For
          all but the largest archives (250 MB+), data accessed using Expedited
          retrievals are typically made available within 1–5 minutes.
        type: string
        enum:
        - kStandard
        - kBulk
        - kExpedited
        x-go-name: GlacierRetrievalType
        x-nullable: true
      hypervParameters:
        description: Specifies additional parameters for 'kHyperV' restore objects.
        x-nullable: true
        $ref: '#/definitions/HypervCloneParameters'
      name:
        description: |-
          Specifies the name of the Restore Task. This field must be set and
          must be a unique name.
        type: string
        x-go-name: Name
        x-nullable: true
      newParentId:
        description: |-
          Specify a new registered parent Protection Source. If specified
          the selected objects are cloned or recovered to this new Protection
          Source. If not specified, objects are cloned or recovered
          to the original Protection Source that was managing them.
        type: integer
        format: int64
        x-go-name: NewParentId
        x-nullable: true
      objects:
        description: |-
          Array of Objects.

          Specifies a list of Protection Source objects or Protection Job objects
          (with specified Protection Source objects).
        type: array
        items:
          $ref: '#/definitions/RestoreObjectDetails'
        x-go-name: Objects
        x-nullable: true
      targetViewName:
        description: |-
          Specifies the name of the View where the cloned VMs are stored.
          This field is required for a 'kCloneVMs' Restore Task.
        type: string
        x-go-name: TargetViewName
        x-nullable: true
      type:
        description: |-
          Specifies the type of Restore Task such as 'kCloneVMs' or 'kCloneView'.
          'kCloneVMs' specifies a Restore Task that clones VMs.
          'kCloneView' specifies a Restore Task that clones a View.
        type: string
        enum:
        - kCloneVMs
        - kCloneView
        x-go-name: Type
        x-nullable: true
      vlanParameters:
        description: Specifies VLAN parameters for the restore operation.
        x-nullable: true
        $ref: '#/definitions/VlanParameters'
      vmwareParameters:
        description: Specifies additional parameters for 'kVmware' restore objects.
        x-nullable: true
        $ref: '#/definitions/VmwareCloneParameters'
    x-go-package: cohesity/iris/server/data/public
  CloneViewRequest:
    description: Specifies the settings for cloning an existing View.
    type: object
    title: Clone View Request.
    properties:
      accessSids:
        description: |-
          Array of Security Identifiers (SIDs)

          Specifies the list of security identifiers (SIDs) for the restricted
          Principals who have access to this View.
        type: array
        items:
          type: string
        x-go-name: AccessSids
        x-nullable: true
      antivirusScanConfig:
        description: Specifies the antivirus scan config settings for this View.
        x-nullable: true
        $ref: '#/definitions/AntivirusScanConfig'
      cloneViewName:
        description: Specifies the name of the new View that is cloned from the source
          View.
        type: string
        x-go-name: CloneViewName
        x-nullable: true
      dataLockExpiryUsecs:
        description: |-
          DataLock (Write Once Read Many) lock expiry epoch time in microseconds. If
          specified, a view will be marked as a DataLock view. If a view is marked
          as a DataLock view, only a Data Security Officer (a user having Data
          Security Privilege) can delete the view until the lock expiry time.
        type: integer
        format: int64
        x-go-name: DataLockExpiryUsecs
        x-nullable: true
      description:
        description: Specifies an optional text description about the View.
        type: string
        x-go-name: Description
        x-nullable: true
      enableFastDurableHandle:
        description: |-
          Specifies whether fast durable handle is enabled. If enabled, view open
          handle will be kept in memory, which results in a higher performance. But
          the handles cannot be recovered if node or service crashes.
        type: boolean
        x-go-name: EnableFastDurableHandle
        x-nullable: true
      enableFilerAuditLogging:
        description: Specifies if Filer Audit Logging is enabled for this view.
        type: boolean
        x-go-name: EnableFilerAuditLogging
        x-nullable: true
      enableLiveIndexing:
        description: Specifies whether to enable live indexing for the view.
        type: boolean
        x-go-name: EnableLiveIndexing
        x-nullable: true
      enableMixedModePermissions:
        description: |-
          If set, mixed mode (NFS and SMB) access is enabled for this view.
          This field is deprecated. Use the field SecurityMode.
          deprecated: true
        type: boolean
        x-go-name: EnableMixedModePermissions
        x-nullable: true
      enableNfsViewDiscovery:
        description: If set, it enables discovery of view for NFS.
        type: boolean
        x-go-name: EnableNfsViewDiscovery
        x-nullable: true
      enableOfflineCaching:
        description: Specifies whether to enable offline file caching of the view.
        type: boolean
        x-go-name: EnableOfflineCaching
        x-nullable: true
      enableSmbAccessBasedEnumeration:
        description: |-
          Specifies if access-based enumeration should be enabled.
          If 'true', only files and folders that the user has permissions to
          access are visible on the SMB share for that user.
        type: boolean
        x-go-name: EnableSmbAccessBasedEnumeration
        x-nullable: true
      enableSmbEncryption:
        description: |-
          Specifies the SMB encryption for the View. If set, it enables the SMB
          encryption for the View. Encryption is supported only by SMB 3.x dialects.
          Dialects that do not support would still access data in unencrypted
          format.
        type: boolean
        x-go-name: EnableSmbEncryption
        x-nullable: true
      enableSmbOplock:
        description: Specifies whether SMB opportunistic lock is enabled.
        type: boolean
        x-go-name: EnableSmbOplock
        x-nullable: true
      enableSmbViewDiscovery:
        description: If set, it enables discovery of view for SMB.
        type: boolean
        x-go-name: EnableSmbViewDiscovery
        x-nullable: true
      enforceSmbEncryption:
        description: |-
          Specifies the SMB encryption for all the sessions for the View.
          If set, encryption is enforced for all the sessions for the View. When
          enabled all future and existing unencrypted sessions are disallowed.
        type: boolean
        x-go-name: EnforceSmbEncryption
        x-nullable: true
      fileExtensionFilter:
        description: |-
          Optional filtering criteria that should be satisfied by all the files
          created in this view. It does not affect existing files.
        x-nullable: true
        $ref: '#/definitions/FileExtensionFilter'
      fileLockConfig:
        description: |-
          Optional config that enables file locking for this view. It cannot be
          disabled during the edit of a view, if it has been enabled during the
          creation of the view. Also, it cannot be enabled if it was disabled
          during the creation of the view.
        x-nullable: true
        $ref: '#/definitions/FileLevelDataLockConfig'
      logicalQuota:
        description: |-
          Specifies an optional logical quota limit (in bytes) for the usage allowed
          on this View.
          (Logical data is when the data is fully hydrated and expanded.)
          This limit overrides the limit inherited from the Storage Domain
          (View Box) (if set).
          If logicalQuota is nil, the limit is inherited from the
          Storage Domain (View Box) (if set).
          A new write is not allowed if the Storage Domain (View Box) will exceed the
          specified quota.
          However, it takes time for the Cohesity Cluster to calculate
          the usage across Nodes, so the limit may be exceeded by a small amount.
          In addition, if the limit is increased or data is removed,
          there may be a delay before the Cohesity Cluster allows more data
          to be written to the View, as the Cluster is calculating the usage
          across Nodes.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      netgroupWhitelist:
        description: |-
          Array of Netgroups.

          Specifies a list of Netgroups that have permissions to access the
          View. (Overrides the Netgroups specified at the global Cohesity
          Cluster level.)
        type: array
        items:
          $ref: '#/definitions/NisNetgroup'
        x-go-name: NetgroupWhitelist
        x-nullable: true
      nfsAllSquash:
        description: Specifies the NFS all squash config.
        x-nullable: true
        $ref: '#/definitions/NfsSquash'
      nfsRootPermissions:
        description: Specifies the NFS root permission config of the view file system.
        x-nullable: true
        $ref: '#/definitions/NfsRootPermissions'
      nfsRootSquash:
        description: Specifies the NFS root squash config.
        x-nullable: true
        $ref: '#/definitions/NfsSquash'
      overrideGlobalNetgroupWhitelist:
        description: |-
          Specifies whether view level client netgroup whitelist overrides cluster
          and global setting.
        type: boolean
        x-go-name: OverrideGlobalNetgroupWhitelist
        x-nullable: true
      overrideGlobalWhitelist:
        description: |-
          Specifies whether view level client subnet whitelist overrides cluster and
          global setting.
        type: boolean
        x-go-name: OverrideGlobalWhitelist
        x-nullable: true
      protocolAccess:
        description: |-
          Specifies the supported Protocols for the View.
          'kAll' enables protocol access to following three views: NFS, SMB and S3.
          'kNFSOnly' enables protocol access to NFS only.
          'kSMBOnly' enables protocol access to SMB only.
          'kS3Only' enables protocol access to S3 only.
          'kSwiftOnly' enables protocol access to Swift only.
        type: string
        enum:
        - kAll
        - kNFSOnly
        - kSMBOnly
        - kS3Only
        - kSwiftOnly
        x-go-name: ProtocolAccess
        x-nullable: true
      qos:
        description: Specifies the Quality of Service (QoS) Policy for the View.
        x-nullable: true
        $ref: '#/definitions/QoS'
      securityMode:
        description: |-
          Specifies the security mode used for this view.
          Currently we support the following modes: Native, Unified and NTFS style.
          'kNativeMode' indicates a native security mode.
          'kUnifiedMode' indicates a unified security mode.
          'kNtfsMode' indicates a NTFS style security mode.
        type: string
        enum:
        - kNativeMode
        - kUnifiedMode
        - kNtfsMode
        x-go-name: SecurityMode
        x-nullable: true
      sharePermissions:
        description: Specifies a list of share level permissions.
        type: array
        items:
          $ref: '#/definitions/SmbPermission'
        x-go-name: SharePermissions
        x-nullable: true
      smbPermissionsInfo:
        description: Specifies the SMB permissions for the View.
        x-nullable: true
        $ref: '#/definitions/SmbPermissionsInfo'
      sourceViewName:
        description: Specifies the name of the source View that will be cloned.
        type: string
        x-go-name: SourceViewName
        x-nullable: true
      storagePolicyOverride:
        description: |-
          Specifies if inline deduplication and compression settings inherited from
          the Storage Domain (View Box) should be disabled for this View.
        x-nullable: true
        $ref: '#/definitions/StoragePolicyOverride'
      subnetWhitelist:
        description: |-
          Array of Subnets.

          Specifies a list of Subnets with IP addresses that have permissions to
          access the View. (Overrides the Subnets specified at the global
          Cohesity Cluster level.)
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: SubnetWhitelist
        x-nullable: true
      swiftProjectDomain:
        description: Specifies the Keystone project domain.
        type: string
        x-go-name: SwiftProjectDomain
        x-nullable: true
      swiftProjectName:
        description: Specifies the Keystone project name.
        type: string
        x-go-name: SwiftProjectName
        x-nullable: true
      tenantId:
        description: Optional tenant id who has access to this View.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewLockEnabled:
        description: |-
          Specifies whether view lock is enabled. If enabled the view cannot be
          modified or deleted until unlock. By default it is disabled.
        type: boolean
        x-go-name: ViewLockEnabled
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CloseSmbFileOpenParameters:
    description: Specifies parameters required to force close an active SMB file open.
    type: object
    title: Close SMB File Open Parameters.
    properties:
      filePath:
        description: |-
          Specifies the filepath in the view relative to the root filesystem.
          If this field is specified, viewName field must also be specified.
        type: string
        x-go-name: FilePath
        x-nullable: true
      openId:
        description: Specifies the id of the active open.
        type: integer
        format: int64
        x-go-name: OpenId
        x-nullable: true
      viewName:
        description: |-
          Specifies the name of the View in which to search. If a view name is not
          specified, all the views in the Cluster is searched.
          This field is mandatory if filePath field is specified.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CloudDeployInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined. The
      extension applies to both CloudDeployInfoProto as well as CloudDeployEntity.

      CloudDeployInfoProto extension                  Location           Extension
      =============================================================================
      aws::CloudDeployInfo::aws_cloud_deploy_info     aws/aws.proto            100
      azure::CloudDeployInfo::azure_cloud_deploy_info azure/azure.proto        101
      gcp::CloudDeployInfo::gcp_cloud_deploy_info     gcp/gcp.proto            102
      aws::ReplicationInfo::aws_replication_info      aws/aws.proto            103
      azure::ReplicationInfo::azure_replication_info  azure/azure.proto        104
      =============================================================================

      CloudDeployInfoProto.CloudDeployEntity extension  Location         Extension
      =============================================================================
      aws::CloudDeployEntityInfo::aws_cloud_deploy_entity_info
      aws/aws.proto          100
      vmware::RestoreEntityInfo::vmware_cloud_deploy_entity_info
      vmware/vmware.proto    101
      azure::CloudDeployEntityInfo::azure_cloud_deploy_entity_info
      azure/azure.proto      102
      gcp::CloudDeployEntityInfo::gcp_cloud_deploy_entity_info
      gcp/gcp.proto          103
      hyperv::RestoreEntityInfo::hyperv_cloud_deploy_entity_info
      hyperv/hyperv.proto    104
      aws::ReplicationEntityInfo::aws_replication_entity_info
      aws/aws.proto          105
      aws::ReplicationEntityInfo::azure_replication_entity_info
      azure/azure.proto      106
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about cloud deploy tasks for any of
      the cloud environments we support. Environment specific infos are defined as
      extensions to this proto.
    properties:
      cloudDeployEntityVec:
        description: |-
          Contains the file paths and the information of the entities deployed to
          cloud.
        type: array
        items:
          $ref: '#/definitions/CloudDeployInfoProto_CloudDeployEntity'
        x-go-name: CloudDeployEntityVec
        x-nullable: true
      isIncremental:
        description: Whether this Cloud deploy info is for incremental cloudspin.
        type: boolean
        x-go-name: IsIncremental
        x-nullable: true
      restoreInfo:
        description: This will be filled by some restore ops to checkpoint their restore
          state.
        x-nullable: true
        $ref: '#/definitions/RestoreInfoProto'
      targetType:
        description: |-
          Specifies the target type for the task. The field is only valid if the
          task has got a permit.
        type: integer
        format: int32
        x-go-name: TargetType
        x-nullable: true
      totalBytesTransferredToSource:
        description: Total bytes transferred to source.
        type: integer
        format: int64
        x-go-name: TotalBytesTransferredToSource
        x-nullable: true
      type:
        description: The type of environment this cloud deploy info pertains to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  CloudDeployInfoProto_CloudDeployEntity:
    type: object
    properties:
      deployedVmName:
        description: Optional name that should be used for deployed VM.
        type: string
        x-go-name: DeployedVmName
        x-nullable: true
      entity:
        description: The entity that was deployed to cloud.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      error:
        description: |-
          If cloud deploy of the 'entity' failed, this field may contain the cause
          of the failure.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      previousRelativeCloneDirPath:
        description: |-
          Directory where files of the entity's previous snapshot were cloned to.
          Path is relative to the destination view.
        type: string
        x-go-name: PreviousRelativeCloneDirPath
        x-nullable: true
      previousRelativeClonePaths:
        description: |-
          All the paths that the entity's previous snapshot files were cloned to.
          Each path is relative to the destination view.
        type: array
        items:
          type: string
        x-go-name: PreviousRelativeClonePaths
        x-nullable: true
      progressMonitorTaskPath:
        description: |-
          Progress monitor task path for this entity which is relative to the root
          path of the cloud deploy task progress monitor.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
      publicStatus:
        description: Iris-facing task state. This field is stamped during the export.
        type: integer
        format: int32
        x-go-name: PublicStatus
        x-nullable: true
      relativeClonePaths:
        description: |-
          All the paths that the entity's files were cloned to. Each path is
          relative to the destination view.
        type: array
        items:
          type: string
        x-go-name: RelativeClonePaths
        x-nullable: true
      status:
        description: The status of the entity.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  CloudDeployTarget:
    description: |-
      Message that specifies the details about CloudDeploy target where backup
      snapshots may be converted and stored.
    type: object
    properties:
      deployVmsToCloudParams:
        description: |-
          Note that only the id field would be set for all the entities in
          DeployVMsToCloudParams. This is ok as we don't replicate the policy to
          remote cluster currently. When we decide to replicate the policy to remote
          clusters, we need to populate the remaining fields.
        title: |-
          Contains information needed to identify various resources when deploying
          VMs to Cloud.
        x-nullable: true
        $ref: '#/definitions/DeployVMsToCloudParams'
      targetEntity:
        description: |-
          Although we use EntityProto here, only the id field would be set in this
          proto. This is ok as we don't replicate the policy to remote cluster
          currently. When we decide to replicate the policy to remote clusters, we
          need to populate the remaining fields.
        title: Entity corresponding to the cloud deploy target.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      type:
        description: The type of the CloudDeploy target.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  CloudDeployTargetDetails:
    description: |-
      Message that specifies the details about CloudDeploy target where backup
      snapshots may be converted and stored.
    type: object
    properties:
      awsParams:
        description: Specifies various resources when converting and deploying a VM
          to AWS.
        title: |-
          Contains information needed to identify various resources when deploying
          VMs to Cloud.
        x-nullable: true
        $ref: '#/definitions/AwsParams'
      azureParams:
        description: Specifies various resources when converting and deploying a VM
          to Azure.
        x-nullable: true
        $ref: '#/definitions/AzureParams'
      gcpParams:
        description: Specifies various resources when converting and deploying a VM
          to Gcp.
        x-nullable: true
        $ref: '#/definitions/GcpParams'
      id:
        description: |-
          Entity corresponding to the cloud deploy target.

          Specifies the id field inside the EntityProto.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: |-
          Specifies the inner object's name or a human-readable string made off the
          salient attributes. This is only plumbed when Entity objects are exposed
          to Iris BE or to Yoda.
        type: string
        x-go-name: DisplayName
        x-nullable: true
      type:
        description: |-
          Specifies the type of the CloudDeploy target.
          'kAzure' indicates that Azure as a cloud deploy target type.
          'kAWS' indicates that AWS as a cloud deploy target type.
          'kGCP' indicates that GCP as a cloud deploy target type.
        type: string
        enum:
        - kAzure
        - kAWS
        - kGCP
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CloudNetworkConfiguration:
    description: |-
      Specifies all of the parameters needed for network configuration of
      the new Cloud Cluster.
    type: object
    title: Cloud Network Configuration.
    properties:
      clusterGateway:
        description: |-
          Specifies the default gateway IP address (or addresses) for the Cluster
          network.
        type: string
        x-go-name: ClusterGateway
        x-nullable: true
      clusterSubnetMask:
        description: Specifies the subnet mask (or masks) of the Cluster network.
        type: string
        x-go-name: ClusterSubnetMask
        x-nullable: true
      dnsServers:
        description: Specifies the list of DNS Servers this cluster should be configured
          with.
        type: array
        items:
          type: string
        x-go-name: DnsServers
        x-nullable: true
      domainNames:
        description: |-
          Specifies the list of domain names this cluster should be configured
          with.
        type: array
        items:
          type: string
        x-go-name: DomainNames
        x-nullable: true
      ntpServers:
        description: Specifies the list of NTP Servers this cluster should be configured
          with.
        type: array
        items:
          type: string
        x-go-name: NtpServers
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CloudParameters:
    description: |-
      Specifies Cloud parameters that are applicable to all Protection
      Sources in a Protection Job in certain scenarios.
    type: object
    title: Cloud Parameters.
    properties:
      failoverToCloud:
        description: |-
          Specifies whether the Protection Sources in this Protection Job
          will be failed over to Cloud. This flag is applicable to backup
          on-prem Sources.
        type: boolean
        x-go-name: FailoverToCloud
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Cluster:
    description: Specifies information about the Cohesity Cluster.
    type: object
    title: Cohesity Cluster.
    properties:
      appsSubnet:
        description: The subnet for Athena apps.
        x-nullable: true
        $ref: '#/definitions/Subnet'
      assignedRacksCount:
        description: Specifies the number of racks in cluster with at least one rack
          assigned.
        type: integer
        format: int32
        x-go-name: AssignedRacksCount
        x-nullable: true
      availableMetadataSpace:
        description: Information about storage available for metadata
        type: integer
        format: int64
        x-go-name: AvailableMetadataSpace
        x-nullable: true
      bannerEnabled:
        description: |-
          Specifies whether UI banner is enabled on the cluster or not. When banner
          is enabled, UI will make an additional API call to fetch the banner and
          show at the login page.
        type: boolean
        x-go-name: BannerEnabled
        x-nullable: true
      chassisCount:
        description: Specifies the number of chassis in cluster.
        type: integer
        format: int32
        x-go-name: ChassisCount
        x-nullable: true
      clusterAuditLogConfig:
        description: Cluster Audit Log Configuration.
        x-nullable: true
        $ref: '#/definitions/ClusterAuditLogConfiguration'
      clusterSoftwareVersion:
        description: |-
          Specifies the current release of the Cohesity software running on
          this Cohesity Cluster.
        type: string
        x-go-name: ClusterSoftwareVersion
        x-nullable: true
      clusterType:
        description: |-
          Specifies the type of Cluster such as kPhysical.
          'kPhysical' indicates the Cohesity Cluster is hosted directly on hardware.
          'kVirtualRobo' indicates the Cohesity Cluster is hosted in a VM on
          a ESXi Host of a VMware vCenter Server using Cohesity's Virtual Edition.
          'kMicrosoftCloud' indicates the Cohesity Cluster is hosted in a VM
          on Microsoft Azure using Cohesity's Cloud Edition.
          'kAmazonCloud' indicates the Cohesity Cluster is hosted in a VM
          on Amazon S3 using Cohesity's Cloud Edition.
          'kGoogleCloud' indicates the Cohesity Cluster is hosted in a VM
          on Google Cloud Platform using Cohesity's Cloud Edition.
        type: string
        enum:
        - kPhysical
        - kVirtualRobo
        - kMicrosoftCloud
        - kAmazonCloud
        - kGoogleCloud
        x-go-name: ClusterType
        x-nullable: true
      createdTimeMsecs:
        description: |-
          Specifies the time when the Cohesity Cluster was created.
          This value is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      currentOpScheduledTimeSecs:
        description: |-
          Specifies the time scheduled by the Cohesity Cluster to
          start the current running operation.
        type: integer
        format: int64
        x-go-name: CurrentOpScheduledTimeSecs
        x-nullable: true
      currentOperation:
        description: |-
          Specifies the current Cluster-level operation in progress.
          'kUpgrade' indicates the Cohesity Cluster is upgrading to a new release.
          'kRemoveNode' indicates the Cohesity Cluster is removing a Node
          from the Cluster.
          'kNone' indicates no action is occurring on the Cohesity Cluster.
          'kDestroy' indicates the Cohesity Cluster is getting destoryed.
          'kClean' indicates the Cohesity Cluster is getting cleaned.
          'kRestartServices' indicates the Cohesity Cluster is restarting the services.
        type: string
        enum:
        - kRemoveNode
        - kUpgrade
        - kNone
        - kDestroy
        - kClean
        - kRestartServices
        x-go-name: CurrentOperation
        x-nullable: true
      currentTimeMsecs:
        description: |-
          Specifies the current system time on the Cohesity Cluster.
          This value is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: CurrentTimeMsecs
        x-nullable: true
      dnsServerIps:
        description: |-
          Array of IP Addresses of DNS Servers.

          Specifies the IP addresses of the DNS Servers used by the Cohesity
          Cluster.
        type: array
        items:
          type: string
        x-go-name: DnsServerIps
        x-nullable: true
      domainNames:
        description: |-
          Array of Domain Names.

          The first domain name specified in the array is the fully qualified
          domain name assigned to the Cohesity Cluster. Any additional
          domain names specified are used for the domain search list for
          hostname look-up.
        type: array
        items:
          type: string
        x-go-name: DomainNames
        x-nullable: true
      enableActiveMonitoring:
        description: |-
          Specifies if Cohesity can receive monitoring information from the
          Cohesity Cluster.
          If 'true', remote monitoring of the Cohesity Cluster is allowed.
        type: boolean
        x-go-name: EagleConfigEnableAgent
        x-nullable: true
      enableUpgradePkgPolling:
        description: If 'true', Cohesity's upgrade server is polled for new releases.
        type: boolean
        x-go-name: HaloServerEnabled
        x-nullable: true
      encryptionEnabled:
        description: |-
          If 'true', the entire Cohesity Cluster is encrypted including all View
          Boxes.
        type: boolean
        x-go-name: EncryptionEnabled
        x-nullable: true
      encryptionKeyRotationPeriodSecs:
        description: |-
          Specifies the period of time (in seconds) when encryption keys are rotated.
          By default, the encryption keys are rotated every 77760000 seconds
          (30 days).
        type: integer
        format: int64
        x-go-name: EncryptionKeyRotationPeriodSecs
        x-nullable: true
      eulaConfig:
        description: Specifies the End User License Agreement (EULA) acceptance information.
        title: EULA Acceptance Information.
        allOf:
        - $ref: '#/definitions/EulaConfig'
        x-nullable: true
      faultToleranceLevel:
        description: |-
          Specifies the level which 'MetadataFaultToleranceFactor' applies to.
          'kNode' indicates 'MetadataFaultToleranceFactor' applies to Node level.
          'kChassis' indicates 'MetadataFaultToleranceFactor' applies to Chassis
          level.
          'kRack' indicates 'MetadataFaultToleranceFactor' applies to Rack level.
        type: string
        enum:
        - kNode
        - kChassis
        - kRack
        x-go-name: FaultToleranceLevel
        x-nullable: true
      filerAuditLogConfig:
        description: Filer Audit Log Configuration.
        x-nullable: true
        $ref: '#/definitions/FilerAuditLogConfiguration'
      fipsModeEnabled:
        description: |-
          Specifies if the Cohesity Cluster should operate in the FIPS mode,
          which is compliant with the Federal Information Processing Standard
          140-2 certification.
        type: boolean
        x-go-name: FipsModeEnabled
        x-nullable: true
      gateway:
        description: Specifies the gateway IP address.
        type: string
        x-go-name: Gateway
        x-nullable: true
      googleAnalyticsEnabled:
        description: Specifies whether Google Analytics is enabled.
        type: boolean
        x-go-name: GoogleAnalyticsEnabled
        x-nullable: true
      hardwareInfo:
        description: |-
          Specifies a hardware type for motherboard of the nodes
          that make up this Cohesity Cluster such as S2600WB for Ivy Bridge
          or S2600TP for Haswell.
        x-nullable: true
        $ref: '#/definitions/ClusterHardwareInfo'
      id:
        description: Specifies the unique id of Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      incarnationId:
        description: Specifies the unique incarnation id of the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: IncarnationId
        x-nullable: true
      ipPreference:
        description: IP preference
        type: integer
        format: int32
        x-go-name: IpPreference
        x-nullable: true
      isDocumentationLocal:
        description: |-
          Specifies what version of the documentation is used.
          If 'true', the version of documentation stored locally on the Cohesity
          Cluster is used.
          If 'false', the documentation stored on a Cohesity Web Server
          is used. The default is 'false'.
          Cohesity recommends accessing the Help from the Cohesity Web site which
          provides the newest and most complete version of Help.
        type: boolean
        x-go-name: IsDocumentationLocal
        x-nullable: true
      languageLocale:
        description: Specifies the language and locale for this Cohesity Cluster.
        type: string
        x-go-name: LanguageLocale
        x-nullable: true
      licenseState:
        description: Specifies the Licensing State information.
        title: License State Information.
        allOf:
        - $ref: '#/definitions/LicenseState'
        x-nullable: true
      localAuthDomainName:
        description: Domain name for SMB local authentication.
        type: string
        x-go-name: LocalAuthDomainName
        x-nullable: true
      localGroupsEnabled:
        description: |-
          Specifies whether to enable local groups on cluster. Once it is enabled,
          it cannot be disabled.
        type: boolean
        x-go-name: LocalGroupsEnabled
        x-nullable: true
      metadataFaultToleranceFactor:
        description: |-
          Specifies metadata fault tolerance setting for the cluster. This denotes
          the number of simultaneous failures[node] supported by metadata services
          like gandalf and scribe.
        type: integer
        format: int32
        x-go-name: MetadataFaultToleranceFactor
        x-nullable: true
      multiTenancyEnabled:
        description: |-
          Specifies if multi tenancy is enabled in the cluster. Authentication &
          Authorization will always use tenant_id, however, some UI elements may be
          disabled when multi tenancy is disabled.
        type: boolean
        x-go-name: MultiTenancyEnabled
        x-nullable: true
      name:
        description: Specifies the name of the Cohesity Cluster.
        type: string
        x-go-name: Name
        x-nullable: true
      nodeCount:
        description: Specifies the number of Nodes in the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: NodeCount
        x-nullable: true
      nodeIps:
        description: IP addresses of nodes in the cluster
        type: string
        x-go-name: NodeIps
        x-nullable: true
      ntpSettings:
        description: |-
          Specifies if the ntp/master slave scheme should be disabled for this
          cluster.
        x-nullable: true
        $ref: '#/definitions/NtpSettingsConfig'
      pcieSsdTierRebalanceDelaySecs:
        description: Specifies the rebalance delay in seconds for cluster PcieSSD
          storage tier.
        type: integer
        format: int32
        x-go-name: PcieSsdTierRebalanceDelaySecs
        x-nullable: true
      proxyVMSubnet:
        description: The subnet reserved for ProxyVM
        type: string
        x-go-name: ProxyVMSubnet
        x-nullable: true
      reverseTunnelEnabled:
        description: |-
          If 'true', Cohesity's Remote Tunnel is enabled.
          Cohesity can access the Cluster and provide remote assistance
          via a Remote Tunnel.
        type: boolean
        x-go-name: ReverseTunnelEnabled
        x-nullable: true
      reverseTunnelEndTimeMsecs:
        description: |-
          ReverseTunnelEndTimeMsecs specifies the end time in milliseconds since
          epoch until when the reverse tunnel will stay enabled.
        type: integer
        format: int64
        x-go-name: ReverseTunnelEndTimeMsecs
        x-nullable: true
      schemaInfoList:
        description: Specifies the time series schema info of the cluster.
        type: array
        items:
          $ref: '#/definitions/SchemaInfo'
        x-go-name: SchemaInfoList
        x-nullable: true
      smbAdDisabled:
        description: |-
          Specifies if Active Directory should be disabled for authentication of SMB
          shares. If 'true', Active Directory is disabled.
        type: boolean
        x-go-name: SmbAdDisabled
        x-nullable: true
      smbMultichannelEnabled:
        description: |-
          Specifies whether SMB multichannel is enabled on the cluster. When this is
          set to true, then any SMB3 multichannel enabled client can establish
          multiple TCP connection per session to the Server.
        type: boolean
        x-go-name: SmbMultichannelEnabled
        x-nullable: true
      stats:
        description: Specifies statistics about this Cohesity Cluster.
        x-nullable: true
        $ref: '#/definitions/ClusterStats'
      stigMode:
        description: Specifies if STIG mode is enabled or not.
        type: boolean
        x-go-name: StigMode
        x-nullable: true
      supportedConfig:
        description: |-
          Information about supported configuration. For example, it contains
          minimum number of nodes supported for the cluster.
        x-nullable: true
        $ref: '#/definitions/SupportedConfig'
      targetSoftwareVersion:
        description: |-
          Specifies the Cohesity release that this Cluster is being upgraded to
          if an upgrade operation is in progress.
        type: string
        x-go-name: TargetSoftwareVersion
        x-nullable: true
      tenantViewboxSharingEnabled:
        description: |-
          In case multi tenancy is enabled, this flag controls whether multiple
          tenants can be placed on the same viewbox. Once set to true, this flag
          should never become false.
        type: boolean
        x-go-name: TenantViewboxSharingEnabled
        x-nullable: true
      timezone:
        description: |-
          Specifies the timezone to use for showing time in emails, reports,
          filer audit logs, etc.
        type: string
        x-go-name: Timezone
        x-nullable: true
      turboMode:
        description: Specifies if the cluster is in Turbo mode.
        type: boolean
        x-go-name: TurboMode
        x-nullable: true
      usedMetadataSpacePct:
        description: |-
          UsedMetadataSpacePct measures the percentage about storage used for
          metadata over the total storage available for metadata
        type: number
        format: double
        x-go-name: UsedMetadataSpacePct
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterAuditLog:
    description: |-
      Specifies information about a single Cluster audit log.
      When an action (such as pausing a Protection Job) occurs, an audit log is
      generated that provides details about the action.
    type: object
    title: Cluster Audit Log.
    properties:
      action:
        description: Specifies the action that caused the log to be generated.
        type: string
        x-go-name: Action
        x-nullable: true
      clusterInfo:
        description: Specifies the information of the cluster.
        type: string
        x-go-name: ClusterInfo
        x-nullable: true
      details:
        description: Specifies more information about the action.
        type: string
        x-go-name: Details
        x-nullable: true
      domain:
        description: |-
          Specifies the domain of the user who caused the action
          that generated the log.
        type: string
        x-go-name: Domain
        x-nullable: true
      entityId:
        description: Specifies the id of the entity (object) that the action is invoked
          on.
        type: string
        x-go-name: EntityId
        x-nullable: true
      entityName:
        description: |-
          Specifies the entity (object) name that the action is invoked on.
          For example, if a Job called BackupEng is paused, this field
          returns BackupEng.
        type: string
        x-go-name: EntityName
        x-nullable: true
      entityType:
        description: |-
          Specifies the type of the entity (object) that the action is invoked on.
          For example, if a Job called BackupEng is paused, this field
          returns 'Protection Job'.
        type: string
        x-go-name: EntityType
        x-nullable: true
      humanTimestamp:
        description: |-
          Specifies the time when the log was generated.
          The time is specified using a human readable timestamp.
        type: string
        x-go-name: HumanTimestamp
        x-nullable: true
      impersonation:
        description: Specifies if the log was generated during impersonation.
        type: boolean
        x-go-name: Impersonation
        x-nullable: true
      ip:
        description: Specifies the IP address of the user making this action.
        type: string
        x-go-name: Ip
        x-nullable: true
      newRecord:
        description: Specifies the record after the action is invoked.
        type: string
        x-go-name: NewRecord
        x-nullable: true
      originalTenant:
        description: |-
          Specifies the tenant information of the actual user whose action generated
          the log in case of impersonation.
        x-nullable: true
        $ref: '#/definitions/Tenant'
      previousRecord:
        description: Specifies the record before the action is invoked.
        type: string
        x-go-name: PreviousRecord
        x-nullable: true
      tenant:
        description: Specifies the tenant information of the user whose action generated
          the log.
        x-nullable: true
        $ref: '#/definitions/Tenant'
      timestampUsecs:
        description: |-
          Specifies the time when the log was generated.
          The time is specified using a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: TimestampUsecs
        x-nullable: true
      userName:
        description: Specifies the user who caused the action that generated the log.
        type: string
        x-go-name: UserName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterAuditLogConfiguration:
    description: Specifies the settings of the Cluster audit log configuration.
    type: object
    title: Cluster Audit Log Configuration.
    required:
    - enabled
    - retentionPeriodDays
    properties:
      enabled:
        description: |-
          Specifies if the Cluster audit logging is enabled on the
          Cohesity Cluster.
          If 'true', Cluster audit logging is enabled. Otherwise, it is disabled.
        type: boolean
        x-go-name: Enabled
        x-nullable: true
      retentionPeriodDays:
        description: |-
          Specifies the number of days to keep (retain) the Cluster audit logs.
          Audit logs generated before the period of time specified by
          retentionPeriodDays are removed from the Cohesity Cluster.
        type: integer
        format: int32
        x-go-name: RetentionPeriodDays
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterAuditLogsSearchResult:
    description: |-
      Returns the Cluster audit logs that match the specified filter criteria
      up to the limit specified in pageCount.
    type: object
    title: Cluster Audit Log Filter Result.
    properties:
      clusterAuditLogs:
        description: |-
          Array of Cluster Audit Logs.

          Specifies a list of Cluster audit logs that match the specified
          filter criteria up to the limit specified in pageCount.
        type: array
        items:
          $ref: '#/definitions/ClusterAuditLog'
        x-go-name: ClusterAuditLogs
        x-nullable: true
      totalCount:
        description: |-
          Specifies the total number of logs that match the specified
          filter criteria. (This number might be larger than the size of the
          Cluster Audit Logs array.)
          This count is provided to indicate if additional requests must be
          made to get the full result.
        type: integer
        format: int64
        x-go-name: TotalCount
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterConfigProto_QoSMapping:
    description: |-
      If a new enum value is added to either QoSMapping.Type or
      QoSPrincipal.Priority in a future version, direct upgrades must be
      disallowed from a pre-2.5 version to that version (without upgrading to
      2.5 first). Contact nexus team for getting an appropriate restriction into
      the upgrade compatibility list.
    type: object
    title: |-
      Mapping from a QoSContext to a QoSPrincipal.
      NOTE: 'type' and 'priority' fields have been converted from required to
      optional in v2.5. Adding a new value to an enumeration for which there is
      a required field in any message breaks the software upgrade process.
      During an upgrade, it is common for different cluster nodes to run
      different versions of the code for a short period of time. So if a node
      running a newer version of the code goes ahead and sets the required field
      to the newly added enum value, the old code running on other nodes may go
      into crash loops due to protobuf parse failures.
    properties:
      principalId:
        description: Principal id of the QoS principal to which qos_context maps to.
        type: integer
        format: int64
        x-go-name: PrincipalId
        x-nullable: true
      qosContext:
        x-nullable: true
        $ref: '#/definitions/ClusterConfigProto_QoSMapping_QoSContext'
    x-go-package: configs/cluster_config.pb
  ClusterConfigProto_QoSMapping_QoSContext:
    description: |-
      QoSContext captures the properties that are relevant for QoS in a
      request. If a new field is added to QoSContext, cluster_config.h should
      be changed to enhance the hasher (QoSContextHash) and comparator
      (QoSContextEqual) for QoSContext.
    type: object
    properties:
      component:
        description: Component from which request is coming.
        type: integer
        format: int32
        x-go-name: Component
        x-nullable: true
      priority:
        description: Priority of a request.
        type: integer
        format: int32
        x-go-name: Priority
        x-nullable: true
      type:
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      viewBoxId:
        description: View box id of a request.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewId:
        description: View id of a request.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
    x-go-package: configs/cluster_config.pb
  ClusterConfigProto_SID:
    description: |-
      Represents the security identifier that uniquely defines a security
      principal. SIDs are associated with users and groups.
      Reference: https://msdn.microsoft.com/en-us/library/aa379597.aspx
    type: object
    properties:
      identifierAuthority:
        description: |-
          The authority under which the SID was created. This is always 6 bytes
          long.
        type: array
        items:
          type: integer
          format: uint8
        x-go-name: IdentifierAuthority
        x-nullable: true
      revisionLevel:
        description: The revision level of the SID.
        type: integer
        format: int32
        x-go-name: RevisionLevel
        x-nullable: true
      subAuthority:
        description: |-
          List of ids relative to the identifier_authority that uniquely
          identify a principal. The last entry in this list is the RID, which
          uniquely identifies the principal within a domain.
        type: array
        items:
          type: integer
          format: uint32
        x-go-name: SubAuthority
        x-nullable: true
    x-go-package: configs/cluster_config.pb
  ClusterConfigProto_StoragePolicyOverride:
    type: object
    title: The following describes the overridden storage policy.
    properties:
      disableInlineDedupAndCompression:
        description: |-
          If this is set to true, we will not do inline dedup and compression even
          if deduplicate_compress_delay_secs is set to 0 in the view box's storage
          policy.
        type: boolean
        x-go-name: DisableInlineDedupAndCompression
        x-nullable: true
    x-go-package: configs/cluster_config.pb
  ClusterConfigProto_Subnet:
    type: object
    title: The following message defines a subnet.
    properties:
      component:
        description: The component that has claimed this subnet.
        type: integer
        format: int32
        x-go-name: Component
        x-nullable: true
      description:
        description: Description of the subnet.
        type: string
        x-go-name: Description
        x-nullable: true
      gateway:
        description: Gateway for the subnet.
        type: string
        x-go-name: Gateway
        x-nullable: true
      id:
        description: ID for this subnet.
        type: integer
        format: int32
        x-go-name: Id
        x-nullable: true
      ip:
        description: |-
          ip is subnet IP address given either in v4 or v6. Netmask is
          specified by giving CIDR length in netmask_bits for ipv6.
          For IPv4 addresses, netmask_ip4 field is set in dotted decimal.
        type: string
        x-go-name: Ip
        x-nullable: true
      netmaskBits:
        type: integer
        format: int32
        x-go-name: NetmaskBits
        x-nullable: true
      netmaskIp4:
        type: string
        x-go-name: NetmaskIp4
        x-nullable: true
      nfsAccess:
        description: Whether clients from this subnet can mount using NFS protocol.
        type: integer
        format: int32
        x-go-name: NfsAccess
        x-nullable: true
      nfsAllSquash:
        description: |-
          Whether all clients from this subnet can map view with
          view_all_squash_uid/view_all_squash_gid configured in the view.
        type: boolean
        x-go-name: NfsAllSquash
        x-nullable: true
      nfsRootSquash:
        description: Whether clients from this subnet can mount as root on NFS.
        type: boolean
        x-go-name: NfsRootSquash
        x-nullable: true
      smbAccess:
        description: Whether clients from this subnet can mount using SMB protocol.
        type: integer
        format: int32
        x-go-name: SmbAccess
        x-nullable: true
    x-go-package: configs/cluster_config.pb
  ClusterCreationProgressResult:
    description: |-
      Specifies the values returned after a successful request to get the
      Cluster creation progress.
    type: object
    title: Cluster Creation Progress Result.
    properties:
      completionPercentage:
        description: |-
          Specifies an approximate completion percentage for the Cluster creation
          process.
        type: integer
        format: int32
        x-go-name: CompletionPercentage
        x-nullable: true
      errorMessage:
        description: |-
          Specifies a description of an error if any error was encountered during
          Cluster creation.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      events:
        description: Specifies a list of events that took place during Cluster creation.
        type: array
        items:
          type: string
        x-go-name: Events
        x-nullable: true
      inProgress:
        description: |-
          Specifies whether or not the Cluster is still in the process of being
          created. Once the creation process is complete, this will be set to
          false and then, shortly afterward, all Cluster services will restart. The
          Cluster will be unreachable for about a minute while the services are
          being restarted.
        type: boolean
        x-go-name: InProgress
        x-nullable: true
      message:
        description: |-
          Specifies an optional message describing the current state of the
          creation progress operation.
        type: string
        x-go-name: Message
        x-nullable: true
      secondsRemaining:
        description: |-
          Specifies an estimated number of seconds until the Cluster creation
          process is complete.
        type: integer
        format: int64
        x-go-name: SecondsRemaining
        x-nullable: true
      warningsFound:
        description: |-
          Specifies whether or not any warnings were encountered during Cluster
          creation.
        type: boolean
        x-go-name: WarningsFound
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterHardwareInfo:
    description: |-
      Specifies a hardware type for motherboard of the Nodes
      that make up this Cohesity Cluster such as S2600WB for Ivy Bridge
      or S2600TP for Haswell.
    type: object
    title: Cohesity Cluster Hardware.
    properties:
      hardwareModels:
        type: array
        items:
          type: string
        x-go-name: HardwareModels
        x-nullable: true
      hardwareVendors:
        type: array
        items:
          type: string
        x-go-name: HardwareVendors
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterIdentifier:
    type: object
    title: ClusterIdentifier uniquely identifies a cluster.
    properties:
      clusterId:
        description: Specifies the cluster id of the cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: Specifies the cluster incarnation id.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterInfo:
    type: object
    properties:
      clusterId:
        description: Specifies the id of the cluster.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      incarnationId:
        description: Specifies the incarnation id of the cluster.
        type: integer
        format: int64
        x-go-name: IncarnationId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterNetworkingEndpoint:
    description: Specifies information about end point.
    type: object
    title: Cluster Networking Endpoint.
    properties:
      fqdn:
        description: The Fully Qualified Domain Name.
        type: string
        x-go-name: Fqdn
        x-nullable: true
      ipv4Addr:
        description: The IPv4 address.
        type: string
        x-go-name: Ipv4Addr
        x-nullable: true
      ipv6Addr:
        description: The IPv6 address.
        type: string
        x-go-name: Ipv6Addr
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterNetworkingResourceInformation:
    description: Specifies a resource with IP address.
    type: object
    title: Cluster Networking Resource Information.
    properties:
      endpoints:
        description: The endpoints by which the resource is accessible.
        type: array
        items:
          $ref: '#/definitions/ClusterNetworkingEndpoint'
        x-go-name: EndpointVec
        x-nullable: true
      type:
        description: The type of the resource.
        type: string
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterPartition:
    description: Provides details about a Cluster Partition.
    type: object
    title: Cluster Partition.
    properties:
      hostName:
        description: |-
          Specifies that hostname that resolves to one or more Virtual IP
          Addresses (VIPs).
        type: string
        x-go-name: HostName
        x-nullable: true
      id:
        description: Specifies a unique identifier for the Cluster Partition.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the Cluster Partition.
        type: string
        x-go-name: Name
        x-nullable: true
      nodeIds:
        description: |-
          Array of Node Ids.

          Specifies a list of Node Ids that assigned to the Cluster Partition.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: NodeIdList
        x-nullable: true
      vips:
        description: |-
          Array of VIPs.

          Specifies a list of Virtual IP Addresses (VIPs) that route
          network traffic to the Cluster Partition.
        type: array
        items:
          type: string
        x-go-name: Vips
        x-nullable: true
      vlanIps:
        description: |-
          Array of VLAN IPs.

          Specifies a list of VLAN IP Addresses that route network traffic
          within certain VLANs to the Cluster Partition.
        type: array
        items:
          type: string
        x-go-name: VlanIps
        x-nullable: true
      vlans:
        description: |-
          Array of VLANs.

          Specifies a list of VLANs for the Cluster Partition.
        type: array
        items:
          $ref: '#/definitions/Vlan'
        x-go-name: Vlans
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterPublicKeys:
    description: Specifies public keys stored on the Cluster.
    type: object
    title: Cluster Public Keys.
    properties:
      sshPublicKey:
        description: Specifies the SSH public key used to login to Cluster nodes.
        type: string
        x-go-name: SshPublicKey
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterStats:
    description: Specifies statistics about this Cohesity Cluster.
    type: object
    title: Cohesity Cluster Statistics.
    properties:
      cloudUsagePerfStats:
        description: |-
          Provides usage and performance statistics for the remote data stored on
          a Cloud Tier by the Cohesity Cluster.
        title: Cloud Tier Statistics.
        allOf:
        - $ref: '#/definitions/UsageAndPerformanceStats'
        x-nullable: true
      dataReductionRatio:
        description: |-
          Provides the ratio of Cluster Logical Data (totalLogicalUsageBytes)
          Managed to Cluster Storage Used (totalPhysicalUsageBytes)
        type: number
        format: double
        x-go-name: DataReductionRatio
        x-nullable: true
      dataUsageStats:
        description: |-
          Specifies the data usage metric of the data stored by the Cohesity
          Cluster.
        title: Data Usage Statistics.
        x-nullable: true
        $ref: '#/definitions/DataUsageStats'
      id:
        description: Specifies the id of the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      localUsagePerfStats:
        description: |-
          Provides usage and performance statistics for local data stored directly
          on the Cohesity Cluster.
        title: Local Statistics.
        allOf:
        - $ref: '#/definitions/UsageAndPerformanceStats'
        x-nullable: true
      logicalStats:
        description: |-
          Specifies the total logical data size of all the local and
          Cloud Tier data stored by the Cohesity Cluster before the data is
          reduced by change-block tracking, compression and deduplication.
          The size of the data if the data is fully hydrated or expanded.
        title: Logical Statistics.
        allOf:
        - $ref: '#/definitions/LogicalStats'
        x-nullable: true
      usagePerfStats:
        description: |-
          Provides usage and performance statistics about the local data
          stored directly on the Cohesity Cluster and the remote data
          stored on a Cloud Tier for the Cohesity Cluster.
        title: Local and Cloud Tier Statistics.
        allOf:
        - $ref: '#/definitions/UsageAndPerformanceStats'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ClusterStatusResult:
    description: Specifies the result of getting the status of a Cluster.
    type: object
    title: Cluster Status Result.
    properties:
      clusterId:
        description: Specifies the ID of the Cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: Specifies the incarnation ID of the Cluster.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      currentOperation:
        description: |-
          Specifies the current operation being run on the Cluster.
          'kNone' indicates that there is no current operation taking place.
          'kDestroy' indicates that the Cluster is currently being destroyed.
          'kUpgrade' indicates that the Cluster is currently being upgraded.
          'kClean' indicates that the Cluster is being cleaned.
          'kRemoveNode' indicates that a Node is being removed from the Cluster.
          'kRestartServices' indicates that the services on the Cluster are currently
          being restarted.
        type: string
        enum:
        - kNone
        - kDestroy
        - kUpgrade
        - kClean
        - kRemoveNode
        - kRestartServices
        x-go-name: CurrentOperation
        x-nullable: true
      message:
        description: Specifies an optional message describing details of the Cluster
          status.
        type: string
        x-go-name: Message
        x-nullable: true
      name:
        description: Specifies the name of the Cluster.
        type: string
        x-go-name: Name
        x-nullable: true
      nodeStatuses:
        description: Specifies the status of each Node on the Cluster.
        type: array
        items:
          $ref: '#/definitions/NodeStatusResult'
        x-go-name: NodeStatuses
        x-nullable: true
      removalState:
        description: |-
          Specifies the current healing state of the Cluster.
          'kNoRemoval' indicates that there are no removal operations currently
          happening on the Cluster.
          'kNodeRemoval' indicates that there is a Node being removed from the
          Cluster.
          'kDiskRemoval' indicates that there is a Disk being removed from the
          Cluster.
          'kNodeAndDiskRemoval' indicates that there is a Node and a Disk being
          removed from the Cluster.
        type: string
        enum:
        - kNoRemoval
        - kNodeRemoval
        - kDiskRemoval
        - kNodeAndDiskRemoval
        x-go-name: RemovalState
        x-nullable: true
      servicesSynced:
        description: |-
          Specifies whether or not the services are synced with the list of
          stopped services.
        type: boolean
        x-go-name: ServicesSynced
        x-nullable: true
      softwareVersion:
        description: Specifies the software version of the Cluster.
        type: string
        x-go-name: SoftwareVersion
        x-nullable: true
      stoppedServices:
        description: |-
          Specifies the list of stopped services on the Cluster.
          'kApollo' is a service for reclaiming freed disk sectors on Nodes in the
          SnapFS distributed file system.
          'kBridge' is a service for managing the SnapFS distributed file system.
          'kGenie' is a service that is responsible for monitoring hardware health
          on the Cluster.
          'kGenieGofer' is a service that links the Genie service to other services
          on the Cluster.
          'kMagneto' is the data protection service of the Cohesity Data Platform.
          'kIris' is the service which serves REST API calls to the UI, CLI, and any
          scripts written by customers.
          'kIrisProxy' is a service that links the Iris service to other services
          on the Cluster.
          'kScribe' is the service responsible for storing filesystem metadata.
          'kStats' is the service that is responsible for retrieving and aggregating
          disk metrics across the Cluster.
          'kYoda' is an elastic search indexing service.
          'kAlerts' is a publisher and subscribing service for alerts.
          'kKeychain' is a service for managing disk encryption keys.
          'kLogWatcher' is a service that scans the log directory and reduces
          the number of logs if required.
          'kStatsCollector' is a service that periodically logs system stats.
          'kGandalf' is a distributed lock service and coordination manager.
          'kNexus' indicates the Nexus service. This is the service that is
          responsible for creation of Clusters and configuration of Nodes and
          networking.
          'kNexusProxy' is a service that links the Nexus service to other services
          on the Cluster.
          'kStorageProxy' is a service for accessing data on external entities.
          'kTricorder' is a diagnostic health testing service for Clusters.
          'kRtClient' is a reverse tunneling client service.
          'kVaultProxy' is a service for managing external targets that Clusters
          can be backed up to.
          'kSmbProxy' is an SMB protocol service.
          'kBridgeProxy' is the service that links the Bridge service to other
          services on the Cluster.
          'kLibrarian' is an elastic search indexing service.
          'kGroot' is a service for managing replication of SQL databases across
          multiple nodes in a Cluster.
          'kEagleAgent' is a service that is responsible for retrieving information
          on Cluster health.
          'kAthena' is a service for running distributed containerized applications
          on the Cohesity Data Platform.
          'kBifrostBroker' is a service for communicating with the Cohesity proxies
          for multitenancy.
          'kSmb2Proxy' is a new SMB protocol service.
          'kOs' can be specified in order to do a full reboot.
          'kAtom' is a service for receiving data for the Continuous Data Protection.
        type: array
        items:
          type: string
          enum:
          - kApollo
          - kBridge
          - kGenie
          - kGenieGofer
          - kMagneto
          - kIris
          - kIrisProxy
          - kScribe
          - kStats
          - kYoda
          - kAlerts
          - kKeychain
          - kLogWatcher
          - kStatsCollecter
          - kGandalf
          - kNexus
          - kNexusProxy
          - kStorageProxy
          - kTricorder
          - kRtClient
          - kVaultProxy
          - kSmbProxy
          - kBridgeProxy
          - kLibrarian
          - kGroot
          - kEagleAgent
          - kAthena
          - kBifrostBroker
          - kSmb2Proxy
          - kOs
          - kAtom
        x-go-name: StoppedServices
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CompareADObjectsResult_ADAttribute:
    type: object
    title: Represents an AD attribute(property).
    properties:
      attrFlags:
        description: Object result flags of type ADAttributeFlags.
        type: integer
        format: uint32
        x-go-name: AttrFlags
        x-nullable: true
      destValue:
        description: |-
          Destination attribute value if dest value exists
          (!ADAttributeFlags.kNotFound) and is different from source.
        x-nullable: true
        $ref: '#/definitions/CompareADObjectsResult_ADAttributeValue'
      ldapName:
        description: LDAP attribute name.
        type: string
        x-go-name: LdapName
        x-nullable: true
      sameValue:
        description: |-
          if the attribute values are same (ADAttributeFlags.kEqual), the value is
          put here to avoid duplication in 'source_value' and 'dest_value'.
        x-nullable: true
        $ref: '#/definitions/CompareADObjectsResult_ADAttributeValue'
      sourceValue:
        description: |-
          Source attribute value if source value exists
          (!ADAttributeFlags.kNotFound) and is different from destination.
        x-nullable: true
        $ref: '#/definitions/CompareADObjectsResult_ADAttributeValue'
      status:
        description: Error status for the attribute compare or value access.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
    x-go-package: magneto/agents/windows/stub/ad_param.pb
  CompareADObjectsResult_ADAttributeValue:
    type: object
    title: Represents an AD attribute value in string format.
    properties:
      valueFlags:
        description: Object result flags of type ADAttributeValueFlags.
        type: integer
        format: uint32
        x-go-name: ValueFlags
        x-nullable: true
      valueVec:
        description: |-
          String representation of attribute value. For single valued property,
          only one value will be present here. For multi-valued properties such as
          group membership, this field will contain values that are in same order
          as contained in AD. Each AD attribute value will be converted to string.
          If this property is not set, then the property has null value.
        type: array
        items:
          type: string
        x-go-name: ValueVec
        x-nullable: true
    x-go-package: magneto/agents/windows/stub/ad_param.pb
  CompareADObjectsResult_ADObject:
    type: object
    title: Represents an AD object record returned from object compare.
    properties:
      attributeVec:
        description: |-
          Array of AD attributes of AD object. This will contain distinct
          attributes from source and destination objects.
        type: array
        items:
          $ref: '#/definitions/CompareADObjectsResult_ADAttribute'
        x-go-name: AttributeVec
        x-nullable: true
      destGuid:
        description: |-
          Object guid from dest_server. If empty, compare could not find an AD
          object corresponding to 'source_guid' even after looking up based
          on source_guid, source DN or source SAM account name. The SAM is
          applicable only for account type objects.
        type: string
        x-go-name: DestGuid
        x-nullable: true
      destPropCount:
        description: |-
          Number of attributes in destination object including system properties
          compared. This count is useful for debugging.
        type: integer
        format: uint32
        x-go-name: DestPropCount
        x-nullable: true
      excludedPropCount:
        description: |-
          Number of attributes not compared due to
          ADCompareOptionFlags.kExcludeSysProps. This count is useful for
          debugging.
        type: integer
        format: uint32
        x-go-name: ExcludedPropCount
        x-nullable: true
      mismatchPropCount:
        description: |-
          Number of AD attributes compared based on 'ADCompareOptionFlagsType'
          flags and found to be mismatched. If this is non-zero, compared objects
          are different. If this is 0 ann'dest_guid' is empty, then object is
          missing.
        type: integer
        format: uint32
        x-go-name: MismatchPropCount
        x-nullable: true
      objectFlags:
        description: Object result flags of type ADObjectFlags.
        type: integer
        format: uint32
        x-go-name: ObjectFlags
        x-nullable: true
      sourceGuid:
        description: Object guid from $SourceServer. Guid string with or without '{}'
          braces.
        type: string
        x-go-name: SourceGuid
        x-nullable: true
      sourcePropCount:
        description: |-
          Number of attributes in source object including system properties
          compared. This count is useful for debugging.
        type: integer
        format: uint32
        x-go-name: SourcePropCount
        x-nullable: true
      status:
        description: |-
          Error status for object. This status will be set to 'kNotFound' when
          source_guid or dest_guid could not be resolved. To find out whether
          destination object is missing, use flag
          'ADObjectFlags.kDestinationNotFound'.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
    x-go-package: magneto/agents/windows/stub/ad_param.pb
  CompareAdObjectsRequest:
    description: Specifies the request to compare AD objects from Snapshot and Production
      AD.
    type: object
    title: Compare AD Objects Request.
    required:
    - RestoreTaskId
    - guidPairs
    properties:
      RestoreTaskId:
        description: |-
          Specifies the Restore Task Id corresponding to which we need to compare
          the AD objects.
        type: integer
        format: int64
        x-nullable: true
      allowEmptyDestGuids:
        description: |-
          Specifies the option to get object attributes from Snapshot AD when
          destination guid is missing in GuidPair. This helps to show attributes of
          AD object from Snapshot AD when the object is missing in Production AD.
        type: boolean
        x-go-name: AllowEmptyDestGuids
        x-nullable: true
      excludeSysAttributes:
        description: |-
          Specifies the option to exclude AD system attributes when comparing two AD
          object attributes. If the objects have same guid, most of the system
          attributes would match.If the AD object was recovered through a restore,
          then many system attributes will be different. Default compares all
          attributes.
        type: boolean
        x-go-name: ExcludeSysAttributes
        x-nullable: true
      filterNullValueAttributes:
        description: |-
          Specifies the option to not return attributes where source and destination
          values are null values. This reduces noise of the properties in the
          objects returned.
        type: boolean
        x-go-name: FilterNullValueAttributes
        x-nullable: true
      filterSameValueAttributes:
        description: |-
          Specifies the option to not return attributes where source and
          destination values are same. Use this flag to return only values
          that are different.
        type: boolean
        x-go-name: FilterSameValueAttributes
        x-nullable: true
      guidPairs:
        description: |-
          Specifies the GuidPair of the AD Objects which we want to compare
          from both Snapshot and Production AD.
        type: array
        items:
          $ref: '#/definitions/GuidPair'
        x-go-name: GuidPairs
        x-nullable: true
      quickCompare:
        description: |-
          Specifies the option to do quick compare of specified guid between Snapshot
          AD and Production AD. If at least one attribute mismatch is found, comparison
          stops and returns with AdObjectFlag kNotEqual.
        type: boolean
        x-go-name: QuickCompare
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ComparedADObject:
    description: |-
      Represents the details about an AD object and its properties.
      The attributes of the AD Object contain the information about whether
      they are equal on both Snapshot AD and Production AD as well as value of
      attribute on both Production and Snapshot AD.
    type: object
    title: ComparedADObject
    properties:
      adAttributes:
        description: Specifies the list of AD attributes for the AD object.
        type: array
        items:
          $ref: '#/definitions/AdAttribute'
        x-go-name: AdAttributes
        x-nullable: true
      adObjectFlags:
        description: |-
          Specifies the flags related to this AD Object.
          'kEqual' indicates all the attributes of the AD Object on the Snapshot
          and Production are equal.
          'kNotEqual' indicates atleast one of the attribute of the AD Object on the
          Snapshot and Production AD are not equal.
          'kRestorePasswordRequired' indicates the AD Object is of 'User' object class
          type. when restoring this object from Snapshot AD to Priduction AD,
          a password is required.
          'kMovedOnDestination' indicates the object has moved to another
          container or OU in production AD compared to AD snapshot. In this case,
          the distinguishedName will be different for these objects
          'kDestinationNotFound' indicates the object corresponding to dest_guid
          specified is missing from Production AD. Caller should check this flag
          and empty 'dest_guid' first to find out destination is missing.
          'kDisableSupported' indicates the enable and disable is supported on the AD
          Object. AD Objects of type 'User' and 'Computers' support this operation.
        type: array
        items:
          type: string
          enum:
          - kEqual
          - kNotEqual
          - kRestorePasswordRequired
          - kMovedOnDestination
          - kDestinationNotFound
          - kDisableSupported
        x-go-name: AdObjectFlags
        x-nullable: true
      destinationGuid:
        description: |-
          Specifies the guid of the object in the Production AD which is equivalent
          to the one in the Snapshot AD.
        type: string
        x-go-name: DestinationGuid
        x-nullable: true
      errorMessage:
        description: Specifies the error message while fetching the AD object.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      mismatchAttrCount:
        description: |-
          Specifies the number of attributes of AD Object mismatched on the
          Snapshot and Production AD.
        type: integer
        format: uint32
        x-go-name: MismatchAttrCount
        x-nullable: true
      sourceGuid:
        description: Specifies the guid of the AD object in the Snapshot AD.
        type: string
        x-go-name: SourceGuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ConnectorParameters:
    description: |-
      Specifies the parameters required to establish a connection with
      a particular environment.
    type: object
    title: Connector Parameters.
    properties:
      endpoint:
        description: |-
          Specify an IP address or URL of the environment.
          (such as the IP address of the vCenter Server for a VMware environment).
        type: string
        x-go-name: Endpoint
        x-nullable: true
      environment:
        description: |-
          Specifies the environment like VMware, SQL, where the
          Protection Source exists.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      id:
        description: |-
          Specifies a Unique id that is generated when the Source is registered.
          This is a convenience field that is used to maintain an index to different
          connection params.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      version:
        description: |-
          Version is updated each time the connector parameters are updated.
          This is used to discard older connector parameters.
        type: integer
        format: int64
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ConnectorParams:
    description: |-
      Message that encapsulates the various params required to establish a
      connection with a particular environment.
    type: object
    properties:
      additionalParams:
        description: |-
          Optional additional connector params might be needed to connect to an
          environment.
        x-nullable: true
        $ref: '#/definitions/AdditionalConnectorParams'
      agentEndpoint:
        description: |-
          For some of the environments connection to endpoint is done through an
          agent. This captures the agent endpoint information.
        type: string
        x-go-name: AgentEndpoint
        x-nullable: true
      agentPort:
        description: |-
          Optional agent port to use when connecting to the server.
          If this is not specified, then environment specific default port will be
          used.
        type: integer
        format: int32
        x-go-name: AgentPort
        x-nullable: true
      credentials:
        description: Credentials that will be used to login to the environment.
        x-nullable: true
        $ref: '#/definitions/Credentials'
      endpoint:
        description: |-
          The endpoint URL of the environment (such as the address of the vCenter
          instance for a VMware environment, etc).
        type: string
        x-go-name: Endpoint
        x-nullable: true
      entity:
        description: |-
          Optionally the entity associated with the endpoint can be passed.
          Information within the entity could be used in creation of an appropriate
          connector context.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      hostType:
        description: The host environment type. This is set for kPhysical type environment.
        type: integer
        format: int32
        x-go-name: HostType
        x-nullable: true
      id:
        description: |-
          A unique id associated with this connector params. This is a convenience
          field and is used to maintain an index to different connection params.
          This is generated at the time when the source is registered with Magneto.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      populateSubnetForAllClusterNodes:
        description: |-
          If set to true, inter agent communcation will be enabled and for every
          GetAgentInfo call we will fill subnet information of all the nodes in
          clustered entity.
        type: boolean
        x-go-name: PopulateSubnetForAllClusterNodes
        x-nullable: true
      port:
        description: |-
          Optional port to use when connecting to the server.
          If this is not specified, then environment specific default port will be
          used.
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
      tenantId:
        description: |-
          The tenant_id for the environment. This is used to remotely access
          connectors and executors via bifrost.
        type: string
        x-go-name: TenantId
        x-nullable: true
      type:
        description: The type of environment to connect to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      version:
        description: |-
          A version that is associated with the params. This is updated anytime
          any of the params change. This is used to discard older connector params.
        type: integer
        format: int64
        x-go-name: Version
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  Consumer:
    description: Consumer is the storage consumer of a group.
    type: object
    title: Consumer.
    properties:
      id:
        description: Specifies the id of the consumer.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the consumer.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the consumer.
          Type of the consumer can be one of the following three,

          'kViews', indicates the stats info of Views used per organization (tenant)
          per view box (storage domain).
          'kProtectionRuns', indicates the stats info of Protection Runs used per
          organization (tenant) per view box (storage domain).
          'kReplicationRuns', indicates the stats info of Replication In used per
          organization (tenant) per view box (storage domain).
          'kViewProtectionRuns', indicates the stats info of View Protection Runs used
          per organization (tenant) per view box (storage domain).
        type: string
        enum:
        - kViews
        - kProtectionRuns
        - kReplicationRuns
        - kViewProtectionRuns
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ConsumerStats:
    description: |-
      ConsumerStats is the stats of a single consumer. A consumer is a entity
      which consumes the storage space of a storage domain. A consumer can be a
      View, Protection Job or a Replication Job.
    type: object
    properties:
      consumerType:
        description: |-
          Specifies the type of the consumer.
          Type of the consumer can be one of the following three,

          'kViews', indicates the stats info of Views used per organization (tenant)
          per view box (storage domain).
          'kProtectionRuns', indicates the stats info of Protection Runs used per
          organization (tenant) per view box (storage domain).
          'kReplicationRuns', indicates the stats info of Replication In used per
          organization (tenant) per view box (storage domain).
          'kViewProtectionRuns', indicates the stats info of View Protection Runs used
          per organization (tenant) per view box (storage domain).
        type: string
        enum:
        - kViews
        - kProtectionRuns
        - kReplicationRuns
        - kViewProtectionRuns
        x-go-name: ConsumerType
        x-nullable: true
      groupList:
        description: Specifies a list of groups associated to this consumer.
        type: array
        items:
          $ref: '#/definitions/StatsGroup'
        x-go-name: GroupList
        x-nullable: true
      id:
        description: Specifies the id of the consumer.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the consumer.
        type: string
        x-go-name: Name
        x-nullable: true
      protectionEnvironment:
        description: |-
          Specifies the source environment of the protection job.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: ProtectionEnvironment
        x-nullable: true
      protectionPolicyName:
        description: |-
          Specifies the name of the protection policy for 'kProtectionRuns' and
          'kReplicationRuns' consumer.
        type: string
        x-go-name: ProtectionPolicyName
        x-nullable: true
      quotaHardLimitBytes:
        description: |-
          Specifies the hard limit of logical quota of the consumer. This field
          will be returned only if consumer type is view.
        type: integer
        format: int64
        x-go-name: QuotaHardLimitBytes
        x-nullable: true
      schemaInfoList:
        description: Specifies a list of schemaInfos of the consumer.
        type: array
        items:
          $ref: '#/definitions/UsageSchemaInfo'
        x-go-name: SchemaInfoList
        x-nullable: true
      stats:
        description: Specifies details of statistics of the consumer.
        x-nullable: true
        $ref: '#/definitions/DataUsageStats'
    x-go-package: cohesity/iris/server/data/public
  ContinuousSchedule:
    description: |-
      Specifies the time interval between two Job Runs of a continuous backup
      schedule and any blackout periods when new Job Runs should NOT be started.
    type: object
    title: Continuous Schedule.
    properties:
      backupIntervalMins:
        description: |-
          If specified, this field defines the time interval in minutes when
          new Job Runs are started.
        type: integer
        format: int64
        x-go-name: BackupIntervalMins
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CopyRun:
    description: |-
      Specifies details about the Copy Run for a backup run of a Job Run.
      A Copy task copies snapshots resulted from a backup run to a snapshot
      target which could be 'kLocal', 'kArchival', or 'kRemote'.
    type: object
    title: Copy Run Task.
    properties:
      copySnapshotTasks:
        description: |-
          Specifies the status information of each task that copies the snapshot
          taken for a Protection Source.
        type: array
        items:
          $ref: '#/definitions/CopySnapshotTaskStatus'
        x-go-name: CopySnapshotTasks
        x-nullable: true
      error:
        description: |-
          Specifies if an error occurred (if any) while running this task.
          This field is populated when the status is equal to 'kFailure'.
        type: string
        x-go-name: Error
        x-nullable: true
      expiryTimeUsecs:
        description: |-
          Specifies expiry time of the copies of the snapshots in this Protection
          Run.
        type: integer
        format: int64
        x-go-name: ExpiryTimeUsecs
        x-nullable: true
      holdForLegalPurpose:
        description: |-
          Specifies whether legal hold is enabled on this run. It is true if the
          run is put on legal hold. Independent of this flag, some of the entities
          may be on legal hold.
        type: boolean
        x-go-name: HoldForLegalPurpose
        x-nullable: true
      legalHoldings:
        description: Specifies the list of Protection Source Ids and the legal hold
          status.
        type: array
        items:
          $ref: '#/definitions/LegalHoldings'
        x-go-name: LegalHoldings
        x-nullable: true
      runStartTimeUsecs:
        description: Specifies start time of the copy run.
        type: integer
        format: int64
        x-go-name: RunStartTimeUsecs
        x-nullable: true
      stats:
        description: Specifies the aggregated information of all the copy tasks.
        x-nullable: true
        $ref: '#/definitions/CopyRunStats'
      status:
        description: |-
          Specifies the aggregated status of copy tasks such as 'kRunning',
          'kSuccess', 'kFailure' etc.
          'kAccepted' indicates the task is queued to run but not yet running.
          'kRunning' indicates the task is running.
          'kCanceling' indicates a request to cancel the task has occurred but
          the task is not yet canceled.
          'kCanceled' indicates the task has been canceled.
          'kSuccess' indicates the task was successful.
          'kFailure' indicates the task failed.
          'kWarning' indicates the task has finished with warning.
          'kOnHold' indicates the task is kept onHold.
          'kMissed' indicates the task is missed.
        type: string
        enum:
        - kAccepted
        - kRunning
        - kCanceling
        - kCanceled
        - kSuccess
        - kFailure
        - kWarning
        - kOnHold
        - kMissed
        x-go-name: Status
        x-nullable: true
      target:
        description: |-
          Specifies the target of the copy task such as an external target or a
          Remote Cohesity Cluster.
        x-nullable: true
        $ref: '#/definitions/SnapshotTargetSettings'
      taskUid:
        description: Specifies a globally unique id of the copy task.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      userActionMessage:
        description: |-
          Specifies a message to the user if any manual intervention is needed to
          make forward progress for the archival task. This message is mainly
          relevant for tape based archival tasks where a backup admin might be
          asked to load a new media when the tape library does not have any more
          media to use.
        type: string
        x-go-name: UserActionMessage
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CopyRunStats:
    description: |-
      Stats for one copy task or aggregated stats of a Copy Run in a
      Protection Job Run.
    type: object
    properties:
      endTimeUsecs:
        description: |-
          Specifies the time when this replication ended. If not set, then the
          replication has not ended yet.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      isIncremental:
        description: Specifies whether this archival is incremental for archival targets.
        type: boolean
        x-go-name: IsIncremental
        x-nullable: true
      logicalBytesTransferred:
        description: |-
          Specifies the number of logical bytes transferred for this replication
          so far. This value can never exceed the total logical size of the
          replicated view.
        type: integer
        format: int64
        x-go-name: LogicalBytesTransferred
        x-nullable: true
      logicalSizeBytes:
        description: |-
          Specifies the total amount of logical data to be transferred for this
          replication.
        type: integer
        format: int64
        x-go-name: LogicalSizeBytes
        x-nullable: true
      logicalTransferRateBps:
        description: |-
          Specifies average logical bytes transfer rate in bytes per second for
          archchival targets.
        type: integer
        format: int64
        x-go-name: LogicalTransferRateBps
        x-nullable: true
      physicalBytesTransferred:
        description: |-
          Specifies the number of physical bytes sent over the wire for
          replication targets.
        type: integer
        format: int64
        x-go-name: PhysicalBytesTransferred
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the time when this replication was started. If not set, then
          replication has not been started yet.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CopySnapshotTaskStatus:
    description: |-
      Specifies the status of the copy task that copies the snapshot of a
      Protection Source object to a target.
    type: object
    title: Copy Snapshot Task Status.
    properties:
      error:
        description: |-
          Specifies if an error occurred (if any) while running this task.
          This field is populated when the status is equal to 'kFailure'.
        type: string
        x-go-name: Error
        x-nullable: true
      source:
        description: |-
          Specifies the source object whose snapshot is replicated.
          This is specified for replication targets.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      stats:
        description: Specifies the stats of the replication or the archival task.
        x-nullable: true
        $ref: '#/definitions/CopyRunStats'
      status:
        description: |-
          Specifies the status of the source object being protected.
          'kAccepted' indicates the task is queued to run but not yet running.
          'kRunning' indicates the task is running.
          'kCanceling' indicates a request to cancel the task has occurred but
          the task is not yet canceled.
          'kCanceled' indicates the task has been canceled.
          'kSuccess' indicates the task was successful.
          'kFailure' indicates the task failed.
          'kWarning' indicates the task has finished with warning.
          'kOnHold' indicates the task is kept onHold.
          'kMissed' indicates the task is missed.
        type: string
        enum:
        - kAccepted
        - kRunning
        - kCanceling
        - kCanceled
        - kSuccess
        - kFailure
        - kWarning
        - kOnHold
        - kMissed
        x-go-name: Status
        x-nullable: true
      taskEndTimeUsecs:
        description: |-
          Specifies the end time of the copy task. The end time
          is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: TaskEndTimeUsecs
        x-nullable: true
      taskStartTimeUsecs:
        description: |-
          Specifies the start time of the copy task. The start time
          is specified as a Unix epoch Timestamp (in microseconds).
          Copy run task is started after completing backup tasks.
          It may spawn sub-tasks to copy or replicate individual snapshots.
        type: integer
        format: int64
        x-go-name: TaskStartTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CouchbaseBackupJobParams:
    description: |-
      Contains any additional couchbase environment specific backup params at the
      job level.
    type: object
    x-go-package: magneto/base/nosql.pb
  CouchbaseBucket:
    description: Specifies an Object containing information about a couchbase Bucket.
    type: object
    title: Couchbase Bucket Info.
    properties:
      bucketType:
        description: Type of this bucket.
        type: string
        x-go-name: BucketType
        x-nullable: true
      documentCount:
        description: Number of documents in this bucket.
        type: integer
        format: int64
        x-go-name: DocumentCount
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CouchbaseCluster:
    description: Specifies an Object containing information about a couchbase cluster.
    type: object
    title: Couchbase Cluster Info.
    properties:
      seeds:
        description: Seeds of this Couchbase Cluster.
        type: array
        items:
          type: string
        x-go-name: Seeds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CouchbaseConnectParams:
    description: |-
      Specifies an Object containing information about a registered couchbase
      source.
    type: object
    title: Couchbase Connect Params.
    properties:
      carrierDirectPort:
        description: Specifies the Carrier direct/sll port.
        type: integer
        format: int32
        x-go-name: CarrierDirectPort
        x-nullable: true
      httpDirectPort:
        description: Specifies the HTTP direct/sll port.
        type: integer
        format: int32
        x-go-name: HttpDirectPort
        x-nullable: true
      requiresSsl:
        description: Specifies whether this cluster allows connection through SSL
          only.
        type: boolean
        x-go-name: RequiresSsl
        x-nullable: true
      seeds:
        description: Specifies the Seeds of this Couchbase Cluster.
        type: array
        items:
          type: string
        x-go-name: Seeds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CouchbaseProtectionSource:
    description: Specifies an Object representing Couchbase.
    type: object
    title: Couchbase Protection Source.
    properties:
      bucketInfo:
        description: |-
          Information of a Couchbase Bucket, only valid for an entity of type
          kBucket.
        x-nullable: true
        $ref: '#/definitions/CouchbaseBucket'
      clusterInfo:
        description: |-
          Information of a couchbase cluster, only valid for an entity of type
          kCluster.
        x-nullable: true
        $ref: '#/definitions/CouchbaseCluster'
      name:
        description: Specifies the instance name of the Couchbase entity.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the managed Object in Couchbase Protection Source.
          Specifies the type of an Couchbase source entity.
          'kCluster' indicates a Couchbase cluster distributed over several physical
          nodes.
          'kBucket' indicates a bucket within the Couchbase environment.
        type: string
        enum:
        - kCluster
        - kBucket
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID for the Couchbase entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CouchbaseRecoverJobParams:
    description: |-
      Contains any additional couchbase environment specific params for the
      recover job.
    type: object
    properties:
      suffix:
        description: A suffix that is to be applied to all recovered entities
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  CountByTier:
    description: CountByTier provides the disk count of each storage tier.
    type: object
    title: Disk count By Tier.
    properties:
      diskCount:
        description: DiskCount is the disk number of the storage tier.
        type: integer
        format: int64
        x-go-name: DiskCount
        x-nullable: true
      storageTier:
        description: |-
          StorageTier is the type of StorageTier.
          StorageTierType represents the various values for the Storage Tier.
          'kPCIeSSD' indicates storage tier type of Pci Solid State Drive.
          'kSATAHDD' indicates storage tier type of SATA Solid State Drive.
          'kSATAHDD' indicates storage tier type of SATA Hard Disk Drive.
          'kCLOUD' indicates storage tier type of Cloud.
        type: string
        enum:
        - kPCIeSSD
        - kSATASSD
        - kSATAHDD
        - kCLOUD
        x-go-name: StorageTier
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateActiveDirectoryEntryParams:
    type: object
    title: Specifies the params to join a Microsoft Active Directory domain.
    properties:
      domainName:
        description: Specifies the fully qualified domain name (FQDN) of an Active
          Directory.
        type: string
        x-go-name: DomainName
        x-nullable: true
      fallbackUserIdMappingInfo:
        description: |-
          Specifies the fallback id mapping info which is used when an ID mapping
          for a user is not found via the above IdMappingInfo. Only supported for
          two types of fallback mapping types - 'kRid' and 'kFixed'.
        x-nullable: true
        $ref: '#/definitions/UserIdMapping'
      ignoredTrustedDomains:
        description: |-
          Specifies the list of trusted domains that were set by the user to be
          ignored during trusted domain discovery.
        type: array
        items:
          type: string
        x-go-name: IgnoredTrustedDomains
        x-nullable: true
      ldapProviderId:
        description: Specifies the LDAP provider id which is map to this Active Directory
        type: integer
        format: int64
        x-go-name: LdapProviderId
        x-nullable: true
      machineAccounts:
        description: |-
          Array of Machine Accounts.

          Specifies an array of computer names used to identify the Cohesity
          Cluster on the domain.
        type: array
        items:
          type: string
        x-go-name: MachineAccounts
        x-nullable: true
      ouName:
        description: Specifies an optional Organizational Unit name.
        type: string
        x-go-name: OuName
        x-nullable: true
      overwriteExistingAccounts:
        description: |-
          Specifies whether the specified machine accounts should overwrite the
          existing machine accounts in this domain.
        type: boolean
        x-go-name: OverwriteExistingAccounts
        x-nullable: true
      password:
        description: Specifies the password for the specified userName.
        type: string
        x-go-name: Password
        x-nullable: true
      preferredDomainControllers:
        description: |-
          Specifies Map of Active Directory domain names to its preferred domain
          controllers.
        type: array
        items:
          $ref: '#/definitions/PreferredDomainController'
        x-go-name: PreferredDomainControllers
        x-nullable: true
      taskPath:
        description: Specifies the task path for AD joining task.
        type: string
        x-go-name: TaskPath
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      trustedDomains:
        description: Specifies the trusted domains of the Active Directory domain.
        type: array
        items:
          type: string
        x-go-name: TrustedDomains
        x-nullable: true
        readOnly: true
      trustedDomainsEnabled:
        description: Specifies whether Trusted Domain discovery is disabled.
        type: boolean
        x-go-name: TrustedDomainsEnabled
        x-nullable: true
      unixRootSid:
        description: |-
          Specifies the SID of the Active Directory domain user to be mapped to
          Unix root user.
        type: string
        x-go-name: UnixRootSid
        x-nullable: true
      userIdMappingInfo:
        description: |-
          Specifies the information about how the Unix and Windows users are mapped
          for this domain.
        x-nullable: true
        $ref: '#/definitions/UserIdMapping'
      userName:
        description: Specifies a userName that has administrative privileges in the
          domain.
        type: string
        x-go-name: UserName
        x-nullable: true
      workgroup:
        description: Specifies an optional Workgroup name.
        type: string
        x-go-name: Workgroup
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateApiKeyParams:
    description: Specifies the parameters to create an API key.
    type: object
    title: Parameters to create an API key.
    required:
    - name
    properties:
      expiringTimeMsecs:
        description: Specifies a time stamp when the API key will expire in milli
          seconds.
        type: integer
        format: int64
        x-go-name: ExpiringTimeMsecs
        x-nullable: true
      isActive:
        description: |-
          Specifies if the API key is active. Only an active and not expired API key
          can be used for authentication.
        type: boolean
        x-go-name: IsActive
        x-nullable: true
      name:
        description: Specifies the name of API key.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateBondParameters:
    description: Specifies the parameters needed to create a bond.
    type: object
    title: Create Bond Parameters.
    required:
    - name
    - slaves
    properties:
      bondingMode:
        description: |-
          Specifies the bonding mode to use for this bond. If not specified,
          this value will default to 'kActiveBackup'.
          'kActiveBackup' indicates active backup bonding mode.
          'k802_3ad' indicates 802.3ad bonding mode.
        type: string
        enum:
        - kActiveBackup
        - k802_3ad
        x-go-name: BondingMode
        x-nullable: true
      name:
        description: Specifies a unique name to identify the bond being created.
        type: string
        x-go-name: Name
        x-nullable: true
      slaves:
        description: Specifies the names of the slaves of this bond.
        type: array
        items:
          type: string
        x-go-name: Slaves
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateBondResult:
    description: Specifies the result of a request to create a new bond.
    type: object
    title: Create Bond Result.
    properties:
      message:
        description: Specifies a message describing the result of the operation.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateCloudClusterParameters:
    description: Specifies the parameters needed for creation of a new Cluster.
    type: object
    title: Create Cloud Cluster Parameters.
    required:
    - clusterName
    - networkConfig
    - nodeIps
    properties:
      clusterName:
        description: Specifies the name of the new Cluster.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      encryptionConfig:
        description: Specifies the encryption configuration parameters.
        x-nullable: true
        $ref: '#/definitions/EncryptionConfiguration'
      ipPreference:
        description: Specifies IP preference.
        type: integer
        format: int32
        x-go-name: IpPreference
        x-nullable: true
      metadataFaultTolerance:
        description: Specifies the metadata fault tolerance.
        type: integer
        format: int32
        x-go-name: MetadataFaultTolerance
        x-nullable: true
      networkConfig:
        description: Specifies the network configuration parameters.
        x-nullable: true
        $ref: '#/definitions/CloudNetworkConfiguration'
      nodeIps:
        description: Specifies the configuration for the nodes in the new cluster.
        type: array
        items:
          type: string
        x-go-name: NodeIps
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateClusterResult:
    description: |-
      Specifies the immediate result of a Cluster creation request. Contains
      validation results for each node. If the request is valid, it also
      indicates that the individual node bringup operation is started in
      the background.
    type: object
    title: Create Cluster Result.
    properties:
      clusterId:
        description: Specifies the ID of the new Cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterName:
        description: Specifies the name of the new Cluster.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      clusterSwVersion:
        description: Specifies the software version of the new Cluster.
        type: string
        x-go-name: ClusterSwVersion
        x-nullable: true
      healthyNodes:
        description: |-
          Specifies the status of the Nodes in the Cluster. All Nodes that
          are accepted to the Cluster are appended to this list.
        type: array
        items:
          $ref: '#/definitions/NodeStatus'
        x-go-name: HealthyNodes
        x-nullable: true
      incarnationId:
        description: Specifies the Incarnation ID of the new Cluster.
        type: integer
        format: int64
        x-go-name: IncarnationId
        x-nullable: true
      message:
        description: Specifies an optional message field.
        type: string
        x-go-name: Message
        x-nullable: true
      unhealthyNodes:
        description: |-
          Specifies the status of the Nodes in the Cluster. All Nodes that are
          not accepted to the Cluster are appended to this list.
        type: array
        items:
          $ref: '#/definitions/NodeStatus'
        x-go-name: UnhealthyNodes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateIdpConfigurationRequest:
    description: Specifies the configuration for an IdP service to be created.
    type: object
    title: Create IdP Configuration Request.
    properties:
      allowLocalAuthentication:
        description: |-
          Specifies whether to allow local authentication. When IdP is configured,
          only IdP users are allowed to login to the Cluster. Local login is
          disabled except for users with admin role. If this flag is set to true,
          local (non-IdP) logins are allowed for all local and AD users. Local or
          AD users with admin role can login always independent of this flag's
          setting.
        type: boolean
        x-go-name: AllowLocalAuthentication
        x-nullable: true
      certificate:
        description: |-
          Specifies the certificate generated for the app by the IdP service when
          the Cluster is registered as an app. This is required to verify the
          SAML response.
        type: string
        x-go-name: Certificate
        x-nullable: true
      certificateFilename:
        description: Specifies the filename used to upload the certificate.
        type: string
        x-go-name: CertificateFilename
        x-nullable: true
      domain:
        description: Specifies a unique name for this IdP configuration.
        type: string
        x-go-name: Domain
        x-nullable: true
      enable:
        description: |-
          Specifies a flag to enable or disable this IdP service. When it is set
          to true, IdP service is enabled. When it is set to false, IdP service
          is disabled. When an IdP service is created, it is set to true.
        type: boolean
        x-go-name: Enable
        x-nullable: true
      issuerId:
        description: |-
          Specifies the IdP provided Issuer ID for the app.
          For example, exkh1aov1nhHrgFhN0h7.
        type: string
        x-go-name: IssuerId
        x-nullable: true
      name:
        description: Specifies the name of the vendor providing IdP service.
        type: string
        x-go-name: Name
        x-nullable: true
      roles:
        description: |-
          Specifies a list of roles assigned to an IdP user if samlAttributeName is
          not given.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      samlAttributeName:
        description: |-
          Specifies the SAML attribute name that contains a comma separated list
          of Cluster roles. Either this field or roles must be set. This field
          takes higher precedence than the roles field.
        type: string
        x-go-name: SamlAttributeName
        x-nullable: true
      signRequest:
        description: |-
          Specifies whether to sign the SAML request or not. When it is set
          to true, SAML request will be signed. When it is set to false, SAML
          request is not signed. Default is false. Set this flag to true if
          the IdP site is configured to expect the SAML request from the Cluster
          signed. If this is set to true, users must get the Cluster's certificate
          and upload it on the IdP site.
        type: boolean
        x-go-name: SignRequest
        x-nullable: true
      ssoUrl:
        description: |-
          Specifies the SSO URL of the IdP service for the customer. This is the
          URL given by IdP when the customer created an account. Customers may use
          this for several clusters that are registered with on IdP site.
          For example, dev-332534.oktapreview.com
        type: string
        x-go-name: SsoUrl
        x-nullable: true
      tenantId:
        description: |-
          Specifies the Tenant Id if the IdP is configured for a Tenant. If this is
          not set, this IdP configuration is used for the Cluster level users and
          for all users of Tenants not having an IdP configuration.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateIpConfigParameters:
    description: Specifies the parameters needed for an ipconfig request.
    type: object
    title: Create IP Config Parameters.
    required:
    - name
    properties:
      ips:
        description: Specifies the interface ips.
        type: array
        items:
          type: string
        x-go-name: Ips
        x-nullable: true
      mtu:
        description: Specifies the interface mtu.
        type: integer
        format: int32
        x-go-name: Mtu
        x-nullable: true
      name:
        description: Specifies the interface name.
        type: string
        x-go-name: Name
        x-nullable: true
      role:
        description: |-
          Specifies the interface role.
          'kPrimary' indicates a primary role.
          'kSecondary' indicates a secondary role.
        type: string
        enum:
        - kPrimary
        - kSecondary
        x-go-name: Role
        x-nullable: true
      subnetGateway:
        description: Specifies the interface gateway.
        type: string
        x-go-name: SubnetGateway
        x-nullable: true
      subnetMask:
        description: Specifies the interface subnet mask.
        type: string
        x-go-name: SubnetMask
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateIpConfigResult:
    description: Specifies the result of a request to create an ipconfig entry.
    type: object
    title: Create IP Config Result.
    properties:
      message:
        description: |-
          Specifies a message describing the result of a request to create an
          ipconfig entry.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreatePhysicalClusterParameters:
    description: Specifies the parameters needed for creation of a new Cluster.
    type: object
    title: Create Physical Cluster Parameters.
    required:
    - clusterName
    - networkConfig
    - nodeConfigs
    - ipmiConfig
    properties:
      clusterName:
        description: Specifies the name of the new Cluster.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      encryptionConfig:
        description: Specifies the encryption configuration parameters.
        x-nullable: true
        $ref: '#/definitions/EncryptionConfiguration'
      ipPreference:
        description: Specifies IP preference.
        type: integer
        format: int32
        x-go-name: IpPreference
        x-nullable: true
      ipmiConfig:
        description: Specifies the IPMI configuration parameters.
        x-nullable: true
        $ref: '#/definitions/IpmiConfiguration'
      metadataFaultTolerance:
        description: Specifies the metadata fault tolerance.
        type: integer
        format: int32
        x-go-name: MetadataFaultTolerance
        x-nullable: true
      networkConfig:
        description: Specifies the network configuration parameters.
        x-nullable: true
        $ref: '#/definitions/NetworkConfiguration'
      nodeConfigs:
        description: Specifies the configuration for the nodes in the new cluster.
        type: array
        items:
          $ref: '#/definitions/PhysicalNodeConfiguration'
        x-go-name: NodeConfigs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateRemoteVaultRestoreTaskParameters:
    description: |-
      Specifies settings required to create a task that restores the
      index and/or the Snapshots of a Protection Job from a remote Vault
      to the current Cluster.
    type: object
    title: Create Remote Vault Restore Task Request.
    required:
    - taskName
    - searchJobUid
    - vaultId
    properties:
      glacierRetrievalType:
        description: |-
          Specifies the way data needs to be retrieved from the external target.
          This information will be filled in by Iris and Magneto will pass it along
          to the Icebox as it is to support bulk retrieval from Glacier.
          Specifies the type of Restore Task.

          'kStandard' specifies retrievals that allow to access any of your archives
          within several hours. Standard retrievals typically complete within 3–5
          hours. This is the default option for retrieval requests that do not specify
          the retrieval option.
          'kBulk' specifies retrievals that are Glacier’s lowest-cost retrieval
          option, which can be used to retrieve large amounts, even petabytes, of data
          inexpensively in a day. Bulk retrieval typically complete within 5–12 hours.
          'kExpedited' specifies retrievals that allows to quickly access your data
          when occasional urgent requests for a subset of archives are required. For
          all but the largest archives (250 MB+), data accessed using Expedited
          retrievals are typically made available within 1–5 minutes.
        type: string
        enum:
        - kStandard
        - kBulk
        - kExpedited
        x-go-name: GlacierRetrievalType
        x-nullable: true
      restoreObjects:
        description: |-
          Array of Restore Objects.

          Specifies the list of Snapshots and the index to be restored from the
          remote Vault. The data on the remote Vault may have been
          originally archived from multiple remote Clusters.
        type: array
        items:
          $ref: '#/definitions/IndexAndSnapshots'
        x-go-name: RestoreObjects
        x-nullable: true
      searchJobUid:
        description: Specifies the unique id of the remote Vault search Job.
        title: Search Job Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      taskName:
        description: Specifies a name of the restore task.
        type: string
        x-go-name: TaskName
        x-nullable: true
      vaultId:
        description: |-
          Specifies the id of the Vault that contains the index and
          Snapshots to restore to the current Cluster.
          This is the id assigned by the Cohesity Cluster when Vault was
          registered as an External Target.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateRemoteVaultSearchJobParameters:
    description: |-
      Specifies settings required to create a search of a
      remote Vault for data that has been archived from other Clusters.
    type: object
    title: Create Remote Vault Search Request.
    required:
    - searchJobName
    - vaultId
    properties:
      clusterMatchString:
        description: |-
          Filter by specifying a Cluster name prefix string.
          Only Clusters with names that start with this prefix string are returned
          in the search result.
          If not set, all Clusters archiving data to the Vault
          are returned in the search results.
        type: string
        x-go-name: ClusterMatchString
        x-nullable: true
      encryptionKeys:
        description: |-
          Array of Encryption Keys.

          Specifies an optional list of encryption keys that may be needed to
          search and restore data that was archived to a remote Vault.
          Archived data cannot be searched or restored without the
          corresponding encryption key used by the original Cluster
          to archive the data.
          Encryption keys can be uploaded using the REST API
          public/remoteVaults/encryptionKeys operation.
          If the key is already uploaded, this field does not need to be
          specified.
        type: array
        items:
          $ref: '#/definitions/VaultEncryptionKey'
        x-go-name: EncryptionKeys
        x-nullable: true
      endTimeUsecs:
        description: |-
          Filter by a end time specified as a Unix epoch Timestamp
          (in microseconds). Only Job Runs that completed before the specified
          end time are included in the search results.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      jobMatchString:
        description: |-
          Filter by specifying a Protection Job name prefix string.
          Only Protection Jobs with names that start with this prefix string
          are returned in the search result.
          If not set, all Protection Jobs archiving data to the Vault
          are returned in the search results.
        type: string
        x-go-name: JobMatchString
        x-nullable: true
      searchJobName:
        description: Specifies the search Job name.
        type: string
        x-go-name: SearchJobName
        x-nullable: true
      startTimeUsecs:
        description: |-
          Filter by a start time specified as a Unix epoch Timestamp
          (in microseconds). Only Job Runs that started after the specified
          time are included in the search results.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      vaultId:
        description: |-
          Specifies the id of the Vault to search. This id was assigned by the
          local Cohesity Cluster when Vault was registered as an External Target.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateViewBoxParams:
    description: Provides details about the Storage Domain (View Box).
    type: object
    title: Storage Domain (View Box) Request.
    required:
    - name
    - clusterPartitionId
    properties:
      adDomainName:
        description: Specifies an active directory domain that this view box is mapped
          to.
        type: string
        x-go-name: AdDomainName
        x-nullable: true
      clientSubnetWhiteList:
        description: |-
          Array of Subnets.

          Specifies the Subnets from which this Storage Domain (View Box) accepts
          requests.
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: ClientSubnetWhitelist
        x-nullable: true
      cloudDownWaterfallThresholdPct:
        description: |-
          Specifies the cloud down water-fall threshold percentage. This indicates
          how full should a viewbox at least be before we down water-fall its data
          to cloud tier. If this field is set, the physical quota limit must be set
          also and will be used as viewbox capacity.
        type: integer
        format: int32
        x-go-name: CloudDownWaterfallThresholdPct
        x-nullable: true
      cloudDownWaterfallThresholdSecs:
        description: |-
          Specifies the cloud down water-fall threshold seconds. This indicates
          what's the time threshold on water-falling data to cloud tier.
        type: integer
        format: int32
        x-go-name: CloudDownWaterfallThresholdSecs
        x-nullable: true
      clusterPartitionId:
        description: |-
          Specifies the Cluster Partition id where the Storage Domain (View Box) is
          located.
        type: integer
        format: int64
        x-go-name: ClusterPartitionId
        x-nullable: true
      defaultUserQuotaPolicy:
        description: |-
          Specifies an optional quota policy/limits that are inherited by all users
          within the views in this viewbox.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      defaultViewQuotaPolicy:
        description: |-
          Specifies an optional default logical quota limit (in bytes)
          for the Views in this Storage Domain (View Box).
          (Logical data is when the data is fully hydrated and expanded.)
          However, this inherited quota can be overwritten at the View level.
          A new write is not allowed if the Storage Domain (View Box) will exceed
          the specified quota.
          However, it takes time for the Cohesity Cluster to calculate
          the usage across Nodes, so the limit may be exceeded by a small amount.
          In addition, if the limit is increased or data is removed,
          there may be delay before the Cohesity Cluster allows more data
          to be written to the Storage Domain (View Box), as the Cluster is
          calculating the usage across Nodes.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      directArchiveEnabled:
        description: |-
          Specifies whether this viewbox can be used as a staging area while copying
          a largedataset that can't fit on the cluster to an external target. The
          amount of data that can be stored on the viewbox can be specified using
          'physical_quota'.
        type: boolean
        x-go-name: DirectArchiveEnabled
        x-nullable: true
      ldapProviderId:
        description: |-
          When set, the following provides the LDAP provider the view box is
          mapped to. For any view from this view box, when accessed via NFS the
          following LDAP provider is looked up for getting Unix IDs of the
          corresponding user. Similarly, when a view is accessed via SMB and if
          the AD user's domain matches with the view box's AD, the following LDAP
          provider will be used to lookup Unix IDs for the corresponding AD user.
          Additionally there is also a mapping between LDAP provider and AD domain
          that is stored in AD provider config. It will be used if AD is not set
          on the view box.
        type: integer
        format: int64
        x-go-name: LdapProviderId
        x-nullable: true
      name:
        description: Specifies the name of the Storage Domain (View Box).
        type: string
        x-go-name: Name
        x-nullable: true
      nisDomainNameVec:
        description: Specifies the NIS domain that this view box is mapped to.
        type: array
        items:
          type: string
        x-go-name: NisDomainNameVec
        x-nullable: true
      physicalQuota:
        description: |-
          Specifies an optional quota limit (in bytes) for the physical
          usage of this Storage Domain (View Box).
          This quota limit defines a physical limit for size of the data that
          can be physically stored on the Storage Domain (View Box), after the data
          has been reduced by change block tracking, compression and deduplication.
          The physical usage is the aggregate sum of the data stored for this
          Storage Domain (View Box) on all disks in the Cluster.
          (The usage includes Cloud Tier data and user data.)
          A new write is not allowed if the Storage Domain (View Box) will exceed
          the specified quota. However, it takes time for the Cohesity Cluster to
          calculate the usage across Nodes, so the limit may be exceeded by a small
          amount. In addition, if the limit is increased or data is removed,
          there may be a delay before the Cohesity Cluster allows more data
          to be written to the Storage Domain (View Box), as the Cluster is
          calculating the usage across Nodes.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      s3BucketsAllowed:
        description: |-
          Specifies whether creation of a S3 bucket is allowed in this
          Storage Domain (View Box).
          When a new S3 bucket creation request arrives, we'll look at all the View
          Boxes and the first Storage Domain (View Box) that allows creating S3
          buckets in it will be the one where the bucket will be placed.
        type: boolean
        x-go-name: S3BucketsAllowed
        x-nullable: true
      storagePolicy:
        description: Specifies the storage options applied to the Storage Domain (View
          Box).
        x-nullable: true
        $ref: '#/definitions/StoragePolicy'
      tenantIdVec:
        description: |-
          Optional ids for the tenants that this view box belongs. This must be
          checked before granting access to users. Unless the cluster enables view
          box sharing between tenants is allowed, there shall be at most one item
          in this list. Note that if all tenant may be deleted - such viewboxes
          must be garbage collected. This is currently done by a background thread
          in iris.
        type: array
        items:
          type: string
        x-go-name: TenantIdVec
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateViewRequest:
    description: Specifies the information required for creating a new View.
    type: object
    title: Create View Request.
    required:
    - name
    - viewBoxId
    properties:
      accessSids:
        description: |-
          Array of Security Identifiers (SIDs)

          Specifies the list of security identifiers (SIDs) for the restricted
          Principals who have access to this View.
        type: array
        items:
          type: string
        x-go-name: AccessSids
        x-nullable: true
      antivirusScanConfig:
        description: Specifies the antivirus scan config settings for this View.
        x-nullable: true
        $ref: '#/definitions/AntivirusScanConfig'
      caseInsensitiveNamesEnabled:
        description: |-
          Specifies whether to support case insensitive file/folder names. This
          parameter can only be set during create and cannot be changed.
        type: boolean
        x-go-name: CaseInsensitiveNamesEnabled
        x-nullable: true
      description:
        description: Specifies an optional text description about the View.
        type: string
        x-go-name: Description
        x-nullable: true
      enableFastDurableHandle:
        description: |-
          Specifies whether fast durable handle is enabled. If enabled, view open
          handle will be kept in memory, which results in a higher performance. But
          the handles cannot be recovered if node or service crashes.
        type: boolean
        x-go-name: EnableFastDurableHandle
        x-nullable: true
      enableFilerAuditLogging:
        description: Specifies if Filer Audit Logging is enabled for this view.
        type: boolean
        x-go-name: EnableFilerAuditLogging
        x-nullable: true
      enableLiveIndexing:
        description: Specifies whether to enable live indexing for the view.
        type: boolean
        x-go-name: EnableLiveIndexing
        x-nullable: true
      enableMixedModePermissions:
        description: |-
          If set, mixed mode (NFS and SMB) access is enabled for this view.
          This field is deprecated. Use the field SecurityMode.
          deprecated: true
        type: boolean
        x-go-name: EnableMixedModePermissions
        x-nullable: true
      enableNfsViewDiscovery:
        description: If set, it enables discovery of view for NFS.
        type: boolean
        x-go-name: EnableNfsViewDiscovery
        x-nullable: true
      enableOfflineCaching:
        description: Specifies whether to enable offline file caching of the view.
        type: boolean
        x-go-name: EnableOfflineCaching
        x-nullable: true
      enableSmbAccessBasedEnumeration:
        description: |-
          Specifies if access-based enumeration should be enabled.
          If 'true', only files and folders that the user has permissions to
          access are visible on the SMB share for that user.
        type: boolean
        x-go-name: EnableSmbAccessBasedEnumeration
        x-nullable: true
      enableSmbEncryption:
        description: |-
          Specifies the SMB encryption for the View. If set, it enables the SMB
          encryption for the View. Encryption is supported only by SMB 3.x dialects.
          Dialects that do not support would still access data in unencrypted
          format.
        type: boolean
        x-go-name: EnableSmbEncryption
        x-nullable: true
      enableSmbOplock:
        description: Specifies whether SMB opportunistic lock is enabled.
        type: boolean
        x-go-name: EnableSmbOplock
        x-nullable: true
      enableSmbViewDiscovery:
        description: If set, it enables discovery of view for SMB.
        type: boolean
        x-go-name: EnableSmbViewDiscovery
        x-nullable: true
      enforceSmbEncryption:
        description: |-
          Specifies the SMB encryption for all the sessions for the View.
          If set, encryption is enforced for all the sessions for the View. When
          enabled all future and existing unencrypted sessions are disallowed.
        type: boolean
        x-go-name: EnforceSmbEncryption
        x-nullable: true
      fileExtensionFilter:
        description: |-
          Optional filtering criteria that should be satisfied by all the files
          created in this view. It does not affect existing files.
        x-nullable: true
        $ref: '#/definitions/FileExtensionFilter'
      fileLockConfig:
        description: |-
          Optional config that enables file locking for this view. It cannot be
          disabled during the edit of a view, if it has been enabled during the
          creation of the view. Also, it cannot be enabled if it was disabled
          during the creation of the view.
        x-nullable: true
        $ref: '#/definitions/FileLevelDataLockConfig'
      logicalQuota:
        description: |-
          Specifies an optional logical quota limit (in bytes) for the usage allowed
          on this View.
          (Logical data is when the data is fully hydrated and expanded.)
          This limit overrides the limit inherited from the Storage Domain
          (View Box) (if set).
          If logicalQuota is nil, the limit is inherited from the
          Storage Domain (View Box) (if set).
          A new write is not allowed if the Storage Domain (View Box) will exceed the
          specified quota.
          However, it takes time for the Cohesity Cluster to calculate
          the usage across Nodes, so the limit may be exceeded by a small amount.
          In addition, if the limit is increased or data is removed,
          there may be a delay before the Cohesity Cluster allows more data
          to be written to the View, as the Cluster is calculating the usage
          across Nodes.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      name:
        description: Specifies the name of the new View to create.
        type: string
        x-go-name: Name
        x-nullable: true
      netgroupWhitelist:
        description: |-
          Array of Netgroups.

          Specifies a list of Netgroups that have permissions to access the
          View. (Overrides the Netgroups specified at the global Cohesity
          Cluster level.)
        type: array
        items:
          $ref: '#/definitions/NisNetgroup'
        x-go-name: NetgroupWhitelist
        x-nullable: true
      nfsAllSquash:
        description: Specifies the NFS all squash config.
        x-nullable: true
        $ref: '#/definitions/NfsSquash'
      nfsRootPermissions:
        description: Specifies the NFS root permission config of the view file system.
        x-nullable: true
        $ref: '#/definitions/NfsRootPermissions'
      nfsRootSquash:
        description: Specifies the NFS root squash config.
        x-nullable: true
        $ref: '#/definitions/NfsSquash'
      overrideGlobalNetgroupWhitelist:
        description: |-
          Specifies whether view level client netgroup whitelist overrides cluster
          and global setting.
        type: boolean
        x-go-name: OverrideGlobalNetgroupWhitelist
        x-nullable: true
      overrideGlobalWhitelist:
        description: |-
          Specifies whether view level client subnet whitelist overrides cluster and
          global setting.
        type: boolean
        x-go-name: OverrideGlobalWhitelist
        x-nullable: true
      protocolAccess:
        description: |-
          Specifies the supported Protocols for the View.
          'kAll' enables protocol access to following three views: NFS, SMB and S3.
          'kNFSOnly' enables protocol access to NFS only.
          'kSMBOnly' enables protocol access to SMB only.
          'kS3Only' enables protocol access to S3 only.
          'kSwiftOnly' enables protocol access to Swift only.
        type: string
        enum:
        - kAll
        - kNFSOnly
        - kSMBOnly
        - kS3Only
        - kSwiftOnly
        x-go-name: ProtocolAccess
        x-nullable: true
      qos:
        description: Specifies the Quality of Service (QoS) Policy for the View.
        x-nullable: true
        $ref: '#/definitions/QoS'
      s3KeyMappingConfig:
        description: |-
          Specifies key mapping config of S3 storage.
          Configuration of S3 key mapping.

          Specifies the type of S3 key mapping config.
        type: string
        enum:
        - kRandom
        - kShort
        - kLong
        - kHierarchical
        x-go-name: S3KeyMappingConfig
        x-nullable: true
      securityMode:
        description: |-
          Specifies the security mode used for this view.
          Currently we support the following modes: Native, Unified and NTFS style.
          'kNativeMode' indicates a native security mode.
          'kUnifiedMode' indicates a unified security mode.
          'kNtfsMode' indicates a NTFS style security mode.
        type: string
        enum:
        - kNativeMode
        - kUnifiedMode
        - kNtfsMode
        x-go-name: SecurityMode
        x-nullable: true
      sharePermissions:
        description: Specifies a list of share level permissions.
        type: array
        items:
          $ref: '#/definitions/SmbPermission'
        x-go-name: SharePermissions
        x-nullable: true
      smbPermissionsInfo:
        description: Specifies the SMB permissions for the View.
        x-nullable: true
        $ref: '#/definitions/SmbPermissionsInfo'
      storagePolicyOverride:
        description: |-
          Specifies if inline deduplication and compression settings inherited from
          the Storage Domain (View Box) should be disabled for this View.
        x-nullable: true
        $ref: '#/definitions/StoragePolicyOverride'
      subnetWhitelist:
        description: |-
          Array of Subnets.

          Specifies a list of Subnets with IP addresses that have permissions to
          access the View. (Overrides the Subnets specified at the global
          Cohesity Cluster level.)
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: SubnetWhitelist
        x-nullable: true
      swiftProjectDomain:
        description: Specifies the Keystone project domain.
        type: string
        x-go-name: SwiftProjectDomain
        x-nullable: true
      swiftProjectName:
        description: Specifies the Keystone project name.
        type: string
        x-go-name: SwiftProjectName
        x-nullable: true
      swiftUserDomain:
        description: Specifies the Keystone user domain.
        type: string
        x-go-name: SwiftUserDomain
        x-nullable: true
      swiftUsername:
        description: Specifies the Keystone username.
        type: string
        x-go-name: SwiftUsername
        x-nullable: true
      tenantId:
        description: Optional tenant id who has access to this View.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewBoxId:
        description: |-
          Specifies the id of the Storage Domain (View Box) where the View will be
          created.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewLockEnabled:
        description: |-
          Specifies whether view lock is enabled. If enabled the view cannot be
          modified or deleted until unlock. By default it is disabled.
        type: boolean
        x-go-name: ViewLockEnabled
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreateVirtualClusterParameters:
    description: Specifies the parameters needed for creation of a new Cluster.
    type: object
    title: Create Virtual Cluster Parameters.
    required:
    - clusterName
    - networkConfig
    - nodeConfigs
    properties:
      clusterName:
        description: Specifies the name of the new Cluster.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      encryptionConfig:
        description: Specifies the encryption configuration parameters.
        x-nullable: true
        $ref: '#/definitions/EncryptionConfiguration'
      ipPreference:
        description: Specifies IP preference.
        type: integer
        format: int32
        x-go-name: IpPreference
        x-nullable: true
      metadataFaultTolerance:
        description: Specifies the metadata fault tolerance.
        type: integer
        format: int32
        x-go-name: MetadataFaultTolerance
        x-nullable: true
      networkConfig:
        description: Specifies the network configuration parameters.
        x-nullable: true
        $ref: '#/definitions/NetworkConfiguration'
      nodeConfigs:
        description: Specifies the configuration for the nodes in the new cluster.
        type: array
        items:
          $ref: '#/definitions/VirtualNodeConfiguration'
        x-go-name: NodeConfigs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreatedApiKey:
    description: Specifies a created API key.
    type: object
    title: Created API key.
    properties:
      createdTimeMsecs:
        description: Specifies the API key created time in milli seconds.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      createdUserSid:
        description: Specifies the user sid who created this API key.
        type: string
        x-go-name: CreatedUserSid
        x-nullable: true
      createdUsername:
        description: Specifies the username who created this API key.
        type: string
        x-go-name: CreatedUsername
        x-nullable: true
      expiringTimeMsecs:
        description: Specifies a time stamp when the API key will expire in milli
          seconds.
        type: integer
        format: int64
        x-go-name: ExpiringTimeMsecs
        x-nullable: true
      id:
        description: Specifies the API key id.
        type: string
        x-go-name: Id
        x-nullable: true
      isActive:
        description: |-
          Specifies if the API key is active. Only an active and not expired API key
          can be used for authentication.
        type: boolean
        x-go-name: IsActive
        x-nullable: true
      isExpired:
        description: |-
          Specifies if the API key is expired. Expired API keys cannot be used for
          authentication.
        type: boolean
        x-go-name: IsExpired
        x-nullable: true
      key:
        description: Specifies the created key.
        type: string
        x-go-name: Key
        x-nullable: true
      name:
        description: Specifies the API key name.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerUserSid:
        description: Specifies the user sid who owns this API key.
        type: string
        x-go-name: OwnerUserSid
        x-nullable: true
      ownerUsername:
        description: Specifies the username who owns this API key.
        type: string
        x-go-name: OwnerUsername
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CreatedRemoteVaultSearchJobUid:
    description: |-
      Specifies the Uid of the Job created to search the
      remote vault.
    type: object
    title: Remote Vault Search Job Uid.
    properties:
      searchJobUid:
        description: Specifies the unique id assigned for the search Job on the Cluster.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Credentials:
    description: Specifies credentials to access a target source.
    type: object
    title: Credentials.
    properties:
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CryptsoftKmsConfigResponse:
    type: object
    title: CryptsoftKmsConfigResponse specifies response parameters for cryptsoftKMS.
    properties:
      clientCertificateExpiryDate:
        description: Specifies expiry date of client certificate.
        type: integer
        format: int64
        x-go-name: ClientCertificateExpiryDate
        x-nullable: true
      kmipProtocolVersion:
        description: Specifies protocol version used to communicate with the KMS.
        type: string
        x-go-name: KmipProtocolVersion
        x-nullable: true
      serverIp:
        description: Specifies the KMS IP address.
        type: string
        x-go-name: ServerIp
        x-nullable: true
      serverPort:
        description: |-
          Specifies port on which the server is listening.
          Default port is 5696.
        type: integer
        format: int32
        x-go-name: ServerPort
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CryptsoftKmsConfiguration:
    type: object
    title: Specifies the parameters for kmip KMS configuration.
    properties:
      caCertificate:
        description: Specifies the CA certificate in PEM format.
        type: string
        x-go-name: CaCertificate
        x-nullable: true
      clientCertificate:
        description: |-
          Specifies the client certificate.
          It is in PEM format.
        type: string
        x-go-name: ClientCertificate
        x-nullable: true
      clientKey:
        description: Specifies the client private key.
        type: string
        x-go-name: ClientKey
        x-nullable: true
      kmipProtocolVersion:
        description: Specifies protocol version used to communicate with the KMS.
        type: string
        x-go-name: KmipProtocolVersion
        x-nullable: true
      serverIp:
        description: Specifies the KMS IP address.
        type: string
        x-go-name: ServerIp
        x-nullable: true
      serverPort:
        description: |-
          Specifies port on which the server is listening.
          Default port is 5696.
        type: integer
        format: int32
        x-go-name: ServerPort
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CryptsoftKmsUpdateParams:
    type: object
    title: CryptsoftKmsUpdateParams to define CryptsoftKms.
    properties:
      caCertificate:
        description: Specifies the CA certificate in PEM format.
        type: string
        x-go-name: CaCertificate
        x-nullable: true
      clientCertificate:
        description: |-
          Specifies the client certificate.
          It is in PEM format.
        type: string
        x-go-name: ClientCertificate
        x-nullable: true
      clientKey:
        description: Specifies the client private key.
        type: string
        x-go-name: ClientKey
        x-nullable: true
      kmipProtocolVersion:
        description: Specifies protocol version used to communicate with the KMS.
        type: string
        x-go-name: KmipProtocolVersion
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  CustomUnixIdAttributes:
    description: |-
      Specifies the custom attributes when mapping type is set to
      'kCustomAttributes'. It defines the attribute names to derive the mapping
      for a user of an Active Directory domain.
    type: object
    title: Custom Unix ID Attributes.
    properties:
      gidAttrName:
        description: |-
          Specifies the custom field name in Active Directory user properties to get
          the GID.
        type: string
        x-go-name: GidAttrName
        x-nullable: true
      uidAttrName:
        description: |-
          Specifies the custom field name in Active Directory user properties to get
          the UID.
        type: string
        x-go-name: UidAttrName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DSESolrInfo:
    type: object
    title: Message to hold information about DSE Solr node.
    properties:
      solrNodeVec:
        description: Solr node IP Addresses.
        type: array
        items:
          type: string
        x-go-name: SolrNodeVec
        x-nullable: true
      solrPort:
        description: Solr node Port.
        type: integer
        format: uint32
        x-go-name: SolrPort
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  DagApplicationServerInfo:
    description: |-
      Specifies the information about the status of the Exchange Application
      Server which is a member of the DAG.
    type: object
    title: Exchange DAG Application Server Information
    properties:
      fqdn:
        description: Specifies the fully qualified domain name of the Exchange Server.
        type: string
        x-go-name: Fqdn
        x-nullable: true
      guid:
        description: Specifies the Guid of the Exchange Application Server.
        type: string
        x-go-name: Guid
        x-nullable: true
      id:
        description: Specifies the entity id of the Exchange Application server.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the display name of the Exchange Application Server.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: |-
          Specifies the entity id of the owner entity of the Exchange Application
          Server.
        type: integer
        format: int64
        x-go-name: OwnerId
        x-nullable: true
      status:
        description: |-
          Specifies the status of the registration of the Exchange Application
          Server.
          Specifies the status of registration of Exchange Application Server.
          'kUnknown' indicates the status is not known.
          'kHealthy' indicates the status is healty and is registered as
          Exchange Server.
          'kUnHealthy' indicates the exchange application is registered on the
          physical server but it is unreachable now.
          'kUnregistered' indicates the server is not registered as physical source.
          'kUnreachable' indicates the server is not reachable from the cohesity
          cluster or the cohesity protection server is not installed on the exchange
          server.
          'kDetached' indicates the server is removed from the ExchangeDAG.
        type: string
        enum:
        - kUnknown
        - kHealthy
        - kUnHealthy
        - kUnregistered
        - kUreachable
        - kDetached
        x-go-name: Status
        x-nullable: true
      totalSizeBytes:
        description: |-
          Specifies the total size of all Exchange database copies in all the
          Exchange Application Servers that are part of the DAG.
        type: integer
        format: int64
        x-go-name: TotalSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DagInfo:
    description: Specifies the information about the DAG(Database availability group).
    type: object
    title: Exchange DAG Information
    properties:
      dagApplicationServerInfoList:
        description: |-
          Specifies the status of all the Exchange Application Servers that are part
          of this DAG.
        type: array
        items:
          $ref: '#/definitions/DagApplicationServerInfo'
        x-go-name: DagApplicationServerInfoList
        x-nullable: true
      exchangeDagProtectionPreference:
        description: |-
          Specifies information about the preference order while choosing
          between which database copy of the database which is part of DAG should
          be protected.
        x-nullable: true
        $ref: '#/definitions/ExchangeDAGProtectionPreference'
      guid:
        description: Specifies Unique GUID for the DAG.
        type: string
        x-go-name: Guid
        x-nullable: true
      name:
        description: Specifies display name of the DAG.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DailyEntitlement:
    type: object
    properties:
      dailyEntitlement:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: DailyEntitlementVal
        x-nullable: true
      featureName:
        type: string
        x-go-name: FeatureName
        x-nullable: true
    x-go-package: cohesity/nexus/server/common
  DailySchedule:
    description: Specifies a daily or weekly backup schedule.
    type: object
    title: Daily & Weekly Schedule.
    properties:
      days:
        description: |-
          Array of Days.

          Specifies a list of days of the week when to start Job Runs.
          If no days are specified, the Jobs Runs will run every day of the week.
          Specifies a day in a week such as 'kSunday', 'kMonday', etc.
        type: array
        items:
          type: string
          enum:
          - kSunday
          - kMonday
          - kTuesday
          - kWednesday
          - kThursday
          - kFriday
          - kSaturday
        x-go-name: Days
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DailyUsage:
    type: object
    properties:
      dailyUsage:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: DailyUsageVal
        x-nullable: true
      featureName:
        type: string
        x-go-name: FeatureName
        x-nullable: true
    x-go-package: cohesity/nexus/server/common
  Dashboard:
    description: Data shown on Dashboard.
    type: object
    title: Dashboard.
    properties:
      auditLogs:
        description: Audit Logs.
        x-nullable: true
        $ref: '#/definitions/AuditLogsTile'
      clusterId:
        description: Id of the cluster for which dashboard is given.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      health:
        description: Cluster Health and alerts.
        x-nullable: true
        $ref: '#/definitions/HealthTile'
      iops:
        description: IOPs.
        x-nullable: true
        $ref: '#/definitions/IopsTile'
      jobRuns:
        description: Protection Job Runs.
        x-nullable: true
        $ref: '#/definitions/JobRunsTile'
      protectedObjects:
        description: ProtectedObjects related stats.
        x-nullable: true
        $ref: '#/definitions/ProtectedObjectsTile'
      protection:
        description: Protection related stats.
        x-nullable: true
        $ref: '#/definitions/ProtectionTile'
      recoveries:
        description: Recoveries related stats.
        x-nullable: true
        $ref: '#/definitions/RecoveriesTile'
      storageEfficiency:
        description: Storage efficiency stats.
        x-nullable: true
        $ref: '#/definitions/StorageEfficiencyTile'
      throughput:
        description: Throughput.
        x-nullable: true
        $ref: '#/definitions/ThroughputTile'
    x-go-package: cohesity/iris/server/data/public
  DashboardResponse:
    type: object
    properties:
      dashboard:
        description: |-
          Specifies the dashboard of the local cluster or a remote cluster whose
          id is set in clusterId query parameter when the query parameter
          allClusters is not given or set to false. Otherwise this field is
          populated with aggregated dashboard values for all the dashboards in the
          dashboards field.
        x-nullable: true
        $ref: '#/definitions/Dashboard'
      dashboards:
        description: |-
          Specifies a list of dashboards of all the clusters in the SPOG setup if
          the query parameter allClusters is set to true. Otherwise this field is
          not populated. When populated the dashboard field is also populated with
          aggregated dashboard values.
        type: array
        items:
          $ref: '#/definitions/Dashboard'
        x-go-name: ClusterDashboards
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataMigrationJobParameters:
    description: Specifies parameters applicable for data migration jobs in NAS environment.
    type: object
    title: Data Migration Job Parameters.
    properties:
      coldFileWindow:
        description: |-
          Identifies the cold files in the NAS source. Files that haven't been
          accessed/modified in the last cold_file_window are migrated.
        type: integer
        format: int64
        x-go-name: ColdFileWindow
        x-nullable: true
      deleteOrphanData:
        description: Delete migrated data if no symlink at source is pointing to it.
        type: boolean
        x-go-name: DeleteOrphanData
        x-nullable: true
      filePathFilter:
        description: |-
          The filtering policy to decide which objects within a source should be
          migrated. If this is not specified, then all the objects within the
          source will be migrated based on the migration policy.
        x-nullable: true
        $ref: '#/definitions/FilePathFilter'
      fileSelectionPolicy:
        description: |-
          Specifies policy to select a file to migrate based on its creation, last
          access or modification time.
          eg. A file can be selected to migrate if it has not been accessed/modified
          in the ColdFileWindow.
          enum: kOlderThan, kLastAccessed, kLastModified.
          Specifies policy for file selection in data migration jobs based on time.
          'kOlderThan': Migrate the files that are older than cold file window.
          'kLastAccessed': Migrate the files that are not accessed in cold file window.
          'kLastModified': Migrate the files that have not been modified in cold file window.
        type: string
        enum:
        - kOlderThan
        - kLastAccessed
        - kLastModified
        x-go-name: FileSelectionPolicy
        x-nullable: true
      fileSizeBytes:
        description: |-
          Gives the size criteria to be used for selecting the files to be migrated
          in bytes. The cold files that are equal and greater than this size are
          migrated.
        type: integer
        format: int64
        x-go-name: FileSizeBytes
        x-nullable: true
      fileSizePolicy:
        description: |-
          Specifies policy to select a file to migrate based on its size.
          eg. A file can be selected to migrate if its size is greater than or
          smaller than the FileSizeBytes.
          enum: kGreaterThan, kSmallerThan.
          Specifies policy for file selection in data migration jobs based on file size.
          'kGreaterThan': Migrate the files whose size are greater than specified file size.
          'kSmallerThan': Migrate the files whose size are smaller than specified file size.
        type: string
        enum:
        - kGreaterThan
        - kSmallerThan
        x-go-name: FileSizePolicy
        x-nullable: true
      migrateWithoutStub:
        description: Specifies if data is to be migrated without stub.
        type: boolean
        x-go-name: MigrateWithoutStub
        x-nullable: true
      nfsMountPath:
        description: |-
          Mount path where the target view must be mounted on all NFS clients for
          accessing the migrated data.
        type: string
        x-go-name: NfsMountPath
        x-nullable: true
      targetViewName:
        description: The target view name to which the data will be migrated.
        type: string
        x-go-name: TargetViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataMigrationPolicy:
    description: |-
      Specifies settings for data migration in NAS environment. This also
      specifies the retention policy that should be applied to files after they
      have been moved to cohesity cluster.
    type: object
    title: Data Migration Policy.
    properties:
      daysToKeep:
        description: Specifies how many days to retain Snapshots on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: DaysToKeep
        x-nullable: true
      schedulingPolicy:
        description: Specifies schedule for the data migration job.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicy'
      wormRetentionType:
        description: |-
          Specifies WORM retention type for the files. When a WORM retention
          type is specified, the files will be kept until the maximum of the
          retention time. During that time, the files cannot be deleted.
          'kNone' implies there is no WORM retention set.
          'kCompliance' implies WORM retention is set for compliance reason.
          'kAdministrative' implies WORM retention is set for administrative purposes.
        type: string
        enum:
        - kNone
        - kCompliance
        - kAdministrative
        x-go-name: WormRetentionType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataTransferFromVaultPerTask:
    description: |-
      Specifies statistics about the transfer of data from a Vault
      (External Target) to this Cohesity Cluster for a recover or
      clone task.
    type: object
    title: Data Transfer From Vault Per Task.
    properties:
      numLogicalBytesTransferred:
        description: |-
          Specifies the total number of logical bytes that are transferred from
          this Vault to the Cohesity Cluster for this task.
          The logical size is when the data is fully hydrated or expanded.
        type: integer
        format: int64
        x-go-name: NumLogicalBytesTransferred
        x-nullable: true
      numPhysicalBytesTransferred:
        description: |-
          Specifies the total number of physical bytes that are transferred
          from this Vault to the Cohesity Cluster for this task.
        type: integer
        format: int64
        x-go-name: NumPhysicalBytesTransferred
        x-nullable: true
      taskName:
        description: Specifies the task name.
        type: string
        x-go-name: TaskName
        x-nullable: true
      taskType:
        description: Specifies the task type.
        type: string
        x-go-name: TaskType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataTransferFromVaultSummary:
    description: |-
      Specifies summary statistics about the transfer of data from a Vault
      to this Cohesity Cluster.
    type: object
    title: Data Transfer From Vault Summary.
    properties:
      dataTransferPerTask:
        description: |-
          Array of Data Transferred Per Task.

          Specifies the transfer of data from this Vault to this Cohesity Cluster
          for each clone or recover task.
        type: array
        items:
          $ref: '#/definitions/DataTransferFromVaultPerTask'
        x-go-name: DataTransferPerTask
        x-nullable: true
      numLogicalBytesTransferred:
        description: |-
          Specifies the total number of logical bytes that have been transferred
          from this Vault (External Target) to this Cohesity Cluster.
          The logical size is when the data is fully hydrated or expanded.
        type: integer
        format: int64
        x-go-name: NumLogicalBytesTransferred
        x-nullable: true
      numPhysicalBytesTransferred:
        description: |-
          Specifies the total number of physical bytes that have been transferred
          from this Vault (External Target) to the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: NumPhysicalBytesTransferred
        x-nullable: true
      numTasks:
        description: |-
          Specifies the number of recover or clone tasks that have transferred data
          from this Vault (External Target) to this Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: NumTasks
        x-nullable: true
      physicalDataTransferredBytesDuringTimeRange:
        description: |-
          Array of Physical Data Transferred Per Day.

          Specifies the physical data transferred from this Vault
          to the Cohesity Cluster during the time period specified using the
          startTimeMsecs and endTimeMsecs parameters.
          For each day in the time period, an array element is returned,
          for example if 7 days are specified, 7 array elements are returned.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: PhysicalDataTransferredBytesDuringTimeRange
        x-nullable: true
      vaultName:
        description: Specifies the name of the Vault (External Target).
        type: string
        x-go-name: VaultName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataTransferFromVaultsSummaryResponse:
    description: |-
      Provides summary statistics about the transfer of data from Vaults
      (External Targets) to this Cohesity Cluster.
    type: object
    title: Data Transfer from Vaults Summary Response.
    properties:
      dataTransferSummary:
        description: |-
          Array of Summary Data Transfer Statistics.

          Specifies summary statistics about the transfer of data from
          Vaults to the Cohesity Cluster.
        type: array
        items:
          $ref: '#/definitions/DataTransferFromVaultSummary'
        x-go-name: DataTransferSummary
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataTransferToVaultPerProtectionJob:
    description: |-
      Specifies statistics about the transfer of data from this Cohesity
      Cluster to this Vault for a Protection Job.
    type: object
    title: Data Transfer to Vault Per Protection Job.
    properties:
      numLogicalBytesTransferred:
        description: |-
          Specifies the total number of logical bytes that are transferred
          from this Cohesity Cluster to this Vault for this Protection Job.
          The logical size is when the data is fully hydrated or expanded.
        type: integer
        format: int64
        x-go-name: NumLogicalBytesTransferred
        x-nullable: true
      numPhysicalBytesTransferred:
        description: |-
          Specifies the total number of physical bytes that are transferred
          from this Cohesity Cluster to this Vault for this Protection Job.
        type: integer
        format: int64
        x-go-name: NumPhysicalBytesTransferred
        x-nullable: true
      protectionJobName:
        description: Specifies the name of the Protection Job.
        type: string
        x-go-name: ProtectionJobName
        x-nullable: true
      storageConsumed:
        description: |-
          Specifies the total number of storage bytes consumed that are transferred
          from this Cohesity Cluster to this vault for this Protection Job.
        type: integer
        format: int64
        x-go-name: StorageConsumed
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataTransferToVaultSummary:
    description: |-
      Specifies statistics about the transfer of data from this Cohesity
      Cluster to a Vault.
    type: object
    title: Data Transfer to Vault Summary.
    properties:
      dataTransferPerProtectionJob:
        description: |-
          Array of Data Transfer Statistics Per Protection Jobs.

          Specifies the data transfer summary statistics for each Protection Job
          that is transferring data from this Cohesity Cluster to this
          Vault (External Target).
        type: array
        items:
          $ref: '#/definitions/DataTransferToVaultPerProtectionJob'
        x-go-name: DataTransferPerProtectionJob
        x-nullable: true
      logicalDataTransferredBytesDuringTimeRange:
        description: |-
          Array of Logical Data Transferred Per Day.

          Specifies the logical data transferred from this Cohesity Cluster
          to this Vault during the time period specified using the
          startTimeMsecs and endTimeMsecs parameters.
          For each day in the time period, an array element is returned,
          for example if 7 days are specified, 7 array elements are returned.
          The logical size is when the data is fully hydrated or expanded.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: LogicalDataTransferredBytesDuringTimeRange
        x-nullable: true
      numLogicalBytesTransferred:
        description: |-
          Specifies the total number of logical bytes that are transferred
          from this Cohesity Cluster to this Vault.
          The logical size is when the data is fully hydrated or expanded.
        type: integer
        format: int64
        x-go-name: NumLogicalBytesTransferred
        x-nullable: true
      numPhysicalBytesTransferred:
        description: |-
          Specifies the total number of physical bytes that are transferred
          from this Cohesity Cluster to this Vault.
        type: integer
        format: int64
        x-go-name: NumPhysicalBytesTransferred
        x-nullable: true
      numProtectionJobs:
        description: |-
          Specifies the number of Protection Jobs that transfer data to
          this Vault.
        type: integer
        format: int64
        x-go-name: NumProtectionJobs
        x-nullable: true
      physicalDataTransferredBytesDuringTimeRange:
        description: |-
          Array of Physical Data Transferred Per Day.

          Specifies the physical data transferred from this Cohesity Cluster
          to this Vault during the time period specified using the
          startTimeMsecs and endTimeMsecs parameters.
          For each day in the time period, an array element is returned,
          for example if 7 days are specified, 7 array elements are returned.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: PhysicalDataTransferredBytesDuringTimeRange
        x-nullable: true
      storageConsumedBytes:
        description: |-
          Specifies the storage consumed on the Vault as of last day in the
          specified time range.
        type: integer
        format: int64
        x-go-name: StorageConsumedBytes
        x-nullable: true
      vaultId:
        description: The vault Id associated with the vault.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
      vaultName:
        description: Specifies the name of the Vault (External Target).
        type: string
        x-go-name: VaultName
        x-nullable: true
      vaultType:
        description: |-
          Specifies the type of Vault.
          'kNearline' indicates a Google Nearline Vault.
          'kGlacier' indicates an AWS Glacier Vault.
          'kS3' indicates an AWS S3 Vault.
          'kAzureStandard' indicates a Microsoft Azure Standard Vault.
          'kS3Compatible' indicates an S3 Compatible Vault.
          (See the online help for supported types.)
          'kQStarTape' indicates a QStar Tape Vault.
          'kGoogleStandard' indicates a Google Standard Vault.
          'kGoogleDRA' indicates a Google DRA Vault.
          'kAmazonS3StandardIA' indicates an Amazon S3 Standard-IA Vault.
          'kAWSGovCloud' indicates an AWS Gov Cloud Vault.
          'kNAS' indicates a NAS Vault.
          'kColdline' indicates a Google Coldline Vault.
          'kAzureGovCloud' indicates a Microsoft Azure Gov Cloud Vault.
          'kAzureArchive' indicates an Azure Archive Vault.
          'kAzure' indicates an Azure Vault.
          'kGoogle' indicates a Google Vault.
          'kAmazon' indicates an Amazon Vault.
          'kOracle' indicates an Oracle Vault.
          'kOracleTierStandard' indicates an Oracle Tier Standard Vault.
          'kOracleTierArchive' indicates an Oracle Tier Archive Vault.
          'kAmazonC2S' indicates an Amazon Commercial Cloud Services Vault.
        type: string
        enum:
        - kNearline
        - kGlacier
        - kS3
        - kAzureStandard
        - kS3Compatible
        - kQStarTape
        - kGoogleStandard
        - kGoogleDRA
        - kAmazonS3StandardIA
        - kAWSGovCloud
        - kNAS
        - kColdline
        - kAzureGovCloud
        - kAzureArchive
        - kAzure
        - kGoogle
        - kAmazon
        - kOracle
        - kOracleTierStandard
        - kOracleTierArchive
        - kAmazonC2S
        x-go-name: VaultType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataTransferToVaultsSummaryResponse:
    description: |-
      Provides summary statistics about the transfer of data from this
      Cohesity Cluster to Vaults (External Targets).
    type: object
    title: Data Transfer to Vaults Summary Response.
    properties:
      dataTransferSummary:
        description: |-
          Array of Summary Data Transfer Statistics.

          Specifies summary statistics about the transfer of data from
          the Cohesity Cluster to Vaults.
        type: array
        items:
          $ref: '#/definitions/DataTransferToVaultSummary'
        x-go-name: DataTransferSummary
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataUptierJobParameters:
    type: object
    title: Data Uptier Job Parameters.
    properties:
      fileSelectionPolicy:
        description: |-
          Specifies policy to select a file to uptier based on file access or
          modification time.
          eg. A file can be selected to uptier if it has been accessed in the
          HotFileWindow or it is modified.
          enum: kLastAccessed, kLastModified.
          Specifies policy for file selection in data uptier jobs.
          'kLastAccessed': Uptier the files which are accessed for at least num_file_access in
          hot_file_window.
          'kLastModified': Uptier the files which are modified.
        type: string
        enum:
        - kLastAccessed
        - kLastModified
        x-go-name: FileUptierSelectionPolicy
        x-nullable: true
      fileSizeBytes:
        description: |-
          Gives the size criteria to be used for selecting the files to be uptiered
          in bytes. The hot files that are smaller or greater than this size are
          uptiered.
        type: integer
        format: int64
        x-go-name: FileSizeBytes
        x-nullable: true
      fileSizePolicy:
        description: |-
          Specifies policy to select a file to uptier based on its size.
          eg. A file can be selected to uptier if its size is greater than or
          smaller than the FileSizeBytes.
          enum: kGreaterThan, kSmallerThan.
          Specifies policy for file selection in data uptier jobs based on file size.
          'kGreaterThan': Uptier the files having size greater than file_size.
          'kSmallerThan': Uptier the files having size smaller than file_size.
        type: string
        enum:
        - kGreaterThan
        - kSmallerThan
        x-go-name: FileUptierSizePolicy
        x-nullable: true
      hotFileWindow:
        description: |-
          Identifies the hot files in the NAS source. Files that have been
          modified in the last hot_file_window are uptiered. Applicable only when
          file_select_policy is kLastAccessed.
        type: integer
        format: int64
        x-go-name: HotFileWindow
        x-nullable: true
      includeAllFiles:
        description: |-
          Specifies whether uptier all files found in the view by overriding
          the FileUptierSelectionPolicy & FileUptierSizePolicy constraints.
          Default value false.
        type: boolean
        x-go-name: IncludeAllFiles
        x-nullable: true
      nfsMountPath:
        description: |-
          Mount path where the Cohesity target view is mounted on NFS clients while
          migrating the data.
        type: string
        x-go-name: NfsMountPath
        x-nullable: true
      numFileAccess:
        description: |-
          Number of times file must be accessed within hot_file_window in order to
          qualify for uptiering. Applicable only when file_select_policy is
          kLastAccessed.
        type: integer
        format: uint32
        x-go-name: NumFileAccess
        x-nullable: true
      sourceViewName:
        description: The source view name from which the data will be uptiered.
        type: string
        x-go-name: SourceViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DataUsageStats:
    description: |-
      Specifies the data usage metric of the data stored on the Cohesity
      Cluster or Storage Domains (View Boxes).
    type: object
    title: Data Usage Statistics.
    properties:
      cloudDataWrittenBytes:
        description: |-
          Specifies the total data written on cloud tiers, as computed by the
          Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: CloudDataWrittenBytes
        x-nullable: true
      cloudDataWrittenBytesTimestampUsec:
        description: Specifies Timestamp of CloudDataWrittenBytes.
        type: integer
        format: int64
        x-go-name: CloudDataWrittenBytesTimestampUsec
        x-nullable: true
      cloudTotalPhysicalUsageBytes:
        description: |-
          Specifies the total cloud capacity, as computed by the Cohesity Cluster,
          after the size of the data has been reduced by change-block tracking,
          compression and deduplication.
        type: integer
        format: int64
        x-go-name: CloudTotalPhysicalUsageBytes
        x-nullable: true
      cloudTotalPhysicalUsageBytesTimestampUsec:
        description: Specifies Timestamp of CloudTotalPhysicalUsageBytes.
        type: integer
        format: int64
        x-go-name: CloudTotalPhysicalUsageBytesTimestampUsec
        x-nullable: true
      dataInBytes:
        description: |-
          Specifies the data read from the protected objects by the Cohesity Cluster
          before any data reduction using deduplication and compression.
        type: integer
        format: int64
        x-go-name: DataInBytes
        x-nullable: true
      dataInBytesAfterDedup:
        description: |-
          Specifies the size of the data has been reduced by change-block
          tracking and deduplication but before compression or data is replicated to
          other nodes as per RF or Erasure Coding policy.
        type: integer
        format: int64
        x-go-name: DataInBytesAfterDedup
        x-nullable: true
      dataInBytesAfterDedupTimestampUsec:
        description: Specifies Timestamp of DataInBytesAfterDedup.
        type: integer
        format: int64
        x-go-name: DataInBytesAfterDedupTimestampUsec
        x-nullable: true
      dataInBytesTimestampUsec:
        description: Specifies Timestamp of DataInBytes.
        type: integer
        format: int64
        x-go-name: DataInBytesTimestampUsec
        x-nullable: true
      dataProtectLogicalUsageBytes:
        description: Specifies the logical data used by Data Protect on Cohesity cluster.
        type: integer
        format: int64
        x-go-name: DataProtectLogicalUsageBytes
        x-nullable: true
      dataProtectLogicalUsageBytesTimestampUsec:
        description: Specifies Timestamp of DataProtectLogicalUsageBytes.
        type: integer
        format: int64
        x-go-name: DataProtectLogicalUsageBytesTimestampUsec
        x-nullable: true
      dataProtectPhysicalUsageBytes:
        description: Specifies the physical data used by Data Protect on Cohesity
          cluster.
        type: integer
        format: int64
        x-go-name: DataProtectPhysicalUsageBytes
        x-nullable: true
      dataProtectPhysicalUsageBytesTimestampUsec:
        description: Specifies Timestamp of DataProtectPhysicalUsageBytes.
        type: integer
        format: int64
        x-go-name: DataProtectPhysicalUsageBytesTimestampUsec
        x-nullable: true
      dataWrittenBytes:
        description: |-
          Specifies the data written after it has been reduced by deduplication and
          compression. This does not include resiliency impact.
        type: integer
        format: int64
        x-go-name: DataWrittenBytes
        x-nullable: true
      dataWrittenBytesTimestampUsec:
        description: Specifies Timestamp of DataWrittenBytes.
        type: integer
        format: int64
        x-go-name: DataWrittenBytesTimestampUsec
        x-nullable: true
      fileServicesLogicalUsageBytes:
        description: Specifies the logical data used by File services on Cohesity
          cluster.
        type: integer
        format: int64
        x-go-name: FileServicesLogicalUsageBytes
        x-nullable: true
      fileServicesLogicalUsageBytesTimestampUsec:
        description: Specifies Timestamp of FileServicesLogicalUsageBytes.
        type: integer
        format: int64
        x-go-name: FileServicesLogicalUsageBytesTimestampUsec
        x-nullable: true
      fileServicesPhysicalUsageBytes:
        description: Specifies the physical data used by File services on Cohesity
          cluster.
        type: integer
        format: int64
        x-go-name: FileServicesPhysicalUsageBytes
        x-nullable: true
      fileServicesPhysicalUsageBytesTimestampUsec:
        description: Specifies Timestamp of FileServicesPhysicalUsageBytes.
        type: integer
        format: int64
        x-go-name: FileServicesPhysicalUsageBytesTimestampUsec
        x-nullable: true
      localDataWrittenBytes:
        description: |-
          Specifies the total data written on local tiers, as computed by the
          Cohesity Cluster, after the size of the data has been reduced by
          change-block tracking, deduplication and compression. This does not
          include resiliency impact.
        type: integer
        format: int64
        x-go-name: LocalDataWrittenBytes
        x-nullable: true
      localDataWrittenBytesTimestampUsec:
        description: Specifies Timestamp of LocalDataWrittenBytes.
        type: integer
        format: int64
        x-go-name: LocalDataWrittenBytesTimestampUsec
        x-nullable: true
      localTierResiliencyImpactBytes:
        description: |-
          Specifies the size of the data has been replicated to other nodes as per
          RF or Erasure Coding policy.
        type: integer
        format: int64
        x-go-name: LocalTierResiliencyImpactBytes
        x-nullable: true
      localTierResiliencyImpactBytesTimestampUsec:
        description: Specifies Timestamp of LocalTierResiliencyImpactBytes.
        type: integer
        format: int64
        x-go-name: LocalTierResiliencyImpactBytesTimestampUsec
        x-nullable: true
      localTotalPhysicalUsageBytes:
        description: |-
          Specifies the total local capacity, as computed by the Cohesity Cluster,
          after the size of the data has been reduced by change-block tracking,
          compression and deduplication.
        type: integer
        format: int64
        x-go-name: LocalTotalPhysicalUsageBytes
        x-nullable: true
      localTotalPhysicalUsageBytesTimestampUsec:
        description: Specifies Timestamp of LocalTotalPhysicalUsageBytes.
        type: integer
        format: int64
        x-go-name: LocalTotalPhysicalUsageBytesTimestampUsec
        x-nullable: true
      outdatedLogicalUsageBytesTimestampUsec:
        description: Specifies Timestamp of OutdatedLogicalUsageBytes.
        type: integer
        format: int64
        x-go-name: OutdatedLogicalUsageBytesTimestampUsec
        x-nullable: true
      storageConsumedBytes:
        description: |-
          Specifies the total capacity, as computed by the Cohesity Cluster,
          after the size of the data has been reduced by change-block tracking,
          compression and deduplication. This includes resiliency impact.
        type: integer
        format: int64
        x-go-name: StorageConsumedBytes
        x-nullable: true
      storageConsumedBytesTimestampUsec:
        description: Specifies Timestamp of StorageConsumedBytes.
        type: integer
        format: int64
        x-go-name: StorageConsumedBytesTimestampUsec
        x-nullable: true
      totalLogicalUsageBytes:
        description: |-
          Provides the combined data residing on protected objects.
          The size of data before reduction by deduplication and compression.
        type: integer
        format: int64
        x-go-name: TotalLogicalUsageBytes
        x-nullable: true
      totalLogicalUsageBytesTimestampUsec:
        description: Specifies Timestamp of TotalLogicalUsageBytes.
        type: integer
        format: int64
        x-go-name: TotalLogicalUsageBytesTimestampUsec
        x-nullable: true
      uniquePhysicalDataBytes:
        description: Specifies the unique physical data usage in bytes.
        type: integer
        format: int64
        x-go-name: UniquePhysicalDataBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DatastoreInfo:
    type: object
    title: Datastore Information.
    properties:
      capacity:
        description: Specifies the capacity of the datastore in bytes.
        type: integer
        format: uint64
        x-go-name: Capacity
        x-nullable: true
      freeSpace:
        description: Specifies the available space on the datastore in bytes.
        type: integer
        format: uint64
        x-go-name: FreeSpace
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DbFileInfo:
    description: Specifies information about a database file.
    type: object
    title: Database File Information.
    properties:
      fileType:
        description: |-
          Specifies the format type of the file that SQL database stores the data.
          Specifies the format type of the file that SQL database stores the data.
          'kRows' refers to a data file
          'kLog' refers to a log file
          'kFileStream' refers to a directory containing FILESTREAM data
          'kNotSupportedType' is for information purposes only. Not supported.
          'kFullText' refers to a full-text catalog.
        type: string
        enum:
        - kRows
        - kLog
        - kFileStream
        - kNotSupportedType
        - kFullText
        x-go-name: FileType
        x-nullable: true
      fullPath:
        description: Specifies the full path of the database file on the SQL host
          machine.
        type: string
        x-go-name: FullPath
        x-nullable: true
      sizeBytes:
        description: Specifies the last known size of the database file.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeleteInfectedFileParams:
    type: object
    title: Specifies the parameters to delete the infected files.
    properties:
      infectedFileIds:
        description: Specifies the list of infected file path.
        type: array
        items:
          $ref: '#/definitions/InfectedFileParam'
        x-go-name: InfectedFileIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeleteInfectedFileResponse:
    type: object
    title: Specifies delete infected files response.
    properties:
      deleteFailedInfectedFiles:
        description: Specifies the failed delete infected files.
        type: array
        items:
          $ref: '#/definitions/InfectedFileId'
        x-go-name: DeleteFailedInfectedFiles
        x-nullable: true
      deleteSucceededInfectedFiles:
        description: Specifies the successfully deleted infected files.
        type: array
        items:
          $ref: '#/definitions/InfectedFileId'
        x-go-name: DeleteSucceededInfectedFiles
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeleteIpConfigParameters:
    description: Specifies the parameters needed for an ipunconfig request.
    type: object
    title: Delete IP Config Parameters.
    required:
    - name
    properties:
      name:
        description: Specifies the interface name to be deleted.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeleteProtectionJobParam:
    description: DeleteProtectionJobParam is the struct for deleting a protection
      job.
    type: object
    title: Delete Protection Job Parameters.
    properties:
      deleteSnapshots:
        description: |-
          Specifies if Snapshots generated by the Protection Job should also be
          deleted when the Job is deleted.
        type: boolean
        x-go-name: DeleteSnapshots
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeleteRouteParam:
    description: Specifies the delete param of a Static Route.
    type: object
    title: Delete Route Parameters.
    properties:
      destNetwork:
        description: |-
          Destination network.

          Specifies the destination network of the Static Route.
          overrideDescription: true
        type: string
        x-go-name: DestNetwork
        x-nullable: true
      ifName:
        description: |-
          Specifies the network interfaces name to use for communicating with the
          destination network.
        type: string
        x-go-name: IfName
        x-nullable: true
      ifaceGroupName:
        description: |-
          Specifies the network interfaces group or vlan interface group to
          use for communicating with the destination network.
        type: string
        x-go-name: IfaceGroupName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeleteViewUsersQuotaParameters:
    description: Specifies the user ids to remove the corresponding quota overrides
      in view.
    type: object
    title: Delete View Users Quota Parameters.
    properties:
      deleteAll:
        description: Delete all existing user quota override policies.
        type: boolean
        x-go-name: DeleteAll
        x-nullable: true
      userIds:
        description: The user ids whose policy needs to be deleted.
        type: array
        items:
          $ref: '#/definitions/UserId'
        x-go-name: UserIds
        x-nullable: true
      viewName:
        description: View name of input view.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeliveryRuleProto_DeliveryTarget:
    description: |-
      Delivery targets for the notifications. For now only email delivery is
      supported. In future, we can potentially add other delivery targets such
      as paging, SMS, etc.
    type: object
    properties:
      emailAddress:
        description: List of email addresses to send notifications.
        type: string
        x-go-name: EmailAddress
        x-nullable: true
      emailRecipientType:
        type: integer
        format: int32
        x-go-name: EmailRecipientType
        x-nullable: true
      externalApiCurlOptions:
        description: Specifies the curl options used to invoke above rest external
          api.
        type: string
        x-go-name: ExternalApiCurlOptions
        x-nullable: true
      externalApiUrl:
        description: |-
          Specifies the external api to be invoked when an alert matching this
          rule is raised.
        type: string
        x-go-name: ExternalApiUrl
        x-nullable: true
      locale:
        description: Locale for the delivery target.
        type: string
        x-go-name: Locale
        x-nullable: true
      snmpNotification:
        description: Need to send snmp notification for matched alerts.
        type: boolean
        x-go-name: SnmpNotification
        x-nullable: true
      syslogNotification:
        description: Need to write syslog for matched alerts.
        type: boolean
        x-go-name: SyslogNotification
        x-nullable: true
      tenantId:
        description: |-
          Tenant who has been assigned this target.
          This field is not populated within AlertsDataProto persisted in Gandalf.
          This is a convenience field and is populated on the fly by the Alerts
          component for delivery targets in the delivery_target_list within
          AlertProto. This field is utilized by NotificationDeliveryHelper to
          group delivery targets so that we could send out a single email to all
          the email addresses registered with the same locale by a given tenant
          or by the SP admin. Another approach could have been to use an internal
          object, but since the AlertProto contains a list of type
          DeliveryTarget, this field has been added to make it convenient to pass
          around an AlertProto object.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: alerts/base/alert.pb
  DeployCertParameters:
    description: Specifies the parameters used to generate and deploy a certificate.
    type: object
    title: Deploy host global certificate Request.
    properties:
      certFileName:
        description: Specifies the filename of the certificate.
        type: string
        x-go-name: CertFileName
        x-nullable: true
      hostsInfoList:
        description: |-
          Specifies the list of all hosts on which the certificate is to
          be deployed.
        type: array
        items:
          $ref: '#/definitions/HostInfo'
        x-go-name: HostsInfoList
        x-nullable: true
      type:
        description: |-
          Specifies the type of the host such as 'kSapHana', 'kSapOracle', etc.
          Specifies the host type of host for generating and deploying a
          Certificate.
          'kOther' indicates it is any of the other hosts.
          'kSapOracle' indicates it is a SAP Oracle host.
          'kSapHana' indicates it is a SAP HANA host.
        type: string
        enum:
        - kOther
        - kSapOracle
        - kSapHana
        x-go-name: Type
        x-nullable: true
      validDays:
        description: |-
          Specifies the number of days after which the certificate will expire. The
          user has to input the number of days (from the current date) till when the
          certificate is valid.
        type: integer
        format: int64
        x-go-name: ValidDays
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeployDBInstancesToRDSParams:
    description: |-
      Contains RDS specfic options that can be supplied while restoring the RDS
      DB instance.
    type: object
    properties:
      autoMinorVersionUpgrade:
        description: Whether to enable auto minor version upgrade in the restored
          DB.
        type: boolean
        x-go-name: AutoMinorVersionUpgrade
        x-nullable: true
      availabilityZone:
        description: Entity representing the availability zone to use while restoring
          the DB.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      copyTagsToSnapshots:
        description: Whether to enable copying of tags to snapshots of the DB.
        type: boolean
        x-go-name: CopyTagsToSnapshots
        x-nullable: true
      dbInstanceId:
        description: |-
          The DB instance identifier to use for the restored DB. This field is
          required.
        type: string
        x-go-name: DbInstanceId
        x-nullable: true
      dbOptionGroup:
        description: Entity representing the RDS option group to use while restoring
          the DB.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      dbParameterGroup:
        description: Entity representing the RDS parameter group to use while restoring
          the DB.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      dbPort:
        description: Port to use for the DB in the restored RDS instance.
        type: integer
        format: int32
        x-go-name: DbPort
        x-nullable: true
      iamDbAuthentication:
        description: Whether to enable IAM authentication for the DB.
        type: boolean
        x-go-name: IamDbAuthentication
        x-nullable: true
      multiAzDeployment:
        description: Whether this is a multi-az deployment or not.
        type: boolean
        x-go-name: MultiAzDeployment
        x-nullable: true
      pointInTimeParams:
        description: If this is set, we will restore DB to the specified point in
          time.
        x-nullable: true
        $ref: '#/definitions/DeployDBInstancesToRDSParams_PointInTimeRestoreParams'
      publicAccessibility:
        description: Whether this DB will be publicly accessible or not.
        type: boolean
        x-go-name: PublicAccessibility
        x-nullable: true
    x-go-package: magneto/base/cloud_deploy.pb
  DeployDBInstancesToRDSParams_PointInTimeRestoreParams:
    description: |-
      Message to capture details of a point in time that the DB needs to be
      restored to.
    type: object
    properties:
      timestampMsecs:
        description: Time in milliseconds since epoch that the DB needs to be restored
          to.
        type: integer
        format: int64
        x-go-name: TimestampMsecs
        x-nullable: true
    x-go-package: magneto/base/cloud_deploy.pb
  DeployFleetParams:
    type: object
    title: Contains Fleet specific params.
    properties:
      awsFleetParams:
        description: Contains AWS Fleet specific params.
        x-nullable: true
        $ref: '#/definitions/AWSFleetParams'
    x-go-package: magneto/base/cloud_deploy.pb
  DeployTaskRequest:
    description: Specifies the settings for a Deploy Task that deploys VMs on cloud.
    type: object
    title: Deploy Task Request.
    required:
    - name
    properties:
      name:
        description: |-
          Specifies the name of the Deploy Task. This field must be set and must be
          a unique name.
        type: string
        x-go-name: Name
        x-nullable: true
      newParentId:
        description: |-
          Specifies a new registered parent Protection Source. If specified
          the selected objects are cloned or recovered to this new Protection
          Source. If not specified, objects are cloned or recovered
          to the original Protection Source that was managing them.
        type: integer
        format: int64
        x-go-name: NewParentId
        x-nullable: true
      objects:
        description: |-
          Array of Objects.

          Specifies a list of Protection Source objects or Protection Job objects
          (with specified Protection Source objects).
        type: array
        items:
          $ref: '#/definitions/RestoreObjectDetails'
        x-go-name: Objects
        x-nullable: true
      target:
        description: |-
          Specifies the details about CloudDeploy target where backup snapshots
          may be converted and stored.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTargetDetails'
    x-go-package: cohesity/iris/server/data/public
  DeployVMsToAWSParams:
    description: |-
      Contains AWS specific information needed to identify various resources
      when converting and deploying a VM to AWS.
    type: object
    properties:
      instanceType:
        description: Type of VM when cloning the VM in AWS as an instance.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      keyPairName:
        description: |-
          Optional key-pair (public-private) name that can be used to login to an
          VM instance. In such case, user should have already created a key-pair and
          have a copy of the private key.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      networkSecurityGroups:
        description: |-
          Names of the network security groups within the above VPC. At least
          one entry should be present.
        type: array
        items:
          $ref: '#/definitions/EntityProto'
        x-go-name: NetworkSecurityGroups
        x-nullable: true
      proxyVmSubnet:
        description: |-
          Name of the subnet within the above VPC which will be associated with the
          proxy vm.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      proxyVmVpc:
        description: Virtual Private Cloud (VPC) in which the proxy vm will be deployed.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      rdsParams:
        description: |-
          Proto containing the additional parameters required for restoring RDS DB.
          This field will only be populated for RDS restores.
        x-nullable: true
        $ref: '#/definitions/DeployDBInstancesToRDSParams'
      region:
        description: Name of the AWS region in which to deploy the VM.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      subnet:
        description: Name of the optional subnet within the above VPC.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      vpc:
        description: The Virtual Private Cloud (VPC) to choose for the instance.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/cloud_deploy.pb
  DeployVMsToAzureParams:
    description: |-
      Contains Azure specific information needed to identify various resources
      when converting and deploying a VM to Azure.
    type: object
    properties:
      azureManagedDiskParams:
        description: Managed disk parameter if deployment is using managed disks.
        x-nullable: true
        $ref: '#/definitions/AzureManagedDiskParams'
      computeOptions:
        description: Type of VM (e.g. small, medium, large) when cloning the VM in
          Azure.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      networkResourceGroup:
        description: |-
          Name of the Azure resource group that has the virtual network mentioned
          below.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      networkSecurityGroup:
        description: |-
          Name of the network security group. It's location should be same as the
          storage account.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      resourceGroup:
        description: |-
          Name of the Azure resource group. Its value is globally unique within
          Azure.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      storageAccount:
        description: |-
          Name of the storage account that will contain the storage container within
          which we will create the blob that will become the VHD disk for the
          cloned VM.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      storageContainer:
        description: Name of the storage container within the above storage account.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      storageKey:
        description: The storage key for the above storage account.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      storageResourceGroup:
        description: |-
          Name of the Azure resource group that has the storage account mentioned
          below.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      subnet:
        description: Name of the subnet within the above virtual network.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      tempVmResourceGroup:
        description: Name of the resource group where the temporary VM needs to be
          created.
        title: |-
          Next few fields are for getting additional resources for creating
          temporary resources in Azure to create a temporary VM to convert the
          VM so that the guest VM will be Azure Compatible. The values are optional
          for customer to provide.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      tempVmStorageAccount:
        description: Name of the Storage Account where the temporary VM needs to be
          created.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      tempVmStorageContainer:
        description: |-
          Name of the Storage container where the temporary VM's OS Disk needs to
          be created.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      tempVmSubnet:
        description: |-
          Name of the Subnet within the temp_vm_virtual_network where the temporary
          vm needs to be created.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      tempVmVirtualNetwork:
        description: Name of the Virtual Network where the temporary VM needs to be
          created.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      virtualNetwork:
        description: Name of the Virtual Network.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/cloud_deploy.pb
  DeployVMsToCloudParams:
    description: |-
      Contains Cloud specific information needed to identify various resources
      when deploying a VM to Cloud.
    type: object
    properties:
      deployFleetParams:
        x-nullable: true
        $ref: '#/definitions/DeployFleetParams'
      deployVmsToAwsParams:
        x-nullable: true
        $ref: '#/definitions/DeployVMsToAWSParams'
      deployVmsToAzureParams:
        x-nullable: true
        $ref: '#/definitions/DeployVMsToAzureParams'
      deployVmsToGcpParams:
        x-nullable: true
        $ref: '#/definitions/DeployVMsToGCPParams'
      replicateSnapshotsToAwsParams:
        x-nullable: true
        $ref: '#/definitions/ReplicateSnapshotsToAWSParams'
      replicateSnapshotsToAzureParams:
        x-nullable: true
        $ref: '#/definitions/ReplicateSnapshotsToAzureParams'
    x-go-package: magneto/base/cloud_deploy.pb
  DeployVMsToCloudTaskStateProto:
    type: object
    title: Persistent state for a convert and deploy VMs to cloud task.
    properties:
      deployVmsToCloudParams:
        description: |-
          This captures all the necessary information required to deploy VMs to
          cloud.
        x-nullable: true
        $ref: '#/definitions/DeployVMsToCloudParams'
    x-go-package: magneto/master/base/master.pb
  DeployVMsToGCPParams:
    description: |-
      Contains GCP specific information needed to identify various resources
      when converting and deploying a VM to GCP.
    type: object
    properties:
      projectId:
        description: Project id in which to deploy the VM.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      region:
        description: Region in which to deploy the VM.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      subnet:
        description: |-
          Name of the subnet in which to deploy the VM. The name of the VPC netowrk
          can be obtained from this subnet entity.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      zone:
        description: Zone in which to deploy the VM.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/cloud_deploy.pb
  DeployVmsToCloud:
    description: |-
      Specifies the details about deploying vms to specific clouds where backup
      may be stored and converted.
    type: object
    title: DeployVmsToCloud Parameters.
    properties:
      awsParams:
        description: Specifies various resources when converting and deploying a VM
          to AWS.
        title: |-
          Contains information needed to identify various resources when deploying
          VMs to Cloud.
        x-nullable: true
        $ref: '#/definitions/AwsParams'
      azureParams:
        description: Specifies various resources when converting and deploying a VM
          to Azure.
        x-nullable: true
        $ref: '#/definitions/AzureParams'
      fleetParams:
        description: Specifies various resources when deploying vms to fleet instances.
        x-nullable: true
        $ref: '#/definitions/FleetParams'
    x-go-package: cohesity/iris/server/data/public
  DestroyCloneAppTaskInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined.

      DestroyCloneAppTaskInfoProto extension
      Location
      Extension
      =============================================================================
      sql::DestroyCloneTaskInfo::sql_destroy_clone_app_task_info
      sql/sql.proto
      100
      oracle::DestroyCloneTaskInfo::oracle_destroy_clone_app_task_info
      oracle/oracle.proto
      101
      ad::DestroyTaskInfo::ad_destroy_app_task_info
      ad/ad.proto
      102
      exchange::DestroyTaskInfo::exchange_destroy_app_task_info
      exchange/exchange.proto
      103
      =============================================================================
    type: object
    title: |-
      Message that captures the destroy clone application task state.
      Application specific destroy clone infos are defined as extensions to this
      proto.
    properties:
      appEnv:
        description: The application environment.
        type: integer
        format: int32
        x-go-name: AppEnv
        x-nullable: true
      error:
        description: If an error is encountered during destroy it is set here.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      finished:
        description: This will be set to true if the task is complete on the slave.
        type: boolean
        x-go-name: Finished
        x-nullable: true
      targetEntity:
        description: The target entity on which the application was cloned.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      targetEntityCredentials:
        description: Credentials if any needed to log into the target entity.
        x-nullable: true
        $ref: '#/definitions/Credentials'
    x-go-package: magneto/base/magneto.pb
  DestroyClonedEntityInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined.

      DestroyClonedEntityInfoProto.ClonedEntity extension    Location    Extension
      =============================================================================
      azure::ClonedEntityInfo::azure_cloned_entity_info   azure/azure.proto   100
      aws::ClonedEntityInfo::aws_cloned_entity_info       aws/aws.proto       101
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about a cloned entity that needs to be
      destroyed. Environment specific information are defined as extensions to
      this proto.
    properties:
      clonedEntity:
        description: |-
          The following field is set by the master in order for slave to identify
          the entities that need to be destroyed.
        x-nullable: true
        $ref: '#/definitions/DestroyClonedEntityInfoProto_ClonedEntity'
      clonedEntityStatus:
        type: integer
        format: int32
        x-go-name: ClonedEntityStatus
        x-nullable: true
      destroyClonedEntityState:
        description: |-
          The state of the destroy/teardown of a cloned entity (i.e, VM).

          The following two fields are set by the slave in order for the master to
          find status of the destroy operation.
        type: integer
        format: int32
        x-go-name: DestroyClonedEntityState
        x-nullable: true
      error:
        description: |-
          If the destruction of this entity failed, this field will contain the
          cause of the failure.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      fullViewName:
        description: The full external view name where cloned objects are placed.
        type: string
        x-go-name: FullViewName
        x-nullable: true
      type:
        description: The type of environment this destroy cloned entity info pertains
          to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  DestroyClonedEntityInfoProto_ClonedEntity:
    type: object
    properties:
      entity:
        description: |-
          Proto of the entity created by the clone operation. This field might be
          empty if the clone operation failed. If so, destroy task will make the
          best effort to cleanup this failed cloned entity (i.e, delete the files
          referred by 'relative_restore_path_vec' from the view).
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      relativeRestorePathVec:
        description: |-
          Path of all files created by the clone operation. Each path is relative
          to the clone view.
        type: array
        items:
          type: string
        x-go-name: RelativeRestorePathVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  DestroyClonedTaskStateProto:
    type: object
    properties:
      actionExecutorTargetType:
        description: |-
          Denotes the target for action executor(Bridge/Bridge_Proxy) on which task
          on slave should execute actions.
        type: integer
        format: int32
        x-go-name: ActionExecutorTargetType
        x-nullable: true
      cloneTaskName:
        description: The name of the clone task.
        type: string
        x-go-name: CloneTaskName
        x-nullable: true
      datastoreEntity:
        description: |-
          The EntityProto of the datastore that corresponds to the above
          'view_name'. This field will be empty if no datastore is associated with
          the clone view.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      deployVmsToCloudTaskState:
        description: |-
          Master populates information regarding deploy vm to cloud task state. This
          is needed during restore task of type kConvertAndDeployVMs. We use it
          during destroy clone to delete VMs, network entities and storage blobs.
        title: |-
          The following field is only relevant for a destroy for task of type
          kConvertAndDeployVMs.
        x-nullable: true
        $ref: '#/definitions/DeployVMsToCloudTaskStateProto'
      destroyCloneAppTaskInfo:
        description: |-
          Master populates the information about the destroy clone application task.
          Slave populates the progress and status of the task.
        x-nullable: true
        $ref: '#/definitions/DestroyCloneAppTaskInfoProto'
      destroyCloneVmTaskInfo:
        description: |-
          Master populates the information about the destroy clone task. Slave
          populates the progress and status of the task.
        x-nullable: true
        $ref: '#/definitions/DestroyClonedVMTaskInfoProto'
      destroyMountVolumesTaskInfo:
        description: |-
          Master populates the information about the destroy mount volumes task,
          Slave populate the progress and status of the task.
        x-nullable: true
        $ref: '#/definitions/DestroyMountVolumesTaskInfoProto'
      endTimeUsecs:
        description: |-
          If the destroy clone task has finished, this field contains the end time
          of the task.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: |-
          The error encountered by task (if any). Only valid if the task has
          finished.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      folderEntity:
        description: |-
          A folder entity where the cloned objects are placed. This folder will
          be deleted after all cloned entity are destroyed.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      forceDelete:
        description: flag used to perform force delete, ignore error on delete steps
        type: boolean
        x-go-name: ForceDelete
        x-nullable: true
      fullViewName:
        description: The full external view name where cloned objects are placed.
        type: string
        x-go-name: FullViewName
        x-nullable: true
      parentSourceConnectionParams:
        description: |-
          Note: In case of kConvertAndDeployVMs to Azure, we need the original
          ConnectorParams of the corresponding deploy to Azure task (i.e. original
          Azure subscription id).
        title: |-
          A way to connect to the parent source. We do not use the connection param
          info of the corresponding clone task as it might have changed.
        x-nullable: true
        $ref: '#/definitions/ConnectorParams'
      parentTaskId:
        description: |-
          The id of the task that triggered the destroy task.
          This will be used by refresh task to mark the destroy task as internal
          sub-task.
        type: integer
        format: int64
        x-go-name: ParentTaskId
        x-nullable: true
      performCloneTaskId:
        description: The unique id of the task that performed the clone operation.
        type: integer
        format: int64
        x-go-name: PerformCloneTaskId
        x-nullable: true
      restoreType:
        description: The type of the restore/clone operation that is being destroyed.
        type: integer
        format: int32
        x-go-name: RestoreType
        x-nullable: true
      scheduledConstituentId:
        description: |-
          Constituent id (and the gandalf session id) where this task has been
          scheduled. If -1, the task is not running at any slave. It's possible
          that the task was previously scheduled, but is now being re-scheduled.
        type: integer
        format: int64
        x-go-name: ScheduledConstituentId
        x-nullable: true
      scheduledGandalfSessionId:
        type: integer
        format: int64
        x-go-name: ScheduledGandalfSessionId
        x-nullable: true
      startTimeUsecs:
        description: The start time of this destroy clone task.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      status:
        description: Status of the destroy clone task.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
      taskId:
        description: A globally unique id of this destroy clone task.
        type: integer
        format: int64
        x-go-name: TaskId
        x-nullable: true
      type:
        description: The type of environment that is being operated on.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      user:
        description: The user who requested this destroy clone task.
        type: string
        x-go-name: User
        x-nullable: true
      userInfo:
        description: Specifies information about the user who made the request.
        x-nullable: true
        $ref: '#/definitions/UserInformation'
      vcdConfig:
        description: VCD config for the restored object.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectVCDConfigProto'
      viewBoxId:
        description: The view box id to which 'view_name' belongs to.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName_DEPRECATED:
        description: The view name as provided by the user for the clone operation.
        type: string
        x-go-name: ViewName_DEPRECATED
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  DestroyClonedVMTaskInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined.

      DestroyClonedVMTaskInfoProto extension          Location           Extension
      =============================================================================
      vmware::DestroyClonedTaskInfo::
      vmware_destroy_cloned_vm_task_info            vmware/vmware.proto    100
      hyperv::DestroyClonedTaskInfo::
      hyperv_destroy_cloned_vm_task_info            hyperv/hyperv.proto    101
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about the destroy clone task for any
      environment we support. Environment specific information are defined as
      extensions to this proto.
    properties:
      datastoreNotUnmountedReason:
        description: |-
          If datastore was not unmounted, this field contains the reason for the
          same.
        type: string
        x-go-name: DatastoreNotUnmountedReason
        x-nullable: true
      datastoreUnmounted:
        description: |-
          Whether the datastore corresponding to the clone view was unmounted from
          primary environment.
        type: boolean
        x-go-name: DatastoreUnmounted
        x-nullable: true
      destroyClonedEntityInfoVec:
        description: Vector of all cloned entities that this destroy task will teardown.
        type: array
        items:
          $ref: '#/definitions/DestroyClonedEntityInfoProto'
        x-go-name: DestroyClonedEntityInfoVec
        x-nullable: true
      type:
        description: The type of environment this destroy clone task info pertains
          to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      viewDeleted:
        description: Whether the clone view was deleted by the destroy task.
        type: boolean
        x-go-name: ViewDeleted
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  DestroyMountVolumesTaskInfoProto:
    type: object
    title: Message that captures the destroy mount volumes task state.
    properties:
      error:
        description: If an error is encountered during destroy it is set here.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      finished:
        description: This will be set to true if the task is complete on the slave.
        type: boolean
        x-go-name: Finished
        x-nullable: true
      hostName:
        description: |-
          This is the host name of the ESXi host. It is used if
          magneto_vmware_use_fqdn_for_guest_file_operations is set.
        type: string
        x-go-name: HostName
        x-nullable: true
      mountVolumesInfoProto:
        description: |-
          This contains the mount volumes info proto and the associated setup
          restore disks state. This starts out with contents from the original mount
          volumes info task, but later gets mutated by slave to contain destroy
          related information.
        x-nullable: true
        $ref: '#/definitions/MountVolumesInfoProto'
      slaveTaskStartTimeUsecs:
        description: This is the timestamp at which the slave task started.
        type: integer
        format: int64
        x-go-name: SlaveTaskStartTimeUsecs
        x-nullable: true
      targetEntity:
        description: The target entity on which the mount volumes operation was performed.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      useExistingAgent:
        description: |-
          This will be set to true in two cases:
          1. If persistent agent was used for IVM.
          2. If user chose ephemeral agent during IVM but the host already had
          persistent agent installed.
        type: boolean
        x-go-name: UseExistingAgent
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  DeviceNode:
    description: |-
      Specifies the list of devices that need to be combined to form the
      storage space.
      Only one of the fields is populated with a device node.
      If the device node is a leaf node, leafNode is populated with details
      about the partition blocks in the file.
      If the device node is an intermediate node, intermediateNode is
      populated with a device sub-tree.
    type: object
    title: Device Node.
    properties:
      intermediateNode:
        description: Specifies an intermediate node of the logical device tree.
        x-nullable: true
        $ref: '#/definitions/DeviceTreeDetails'
      leafNode:
        description: Specifies the leaf node of the device tree.
        x-nullable: true
        $ref: '#/definitions/FilePartitionBlock'
    x-go-package: cohesity/iris/server/data/public
  DeviceTree:
    description: |-
      A logical volume is built on a tree where leaves are the slices of
      partitions (PartitionSlice) defined below and intermediate nodes are
      assembled by combining nodes in some mode (linear layout, striped, mirrored,
      RAID etc).
      A DeviceTree is a block device formed by combining one or more Devices
      using a combining strategy.
    type: object
    properties:
      childVec:
        type: array
        items:
          $ref: '#/definitions/DeviceTree_ChildDevice'
        x-go-name: ChildVec
        x-nullable: true
      deviceId:
        description: Internal device identifier of the device to be activated as a
          thin volume.
        type: integer
        format: int64
        x-go-name: DeviceId
        x-nullable: true
      deviceLength:
        description: |-
          The length of this device. This should match the length which is
          computable based on children and combining strategy.

          e.g. if there is only one partition slice in an LVM volume, 'length' in
          the partition slice is equal to 'device_length'.
        type: integer
        format: int64
        x-go-name: DeviceLength
        x-nullable: true
      stripeSize:
        description: |-
          In case data is striped, this represents the length of the stripe.
          The number of stripes is defined by the size of child_vec above.
        type: integer
        format: int32
        x-go-name: StripeSize
        x-nullable: true
      thinPoolChunkSize:
        description: Chunk size. Only populated if device type is thin pool.
        type: integer
        format: int64
        x-go-name: ThinPoolChunkSize
        x-nullable: true
      type:
        description: How to combine the children.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: yoda/base/volume_info.pb
  DeviceTreeDetails:
    description: |-
      Specifies a logical volume stored as a tree where the leaves are
      the blocks of partitions and intermediate nodes are assembled by combining
      nodes using one of the following modes: linear layout, striped,
      mirrored, RAID etc.
      A deviceTree is a block device formed by combining one or more Devices
      using a combining strategy.
    type: object
    title: Device Tree.
    properties:
      combineMethod:
        description: |-
          Specifies how to combine the children of this node.
          The combining strategy for child devices. Some of these strategies imply
          constraint on the number of child devices. e.g. RAID5 will have 5
          children.
          'LINEAR' indicates children are juxtaposed to form this device.
          'STRIPE' indicates children are striped.
          'MIRROR' indicates children are mirrored.
          'RAID5'
          'RAID6'
          'ZERO'
          'THIN'
          'THINPOOL'
          'SNAPSHOT'
          'CACHE'
          'CACHEPOOL'
        type: string
        enum:
        - LINEAR
        - STRIPE
        - MIRROR
        - RAID5
        - RAID6
        - ZERO
        - THIN
        - THINPOOL
        - SNAPSHOT
        - CACHE
        - CACHEPOOL
        x-go-name: CombineMethod
        x-nullable: true
      deviceLength:
        description: |-
          Specifies the length of this device. This number should match the
          length that is calculated from the children and combining method.
        type: integer
        format: int64
        x-go-name: DeviceLength
        x-nullable: true
      deviceNodes:
        description: Specifies the children of this node in the device tree.
        type: array
        items:
          $ref: '#/definitions/DeviceNode'
        x-go-name: DeviceNodes
        x-nullable: true
      stripeSize:
        description: Specifies the size of the striped data if the data is striped.
        type: integer
        format: int32
        x-go-name: StripeSize
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DeviceTree_ChildDevice:
    type: object
    title: The list of devices that need to be combined.
    properties:
      device:
        description: 'Recursion: This device is defined recursively.'
        x-nullable: true
        $ref: '#/definitions/DeviceTree'
      deviceType:
        description: This specifies how the parent device is using this child device.
        type: integer
        format: int32
        x-go-name: DeviceType
        x-nullable: true
      partitionSlice:
        description: 'Base case: this is a partition slice.'
        x-nullable: true
        $ref: '#/definitions/DeviceTree_PartitionSlice'
    x-go-package: yoda/base/volume_info.pb
  DeviceTree_PartitionSlice:
    type: object
    title: This defines the leaf of the device tree mentioned above.
    properties:
      diskFileName:
        description: The disk to use.
        type: string
        x-go-name: DiskFileName
        x-nullable: true
      length:
        description: |-
          The length of data for the LVM volume (for which this device tree is
          being built) in bytes. It does not include size of the LVM meta data.
        type: integer
        format: int64
        x-go-name: Length
        x-nullable: true
      lvmDataOffset:
        description: |-
          Each LVM partition starts with LVM meta data. After the meta data there
          can be data for one or more LVM volumes.

          This field indicates the offset in bytes (relative to partition) where
          data for various LVM volumes starts on the partition.
          NOTE: If this device tree represents first LVM volume on the  partition,
          'lvm_data_offset' is equal to 'offset'.
        type: integer
        format: int64
        x-go-name: LvmDataOffset
        x-nullable: true
      offset:
        description: |-
          This is the offset (in bytes) where data for the LVM volume (for which
          this device tree is being build) starts relative to the start of the
          partition above.
        type: integer
        format: int64
        x-go-name: Offset
        x-nullable: true
      partitionNumber:
        description: The partition to use in the disk above.
        type: integer
        format: int32
        x-go-name: PartitionNumber
        x-nullable: true
    x-go-package: yoda/base/volume_info.pb
  DirQuotaConfig:
    description: Specifies the configuration object of a directory quota.
    type: object
    title: Directory Quota Configuration.
    properties:
      enabled:
        description: Specifies whether the directory quota is enabled on the view.
        type: boolean
        x-go-name: Enabled
        x-nullable: true
      viewName:
        description: Specifies the name of the view.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DirQuotaInfo:
    description: |-
      Specifies the configuration and policy details for directory quota in a
      view.
    type: object
    title: Directory Quota Info.
    properties:
      config:
        description: Specifies the directory quota configuration.
        x-nullable: true
        $ref: '#/definitions/DirQuotaConfig'
      quotas:
        description: Specifies the list of directory quota policies applied on the
          view.
        type: array
        items:
          $ref: '#/definitions/DirQuotaPolicy'
        x-go-name: Quotas
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DirQuotaPolicy:
    description: |-
      Specifies a policy configuration for the directory quota. A policy is the
      sole entity which describes the usage limits of a directory in a view.

      `DirPath` is the identifier of a policy. It must be specified for adding,
      updating or removing a policy. If `Policy` is not set, then it is considered
      to be removed.
    type: object
    title: Directory Quota Policy.
    properties:
      dirPath:
        description: Specifies the path of the directory in the view.
        type: string
        x-go-name: DirPath
        x-nullable: true
      dirWalkPending:
        description: Denotes directory quota walk is pending or not.
        type: boolean
        x-go-name: DirWalkPending
        x-nullable: true
      policy:
        description: Specifies the quota policy to be applied to the directory.
        x-nullable: true
        $ref: '#/definitions/QuotaPolicy'
      usageBytes:
        description: |-
          Specifies the current usage (in bytes) by the directory in the view.
          This is set by the response received from bridge when querying directory
          quota usage.
        type: integer
        format: int64
        x-go-name: UsageBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Disk:
    description: Specifies information about a disk and partitions in a volume.
    type: object
    title: Disk in a Volume.
    properties:
      diskBlocks:
        description: |-
          Array of Disk Blocks.

          Specifies a set of disk blocks by defining the location and offset of
          disk blocks in a disk.
        type: array
        items:
          $ref: '#/definitions/DiskBlock'
        x-go-name: DiskBlocks
        x-nullable: true
      diskFormat:
        description: |-
          Specifies the format of the virtual disk.
          'kVMDK' indicates VMware's Virtual Disk format.
          'kVHD' indicates Microsoft's Virtual Hard Drive format.
          'kVHDx' indicates Microsoft's Hyper-V Virtual Hard Drive format.
          'kRaw' indicates Raw disk format used by KVM, Acropolis.
          'kUnknow' indicates Unknown disk format.
        type: string
        enum:
        - kVMDK
        - kVHD
        - kVHDx
        - kRaw
        - kUnknown
        x-go-name: DiskFormat
        x-nullable: true
      diskPartitions:
        description: |-
          Array of Partitions.

          Specifies information about all the partitions in this disk.
        type: array
        items:
          $ref: '#/definitions/DiskPartition'
        x-go-name: DiskPartitions
        x-nullable: true
      partitionTableFormat:
        description: |-
          Specifies partition table format on a disk.
          'kNoPartition' indicates missing partition table.
          'kMBRPartition' indicates partition table is in Master Boot Record format.
          'kGPTPartition' indicates partition table is in Guid Partition Table format.
          'kSGIPartition' indicates partition table uses SGI scheme.
          'kSUNPartition' indicates partition table uses SUN scheme.
        type: string
        enum:
        - kNoPartition
        - kMBRPartition
        - kGPTPartition
        - kSGIPartition
        - kSUNPartition
        x-go-name: PartitionTableFormat
        x-nullable: true
      sectorSizeBytes:
        description: |-
          Specifies the sector size of hard disk. It is used for mapping the disk
          blocks of the disk file into a linear list of sectors.
        type: integer
        format: int64
        x-go-name: SectorSizeBytes
        x-nullable: true
      uuid:
        description: Specifies the disk uuid.
        type: string
        x-go-name: Uuid
        x-nullable: true
      vmdkFileName:
        description: |-
          Specifies the disk file name. This is the VMDK name and not the
          flat file name.
        type: string
        x-go-name: VmdkFileName
        x-nullable: true
      vmdkSizeBytes:
        description: Specifies the disk size in bytes.
        type: integer
        format: int64
        x-go-name: VmdkSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DiskBlock:
    description: |-
      Specifies a contiguous block by defining an offset and
      length of the block.
    type: object
    title: Disk Block.
    properties:
      lengthBytes:
        description: Specifies the length of the block in bytes.
        type: integer
        format: int64
        x-go-name: LengthBytes
        x-nullable: true
      offsetBytes:
        description: |-
          Specifies the offset of the block (in bytes) from the beginning
          of the containing object such as a physical disk or a
          virtual disk file.
        type: integer
        format: int64
        x-go-name: OffsetBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DiskPartition:
    description: Specifies information about each partition in a physical disk.
    type: object
    title: Disk Partition.
    properties:
      lengthBytes:
        description: Specifies the length of the block in bytes.
        type: integer
        format: int64
        x-go-name: LengthBytes
        x-nullable: true
      number:
        description: Specifies a unique number of the partition within the linear
          disk file.
        type: integer
        format: int64
        x-go-name: Number
        x-nullable: true
      offsetBytes:
        description: |-
          Specifies the offset of the block (in bytes) from the beginning
          of the containing object such as a physical disk or a
          virtual disk file.
        type: integer
        format: int64
        x-go-name: OffsetBytes
        x-nullable: true
      typeUuid:
        description: |-
          Specifies the partition type uuid.
          If disk is unpartitioned, this field is not set.
          If disk is MBR partitioned, this field is set to a partition type.
          If disk is GPT partitioned, this field is set to a partition type
          GUID.
        type: string
        x-go-name: TypeUuid
        x-nullable: true
      uuid:
        description: |-
          Specifies the partition uuid.
          If disk is unpartitioned, this field is not set.
          If disk is MBR partitioned, this field is not set.
          If disk is GPT partitioned, this field is set to a partition GUID.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DiskUnit:
    description: Specifies information about a disk unit in a controller.
    type: object
    title: Disk Unit.
    properties:
      busNumber:
        description: Specifies the Id of the controller bus that controls the disk.
        type: integer
        format: int64
        x-go-name: BusNumber
        x-nullable: true
      controllerType:
        description: Specifies the controller type like SCSI, or IDE etc.
        type: string
        x-go-name: ControllerType
        x-nullable: true
      unitNumber:
        description: |-
          Specifies the disk file name. This is the VMDK name and not the
          flat file name.
        type: integer
        format: int64
        x-go-name: UnitNumber
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DocError:
    type: object
    title: DocError are document error incurred in yoda service while tagging.
    properties:
      documentId:
        description: DocumentId is document which caused the error.
        type: string
        x-go-name: DocumentId
        x-nullable: true
      errorString:
        description: ErrorString is the error converted to string.
        type: string
        x-go-name: ErrorString
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DomainControllers:
    description: Domain Controllers for a domain of an Active Directory domain.
    type: object
    title: Domain Controllers.
    properties:
      domainControllers:
        description: Domain Controllers of a domain of an Active Directory domain.
        type: array
        items:
          type: string
        x-go-name: DomainControllers
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DownloadCftParams:
    type: object
    title: Structure to get the CFT/Json file.
    properties:
      fileName:
        description: Specifies the file name of the cloud formation template.
        type: string
        x-go-name: FileName
        x-nullable: true
      filePath:
        description: |-
          Specifies the file path of the template. If passed null,
          "/home/cohesity/bin" will be considered as file path.
        type: string
        x-go-name: FilePath
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DownloadCftResponse:
    type: object
    title: CFT/Json file response.
    properties:
      content:
        description: Specifies the content of the file.
        type: array
        items:
          type: integer
          format: uint8
        x-go-name: Content
        x-nullable: true
      fileName:
        description: |-
          Specifies the content of the CFT.
          in: body
          Specifies the file name of the cloud formation template.
        type: string
        x-go-name: FileName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DownloadFilesAndFoldersParams:
    description: |-
      DownloadFilesAndFoldersParams holds the information to create a task for
      downloading list of files or folders
    type: object
    title: Download Files And Folders Parameters.
    required:
    - name
    properties:
      filesAndFoldersInfo:
        description: Specifies the absolute paths for list of files and folders to
          download.
        type: array
        items:
          $ref: '#/definitions/FilesAndFoldersInfo'
        x-go-name: FilesAndFoldersInfo
        x-nullable: true
      name:
        description: |-
          Specifies the name of the Download Task. This field must be set and must
          be a unique name.
        type: string
        x-go-name: Name
        x-nullable: true
      sourceObjectInfo:
        description: |-
          Specifies the details of the task that is created in order to download
          the specified list of files and folders.
        x-nullable: true
        $ref: '#/definitions/RestoreObjectDetails'
    x-go-package: cohesity/iris/server/data/public
  DownloadPackageParameters:
    description: |-
      Specifies the parameters needed for a request to download a new software
      package to a Cluster.
    type: object
    title: Download Package Parameters.
    required:
    - url
    properties:
      url:
        description: Specifies a URL from which the package can be downloaded to the
          Cluster.
        type: string
        x-go-name: Url
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  DownloadPackageResult:
    description: Specifies the result of a request to download a package to a Cluster.
    type: object
    title: Download Package Result.
    properties:
      message:
        description: |-
          Specifies a message describing the result of the request to download
          a package to a Cluster.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  EditHostsParameters:
    description: Specifies the parameters needed for an edit hosts request.
    type: object
    title: Edit Hosts Parameters.
    properties:
      hosts:
        description: |-
          Specifies the list of host entries to be edited. Each IP address listed
          in the list of host entries will have its corresponding domain names in
          the /etc/hosts file replaced with the domain names specified here.
        type: array
        items:
          $ref: '#/definitions/HostEntry'
        x-go-name: Hosts
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ElastifileCluster:
    description: Specifies information about a Elastifile Cluster.
    type: object
    title: Elastifile Cluster.
    properties:
      enodeIpAddressVec:
        description: IP addresses of Elastifile nodes.
        type: array
        items:
          type: string
        x-go-name: ElastifileNodeIps
        x-nullable: true
      loadBalancerVip:
        description: Specifies the load balancer VIP if present.
        type: string
        x-go-name: LoadBalancerVip
        x-nullable: true
      name:
        description: Specifies name of a Elastifile Cluster
        type: string
        x-go-name: Name
        x-nullable: true
      uuid:
        description: Specifies the UUID of a Elastifile Cluster.
        type: string
        x-go-name: Uuid
        x-nullable: true
      version:
        description: Specifies the version of a Elastifile Cluster.
        type: string
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ElastifileContainer:
    description: Specifies information about container in an Elastifile Cluster.
    type: object
    title: Elastifile Container.
    properties:
      createdAt:
        description: Specifies the creation date of the container.
        type: string
        x-go-name: CreatedAt
        x-nullable: true
      id:
        description: Specifies id of a Elastifile Container in a Cluster.
        type: integer
        format: int32
        x-go-name: Id
        x-nullable: true
      isNfsInterface:
        description: Specifies if the container has NFS volumes or not.
        type: boolean
        x-go-name: IsNfsInterface
        x-nullable: true
      isSmbInterface:
        description: Specifies if the container has SMB volumes or not.
        type: boolean
        x-go-name: IsSmbInterface
        x-nullable: true
      name:
        description: Specifies the name of the container.
        type: string
        x-go-name: Name
        x-nullable: true
      protocols:
        description: |-
          Specifies Elastifile supported Protocol information enabled on Elastifile
          container.
          'kNfs' indicates NFS protocol in an elastifile container.
          'kSmb' indicates SMB protocol in an elastifile container.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kSmb
        x-go-name: Protocols
        x-nullable: true
      usedBytes:
        description: Specifies the bytes used by the container.
        type: integer
        format: int64
        x-go-name: UsedBytes
        x-nullable: true
      uuid:
        description: Specifies the UUID of the container.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ElastifileProtectionSource:
    description: Specifies a Protection Source in Elastifile environment.
    type: object
    title: Elastifile Protection Source.
    properties:
      cluster:
        description: |-
          Specifies information of Elastifile Cluster. This is set only
          when the entity type is 'kCluster'.
        x-nullable: true
        $ref: '#/definitions/ElastifileCluster'
      container:
        description: |-
          Specifies a container in an Elastifile Cluster. This is set only
          when the entity type is 'kContainer'.
        x-nullable: true
        $ref: '#/definitions/ElastifileContainer'
      name:
        description: Specifies a unique name of the Protection Source.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the entity in an Elastifile file system
          like 'kCluster', 'kContainer'.
          'kCluster' indicates an Elastifile Cluster.
          'kContainer' indicates a container on Elastifile cluster.
        type: string
        enum:
        - kCluster
        - kContainer
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  EmailDeliveryTarget:
    description: |-
      EmailDeliveryTarget
      Specifies the email address and the locale setting for it.
    type: object
    properties:
      emailAddress:
        type: string
        x-go-name: EmailAddress
        x-nullable: true
      locale:
        description: |-
          Specifies the language in which the emails sent to the above defined
          mail address should be in.
        type: string
        x-go-name: Locale
        x-nullable: true
      recipientType:
        description: Specifies the recipient type on how the emails are to received.
        type: integer
        format: int32
        x-go-name: RecipientType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  EmailMetaData:
    description: Specifies details about the emails and the folder containing emails.
    type: object
    title: Email Meta Data.
    properties:
      allUnderHierarchy:
        description: |-
          AllUnderHierarchy specifies if logs of all the tenants under the hierarchy
          of tenant with id TenantId should be returned.
        type: boolean
        x-go-name: AllUnderHierarchy
        x-nullable: true
      bccRecipientAddresses:
        description: Specifies the email addresses of the bcc recipients.
        type: array
        items:
          type: string
        x-go-name: BccRecipientAddresses
        x-nullable: true
      ccRecipientAddresses:
        description: Specifies the email addresses of the cc recipients.
        type: array
        items:
          type: string
        x-go-name: CcRecipientAddresses
        x-nullable: true
      domainIds:
        description: Specifies the domain Ids in which mailboxes are registered.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: DomainIds
        x-nullable: true
      emailSubject:
        description: Specifies the subject of the email.
        type: string
        x-go-name: EmailSubject
        x-nullable: true
      folderKey:
        description: Specifes the Parent Folder key.
        type: integer
        format: int64
        x-go-name: FolderKey
        x-nullable: true
      folderName:
        description: Specifies the parent folder name of the email.
        type: string
        x-go-name: FolderName
        x-nullable: true
      hasAttachments:
        description: Specifies whether the emails have any attachments.
        type: boolean
        x-go-name: HasAttachments
        x-nullable: true
      itemKey:
        description: |-
          Specifies the Key(unique within mailbox) for Outlook item such as Email.
          This key is not indexed but used for identifying the item while restore.
        type: string
        x-go-name: ItemKey
        x-nullable: true
      mailboxIds:
        description: Specifies the mailbox Ids which contains the emails/folders.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: MailboxIds
        x-nullable: true
      protectionJobIds:
        description: |-
          Specifies the protection job Ids which have backed up mailbox(es)
          continaing emails/folders.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionJobIds
        x-nullable: true
      receivedEndTime:
        description: Specifies the unix end time for querying on email's received
          time.
        type: integer
        format: int64
        x-go-name: ReceivedEndTime
        x-nullable: true
      receivedStartTime:
        description: Specifies the unix start time for querying on email's received
          time.
        type: integer
        format: int64
        x-go-name: ReceivedStartTime
        x-nullable: true
      receivedTimeSeconds:
        description: Specifies the unix time when the email was received.
        type: integer
        format: int64
        x-go-name: ReceivedTimeSeconds
        x-nullable: true
      recipientAddresses:
        description: Specifies the email addresses of the recipients.
        type: array
        items:
          type: string
        x-go-name: RecipientAddresses
        x-nullable: true
      senderAddress:
        description: Specifies the email address of the sender.
        type: string
        x-go-name: SenderAddress
        x-nullable: true
      sentTimeSeconds:
        description: Specifies the unix time when the email was sent.
        type: integer
        format: int64
        x-go-name: SentTimeSeconds
        x-nullable: true
      showOnlyEmailFolders:
        description: Specifies whether the query result should include only Email
          folders.
        type: boolean
        x-go-name: ShowOnlyEmailFolders
        x-nullable: true
      tenantId:
        description: TenantId specifies the tenant whose action resulted in the audit
          log.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  EncryptionConfiguration:
    description: |-
      Specifies the parameters the user wants to use when configuring encryption
      for the new Cluster.
    type: object
    title: Encryption Configuration.
    properties:
      enableEncryption:
        description: |-
          Specifies whether or not to enable encryption. If encryption is enabled,
          all data on the Cluster will be encrypted. This can only be enabled at
          Cluster creation time and cannot be disabled later.
        type: boolean
        x-go-name: EnableEncryption
        x-nullable: true
      enableFipsMode:
        description: |-
          Specifies whether or not to enable FIPS mode. EnableEncryption must be
          set to true in order to enable FIPS.
        type: boolean
        x-go-name: EnableFipsMode
        x-nullable: true
      rotationPeriod:
        description: Specifies the rotation period for encryption keys in days.
        type: integer
        format: int32
        x-go-name: RotationPeriod
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  EntityIdentifier:
    description: Specifies a unique identifier for the entity.
    type: object
    title: Entity Identifier.
    properties:
      entityId:
        description: Specifies the unique identifier for the entity in the source
          Cluster.
        x-nullable: true
        $ref: '#/definitions/Value'
    x-go-package: stats/base/stats.pb
  EntityPermissionInformation:
    description: Specifies the permission information of entities.
    type: object
    title: Entity Permission Information.
    properties:
      entityId:
        description: Specifies the entity id.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
      groups:
        description: Specifies groups that have access to entity in case of restricted
          user.
        type: array
        items:
          $ref: '#/definitions/GroupInfo'
        x-go-name: Groups
        x-nullable: true
      isInferred:
        description: |-
          Specifies whether the Entity Permission Information is inferred or not.
          For example, SQL application hosted over vCenter will have inferred entity
          permission information.
        type: boolean
        x-go-name: IsInferred
        x-nullable: true
      tenant:
        description: Specifies basic information of the tenant having access to the
          entity.
        x-nullable: true
        $ref: '#/definitions/TenantInfo'
      users:
        description: Specifies users that have access to entity in case of restricted
          user.
        type: array
        items:
          $ref: '#/definitions/UserInfo'
        x-go-name: Users
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  EntityProto:
    description: Specifies the attributes and the latest statistics about an entity.
    type: object
    title: Entity.
    properties:
      attributeVec:
        description: |-
          Array of Attributes.

          List of attributes of an entity.
        type: array
        items:
          $ref: '#/definitions/KeyValuePair'
        x-go-name: AttributeVec
        x-nullable: true
      entityId:
        description: Specifies a globally unique identifier of an entity.
        x-nullable: true
        $ref: '#/definitions/EntityIdentifier'
      latestMetricVec:
        description: |-
          Array of Metric Statistics.

          List of the latest statistics for all metrics defined in the schema
          that this entity belongs to.
          If statistics for a metric is not available, then that data point is not
          returned.
        type: array
        items:
          $ref: '#/definitions/MetricValue'
        x-go-name: LatestMetricVec
        x-nullable: true
    x-go-package: stats/base/stats.pb
  EntitySchemaProto:
    description: |-
      Specifies the meta-data associated with entity such as the list of
      attributes and time series data.
    type: object
    title: Entity Schema.
    properties:
      attributesDescriptor:
        x-nullable: true
        $ref: '#/definitions/EntitySchemaProto_AttributesDescriptor'
      enableRollup:
        description: |-
          Timeseries for an entity schema is rolled up based on this setting.
          Rollup is disabled by default.
          Rollups cannot be done for metrics with value_type other than kInt64
          or kDouble.
        type: boolean
        x-go-name: EnableRollup
        x-nullable: true
      flushIntervalSecs:
        description: |-
          Defines the interval used to flush in memory stats to scribe table.
          During this time if the stats server is down before flushing, it could
          loose some of the stats. Modules can flush any critical stats
          via AddEntitiesStats API. But this  should be used very judiciously as
          it causes lot of overhead for stats.
        type: integer
        format: int32
        x-go-name: FlushIntervalSecs
        x-nullable: true
      isInternalSchema:
        description: |-
          Specifies if this schema should be displayed in Advanced Diagnostics
          of the Cohesity Dashboard. If false, the schema is displayed.
        type: boolean
        x-go-name: IsInternalSchema
        x-nullable: true
      largestFlushIntervalSecs:
        description: |-
          Use can change the flush interval secs via gflag and this store the
          largest interval seconds set. This is used to round up the timestamp
          to this flush interval secs during range scan.
        type: integer
        format: int32
        x-go-name: LargestFlushIntervalSecs
        x-nullable: true
      name:
        description: |-
          Specifies a name that uniquely identifies an entity schema such as
          'kBridgeClusterStats'. Name cannot have ':' as character.
        type: string
        x-go-name: Name
        x-nullable: true
      rollupGranularityVec:
        type: array
        items:
          $ref: '#/definitions/EntitySchemaProto_Granularity'
        x-go-name: RollupGranularityVec
        x-nullable: true
      schemaDescriptiveName:
        description: |-
          Specifies the name of the Schema as displayed in Advanced Diagnostics
          of the Cohesity Dashboard. For example for the 'kBridgeClusterStats'
          Schema, the descriptive name is 'Cluster Physical Stats'.
        type: string
        x-go-name: SchemaDescriptiveName
        x-nullable: true
      schemaHelpText:
        description: Specifies an optional informational description about the schema.
        type: string
        x-go-name: SchemaHelpText
        x-nullable: true
      timeSeriesDescriptorVec:
        description: |-
          Array of Time Series.

          List of time series of data (set of data points) for metrics.
        type: array
        items:
          $ref: '#/definitions/EntitySchemaProto_TimeSeriesDescriptor'
        x-go-name: TimeSeriesDescriptorVec
        x-nullable: true
      timeToLiveSecs:
        description: |-
          Specifies how long the timeseries data of this schema will be stored.
          After expiry the entire data point(all metrics) is garbage collected.
        type: integer
        format: int64
        x-go-name: TimeToLiveSecs
        x-nullable: true
      version:
        description: Specifies the version of the entity schema.
        type: integer
        format: int64
        x-go-name: Version
        x-nullable: true
    x-go-package: stats/base/entity_schema.pb
  EntitySchemaProto_AttributesDescriptor:
    description: Specifies a list of attributes about an entity.
    type: object
    title: Attributes Descriptor.
    properties:
      attributeVec:
        description: |-
          Array of Attributes.

          List of attributes about an entity.
        type: array
        items:
          $ref: '#/definitions/EntitySchemaProto_KeyValueDescriptor'
        x-go-name: AttributeVec
        x-nullable: true
      keyAttributeNameIndex:
        description: |-
          Specifies the attribute to use as a unique identifier for the entity.
          This value is returned in entityId when the GET
          public/statistics/entities operation is run.
        type: integer
        format: int32
        x-go-name: KeyAttributeNameIndex
        x-nullable: true
    x-go-package: stats/base/entity_schema.pb
  EntitySchemaProto_Granularity:
    description: |-
      Rolling up or Down sampling is performed on timeseries data to reduce
      space usage by timeseries. Rollup Granularity is defined per entity
      schema but rollup function is not defined. Instead we create rolledup
      values for all the rollup functions.
    type: object
    properties:
      rollupIntervalSecs:
        description: |-
          Defines the rollup interval or a bucket size. All data points within
          one time bucket are rolled up to one summary data point using the
          defined rollup function. For example, say, raw metric is published
          at ~30 secs granularity. To generate a hourly or a daily summary
          time series, client can define rolled up metrics having interval
          3600 secs and 86400 secs respectively.
        type: integer
        format: int32
        x-go-name: RollupIntervalSecs
        x-nullable: true
      timeToLiveSecs:
        description: |-
          Defines the duration for which the rolled up data is to be stored.
          Once the lifespan has elapsed, expired data is garbage collected.
        type: integer
        format: int64
        x-go-name: TimeToLiveSecs
        x-nullable: true
    x-go-package: stats/base/entity_schema.pb
  EntitySchemaProto_KeyValueDescriptor:
    description: Specifies a key/value pair.
    type: object
    title: Key/Value Pair.
    properties:
      keyName:
        description: Specifies the name of a key.
        type: string
        x-go-name: KeyName
        x-nullable: true
      valueType:
        description: |-
          Specifies the type of the value that is associated with the key.
          0 specifies a value type of Int64.
          1 specifies a value type of Double.
          2 specifies a value type of String.
          3 specifies a value type of Bytes.
        type: integer
        format: int32
        x-go-name: ValueType
        x-nullable: true
    x-go-package: stats/base/entity_schema.pb
  EntitySchemaProto_TimeSeriesDescriptor:
    description: |-
      Specifies the meta-data required to define a time series of data
      (set of data points) for a metric.
    type: object
    title: Time Series.
    properties:
      metricDescriptiveName:
        description: |-
          Specifies a descriptive name for the metric that is displayed in the
          Advanced Diagnostics of the Cohesity Dashboard.
          For example for the 'kUnmorphedUsageBytes' metric, the descriptive
          name is "Total Logical Space Used".
        type: string
        x-go-name: MetricDescriptiveName
        x-nullable: true
      metricName:
        description: |-
          Specifies the name of the metric such as 'kUnmorphedUsageBytes'.
          It should be unique in an entity schema.
        type: string
        x-go-name: MetricName
        x-nullable: true
      metricUnit:
        x-nullable: true
        $ref: '#/definitions/EntitySchemaProto_TimeSeriesDescriptor_MetricUnit'
      rawMetricPublishIntervalHintSecs:
        description: Specifies a suggestion for the interval to collect raw data points.
        type: integer
        format: int32
        x-go-name: RawMetricPublishIntervalHintSecs
        x-nullable: true
      timeToLiveSecs:
        description: |-
          Specifies how long the data point will be stored.
          Note: In statsv2, as timeseries data of an entity is stored per
          scribe row with metrics as columns, it is good to have
          time_to_live_secs per schema(defined below)
          For existing schemas, we will consider highest time_to_live_secs
          of all metrics as expiration time for all metrics defined in schema.
        type: integer
        format: int64
        x-go-name: TimeToLiveSecs
        x-nullable: true
      valueType:
        description: |-
          Specifies the value type for this metric.
          A metric of type 'string" is not supported, instead use 'bytes'.
          Note that an aggregate metric of type 'bytes' is not supported.
          0 specifies a value type of Int64.
          1 specifies a value type of Double.
          2 specifies a value type of String.
          3 specifies a value type of Bytes.
        type: integer
        format: int32
        x-go-name: ValueType
        x-nullable: true
    x-go-package: stats/base/entity_schema.pb
  EntitySchemaProto_TimeSeriesDescriptor_MetricUnit:
    description: |-
      Specifies the unit of measure for the metric.
      O specifies a unit of space used such as free disk space.
      1 specifies a Unix epoch Timestamp (in microseconds).
      2 specifies a Unix epoch Timestamp (in milliseconds).
      3 specifies a Unix epoch Timestamp (in seconds).
      4 specifies a Unix epoch Timestamp (in minutes).
      5 specifies a counter such as the read IO metric.
      6 specifies the temperature in Centigrade.
      7 specifies the temperature in Fahrenheit.
      8 specifies revolutions per minute such as a CPU fan speed.
      9 specifies a percentage such as CPU or memory usage.
    type: object
    title: Metric Unit.
    properties:
      type:
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: stats/base/entity_schema.pb
  EnvBackupParams:
    description: |-
      Message to capture any additional environment specific backup params at the
      job level.
    type: object
    properties:
      exchangeBackupJobParams:
        description: This is applicable to Exchange environments.
        x-nullable: true
        $ref: '#/definitions/ExchangeBackupJobParams'
      fileStubbingParams:
        description: This is applicable to stubbing in NAS environments.
        x-nullable: true
        $ref: '#/definitions/FileStubbingParams'
      fileUptieringParams:
        description: This is applicable to uptiering in NAS environments.
        x-nullable: true
        $ref: '#/definitions/FileUptieringParams'
      hypervBackupParams:
        description: This is applicable to HyperV type of environments.
        x-nullable: true
        $ref: '#/definitions/HyperVBackupEnvParams'
      nasBackupParams:
        description: This is applicable to NAS type of environments.
        x-nullable: true
        $ref: '#/definitions/NasBackupParams'
      nosqlBackupJobParams:
        description: This is applicable to NoSql DB environments.
        x-nullable: true
        $ref: '#/definitions/NoSqlBackupJobParams'
      o365BackupParams:
        description: This is applicable to stubbing in o365 environments.
        x-nullable: true
        $ref: '#/definitions/O365BackupEnvParams'
      oracleBackupJobParams:
        description: This is applicable to Oracle environments.
        x-nullable: true
        $ref: '#/definitions/OracleBackupJobParams'
      outlookBackupParams:
        description: This is applicable to Outlook type of environments.
        x-nullable: true
        $ref: '#/definitions/OutlookBackupEnvParams'
      physicalBackupParams:
        description: This is applicable to Physical type of environments.
        x-nullable: true
        $ref: '#/definitions/PhysicalBackupEnvParams'
      snapshotManagerParams:
        description: This is applicable to snapshot manager jobs.
        x-nullable: true
        $ref: '#/definitions/SnapshotManagerParams'
      sqlBackupJobParams:
        description: This is applicable to SQL environments.
        x-nullable: true
        $ref: '#/definitions/SqlBackupJobParams'
      vmwareBackupParams:
        description: This is applicable to VMware type of environments.
        x-nullable: true
        $ref: '#/definitions/VMwareBackupEnvParams'
    x-go-package: magneto/base/env_params.pb
  EnvironmentTypeJobParameters:
    description: |-
      Specifies additional parameters that are common to all Protection
      Sources in a Protection Job created for a particular environment type.
    type: object
    title: Environment Specific Common Job Parameters.
    properties:
      awsSnapshotParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          snaphot manger jobs.
        x-nullable: true
        $ref: '#/definitions/AwsSnapshotManagerParameters'
      exchangeParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Types of 'kExchange' type.
        x-nullable: true
        $ref: '#/definitions/ExchangeEnvJobParameters'
      hypervParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Types of 'kHyperV' type.
        x-nullable: true
        $ref: '#/definitions/HypervEnvJobParameters'
      nasParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Types of 'kGenericNas' type.
        x-nullable: true
        $ref: '#/definitions/NasEnvJobParameters'
      office365Parameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          types of 'kO365Outlook' type which incorporates both Mailbox & OneDrive
          backup parameters.
        x-nullable: true
        $ref: '#/definitions/Office365EnvJobParameters'
      oracleParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Types of 'kOracle' type.
        x-nullable: true
        $ref: '#/definitions/OracleEnvJobParameters'
      physicalParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Sources of 'kPhysical' type in a kPhysical environment.
        x-nullable: true
        $ref: '#/definitions/PhysicalEnvJobParameters'
      pureParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          SAN Types.
        x-nullable: true
        $ref: '#/definitions/SanEnvJobParameters'
      sqlParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Types of 'kSQL' type.
        x-nullable: true
        $ref: '#/definitions/SqlEnvJobParameters'
      vmwareParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Types of 'kVMware' type.
        x-nullable: true
        $ref: '#/definitions/VmwareEnvJobParameters'
    x-go-package: cohesity/iris/server/data/public
  ErasureCodingInfo:
    description: Specifies information for erasure coding.
    type: object
    title: Erasure Coding Information.
    properties:
      algorithm:
        description: |-
          Algorthm used for erasure coding.
          REED_SOLOMON indicates the algorithm used for erasure coding.
          LRC indicates the algorithm used for erasure coding.
        type: string
        enum:
        - REED_SOLOMON
        - LRC
        x-go-name: Algorithm
        x-nullable: true
      erasureCodingEnabled:
        description: |-
          Specifies whether Erasure coding is enabled on the Storage Domain
          (View Box).
        type: boolean
        x-go-name: ErasureCodingEnabled
        x-nullable: true
      inlineErasureCoding:
        description: |-
          Specifies if erasure coding should occur inline (as the data is being
          written). This field is only relevant if erasure coding is enabled.
        type: boolean
        x-go-name: InlineErasureCoding
        x-nullable: true
      numCodedStripes:
        description: The number of coded stripes.
        type: integer
        format: int32
        x-go-name: NumCodedStripes
        x-nullable: true
      numDataStripes:
        description: The number of stripes containing data.
        type: integer
        format: int32
        x-go-name: NumDataStripes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Error:
    description: Specifies the error object with error code and a message.
    type: object
    title: Error.
    properties:
      errorCode:
        description: Specifies the error code.
        type: integer
        x-go-name: ErrorCode
        x-nullable: true
      errorMessage:
        description: Specifies the error message.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
  ErrorProto:
    type: object
    properties:
      errorMsg:
        description: An optional detail.
        type: string
        x-go-name: ErrorMsg
        x-nullable: true
      type:
        description: Error.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: yoda/base/error.pb
  EulaConfig:
    description: Specifies the End User License Agreement acceptance information.
    type: object
    title: EULA Configuration.
    required:
    - signedVersion
    - licenseKey
    properties:
      licenseKey:
        description: Specifies the license key.
        type: string
        x-go-name: LicenseKey
        x-nullable: true
      signedByUser:
        description: |-
          Specifies the login account name for the Cohesity user who accepted
          the End User License Agreement.
        type: string
        x-go-name: SignedByUser
        x-nullable: true
        readOnly: true
      signedTime:
        description: Specifies the time that the End User License Agreement was accepted.
        type: integer
        format: int64
        x-go-name: SignedTime
        x-nullable: true
        readOnly: true
      signedVersion:
        description: Specifies the version of the End User License Agreement that
          was accepted.
        type: integer
        format: int64
        x-go-name: SignedVersion
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeBackupJobParams:
    description: Message to capture additional backup job params specific to Exchange.
    type: object
    title: Exchange Backup Job Parameters.
    properties:
      isCopyOnlyFull:
        description: |-
          Whether the backups should be copy-only.
          If this is set to true, then Exchange server will not truncate logs after
          backup.
        type: boolean
        x-go-name: IsCopyOnlyFull
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  ExchangeDAGDatabase:
    description: |-
      Specifies the information about all the copies of the database that
      is part of DAG.
    type: object
    title: Exchange DAG database Information
    properties:
      databaseCopyInfoList:
        description: |-
          Specifies about all the copies of this DAG database. This include
          active and passive copy of the database.
        type: array
        items:
          $ref: '#/definitions/ExchangeDatabaseCopyInfo'
        x-go-name: DatabaseCopyInfoList
        x-nullable: true
      guid:
        description: Specifies the guid of the database.
        type: string
        x-go-name: Guid
        x-nullable: true
      name:
        description: Specifies the name of the database.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeDAGProtectionPreference:
    description: |-
      Specifies the information about the preference order while choosing
      between which database copy of the database which is part of DAG should
      be protected.
    type: object
    title: Exchange DAG Backup preference
    properties:
      passiveCopyPreferenceServerGuidList:
        description: |-
          Specifies the preference order of the exchange servers from which passive
          database copies should be protected.
          The preference order is descending which indicates that passive database
          copy in the first server in the list gets the highest preference.
        type: array
        items:
          type: string
        x-go-name: PassiveCopyPreferenceServerGuidList
        x-nullable: true
      passiveOnly:
        description: |-
          Specifies that only passive database copies should be protected if
          this is set to true.
          If this is set to false, both active and passive database copies can be
          protected.
        type: boolean
        x-go-name: PassiveOnly
        x-nullable: true
      useUserSpecifiedPassivePreferenceOrder:
        description: |-
          Specifies to use the user specified preference order of exchange servers
          from which the passive database copies should be protected if this is
          set to true.

          Every copy of an Exchange database in a DAG is assigned an activation
          preference number. This number is used by the system as part of the
          passive database activation process.
          If this bool flag is set to false, the reverse order of activation
          is used while choosing between passive copies.
        type: boolean
        x-go-name: UseUserSpecifiedPassivePreferenceOrder
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeDagHostsResponse:
    description: |-
      Specifies if the endpoint provided in the request is standalone exchange
      server or not. If the endpoint is not a standalone exchange server, the list
      of hosts which belong to the Exchange DAG are returned.
    type: object
    title: Exchange DAG Hosts Response.
    properties:
      exchangeDagProtectionPreference:
        description: |-
          Specifies information about the preference order while choosing
          between which database copy of the exchange database, which is part of
          DAG, should be protected.
        x-nullable: true
        $ref: '#/definitions/ExchangeDAGProtectionPreference'
      exchangeHostInfoList:
        description: Specifies the list of exchange hosts that belong to Exchange
          DAG.
        type: array
        items:
          $ref: '#/definitions/ExchangeHostInfo'
        x-go-name: ExchangeHostInfoList
        x-nullable: true
      guid:
        description: Specifies the Unique GUID for the DAG.
        type: string
        x-go-name: Guid
        x-nullable: true
      isStandaloneHost:
        description: |-
          Specifies if the endpoint provided in the request is a standlone exchange
          server or not. exchangeHostInfoList is not populated if it is a standalone
          exchange server.
        type: boolean
        x-go-name: IsStandaloneHost
        x-nullable: true
      name:
        description: Specifies the display name of the DAG.
        type: string
        x-go-name: Name
        x-nullable: true
      protectionSourceId:
        description: |-
          Specifies the Protection Source Id of the Exchange DAG if it is already
          created.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeDatabaseCopyInfo:
    description: |-
      Specifies the information about the copy of the Exchange Database on
      particular Exchange Application Server that is part of DAG.
    type: object
    title: Exchange Database Copy Information
    properties:
      activationPreferenceNumber:
        description: |-
          Specifies the activation preference number assigned for this database
          copy.
        type: integer
        format: uint32
        x-go-name: ActivationPreferenceNumber
        x-nullable: true
      appServerId:
        description: |-
          Specifies the entity id of the Exchange Application Server which has
          this database copy.
        type: integer
        format: int64
        x-go-name: AppServerId
        x-nullable: true
      backupSupported:
        description: Specifies if backup is supported for the Exchange database copy.
        type: boolean
        x-go-name: BackupSupported
        x-nullable: true
      backupUnsupportedReasons:
        description: Specifies any reason(s) for Exchange database backup not supported.
        type: array
        items:
          type: string
        x-go-name: BackupUnsupportedReasons
        x-nullable: true
      copyGuid:
        description: Specifies the Guid of the Exchange Database Copy.
        type: string
        x-go-name: CopyGuid
        x-nullable: true
      createdTimeMsecs:
        description: |-
          Specifies the time when the database is created in Unix epoch time
          in milliseconds.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      databaseState:
        description: |-
          Specifies the state of the Exchange database copy.
          Specifies the state of Exchange Database Copy.


          'kUnknown' indicates the status is not known.
          'kMounted' indicates the exchange database copy is mounted and healthy.
          'kError' indicates  the  exchange  database  copy  is unmounted or
          partially mounted or is in error state.
        type: string
        enum:
        - kUnknown
        - kMounted
        - kError
        x-go-name: DatabaseState
        x-nullable: true
      dbSizeBytes:
        description: Specifies the size of the Exchange database copy in bytes.
        type: integer
        format: int64
        x-go-name: DbSizeBytes
        x-nullable: true
      dbguid:
        description: Specifies the guid of the Exchange Database.
        type: string
        x-go-name: DbGuid
        x-nullable: true
      fqdn:
        description: |-
          Specifies the fully qualified domain name of the Exchange Server on which
          the database copy is hosted.
        type: string
        x-go-name: Fqdn
        x-nullable: true
      isActiveCopy:
        description: |-
          Specifies if the Exchange database copy present on the Exchange
          Application server is active or passive.
        type: boolean
        x-go-name: ActiveCopy
        x-nullable: true
      name:
        description: Specifes the name of the Exchange Database.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: |-
          Specifies the owner entity id of the Exchange Application Server which
          has this database copy.
        type: integer
        format: int64
        x-go-name: OwnerId
        x-nullable: true
      serverName:
        description: |-
          Specifies the display name of the Exchange Application Server on which
          the database copy is hosted.
        type: string
        x-go-name: ServerName
        x-nullable: true
      utcOffsetMin:
        description: Specifies UTC time offset of database creation time.
        type: integer
        format: int64
        x-go-name: UtcOffsetMin
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeDatabaseInfo:
    description: Specifies the information about the Exchange Database.
    type: object
    title: Exchange Database Information
    properties:
      appServerId:
        description: |-
          Specifies the entity id of the Exchange Application Server which has
          this database copy.
        type: integer
        format: int64
        x-go-name: AppServerId
        x-nullable: true
      backupSupported:
        description: Specifies if backup is supported for the Exchange database copy.
        type: boolean
        x-go-name: BackupSupported
        x-nullable: true
      backupUnsupportedReasons:
        description: Specifies any reason(s) for Exchange database backup not supported.
        type: array
        items:
          type: string
        x-go-name: BackupUnsupportedReasons
        x-nullable: true
      createdTimeMsecs:
        description: |-
          Specifies the time when the database is created in Unix epoch time
          in milliseconds.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      databaseState:
        description: |-
          Specifies the state of the Exchange database copy.
          Specifies the state of Exchange Database Copy.


          'kUnknown' indicates the status is not known.
          'kMounted' indicates the exchange database copy is mounted and healthy.
          'kError' indicates  the  exchange  database  copy  is unmounted or
          partially mounted or is in error state.
        type: string
        enum:
        - kUnknown
        - kMounted
        - kError
        x-go-name: DatabaseState
        x-nullable: true
      dbSizeBytes:
        description: Specifies the size of the Exchange database copy in bytes.
        type: integer
        format: int64
        x-go-name: DbSizeBytes
        x-nullable: true
      dbguid:
        description: Specifies the guid of the Exchange Database.
        type: string
        x-go-name: DbGuid
        x-nullable: true
      name:
        description: Specifes the name of the Exchange Database.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: |-
          Specifies the owner entity id of the Exchange Application Server which
          has this database copy.
        type: integer
        format: int64
        x-go-name: OwnerId
        x-nullable: true
      utcOffsetMin:
        description: Specifies UTC time offset of database creation time.
        type: integer
        format: int64
        x-go-name: UtcOffsetMin
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeEnvJobParameters:
    description: Specifies job parameters applicable for the Exchange Protection Jobs.
    type: object
    title: Exchange Environment Job Parameters.
    properties:
      backupsCopyOnly:
        description: Specifies whether the backups should be copy-only.
        type: boolean
        x-go-name: BackupsCopyOnly
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeHostInfo:
    description: Specifies the Information about the Exchange host.
    type: object
    title: Exchange Host Info
    properties:
      agentStatus:
        description: |-
          Specifies the status of the agent on the Exchange host.
          Specifies the status of agent on Exchange Application Server.
          'kSupported' indicates the agent is supported for Exchange data protection.
          'kUnSupported' indicates the agent is not supported for Exchange data
          protection.
          'kUpgrade' indicates the agent of server need to be upgraded.
        type: string
        enum:
        - kSupported
        - kUpgrade
        - kUnsupported
        x-go-name: AgentStatus
        x-nullable: true
      endpoint:
        description: Specifies the endpoint of the Exchange host.
        type: string
        x-go-name: Endpoint
        x-nullable: true
      guid:
        description: Specifies the guid of the Exchange host.
        type: string
        x-go-name: Guid
        x-nullable: true
      name:
        description: Specifies the display name of the Exchange host.
        type: string
        x-go-name: Name
        x-nullable: true
      protectionSourceId:
        description: |-
          Specifies the Protection source id of the Physical Host if the
          Exchange application is already registered on the physical host
          with the above endpoint.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
      status:
        description: |-
          Specifies the status of the registration of the Exchange Host.
          Specifies the status of registration of Exchange Application Server.
          'kUnknown' indicates the status is not known.
          'kHealthy' indicates the status is healty and is registered as
          Exchange Server.
          'kUnHealthy' indicates the exchange application is registered on the
          physical server but it is unreachable now.
          'kUnregistered' indicates the server is not registered as physical source.
          'kUnreachable' indicates the server is not reachable from the cohesity
          cluster or the cohesity protection server is not installed on the exchange
          server.
          'kDetached' indicates the server is removed from the ExchangeDAG.
        type: string
        enum:
        - kUnknown
        - kHealthy
        - kUnHealthy
        - kUnregistered
        - kUreachable
        - kDetached
        x-go-name: Status
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeProtectionSource:
    description: |-
      Specifies an object representing an Exchange entity.
      DAG - Database availability group
    type: object
    title: Exchange Protection Source.
    properties:
      DagInfo:
        description: |-
          Specifies the Exchange DAG information if ExchangeProtectionSourceType is
          'kExchangeDAG'.
        x-nullable: true
        $ref: '#/definitions/DagInfo'
      applicationServerInfo:
        description: |-
          Specifies the Exchange Application server information if
          ExchangeProtectionSourceType is 'kExchangeNode'.
        x-nullable: true
        $ref: '#/definitions/ApplicationServerInfo'
      dagDatabaseCopyInfo:
        description: |-
          Specifies the Exchange DAG Database copy information if
          ExchangeProtectionSourceType is 'kExchangeDAGDatabaseCopy'.
        x-nullable: true
        $ref: '#/definitions/ExchangeDatabaseCopyInfo'
      dagDatabaseInfo:
        description: |-
          Specifies the Exchange DAG Database information if
          ExchangeProtectionSourceType is 'kExchangeDAGDatabase'
        x-nullable: true
        $ref: '#/definitions/ExchangeDAGDatabase'
      name:
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: Specifies the entity id of the owner of the Exchange Protection
          Source.
        type: integer
        format: int64
        x-go-name: OwnerId
        x-nullable: true
      standaloneDatabaseCopyInfo:
        description: |-
          Specifies the Exchange Standalone Database information if
          ExchangeProtectionSourceType is 'kExchangeStandaloneDatabase'.
        x-nullable: true
        $ref: '#/definitions/ExchangeDatabaseInfo'
      type:
        description: Specifies the type of the Exchange Protection Source.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID for the Exchange entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExchangeRestoreParameters:
    description: Specifies the exchange restore parameters.
    type: object
    title: Exchange Application Server Restore Parameters.
    properties:
      type:
        description: |-
          Specifies the Exchange restore type.
          Specifies the type of Exchange restore.

          'kNone' specifies no special behaviour.
          'kView' specifies the option to create a view which cann be used by the
          external tools like Kroll to perform mailbox or mail-item recovery.
          'kDatabase' specifies the option to restore an Exchange database.
        type: string
        enum:
        - kNone
        - kView
        - kDatabase
        x-go-name: Type
        x-nullable: true
      viewParameters:
        description: Specifies the paramters for the restore of type kView.
        x-nullable: true
        $ref: '#/definitions/ExchangeRestoreViewParameters'
    x-go-package: cohesity/iris/server/data/public
  ExchangeRestoreViewParameters:
    type: object
    properties:
      endpoint:
        description: |-
          Specifies whether we should white-list the restore view for all the IP
          addresses. If this parameter is set to false, then only the machine
          on which the view is mounted will be white-listed.
        type: boolean
        x-go-name: WhitelistRestoreViewForAll
        x-nullable: true
      mountPoint:
        description: Specifies the path of the SMB share.
        type: string
        x-go-name: MountPoint
        x-nullable: true
      viewName:
        description: |-
          Specifies the view to which the files of an Exchange database has to be
          cloned.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExpandCloudClusterParameters:
    description: Specifies the parameters needed to expand a Cohesity Cloud Edition
      Cluster.
    type: object
    title: Expand Cloud Cluster Parameters.
    required:
    - nodeIps
    properties:
      nodeIps:
        description: Specifies the list of IPs of the new Nodes.
        type: array
        items:
          type: string
        x-go-name: NodeIps
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExpandPhysicalClusterParameters:
    description: |-
      Specifies the parameters needed to expand a Cohesity Physical
      Edition Cluster.
    type: object
    title: Expand Physical Cluster Parameters.
    required:
    - nodeConfigs
    properties:
      chassisSerialToRackIdMap:
        description: ChassisSerialToRackId map.
        type: object
        additionalProperties:
          type: integer
          format: int64
        x-go-name: ChassisSerialToRackIdMap
        x-nullable: true
      nodeConfigs:
        description: Specifies the configuration details of the Nodes in the Cluster.
        type: array
        items:
          $ref: '#/definitions/PhysicalNodeConfiguration'
        x-go-name: NodeConfigs
        x-nullable: true
      vips:
        description: Specifies the virtual IPs to add to the Cluster.
        type: array
        items:
          type: string
        x-go-name: Vips
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExportParameters:
    description: ExportParameters specifies path required to export configuration.
    type: object
    title: Export Parameters.
    properties:
      path:
        description: Specifies the directory path where to create a configuration
          files.
        type: string
        x-go-name: Path
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExtendedRetentionPolicy:
    description: Specifies additional retention policies to apply to backup snapshots.
    type: object
    title: Extended Retention Policy.
    properties:
      Id:
        description: |-
          Specified the Id for a snapshot copy policy. This is generated when the
          policy is created.
        type: string
        x-nullable: true
      backupRunType:
        description: |-
          The backup run type to which this extended retention applies to. If this is
          not set, the extended retention will be applicable to all non-log backup
          types. Currently, the only value that can be set here is kFull.
          'kRegular' indicates a incremental (CBT) backup. Incremental backups
          utilizing CBT (if supported) are captured of the target protection objects.
          The first run of a kRegular schedule captures all the blocks.
          'kFull' indicates a full (no CBT) backup. A complete backup
          (all blocks) of the target protection objects are always captured and
          Change Block Tracking (CBT) is not utilized.
          'kLog' indicates a Database Log backup. Capture the database
          transaction logs to allow rolling back to a specific point in time.
          'kSystem' indicates a system backup. System backups are used to do
          bare metal recovery of the system to a specific point in time.
        type: string
        enum:
        - kRegular
        - kFull
        - kLog
        - kSystem
        x-go-name: BackupRunType
        x-nullable: true
      daysToKeep:
        description: Specifies the number of days to retain copied Snapshots on the
          target.
        type: integer
        format: int64
        x-go-name: DaysToKeep
        x-nullable: true
      multiplier:
        description: |-
          Specifies a factor to multiply the periodicity by, to determine the copy
          schedule.
          For example if set to 2 and the periodicity is hourly, then Snapshots
          from the first eligible Job Run for every 2 hour period is copied.
        type: integer
        format: int32
        x-go-name: Multiplier
        x-nullable: true
      periodicity:
        description: |-
          Specifies the frequency that Snapshots should be copied to the
          specified target. Used in combination with multiplier.
          'kEvery' means that the Snapshot copy occurs after the number of
          Job Runs equals the number specified in the multiplier.
          'kHour' means that the Snapshot copy occurs hourly at the frequency
          set in the multiplier, for example if multiplier is 2, the copy occurs
          every 2 hours.
          'kDay' means that the Snapshot copy occurs daily at the frequency
          set in the multiplier.
          'kWeek' means that the Snapshot copy occurs weekly at the frequency
          set in the multiplier.
          'kMonth' means that the Snapshot copy occurs monthly at the frequency
          set in the multiplier.
          'kYear' means that the Snapshot copy occurs yearly at the frequency
          set in the multiplier.
        type: string
        enum:
        - kEvery
        - kHour
        - kDay
        - kWeek
        - kMonth
        - kYear
        x-go-name: Periodicity
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExternalClientSubnets:
    type: object
    title: Specifies the external Client Subnets that can communicate with this cluster.
    properties:
      clientSubnets:
        description: Specifies the Client Subnets for the cluster.
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: ClientSubnets
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExternalNetworkInfo:
    description: |-
      This is used to display the list of external networks, from which one can
      potentially be selected for an app instance.
    type: object
    title: Specifies the external network information of the app instance.
    properties:
      axonNetworkName:
        description: |-
          Name of axon network corresponding to this external network. Used for
          internal purposes only.
        type: string
        x-go-name: AxonNetworkName
        x-nullable: true
      vlanId:
        description: VLAN id of the network.
        type: integer
        format: int32
        x-go-name: VlanId
        x-nullable: true
      vlanNetworkName:
        description: Display name for the UI to select the external network.
        type: string
        x-go-name: VlanNetworkName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ExtractFileRangeResult:
    description: This will capture output of ExtractFileRange and ExtractNFSFileRange.
    type: object
    title: Extract File Range Result.
    properties:
      data:
        description: The actual data bytes.
        type: array
        items:
          type: integer
          format: uint8
        x-go-name: Data
        x-nullable: true
      eof:
        description: |-
          Will be true if start_offset > file length or EOF is reached. This is an
          alternative to using file_length to determine when entire file is read.
          Used when fetching from a view.
        type: boolean
        x-go-name: Eof
        x-nullable: true
      error:
        description: Success/error status of the operation.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      fileLength:
        description: |-
          The total length of the file. This field would be set provided no error
          had occurred (indicated by error field above).
        type: integer
        format: int64
        x-go-name: FileLength
        x-nullable: true
      startOffset:
        description: The offset from which data was read.
        type: integer
        format: int64
        x-go-name: StartOffset
        x-nullable: true
    x-go-package: yoda/base/yoda.pb
  FeatureUsage:
    type: object
    title: Structure to hold feature usage on cluster side.
    properties:
      currentUsageGiB:
        description: Feature usage by the cluster.
        type: integer
        format: int64
        x-go-name: FeatureUsagesGb
        x-nullable: true
      featureName:
        description: Name of feature.
        type: string
        x-go-name: FeatureName
        x-nullable: true
      numVm:
        description: Number of VM spinned.
        type: integer
        format: int64
        x-go-name: NumVm
        x-nullable: true
    x-go-package: cohesity/nexus/server/common
  FileDistributionMetrics:
    description: Specifies the File distribution metrics.
    type: object
    title: File distribution Metrics.
    properties:
      metricName:
        description: Specifies the name of the metric.
        type: string
        x-go-name: MetricName
        x-nullable: true
      value:
        description: Specifies the value of specified metric name.
        type: integer
        format: int64
        x-go-name: Value
        x-nullable: true
  FileDistributionStats:
    description: Specifies the File distribution stats.
    type: object
    title: File distribution Statistics.
    properties:
      clusterId:
        description: Specifies the cluster Id.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: Specifies the cluster Incarnation Id.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      entityId:
        description: Specifies the id of the entity for which file distribution stats
          are computed.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
      entityName:
        description: Specifies the name of the entity for which file distribution
          stats are computed.
        type: string
        x-go-name: EntityName
        x-nullable: true
      metricsList:
        description: Specifies the list of file stats for different file extensions.
        type: array
        items:
          $ref: '#/definitions/FileDistributionMetrics'
        x-go-name: MetricsList
        x-nullable: true
  FileDistributionStatsList:
    description: Specifies the File distribution stats list.
    type: array
    title: File distribution Statistics List.
    items:
      $ref: '#/definitions/FileDistributionStats'
  FileExtensionFilter:
    type: object
    properties:
      fileExtensionsList:
        description: The list of file extensions to apply
        type: array
        items:
          type: string
        x-go-name: FileExtensionsList
        x-nullable: true
      isEnabled:
        description: If set, it enables the file extension filter
        type: boolean
        x-go-name: IsEnabled
        x-nullable: true
      mode:
        description: |-
          The mode applied to the list of file extensions
          'kWhitelist' indicates a whitelist extension filter.
          'kBlacklist' indicates a blacklist extension filter.
        type: string
        enum:
        - kWhitelist
        - kBlacklist
        x-go-name: Mode
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FileFstatResult:
    description: FileFstatResult is the struct to return the result of file Fstats.
    type: object
    title: File Fstat Result.
    properties:
      cookie:
        description: |-
          Cookie is used for paginating results. If ReadVMDirResult is returning
          partial results, this field will be set. Supplying this cookie will
          resume listing from where this result left off.
        type: integer
        format: uint64
        x-go-name: Cookie
        x-nullable: true
      fstatInfo:
        description: FstatInfo is the stat information for the file.
        x-nullable: true
        $ref: '#/definitions/FileStatInfo'
    x-go-package: cohesity/iris/server/data/public
  FileId:
    type: object
    title: Specifies the file Identifier. A file is identified with these three Ids.
    properties:
      entityId:
        description: Specifies the entity id of the file.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
      rootInodeId:
        description: Specifies the root inode id of the file system that file belongs
          to.
        type: integer
        format: int64
        x-go-name: RootInodeId
        x-nullable: true
      viewId:
        description: Specifies the id of the View the file belongs to.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FileLevelDataLockConfig:
    description: |-
      Specifies a config to lock files in a view - to protect from malicious or
      an accidental attempt to delete or modify the files in this view.
    type: object
    title: File Level Data Lock Configurations.
    properties:
      autoLockAfterDurationIdle:
        description: |-
          Specifies the duration to lock a file that has not been accessed or
          modified (ie. has been idle) for a certain duration of time in
          milliseconds. Do not set if it is required to disable auto lock.
        type: integer
        format: uint64
        x-go-name: AutoLockAfterDurationIdleMsecs
        x-nullable: true
      defaultFileRetentionDurationMsecs:
        description: |-
          Specifies a global default retention duration for files in this view, if
          file lock is enabled for this view. Also, it is a required field if file
          lock is enabled. Set to -1 if the required default retention period is
          forever.
        type: integer
        format: int64
        x-go-name: DefaultRetentionDurationMsecs
        x-nullable: true
      expiryTimestampMsecs:
        description: Specifies a definite timestamp in milliseconds for retaining
          the file.
        type: integer
        format: uint64
        x-go-name: ExpiryTimestampMsecs
        x-nullable: true
      lockingProtocol:
        description: |-
          Specifies the supported mechanisms to explicity lock a file from NFS/SMB
          interface. Supported locking protocols: kSetReadOnly, kSetAtime.
          'kSetReadOnly' is compatible with Isilon/Netapp behaviour. This locks the
          file and the retention duration is determined in this order:
          1) atime, if set by user/application and within min and max retention
          duration.
          2) Min retention duration, if set.
          3) Otherwise, file is switched to expired data automatically.
          'kSetAtime' is compatible with Data Domain behaviour.
        type: string
        enum:
        - kSetReadOnly
        - kSetAtime
        x-go-name: LockingProtocol
        x-nullable: true
      maxRetentionDurationMsecs:
        description: |-
          Specifies a maximum duration in milliseconds for which any file in this
          view can be retained for. Set to -1 if the required retention duration is
          forever. If set, it should be greater than or equal to the default
          retention period as well as the min retention period.
        type: integer
        format: int64
        x-go-name: MaxRetentionDurationMsecs
        x-nullable: true
      minRetentionDurationMsecs:
        description: |-
          Specifies a minimum retention duration in milliseconds after a file gets
          locked. The file cannot be modified or deleted during this timeframe. Set
          to -1 if the required retention duration is forever. This should be set
          less than or equal to the default retention duration.
        type: integer
        format: int64
        x-go-name: MinRetentionDurationMsecs
        x-nullable: true
      mode:
        description: |-
          Specifies the mode of file level datalock.
          Enterprise mode can be upgraded to Compliance mode, but Compliance mode
          cannot be downgraded to Enterprise mode.
          kCompliance: This mode would disallow all user to delete/modify file or
          view under any condition when it 's in locked status except for deleting
          view when the view is empty.
          kEnterprise: This mode would follow the rules as compliance mode for
          normal users. But it would allow the storage admin
          (1) to delete view or file anytime no matter
          it is in locked status or expired.
          (2) to rename the view
          (3) to bring back the retention period when it's in locked mode
          A lock mode of a file in a view can be in one of the following:

          'kCompliance': Default mode of datalock, in this mode, Data Security Admin
          cannot modify/delete this view when datalock is in effect. Data Security
          Admin can delete this view when datalock is expired.
          'kEnterprise' : In this mode, Data Security Admin can change view name or
          delete view when datalock is in effect. Datalock in this mode can be
          upgraded to 'kCompliance' mode.
        type: string
        enum:
        - kCompliance
        - kEnterprise
        x-go-name: Mode
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FileLockStatus:
    description: Specifies the information of lock status for a file.
    type: object
    title: File Lock Status.
    properties:
      expiryTimestampMsecs:
        description: Specifies a expiry timestamp in milliseconds until the file is
          locked.
        type: integer
        format: int64
        x-go-name: ExpiryTimestampMsecs
        x-nullable: true
      holdTimestampMsecs:
        description: |-
          Specifies a override timestamp in milliseconds when an expired file is
          kept on hold.
        type: integer
        format: int64
        x-go-name: HoldTimestampMsecs
        x-nullable: true
      lockTimestampMsecs:
        description: Specifies the timestamp at which the file was locked.
        type: integer
        format: int64
        x-go-name: LockedTimestampMsecs
        x-nullable: true
      mode:
        description: |-
          Specifies the mode of the file lock. 'kCompliance', 'kEnterprise'.
          A lock mode of a file in a view can be in one of the following:

          'kCompliance': Default mode of datalock, in this mode, Data Security Admin
          cannot modify/delete this view when datalock is in effect. Data Security
          Admin can delete this view when datalock is expired.
          'kEnterprise' : In this mode, Data Security Admin can change view name or
          delete view when datalock is in effect. Datalock in this mode can be
          upgraded to 'kCompliance' mode.
        type: string
        enum:
        - kCompliance
        - kEnterprise
        x-go-name: Mode
        x-nullable: true
      state:
        description: Specifies the lock state of the file.
        type: integer
        format: int32
        x-go-name: State
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FileNlmLocks:
    description: Specifies per-file NLM locks
    type: object
    properties:
      fileId:
        description: File identitfiers
        x-nullable: true
        $ref: '#/definitions/FileId'
      nlmLocks:
        description: Specifies the list of NLM locks in a view.
        type: array
        items:
          $ref: '#/definitions/NlmLock'
        x-go-name: NlmLocks
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FilePartitionBlock:
    description: |-
      Defines a leaf node of a device tree. This refers to a logical
      partition in a virtual disk file.
    type: object
    title: File Partition Block.
    properties:
      diskFileName:
        description: Specifies the disk file name where the logical partition is.
        type: string
        x-go-name: DiskFileName
        x-nullable: true
      lengthBytes:
        description: Specifies the length of the block in bytes.
        type: integer
        format: int64
        x-go-name: LengthBytes
        x-nullable: true
      number:
        description: Specifies a unique number of the partition within the linear
          disk file.
        type: integer
        format: int64
        x-go-name: Number
        x-nullable: true
      offsetBytes:
        description: |-
          Specifies the offset of the block (in bytes) from the beginning
          of the containing object such as a physical disk or a
          virtual disk file.
        type: integer
        format: int64
        x-go-name: OffsetBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FilePathFilter:
    description: |-
      Specifies filters to match files and directories on a Server.
      Two kinds of filters are supported. a) prefix which always starts
      with '/'. b) posix which always starts with '*' (cannot be "*" only).
      Regular expressions are not supported.
      If a directory is matched, the action is applicable to all of its
      descendants. File paths not matching any protectFilters are not backed up.

      An example is:
      Protect Filters: "/"
      Exclude Filters: "/tmp", "*.mp4"
      Using such a policy will include everything under the root directory except
      the /tmp directory and all the mp4 files.
    type: object
    title: File or Directory Path Filter.
    properties:
      excludeFilters:
        description: |-
          Array of Excluded File Path Filters.

          Specifies filters to match files or directories that should be removed
          from the list of objects matching ProtectFilters.
        type: array
        items:
          type: string
        x-go-name: ExcludeFilters
        x-nullable: true
      protectFilters:
        description: |-
          Array of Protected File Path Filters.

          Specifies filters to match files or directories that should be protected.
        type: array
        items:
          type: string
        x-go-name: ProtectFilters
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FilePathParameters:
    description: |-
      Specifies a file or a directory to protect in a Physical Server.
      If a directory is specified, all of its descendants are also backed up.
      Optionally, files or subdirectories can be explicitly excluded.
    type: object
    title: File or Directory to Protect.
    properties:
      backupFilePath:
        description: |-
          Specifies absolute path to a file or a directory in a Physical Server
          to protect.
        type: string
        x-go-name: BackupFilePath
        x-nullable: true
      excludedFilePaths:
        description: |-
          Array of Excluded File Paths.

          Specifies absolute paths to descendant files or subdirectories
          of backupFilePath that should not be protected.
        type: array
        items:
          type: string
        x-go-name: ExcludedFilePaths
        x-nullable: true
      skipNestedVolumes:
        description: |-
          Specifies if any subdirectories under backupFilePath, where local or
          network volumes are mounted, should be excluded from being protected.
          If true, the volumes are not protected.
          deprecated: true
        type: boolean
        x-go-name: SkipNestedVolumes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FileRestoreInfo:
    description: Specifies restore information of a file or a folder.
    type: object
    title: File Restore Information.
    properties:
      error:
        description: |-
          Specifies any error status for the file. If this error is set,
          it means we fail to get information for this file or file is not present
          in this instance id.
        x-nullable: true
        $ref: '#/definitions/RequestError'
      filename:
        description: Specifies the path of the file/directory.
        type: string
        x-go-name: Filename
        x-nullable: true
      filesystemVolume:
        description: Specifies the filesystem volume information.
        x-nullable: true
        $ref: '#/definitions/FilesystemVolume'
      isFolder:
        description: Specifies whether the file path is a folder.
        type: boolean
        x-go-name: IsFolder
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FileSearchResult:
    description: Specifies details about the found file or folder.
    type: object
    title: File/Folder Search Result.
    properties:
      adObjectMetaData:
        description: Specifies the metadata about the AD objects.
        x-nullable: true
        $ref: '#/definitions/AdObjectMetaData'
      documentType:
        description: Specifies the inferred document type.
        type: string
        x-go-name: DocumentType
        x-nullable: true
      emailMetaData:
        description: Specifies the metadata about the Outlook Emails.
        x-nullable: true
        $ref: '#/definitions/EmailMetaData'
      fileVersions:
        description: |-
          Array of File Versions.

          Specifies the different snapshot versions of a file or folder
          that were captured at different times.
        type: array
        items:
          $ref: '#/definitions/FileVersion'
        x-go-name: FileVersions
        x-nullable: true
      filename:
        description: Specifies the name of the found file or folder.
        type: string
        x-go-name: Filename
        x-nullable: true
      isFolder:
        description: |-
          Specifies if the found item is a folder.
          If true, the found item is a folder.
        type: boolean
        x-go-name: IsFolder
        x-nullable: true
      jobId:
        description: |-
          Specifies the Job id for the Protection Job that is currently
          associated with object that contains the backed up file or folder.
          If the file or folder was backed up on current Cohesity Cluster,
          this field contains the id for the Job that captured the object
          that contains the file or folder.
          If the file or folder was backed up on a Primary Cluster and
          replicated to this Cohesity Cluster, a new Inactive Job is created,
          the object that contains the file or folder is now associated
          with new Inactive Job, and this field
          contains the id of the new Inactive Job.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobUid:
        description: |-
          Specifies the universal id of the Protection Job that backed up
          the object that contains the file or folder.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      oneDriveDocumentMetadata:
        description: Specifies the metadata about the OneDrive documents.
        x-nullable: true
        $ref: '#/definitions/OneDriveDocumentMetadata'
      protectionSource:
        description: Specifies the Protection Source to which the file or folder belongs.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      registeredSourceId:
        description: |-
          Specifies the id of the top-level registered source (such as a
          vCenter Server) where the source object that contains the
          the file or folder is stored.
        type: integer
        format: int64
        x-go-name: RegisteredSourceId
        x-nullable: true
      sharepointDocumentMetadata:
        description: Specifies the metadata about the Sharepoint documents.
        x-nullable: true
        $ref: '#/definitions/SharepointDocumentMetadata'
      snapshotTags:
        description: Snapshot tags present on this document
        type: array
        items:
          type: string
        x-go-name: SnapshotTags
        x-nullable: true
      sourceId:
        description: Specifies the source id of the object that contains the file
          or folder.
        type: integer
        format: int64
        x-go-name: SourceId
        x-nullable: true
      tags:
        description: Tags present on this document.
        type: array
        items:
          type: string
        x-go-name: Tags
        x-nullable: true
      tagsToSnapshotsMap:
        description: Mapping from snapshot tags to.
        type: object
        additionalProperties:
          type: array
          items:
            type: integer
            format: int64
        x-go-name: TagsToSnapshotsMap
        x-nullable: true
      type:
        description: Specifies the type of the file document such as KDirectory, kFile,
          etc.
        type: string
        enum:
        - kDirectory
        - kFile
        - kEmail
        - kSymlink
        x-go-name: Type
        x-nullable: true
      viewBoxId:
        description: |-
          Specifies the id of the Domain (View Box) where the source object that
          contains the file or folder is stored.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FileSearchResults:
    description: |-
      Specifies an array of found files and folders. In addition, a count is
      provided to indicate if additional requests must be made to get
      the full result.
    type: object
    title: File/Folder Search Result.
    properties:
      files:
        description: |-
          Array of Files and Folders.

          Specifies the list of files and folders returned by this request that
          match the specified search and filter criteria.
          The number of files returned is limited by the pageCount field.
        type: array
        items:
          $ref: '#/definitions/FileSearchResult'
        x-go-name: Files
        x-nullable: true
      paginationCookie:
        description: |-
          Specifies cookie for resuming search if pagination is being used.
          For Librarian queries only.
        type: string
        x-go-name: PaginationCookie
        x-nullable: true
      totalCount:
        description: |-
          Specifies the total number of files and folders that match the filter and
          search criteria. Use this value to determine how many additional
          requests are required to get the full result.
        type: integer
        format: int64
        x-go-name: TotalCount
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FileSnapshotInformation:
    description: |-
      Specifies the information about the snapshot that contains the file
      or folder. In addition, information about the file or folder is
      provided.
    type: object
    title: File/Folder Snapshot Information.
    properties:
      hasArchivalCopy:
        description: |-
          If true, this snapshot is located on an archival target
          (such as a tape or AWS).
        type: boolean
        x-go-name: HasArchivalCopy
        x-nullable: true
      hasLocalCopy:
        description: If true, this snapshot is located on a local Cohesity Cluster.
        type: boolean
        x-go-name: HasLocalCopy
        x-nullable: true
      hasRemoteCopy:
        description: If true, this snapshot is located on a Remote Cohesity Cluster.
        type: boolean
        x-go-name: HasRemoteCopy
        x-nullable: true
      modifiedTimeUsecs:
        description: |-
          Specifies the time when the file or folder was last modified.
          Specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: ModifiedTimeUsecs
        x-nullable: true
      replicaInfoList:
        description: Specifies the list of replication information about the current
          snapshot.
        type: array
        items:
          $ref: '#/definitions/ReplicaInfo'
        x-go-name: ReplicaInfoList
        x-nullable: true
      sizeBytes:
        description: Specifies the size of the file or folder in bytes.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
      snapshot:
        description: Specifies the snapshot that contains the specified file or folder.
        x-nullable: true
        $ref: '#/definitions/SnapshotAttempt'
    x-go-package: cohesity/iris/server/data/public
  FileStatInfo:
    type: object
    title: Represents fstat result on a file.
    properties:
      mtimeUsecs:
        description: If this is a file, the mtime as returned by stat.
        type: integer
        format: int64
        x-go-name: MtimeUsecs
        x-nullable: true
      size:
        description: If this is a file, the size of the file as returned by stat.
        type: integer
        format: int64
        x-go-name: Size
        x-nullable: true
      type:
        description: |-
          The type of this entity. This field will not be populated for ReadDir
          results, since the DirEntry already contains the type information.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: yoda/base/yoda.pb
  FileStubbingParams:
    description: |-
      File Stubbing Parameters
      Message to capture the additional stubbing params for a file-based
      environment.
    type: object
    properties:
      coldFileWindow:
        description: |-
          Identifies the cold files in the NAS source. Files that haven't been
          accessed/modified in the last cold_file_window msecs or are older than
          cold_window_msecs are migrated.
        type: integer
        format: int64
        x-go-name: ColdFileWindow
        x-nullable: true
      deleteOrphanData:
        description: Delete migrated data if no symlink at source is pointing to it.
        type: boolean
        x-go-name: DeleteOrphanData
        x-nullable: true
      fileSelectPolicy:
        description: File migrate policy based on file access/modify time and age.
        type: integer
        format: int32
        x-go-name: FileSelectPolicy
        x-nullable: true
      fileSize:
        description: |-
          Gives the size criteria to be used for selecting the files to be migrated.
          The cold files that are equal and greater than file_size or
          smaller than file_size are migrated.
        type: integer
        format: int64
        x-go-name: FileSize
        x-nullable: true
      fileSizePolicy:
        description: File size policy for selecting files to migrate.
        type: integer
        format: int32
        x-go-name: FileSizePolicy
        x-nullable: true
      filteringPolicy:
        description: |-
          The filtering policy to decide which objects within a source should be
          stubbed. If this is not specified, then all the objects within the
          source will be migrated based on the migration policy.
          We use the filtering_policy in NasBackupParams. So this field is
          deprecated.
        x-nullable: true
        $ref: '#/definitions/FilteringPolicyProto'
      migrateWithoutStub:
        description: Migrate data without stub.
        type: boolean
        x-go-name: MigrateWithoutStub
        x-nullable: true
      nfsMountPath:
        description: |-
          Mount path where the Cohesity target view must be mounted on all
          NFS clients for accessing the migrated data.
        type: string
        x-go-name: NfsMountPath
        x-nullable: true
      targetViewName:
        description: The target view name to which the data will be migrated.
        type: string
        x-go-name: TargetViewName
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  FileUptieringParams:
    type: object
    title: File Uptiering Parameters for NAS migration.
    properties:
      fileSelectPolicy:
        description: File uptier policy based on file access/modify time.
        type: integer
        format: int32
        x-go-name: FileSelectPolicy
        x-nullable: true
      fileSize:
        description: |-
          Gives the size criteria to be used for selecting the files to be uptiered.
          The hot files, which are greater or smaller than file_size, are uptiered.
        type: integer
        format: int64
        x-go-name: FileSize
        x-nullable: true
      fileSizePolicy:
        description: File size policy for selecting files to uptier.
        type: integer
        format: int32
        x-go-name: FileSizePolicy
        x-nullable: true
      hotFileWindow:
        description: |-
          Identifies the hot files in the view. Files which are accessed
          num_file_access times in hot_file_window msecs, are uptiered. It is only
          applicable when file_select_policy is kLastAccessed and num_file_access is
          greater than 1.
        type: integer
        format: int64
        x-go-name: HotFileWindow
        x-nullable: true
      nfsMountPath:
        description: |-
          Mount path where the Cohesity target view is mounted on NFS clients while
          migrating the data.
        type: string
        x-go-name: NfsMountPath
        x-nullable: true
      numFileAccess:
        description: |-
          Number of times file must be accessed within hot_file_window in order to
          qualify for uptiering. Applicable only when file_select_policy is
          kLastAccessed.
        type: integer
        format: uint32
        x-go-name: NumFileAccess
        x-nullable: true
      sourceViewName:
        description: The source view name from which the data will be uptiered.
        type: string
        x-go-name: SourceViewName
        x-nullable: true
      uptierAllFiles:
        description: |-
          If set, all files in the view will be uptiered regardless of
          file_select_policy, num_file_access, hot_file_window, file_size
          constraints.
        type: boolean
        x-go-name: UptierAllFiles
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  FileVersion:
    description: Specifies information about a single file or folder.
    type: object
    title: File/Folder Version.
    properties:
      modifiedTimeUsecs:
        description: |-
          Specifies the time when the file or folder was last modified.
          Specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: ModifiedTimeUsecs
        x-nullable: true
      sizeBytes:
        description: |-
          Specifies the size of the file or folder (in bytes)
          from the most recent snapshot.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
      snapshots:
        description: |-
          Array of Snapshots.

          Specifies the available snapshots of the file or folder. When a Job Run
          executes, it captures a snapshot of object (such as a VM)
          that contains the file or folder.
        type: array
        items:
          $ref: '#/definitions/SnapshotAttempt'
        x-go-name: Snapshots
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FilenamePatternToDirectory:
    description: |-
      Specifies a filename pattern and the directory path where to keep files
      matching that pattern.
    type: object
    title: Filename Pattern to Directory.
    properties:
      directory:
        description: Specifies the directory where to keep the files matching the
          pattern.
        type: string
        x-go-name: Directory
        x-nullable: true
      filenamePattern:
        description: |-
          Specifies a pattern to be matched with filenames. This can be a
          regex expression.
        type: string
        x-go-name: FilenamePattern
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FilerAuditLogConfiguration:
    description: Specifies the settings of the filer audit log configuration.
    type: object
    title: Filer Audit Log Configuration.
    required:
    - enabled
    - retentionPeriodDays
    properties:
      enabled:
        description: |-
          Specifies if filer audit logging is enabled on the Cohesity Cluster.
          If 'true', filer audit logging is enabled. Otherwise, it is disabled.
        type: boolean
        x-go-name: Enabled
        x-nullable: true
      retentionPeriodDays:
        description: |-
          Specifies the number of days to keep (retain) the filer audit logs.
          Audit logs generated before the period of time specified by
          retentionPeriodDays are removed from the Cohesity Cluster.
        type: integer
        format: int32
        x-go-name: RetentionPeriodDays
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FilesAndFoldersInfo:
    description: |-
      FilesAndFolders specifies the metadata information about the files and(or)
      folders for creating a download task.
    type: object
    title: File and Folders Information.
    properties:
      absolutePath:
        description: AbsolutePath specifies the absolute path of the specified file
          or folder.
        type: string
        x-go-name: AbsolutePath
        x-nullable: true
      isDirectory:
        description: IsDirectory specifies if specified object is a directory or not.
        type: boolean
        x-go-name: IsDirectory
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FilesToDirectoryMapping:
    type: object
    title: A message that specifes files and their corresponding direcory.
    properties:
      filePattern:
        description: Source file name. The file name can be a regex matching source
          files.
        type: string
        x-go-name: FilePattern
        x-nullable: true
      targetDirectory:
        description: Target directtory for the source file pattern.
        type: string
        x-go-name: TargetDirectory
        x-nullable: true
    x-go-package: magneto/base/common.pb
  FilesystemVolume:
    description: Specifies information about a filesystem volume.
    type: object
    title: Filesystem Volume.
    properties:
      disks:
        description: |-
          Array of Disks and Partitions.

          Specifies information about all the disks and partitions needed to
          mount this logical volume.
        type: array
        items:
          $ref: '#/definitions/Disk'
        x-go-name: Disks
        x-nullable: true
      displayName:
        description: Specifies a description about the filesystem.
        type: string
        x-go-name: DisplayName
        x-nullable: true
      filesystemType:
        description: Specifies type of the filesystem on this volume.
        type: string
        x-go-name: FilesystemType
        x-nullable: true
      filesystemUuid:
        description: Specifies the uuid of the filesystem.
        type: string
        x-go-name: FilesystemUuid
        x-nullable: true
      isSupported:
        description: If true, this is a supported filesystem volume type.
        type: boolean
        x-go-name: IsSupported
        x-nullable: true
      logicalVolume:
        description: |-
          Specify attributes for a kLMV (Linux) or kLDM (Windows) filesystem.
          This field is set only for kLVM and kLDM volume types.
        title: Logical Volume.
        allOf:
        - $ref: '#/definitions/LogicalVolume'
        x-nullable: true
      logicalVolumeType:
        description: |-
          Specifies the type of logical volume such as kSimpleVolume, kLVM or kLDM.
          'kSimpleVolume' indicates a simple volume. Data can be used by just
          mounting the only one partition present on the disk.
          'kLVM' indicates a logical volume on Linux managed by a Logical Volume
          Manager. In order to access the data, deviceTree must be created based
          on the specification in logicalVolume.deviceTree.
          'kLDM' indicates a logical volume on Windows managed by Logical Disk
          Manager.
        type: string
        enum:
        - kSimpleVolume
        - kLVM
        - kLDM
        x-go-name: LogicalVolumeType
        x-nullable: true
      name:
        description: Specifies the name of the volume such as /C.
        type: string
        x-go-name: Name
        x-nullable: true
      volumeGuid:
        description: |-
          VolumeGuid is the Volume guid.
          This is populated for kPhysical environments.
        type: string
        x-go-name: VolumeGuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FilteringPolicyProto:
    description: |-
      Proto to encapsulate the filtering policy for backup objects like files or
      directories. If an object is not matched by any of the 'allow_filters', it
      will be excluded in the backup. If an object is matched by one of the
      'deny_filters', it will always be excluded in the backup. Basically
      'deny_filters' overwrite 'allow_filters' if they both match the same object.
      Currently we only support two kinds of filter: prefix which always starts
      with '/', or postfix which always starts with '*' (cannot be "*" only). We
      don't support regular expression right now.
      A concrete example is:
      Allow filters: "/"
      Deny filters: "/tmp", "*.mp4"
      Using such a policy will include everything under the root directory except
      the /tmp directory and all the mp4 files.
    type: object
    title: Filtering Policy Proto.
    properties:
      allowFilters:
        description: List of filters to allow matched objects for backup.
        type: array
        items:
          type: string
        x-go-name: AllowFilters
        x-nullable: true
      denyFilters:
        description: List of filters to deny matched objects for backup.
        type: array
        items:
          type: string
        x-go-name: DenyFilters
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  FixedUnixIdMapping:
    description: |-
      Specifies the fields when mapping type is set to 'kFixed'. It maps all
      Active Directory users of a domain to a fixed Unix uid, and gid.
    type: object
    title: Fixed Unix ID Mapping.
    properties:
      gid:
        description: Specifies the fixed Unix GID, when mapping type is set to kFixed.
        type: integer
        format: int64
        x-go-name: Gid
        x-nullable: true
      uid:
        description: Specifies the fixed Unix UID, when mapping type is set to kFixed.
        type: integer
        format: int64
        x-go-name: Uid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FlashBladeFileSystem:
    description: Specifies information about a Flash Blade File System in a Storage
      Array.
    type: object
    title: Flash Blade File System.
    properties:
      backupEnabled:
        description: |-
          Specifies whether the .snapshot directory exists on the file system.
          Backup is enabled only if the directory exists.
        type: boolean
        x-go-name: BackupEnabled
        x-nullable: true
      createdTimeMsecs:
        description: |-
          Specifies the time when the filesystem was created in Unix epoch time
          in milliseconds.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      logicalCapacityBytes:
        description: Specifies the total capacity in bytes of the file system.
        type: integer
        format: int64
        x-go-name: LogicalCapacityBytes
        x-nullable: true
      logicalUsedBytes:
        description: |-
          Specifies the size of logical data currently represented on the
          file system in bytes.
        type: integer
        format: int64
        x-go-name: LogicalUsedBytes
        x-nullable: true
      nfsInfo:
        description: |-
          Specifies information about an NFS export. This field is set if the file
          system supports protocol type 'kNfs'.
        x-nullable: true
        $ref: '#/definitions/FlashBladeNfsInfo'
      physicalUsedBytes:
        description: |-
          Specifies the size of physical data currently consumed by the file
          system. This includes the space used for the snapshots.
        type: integer
        format: int64
        x-go-name: PhysicalUsedBytes
        x-nullable: true
      protocols:
        description: |-
          List of Protocols.

          Specifies the list of protocols enabled on the file system.
          'kNfs' indicates NFS exports are supported on Pure FlashBlade File System.
          'kCifs2' indicates CIFS/SMB Shares are supported on Pure FlashBlade File
          System.
          'kHttp' indicates object protocol over HTTP and HTTPS are supported.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kCifs2
          - kHttp
        x-go-name: Protocols
        x-nullable: true
      smbInfo:
        description: |-
          Specifies information about an SMB share. This field is set if the
          file system supports protocol type 'kSMB2'.
        x-nullable: true
        $ref: '#/definitions/FlashBladeSmbInfo'
      uniqueUsedBytes:
        description: |-
          Specifies the size of physical data consumed by the file system
          itself not including the size of the snapshots.
        type: integer
        format: int64
        x-go-name: UniqueUsedBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FlashBladeNetworkInterface:
    description: Specifies network interface detail of a Flash Blade Storage Array.
    type: object
    title: Flash Blade Network Interface.
    properties:
      ipAddress:
        description: Specifies the IP address of the Pure Storage FlashBlade Array.
        type: string
        x-go-name: IpAddress
        x-nullable: true
      name:
        description: Specifies the name of the network interface.
        type: string
        x-go-name: Name
        x-nullable: true
      vlan:
        description: Specifies the id of the VLAN network of the Pure Storage FlashBlade
          Array.
        type: integer
        format: int32
        x-go-name: Vlan
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FlashBladeNfsInfo:
    description: |-
      Specifies information specific to NFS protocol exposed by Pure Flash Blade
      file system.
    type: object
    title: Flash Blade NFS Information.
    properties:
      exportRules:
        description: |-
          Specifies NFS protocol export rules. Rules are in the form host(options).
          host represents one of the following categories:

          IP address in the form ddd.ddd.ddd.ddd for IPv4, or
          xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx for IPv6.

          Netmask in the form ddd.ddd.ddd.ddd/dd for IPv4, or
          xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx/xxx for IPv6.

          Wildcard in the form * to represent all clients

          options in parenthesis represents a comma-separated list of NFS export
          options.
          Valid export options are rw, ro, root_squash, no_root_squash, and
          fileid_32bit.
        type: string
        x-go-name: ExportRules
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FlashBladeProtectionSource:
    description: Specifies a Protection Source in Pure Storage FlashBlade environment.
    type: object
    title: Pure Storage FlashBlade Protection Source.
    properties:
      fileSystem:
        description: |-
          Specifies a Pure Storage FlashBlade File System information.
          This is set only when the object type is 'kFileSystem'.
        x-nullable: true
        $ref: '#/definitions/FlashBladeFileSystem'
      name:
        description: Specifies a unique name of the Protection Source.
        type: string
        x-go-name: Name
        x-nullable: true
      storageArray:
        description: |-
          Specifies a Pure Storage FlashBlade Array information. This is set only
          when the object type is 'kStorageArray'.
        x-nullable: true
        $ref: '#/definitions/FlashBladeStorageArray'
      type:
        description: |-
          Specifies the type of managed object in a Pure Storage FlashBlade
          like 'kStorageArray' or 'kFileSystem'.
          'kStorageArray' indicates a top level Pure Storage FlashBlade array.
          'kFileSystem' indicates a Pure Storage FlashBlade file system within the
          array.
        type: string
        enum:
        - kStorageArray
        - kFileSystem
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FlashBladeSmbInfo:
    description: |-
      Specifies information specific to SMB shares exposed by Pure Flash Blade
      file system.
    type: object
    title: Flash Blade SMB Information.
    properties:
      aclMode:
        description: |-
          ACL mode for this SMB share.
          'kNative' specifies native ACL mode supports UNIX-like ACLs and Windows
          ACLs. In native mode, because SMB natively supports both ACLs while NFS
          only supports UNIX ACLs, ACLs will not be shared between SMB and NFS.
          'kShared' shares UNIX-like ACL permissions with the NFS protocol.
          In shared mode both protocol ACL permissions are required to match.
          When one protocol creates files or modifies permissions, they must comply
          with the permission settings of the other protocol.
        type: string
        enum:
        - kShared
        - kNative
        x-go-name: AclMode
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FlashBladeStorageArray:
    description: Specifies information about a Pure Storage FlashBlade Array.
    type: object
    title: Flash Blade Storage Array.
    properties:
      capacityBytes:
        description: |-
          Specifies the total capacity in bytes of the Pure Storage FlashBlade
          Array.
        type: integer
        format: int64
        x-go-name: CapacityBytes
        x-nullable: true
      id:
        description: |-
          Specifies a unique id of a Pure Storage FlashBlade Array.
          The id is unique across Cohesity Clusters.
        type: string
        x-go-name: Id
        x-nullable: true
      networks:
        description: Specifies the network interfaces of the Pure Storage FlashBlade
          Array.
        type: array
        items:
          $ref: '#/definitions/FlashBladeNetworkInterface'
        x-go-name: Networks
        x-nullable: true
      physicalUsedBytes:
        description: Specifies the space used for physical data in bytes.
        type: integer
        format: int64
        x-go-name: PhysicalUsedBytes
        x-nullable: true
      revision:
        description: Specifies the revision of the Pure Storage FlashBlade software.
        type: string
        x-go-name: Revision
        x-nullable: true
      version:
        description: |-
          Specifies the software version running on the Pure Storage FlashBlade
          Array.
        type: string
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FleetNetworkParams:
    description: Specifies the various network params for the fleet.
    type: object
    title: Fleet Network Parameters.
    properties:
      region:
        description: Specifies the region for the fleet.
        type: string
        x-go-name: Region
        x-nullable: true
      subnet:
        description: Specifies the subnet for the fleet.
        type: string
        x-go-name: Subnet
        x-nullable: true
      vpc:
        description: Specifies the vpc for the fleet.
        type: string
        x-go-name: Vpc
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FleetParams:
    description: Specifies various resources when deploying a VM to Fleet instances.
    type: object
    title: Fleet Parameters.
    properties:
      fleetNetworkParams:
        description: Specifies the network params for the fleet.
        x-nullable: true
        $ref: '#/definitions/FleetNetworkParams'
      fleetSubnetType:
        description: |-
          Specifies the subnet type of the fleet.
          Specifies the type of the fleet subnet.
          'kCluster' implies same subnet as of Cluster, valid only for Cloud Edition
          cluster.
          'kSourceVM' implies same subnet as of source vm.
          'kCustom' implies the custome subnet.
        type: string
        enum:
        - kCluster
        - kSourceVM
        - kCustom
        x-go-name: FleetSubnetType
        x-nullable: true
      fleetTags:
        description: Specifies the tag information for the fleet.
        type: array
        items:
          $ref: '#/definitions/FleetTag'
        x-go-name: FleetTags
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FleetTag:
    description: Specfies the key,value pair for the fleet tag.
    type: object
    title: Fleet Tag Parameters.
    properties:
      key:
        description: Specifies the key for the fleet tag.
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        description: Specifies the value for the fleet tag.
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FreeNodeInformation:
    description: Specifies the Metadata of a free Node on the network.
    type: object
    title: Free Node Information.
    properties:
      chassisSerial:
        description: Specifies the serial number of the Chassis the Node is installed
          in.
        type: string
        x-go-name: ChassisSerial
        x-nullable: true
      connectedTo:
        description: Specifies whether or not this is the Node that is sending the
          response.
        type: boolean
        x-go-name: ConnectedTo
        x-nullable: true
      id:
        description: Specifies the ID of the node.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      ip:
        description: Specifies the IP address of the Node.
        type: string
        x-go-name: Ip
        x-nullable: true
      ipmiIp:
        description: Specifies the IPMI IP of the Node.
        type: string
        x-go-name: IpmiIp
        x-nullable: true
      nodeSerial:
        description: Specifies the serial number of the Node.
        type: string
        x-go-name: NodeSerial
        x-nullable: true
      nodeUiSlot:
        description: |-
          Specifies the postition for the UI to display the Node in the Cluster
          creation page.
        type: string
        x-go-name: NodeUiSlot
        x-nullable: true
      numSlotsInChassis:
        description: |-
          Specifies the number of Node slots present in the Chassis where this
          Node is installed.
        type: integer
        format: uint32
        x-go-name: NumSlotsInChassis
        x-nullable: true
      productModel:
        description: Specifies the product model of the node.
        type: string
        x-go-name: ProductModel
        x-nullable: true
      slotNumber:
        description: Specifies the number of the slot the Node is installed in.
        type: string
        x-go-name: SlotNumber
        x-nullable: true
      softwareVersion:
        description: Specifies the version of the software installed on the Node.
        type: string
        x-go-name: SoftwareVersion
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  FullSnapshotInfo:
    description: |-
      Specifies the info regarding how to restore to a particular full or
      incremental snapshot.
    type: object
    properties:
      restoreInfo:
        description: Specifies the full or incremental snapshot.
        x-nullable: true
        $ref: '#/definitions/RestoreInfo'
      snapshotTarget:
        description: |-
          Specifies the location holding snapshot copies that may be used for
          restore.
        type: array
        items:
          $ref: '#/definitions/SnapshotTargetSettings'
        x-go-name: SnapshotTarget
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GcpCredentials:
    description: Specifies the credentials to authenticate with Google Cloud Platform.
    type: object
    title: GCP source Credentials.
    properties:
      clientEmailAddress:
        description: Specifies Client email address associated with the service account.
        type: string
        x-go-name: ClientEmailAddress
        x-nullable: true
      clientPrivateKey:
        description: Specifies Client private associated with the service account.
        type: string
        x-go-name: ClientPrivateKey
        x-nullable: true
      gcpType:
        description: |-
          Specifies the entity type such as 'kIAMUser' if the environment is kGCP.
          Specifies the type of a GCP source entity.
          'kIAMUser' indicates a unique user within a GCP account.
          'kProject' represents compute resources and storage.
          'kRegion' indicates a geographical region in the global infrastructure.
          'kAvailabilityZone' indicates an availability zone within a region.
          'kVirtualMachine' indicates a Virtual Machine running in GCP environment.
          'kVPC' indicates a virtual private cloud (VPC) network within GCP.
          'kSubnet' indicates a subnet inside the VPC.
          'kNetworkSecurityGroup' represents a network security group.
          'kInstanceType' represents various machine types.
          'kLabel' represents a label present on the instances.
          'kMetaData' represents a custom metadata present on instances.
          'kTag' represents a network tag on instances.
          'kVPCConnector' represents a VPC connector used for serverless VPC access.
        type: string
        enum:
        - kIAMUser
        - kProject
        - kRegion
        - kAvailabilityZone
        - kVirtualMachine
        - kVPC
        - kSubnet
        - kNetworkSecurityGroup
        - kInstanceType
        - kLabel
        - kMetadata
        - kTag
        - kVPCConnector
        x-go-name: GcpType
        x-nullable: true
      projectId:
        description: Specifies Id of the project associated with Google cloud account.
        type: string
        x-go-name: ProjectId
        x-nullable: true
      vpcNetwork:
        description: Specifies the VPC Network to deploy proxy VMs.
        type: string
        x-go-name: VpcNetwork
        x-nullable: true
      vpcSubnetwork:
        description: Specifies the subnetwork to deploy proxy VMs.
        type: string
        x-go-name: VpcSubnetwork
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GcpParams:
    description: Specifies various resources when converting and deploying a VM to
      GCP.
    type: object
    title: GCP Parameters.
    properties:
      instanceId:
        description: Specifies id of the GCP instance type in which to deploy the
          VM.
        type: integer
        format: int64
        x-go-name: ProjectId
        x-nullable: true
      region:
        description: Specifies id of the GCP region in which to deploy the VM.
        type: integer
        format: int64
        x-go-name: RegionId
        x-nullable: true
      subnetId:
        description: Specifies id of the subnet within above VPC.
        type: integer
        format: int64
        x-go-name: Subnet
        x-nullable: true
      virtualPrivateCloudId:
        description: Specifies id of the Virtual Private Cloud to chose for the instance
          type.
        type: integer
        format: int64
        x-go-name: Zone
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GcpProtectionSource:
    description: Specifies a Protection Source in GCP environment.
    type: object
    title: GCP Protection Source.
    properties:
      clientEmailAddress:
        description: Specifies Client email address associated with the service account.
        type: string
        x-go-name: ClientEmailAddress
        x-nullable: true
      clientPrivateKey:
        description: Specifies Client private associated with the service account.
        type: string
        x-go-name: ClientPrivateKey
        x-nullable: true
      gcpType:
        description: |-
          Specifies the entity type such as 'kIAMUser' if the environment is kGCP.
          Specifies the type of a GCP source entity.
          'kIAMUser' indicates a unique user within a GCP account.
          'kProject' represents compute resources and storage.
          'kRegion' indicates a geographical region in the global infrastructure.
          'kAvailabilityZone' indicates an availability zone within a region.
          'kVirtualMachine' indicates a Virtual Machine running in GCP environment.
          'kVPC' indicates a virtual private cloud (VPC) network within GCP.
          'kSubnet' indicates a subnet inside the VPC.
          'kNetworkSecurityGroup' represents a network security group.
          'kInstanceType' represents various machine types.
          'kLabel' represents a label present on the instances.
          'kMetaData' represents a custom metadata present on instances.
          'kTag' represents a network tag on instances.
          'kVPCConnector' represents a VPC connector used for serverless VPC access.
        type: string
        enum:
        - kIAMUser
        - kProject
        - kRegion
        - kAvailabilityZone
        - kVirtualMachine
        - kVPC
        - kSubnet
        - kNetworkSecurityGroup
        - kInstanceType
        - kLabel
        - kMetadata
        - kTag
        - kVPCConnector
        x-go-name: GcpType
        x-nullable: true
      hostProjectId:
        description: |-
          Specifies the host project id.
          It is populated in entities of type kSubnet if the subnet is part of a
          shared VPC. This contains the ID of host project the subnet belongs to.
          Populated in entities of type kProject if the project is a service project
          in a Shared VPC setup. This contains the ID of the host project it is
          attached to.
        type: string
        x-go-name: HostProjectId
        x-nullable: true
      hostType:
        description: |-
          Specifies the OS type of the Protection Source of type 'kVirtualMachine'
          such as 'kWindows' or 'kLinux'.
          overrideDescription: true
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      ipAddressesVM:
        description: Specifies the IP address of the entity of type 'kVirtualMachine'.
        type: string
        x-go-name: IpAddressVM
        x-nullable: true
      name:
        description: |-
          Specifies the name of the Object set by the Cloud Provider.
          If the provider did not set a name for the object, this field is not set.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: |-
          Specifies the owner id of the resource in GCP environment. With type,
          name and ownerId gives a globally unique identity to the GCP entity.
        type: string
        x-go-name: OwnerId
        x-nullable: true
      physicalSourceId:
        description: |-
          Specifies the Protection Source id of the registered Physical Host.
          If the cloud entity is protected using a Physical Agent, it must be
          registered as a physical host.
        type: integer
        format: int64
        x-go-name: PhysicalSourceId
        x-nullable: true
      projectId:
        description: |-
          Specifies the project Id.
          For the kIAMUser entity this contains the id of the project to be used
          to deploy proxy VMs. For entities of type kVirtualMachine this contains
          the id of the project the virtual machine belongs to.
        type: string
        x-go-name: ProjectId
        x-nullable: true
      regionId:
        description: |-
          Specifies the region Id.
          For the kIAMUser entity this contains the region to be used to deploy
          proxy VMs. For entities of type kVirtualMachine this contains the region
          the virtual machine belongs to.
        type: string
        x-go-name: RegionId
        x-nullable: true
      resourceId:
        description: Specifies the unique Id of the resource given by the cloud provider.
        type: string
        x-go-name: ResourceId
        x-nullable: true
      restoreTaskId:
        description: |-
          Specifies the id of the "convert and deploy" restore task that
          created the entity in the cloud.

          It is required to support the DR-to-cloud usecase where we replicate an
          on-prem entity to a cluster running in cloud, bring it up using
          "convert and deploy" mechanism, protect it using a cloud job that uses
          physical adapter, and convert it back to the on-prem format before
          replication.

          Before replicating, we need to update the backup task state of the backed
          up entity using the on-prem entity and on-prem entity's parent.
          The id is used to lookup the restore entity that contains details about
          the on-prem entity.

          It is set at the time of refreshing the cloud entity hierarchy if all the
          following conditions are met:
          Name of the current entity matches with name of any cloud entity
          deployed using the "convert and deploy" restore task.
          Restore entity associated with the above matched cloud entity has
          'failed_over' flag set to true in its cloud extension.
        type: integer
        format: int64
        x-go-name: RestoreTaskId
        x-nullable: true
      tagAttributes:
        description: Specifies the list of GCP tag attributes.
        type: array
        items:
          $ref: '#/definitions/TagAttribute'
        x-go-name: TagAttributes
        x-nullable: true
      type:
        description: |-
          Specifies the type of an GCP Protection Source Object such as
          'kIAMUser', 'kProject', 'kRegion', etc.
          Specifies the type of a GCP source entity.
          'kIAMUser' indicates a unique user within a GCP account.
          'kProject' represents compute resources and storage.
          'kRegion' indicates a geographical region in the global infrastructure.
          'kAvailabilityZone' indicates an availability zone within a region.
          'kVirtualMachine' indicates a Virtual Machine running in GCP environment.
          'kVPC' indicates a virtual private cloud (VPC) network within GCP.
          'kSubnet' indicates a subnet inside the VPC.
          'kNetworkSecurityGroup' represents a network security group.
          'kInstanceType' represents various machine types.
          'kLabel' represents a label present on the instances.
          'kMetaData' represents a custom metadata present on instances.
          'kTag' represents a network tag on instances.
          'kVPCConnector' represents a VPC connector used for serverless VPC access.
        type: string
        enum:
        - kIAMUser
        - kProject
        - kRegion
        - kAvailabilityZone
        - kVirtualMachine
        - kVPC
        - kSubnet
        - kNetworkSecurityGroup
        - kInstanceType
        - kLabel
        - kMetadata
        - kTag
        - kVPCConnector
        x-go-name: Type
        x-nullable: true
      vpcNetwork:
        description: Specifies the VPC Network to deploy proxy VMs.
        type: string
        x-go-name: VpcNetwork
        x-nullable: true
      vpcSubnetwork:
        description: Specifies the subnetwork to deploy proxy VMs.
        type: string
        x-go-name: VpcSubnetwork
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GdprCopyTask:
    description: CopyTask defines the copy tasks of a job.
    type: object
    title: GDPR Copy Task.
    properties:
      JobId:
        description: |-
          Specifies the job with which this copy task is tied to.
          Note: this is only used for internal aggregation.
        type: integer
        format: int64
        x-nullable: true
      cloudTargetType:
        description: |-
          Specifies the cloud deploy target type. For example 'kAzure','kAWS',
          'kGCP'
        type: string
        x-go-name: CloudTargetType
        x-nullable: true
      expiryTimeUsecs:
        description: Specifies the expiry of the copy task.
        type: integer
        format: int64
        x-go-name: ExpiryTimeUsecs
        x-nullable: true
      targetId:
        description: Specifies the id for the target.
        type: integer
        format: int64
        x-go-name: TargetId
        x-nullable: true
      targetName:
        description: Specifies the target of the replication or archival tasks.
        type: string
        x-go-name: TargetName
        x-nullable: true
      totalSnapshots:
        description: Specifies the total number of snapshots.
        type: integer
        format: int64
        x-go-name: TotalSnapshots
        x-nullable: true
      type:
        description: |-
          Specifies details about the Copy Run of a Job Run.
          A Copy task copies snapshots resulted from a backup run to an external
          target which could be 'kLocal', 'kArchival', or 'kRemote'.
        type: string
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetAlertTypesParams:
    description: Specifies params to get alert types.
    type: object
    title: Get Alert Types Params.
    properties:
      alertCategoryList:
        description: |-
          Specifies a list of Alert Categories to filter alert types by.
          Specifies the category of an Alert.
          kDisk - Alerts that are related to Disk.
          kNode - Alerts that are related to Node.
          kCluster - Alerts that are related to Cluster.
          kNodeHealth - Alerts that are related to Node Health.
          kClusterHealth - Alerts that are related to Cluster Health.
          kBackupRestore - Alerts that are related to Backup/Restore.
          kEncryption - Alerts that are related to Encryption.
          kArchivalRestore - Alerts that are related to Archival/Restore.
          kRemoteReplication - Alerts that are related to Remote Replication.
          kQuota - Alerts that are related to Quota.
          kLicense - Alerts that are related to License.
          kHeliosProActiveWellness - Alerts that are related to Helios ProActive Wellness.
          kHeliosAnalyticsJobs - Alerts that are related to Helios Analytics Jobs.
          kHeliosSignatureJobs - Alerts that are related to Helios Signature Jobs.
          kSecurity - Alerts that are related to Security.
          kAppsInfra - Alerts that are related to applications infra.
          kAntivirus - Alerts that are related to antivirus.
          kArchivalCopy - Alerts that are related to archival copies.
        type: array
        items:
          type: string
          enum:
          - kDisk
          - kNode
          - kCluster
          - kNodeHealth
          - kClusterHealth
          - kBackupRestore
          - kEncryption
          - kArchivalRestore
          - kRemoteReplication
          - kQuota
          - kLicense
          - kHeliosProActiveWellness
          - kHeliosAnalyticsJobs
          - kHeliosSignatureJobs
          - kSecurity
          - kAppsInfra
          - kAntivirus
          - kArchivalCopy
        x-go-name: AlertCategoryList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetAllJobRunsResult:
    description: |-
      Specifies the common result structure of the response of all runs info (
      protection, replication, archival etc.).
    type: object
    properties:
      endTimeMsecs:
        description: Specifies the end time of the run.
        type: integer
        format: int64
        x-go-name: EndTimeMsecs
        x-nullable: true
      envType:
        description: |-
          Specifies the environment type of the job.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: EnvType
        x-nullable: true
      jobId:
        description: Specifies the job id.
        type: string
        x-go-name: JobId
        x-nullable: true
      jobName:
        description: Specifies the job name.
        type: string
        x-go-name: JobName
        x-nullable: true
      jobRunId:
        description: Specifies the job run id.
        type: string
        x-go-name: JobRunId
        x-nullable: true
      jobType:
        description: |-
          Specifies the job type, protection, replication, archival, apollo,
          indexing etc.
        type: string
        x-go-name: JobType
        x-nullable: true
      startTimeMsecs:
        description: Specifies the start time of the run.
        type: integer
        format: int64
        x-go-name: StartTimeMsecs
        x-nullable: true
      viewBoxId:
        description: Specifies the view box id.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetConsumerStatsResult:
    description: GetConsumerStatsResult is the result of get consumerStats api.
    type: object
    title: GetConsumerStatsResult
    properties:
      cookie:
        description: |-
          Specifies an opaque string to pass to get the next set of active opens.
          If null is returned, this response is the last set of active opens.
        type: string
        x-go-name: Cookie
        x-nullable: true
      statsList:
        description: Specifies a list of consumer stats.
        type: array
        items:
          $ref: '#/definitions/ConsumerStats'
        x-go-name: StatsList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetJobRunInfoResult:
    type: object
    title: Specifies the common result structure of the response of a job run.
    properties:
      bytesTransferred:
        description: Specifies bytes transferred in the run.
        type: integer
        format: int64
        x-go-name: BytesTransferred
        x-nullable: true
      endTimeUsecs:
        description: Specifies the end time of the run.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      failureEntities:
        description: Specifies the number of failed objects in the run.
        type: integer
        format: int64
        x-go-name: FailureEntities
        x-nullable: true
      jobId:
        description: Specifies the job id.
        type: string
        x-go-name: JobId
        x-nullable: true
      jobRunId:
        description: Specifies the job run id.
        type: string
        x-go-name: JobRunId
        x-nullable: true
      jobType:
        description: |-
          Specifies the job type, protection, replication, archival, apollo,
          indexing etc.
        type: string
        x-go-name: JobType
        x-nullable: true
      slaViolated:
        description: Specifies if the sla was violated the run.
        type: boolean
        x-go-name: SlaViolated
        x-nullable: true
      startTimeUsecs:
        description: Specifies the start time of the run.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      status:
        description: Specifies status of the run
        type: integer
        format: int64
        x-go-name: Status
        x-nullable: true
      successEntities:
        description: Specifies the number successful objects in the run.
        type: integer
        format: int64
        x-go-name: SuccessEntities
        x-nullable: true
      totalEntities:
        description: Specifies the number of objects in the run.
        type: integer
        format: int64
        x-go-name: TotalEntities
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetMRJarUploadPathResult:
    description: |-
      User can upload jar files containing mappers and reducers. Iris will upload
      these jar files in Yoda's internal view. Yoda will mount its internal view
      and send Iris the mount point.
    type: object
    properties:
      error:
        description: Status code for this http rpc.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      jarUploadPath:
        description: Path where Jars can be uploaded by Iris.
        type: string
        x-go-name: JarUploadPath
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  GetMapReduceAppRunsParams:
    description: |-
      GetMapReduceAppRunsParams specifies the input params to fetch the map reduce
      application runs.
    type: object
    title: Get Map Reduce App Run Parameters.
    properties:
      appId:
        description: ApplicationId is the Id of the map reduce application.
        type: integer
        format: int64
        x-go-name: ApplicationId
        x-nullable: true
      appInstanceId:
        description: ApplicationInstanceId is the Id of the map reduce application
          instance.
        type: integer
        format: int64
        x-go-name: ApplicationInstanceId
        x-nullable: true
      includeDetails:
        description: |-
          If this flag is true, then send details of instance, else send only
          RunInfo.
        type: boolean
        x-go-name: IncludeDetails
        x-nullable: true
      lastNumInstances:
        description: Give last N instance of an app based on end time.
        type: integer
        format: int32
        x-go-name: LastNumInstances
        x-nullable: true
      maxRunEndTimeInSecs:
        description: |-
          MaxRunEndTimestampInSecs specifies the maximum job run end timestamp
          in seconds. App run instances with end time less than equal to
          MaxRunEndTimestampInSecs will be selected. Default is LONG_MAX (inf).
        type: integer
        format: int64
        x-go-name: MaxRunEndTimestampInSecs
        x-nullable: true
      maxRunStartTimeInSecs:
        description: |-
          MaxRunStartTimestampInSecs specifies the maximum job run start timestamp
          in seconds. App run instances with start time less than equal to
          MaxRunStartTimestampInSecs will be selected. Default is LONG_MAX (inf).
        type: integer
        format: int64
        x-go-name: MaxRunStartTimestampInSecs
        x-nullable: true
      minRunEndTimeInSecs:
        description: |-
          MinRunEndTimestampInSecs specifies the minimum job run end timestamp
          in seconds. App run instances with end time greater than equal to
          MinRunEndTimestampInSecs will be selected. Default is 0, i.e. beginning
          of time.
        type: integer
        format: int64
        x-go-name: MinRunEndTimestampInSecs
        x-nullable: true
      minRunStartTimeInSecs:
        description: |-
          MinRunStartTimestampInSecs specifies the minimum job run start timestamp
          in seconds. App run instances with start time greater than equal to
          MinRunStartTimestampInSecs will be selected. Default is 0, i.e. beginning
          of time.
        type: integer
        format: int64
        x-go-name: MinRunStartTimestampInSecs
        x-nullable: true
      pageSize:
        description: Number of results to be displayed on a page.
        type: integer
        format: int32
        x-go-name: PageSize
        x-nullable: true
      runStatus:
        description: Filter instances based on the map reduce application run status.
        type: string
        x-go-name: RunStatus
        x-nullable: true
      startOffset:
        description: Start offset for pagination from where result needs to be fetched.
        type: integer
        format: int32
        x-go-name: StartOffset
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetObjectsDetailsResult:
    type: object
    title: Specifies the common result structure of the objects response of a job
      run.
    properties:
      endTimeMsecs:
        description: Specifies the end time of the run.
        type: integer
        format: int64
        x-go-name: EndTimeMsecs
        x-nullable: true
      entityEnv:
        description: Specifies the entity environment of the object.
        type: integer
        format: int64
        x-go-name: EntityEnv
        x-nullable: true
      entityId:
        description: Specifies the entity id of the object.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
      entityName:
        description: Specifies the name of the entity.
        type: string
        x-go-name: EntityName
        x-nullable: true
      jobId:
        description: Specifies the job id.
        type: string
        x-go-name: JobId
        x-nullable: true
      jobRunId:
        description: Specifies the job run id.
        type: string
        x-go-name: JobRunId
        x-nullable: true
      jobType:
        description: |-
          Specifies the job type, protection, replication, archival, apollo,
          indexing etc.
        type: string
        x-go-name: JobType
        x-nullable: true
      startTimeMsecs:
        description: Specifies the start time of the run.
        type: integer
        format: int64
        x-go-name: StartTimeMsecs
        x-nullable: true
      status:
        description: Specifies status of the object run.
        type: integer
        format: int64
        x-go-name: Status
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetRegistrationInfoResponse:
    description: |-
      Specifies the registration, protection and permission information of all or a
      subset of the registered Protection Source Trees or Views on the Cohesity
      Cluster.
    type: object
    title: Get Registration Information Response.
    properties:
      rootNodes:
        description: |-
          Specifies the registration, protection and permission information of either
          all or a subset of registered Protection Sources matching the filter
          parameters.
          overrideDescription: true
        type: array
        items:
          $ref: '#/definitions/ProtectionSourceTreeInfo'
        x-go-name: RootNodes
        x-nullable: true
      stats:
        description: |-
          Specifies the sum of all the stats of protection of Protection Sources
          and views selected by the query parameters.
        allOf:
        - $ref: '#/definitions/ProtectionSummary'
        x-nullable: true
      statsByEnv:
        description: |-
          Specifies the breakdown of the stats by environment
          overrideDescription: true
        type: array
        items:
          $ref: '#/definitions/ProtectionSummaryByEnv'
        x-go-name: StatsByEnv
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetTenantStatsResult:
    description: GetTenantStatsResult is the result of get tenantStats api.
    type: object
    title: GetTenantStatsResult
    properties:
      cookie:
        description: |-
          Specifies an opaque string to pass to get the next set of active opens.
          If null is returned, this response is the last set of active opens.
        type: string
        x-go-name: Cookie
        x-nullable: true
      statsList:
        description: Specifies a list of tenant stats.
        type: array
        items:
          $ref: '#/definitions/TenantStats'
        x-go-name: StatsList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetViewBoxStatsResult:
    description: GetViewBoxStatsResult is the result of get viewBoxStats api.
    type: object
    title: GetViewBoxStatsResult
    properties:
      statsList:
        description: Specifies a list of view box stats.
        type: array
        items:
          $ref: '#/definitions/StorageDomainStats'
        x-go-name: StatsList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetViewsByShareNameResult:
    description: |-
      Specifies the list of Views and Aliases by share name that matched the
      specified filter criteria.
    type: object
    title: Get (Views and Aliases) By Share Result.
    properties:
      paginationCookie:
        description: |-
          If set, i.e. there are more results to display, use this value to get
          the next set of results, by using this value in paginationCookie param
          for the next request to GetViewsByShare.
        type: string
        x-go-name: PaginationCookie
        x-nullable: true
      sharesList:
        description: |-
          Array of Views and Aliases by Share name.
          Specifies the list of Views returned in this response.
        type: array
        items:
          $ref: '#/definitions/Share'
        x-go-name: SharesList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GetViewsResult:
    description: |-
      Specifies the list of Views returned that matched the specified filter
      criteria.
    type: object
    title: Get Views Result.
    properties:
      lastResult:
        description: |-
          If false, more Views are available to return. If the number of
          Views to return exceeds the number of Views specified in maxCount
          (default of 1000) of the original GET /public/views request,
          the first set of Views are returned and this field returns false.
          To get the next set of Views, in the next GET /public/views request
          send the last id from the previous viewList.
        type: boolean
        x-go-name: LastResult
        x-nullable: true
      views:
        description: |-
          Array of Views.

          Specifies the list of Views returned in this response.
          The list is sorted by decreasing View ids.
        type: array
        items:
          $ref: '#/definitions/View'
        x-go-name: ViewList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Gflag:
    description: Specifies the attributes of a service gflag.
    type: object
    title: Gflag.
    required:
    - name
    properties:
      name:
        description: Specifies name of the gflag.
        type: string
        x-go-name: Name
        x-nullable: true
      productModel:
        description: Specifies product model this gflag set on.
        type: string
        x-go-name: ProductModel
        x-nullable: true
      reason:
        description: Specifies reason for setting the gflag.
        type: string
        x-go-name: Reason
        x-nullable: true
      timestamp:
        description: Specifies timestamp when gflag was set.
        type: integer
        format: int64
        x-go-name: Timestamp
        x-nullable: true
        readOnly: true
      value:
        description: Specifies value of the gflag.
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GoogleAccountInfo:
    description: Google Account Information of a Helios BaaS user.
    type: object
    title: Google Account Information.
    properties:
      accountId:
        description: Specifies the Account Id assigned by Google.
        type: string
        x-go-name: AccountId
        x-nullable: true
      userId:
        description: Specifies the User Id assigned by Google.
        type: string
        x-go-name: UserId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GoogleCloudCredentials:
    description: Specifies the cloud credentials to connect to a Google service account.
    type: object
    title: Google Cloud Credentials.
    properties:
      clientEmailAddress:
        description: |-
          Specifies the client email address used to access Google
          Cloud Storage.
        type: string
        x-go-name: ClientEmailAddress
        x-nullable: true
      clientPrivateKey:
        description: |-
          Specifies the private key used to access Google Cloud Storage that is
          generated when the service account is created.
        type: string
        x-go-name: ClientPrivateKey
        x-nullable: true
      projectId:
        description: |-
          Specifies the project id of an existing Google Cloud project to store
          objects.
        type: string
        x-go-name: ProjectId
        x-nullable: true
      tierType:
        description: |-
          Specifies the storage class of GCP.
          GoogleTierType specifies the storage class for Google.
          'kGoogleStandard' indicates a tier type of Google properties.
          'kGoogleNearline' indicates a tier type of Google properties that is not
          accessed frequently.
          'kGoogleColdline' indicates a tier type of Google properties that is rarely
          accessed.
          'kGoogleRegional' indicates a tier type of Google properties that stores
          frequently accessed data in the same region.
          'kGoogleMultiRegional' indicates a tier type of Google properties that is
          frequently accessed ("hot" objects) around the world.
        type: string
        enum:
        - kGoogleStandard
        - kGoogleNearline
        - kGoogleColdline
        - kGoogleRegional
        - kGoogleMultiRegional
        x-go-name: TierType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GpfsCluster:
    description: Specifies information about a GPFS Cluster.
    type: object
    title: GPFS Cluster.
    properties:
      cesAddresses:
        description: |-
          Specifies a list of CES(Cluster Export Services) IP addresses of a GPFS
          Cluster.
        type: array
        items:
          type: string
        x-go-name: CesAddresses
        x-nullable: true
      id:
        description: Specifies a globally unique id of a GPFS Cluster.
        type: integer
        format: uint64
        x-go-name: Id
        x-nullable: true
      primaryServer:
        description: Specifies a primary server of a GPFS Cluster.
        type: string
        x-go-name: PrimaryServer
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GpfsFileset:
    description: Specifies information about a fileset in a GPFS file system.
    type: object
    title: GPFS File Set.
    properties:
      id:
        description: Specifies the id of the fileset.
        type: integer
        format: uint64
        x-go-name: Id
        x-nullable: true
      isIndependentFileset:
        description: If the given fileset is an Independent fileset or not.
        type: boolean
        x-go-name: IsIndependentFileset
        x-nullable: true
      name:
        description: Name of the filesystem associated with the fileset
        type: string
        x-go-name: FilesystemName
        x-nullable: true
      path:
        description: Specifies the absolute path of the fileset.
        type: string
        x-go-name: Path
        x-nullable: true
      protocols:
        description: |-
          Specifies GPFS supported Protocol information enabled on GPFS File System
          'kNfs' indicates NFS exports in a GPFS fileset.
          'kSmb' indicates CIFS/SMB Shares in a GPFS fileset.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kSmb
        x-go-name: Protocols
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GpfsFilesystem:
    description: Specifies information about filesystem in a GPFS Cluster.
    type: object
    title: GPFS Filesystem.
    properties:
      id:
        description: Specifies the id of the file system.
        type: string
        x-go-name: Id
        x-nullable: true
      path:
        description: Specifies the path of the file system.
        type: string
        x-go-name: Path
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GpfsProtectionSource:
    description: Specifies a Protection Source in GPFS environment.
    type: object
    title: GPFS Protection Source.
    properties:
      cluster:
        description: |-
          Specifies information of an GPFS Cluster. This is set only
          when the entity type is 'kCluster'.
        x-nullable: true
        $ref: '#/definitions/GpfsCluster'
      fileset:
        description: |-
          Specifies information about a mount point in an GPFS file system.
          This is set only when the entity type is 'kFileset'.
        x-nullable: true
        $ref: '#/definitions/GpfsFileset'
      filesystem:
        description: |-
          Specifies an access zone in an GPFS file system. This is set only
          when the entity type is 'kFilesystem'.
        x-nullable: true
        $ref: '#/definitions/GpfsFilesystem'
      name:
        description: Specifies a unique name of the Protection Source.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the entity in an GPFS file system
          like 'kCluster', 'kFilesystem', or, 'kFileset'.
          'kCluster' indicates an GPFS Cluster.
          'kFilesystem' indicates a top level filesystem on GPFS cluster.
          'kFileset' indicates a fileset within a filesystem.
        type: string
        enum:
        - kCluster
        - kFilesystem
        - kFileset
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GranularityBucket:
    description: |-
      Message that specifies the frequency granularity at which to copy the
      snapshots from a backup job's runs.
    type: object
    title: Granularity Bucket.
    properties:
      granularity:
        description: |-
          The base time period granularity that determines the frequency at which
          backup run snapshots will be copied.

          NOTE: The granularity (in combination with the 'multiplier' field below)
          that is specified should be such that the frequency of copying snapshots
          is lower than the frequency of actually creating the snapshots (i.e.,
          lower than the frequency of the backup job runs).
        type: integer
        format: int32
        x-go-name: Granularity
        x-nullable: true
      multiplier:
        description: |-
          A factor to multiply the granularity by.
          For example, if this is 2 and the granularity is kHour, then snapshots
          from the first eligible run from every 2 hour period will be copied.
        type: integer
        format: int32
        x-go-name: Multiplier
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  Group:
    description: Specifies details about the group.
    type: object
    title: Group Details.
    properties:
      createdTimeMsecs:
        description: Specifies the epoch time in milliseconds when the group was created/added.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      description:
        description: Specifies a description of the group.
        type: string
        x-go-name: Description
        x-nullable: true
      domain:
        description: Specifies the domain of the group.
        type: string
        x-go-name: Domain
        x-nullable: true
      lastUpdatedTimeMsecs:
        description: Specifies the epoch time in milliseconds when the group was last
          modified.
        type: integer
        format: int64
        x-go-name: LastUpdatedTimeMsecs
        x-nullable: true
      name:
        description: Specifies the name of the group.
        type: string
        x-go-name: Name
        x-nullable: true
      restricted:
        description: |-
          Whether the group is a restricted group. Users belonging to a restricted
          group can only view objects they have permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with the group such as
          'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for all the users in this group.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      sid:
        description: Specifies the unique Security ID (SID) of the group.
        type: string
        x-go-name: Sid
        x-nullable: true
      smbPrincipals:
        description: |-
          Specifies the SMB principals. Principals will be added to this group only
          if IsSmbPrincipalOnly set to true.
        type: array
        items:
          $ref: '#/definitions/SmbPrincipal'
        x-go-name: SmbPrincipals
        x-nullable: true
      tenantIds:
        description: |-
          Specifies the tenants to which the group belongs to. If not specified,
          session user's tenant id is assumed.
        type: array
        items:
          type: string
        x-go-name: TenantIds
        x-nullable: true
      usernames:
        description: |-
          Specifies the username of users who are members of the group.
          This field is used only for local groups.
        type: array
        items:
          type: string
        x-go-name: Usernames
        x-nullable: true
      users:
        description: |-
          Specifies the SID of users who are members of the group.
          This field is used only for local groups.
        type: array
        items:
          type: string
        x-go-name: Users
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GroupDeleteParameters:
    description: Specifies the groups to delete on the Cohesity Cluster.
    type: object
    title: Delete Groups Request.
    properties:
      domain:
        description: |-
          Specifies the domain associated with the groups to delete.
          Only groups associated with the same domain can be deleted
          by a single request.
          If no domain is specified, the specified groups are deleted from the
          LOCAL domain on the Cohesity Cluster.
          If a non-LOCAL domain is specified, the specified groups are deleted
          on the Cohesity Cluster. However, the referenced group principals on the
          Active Directory are not deleted.
        type: string
        x-go-name: Domain
        x-nullable: true
      names:
        description: |-
          Array of Groups.

          Specifies the list of groups to delete on the Cohesity Cluster.
          Only groups from the same domain can be deleted by a single request.
        type: array
        items:
          type: string
        x-go-name: Names
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GroupInfo:
    description: Specifies struct with basic group details.
    type: object
    title: Group Information.
    properties:
      domain:
        description: Specifies domain name of the user.
        type: string
        x-go-name: Domain
        x-nullable: true
      groupName:
        description: Specifies group name of the group.
        type: string
        x-go-name: GroupName
        x-nullable: true
      sid:
        description: Specifies unique Security ID (SID) of the user.
        type: string
        x-go-name: Sid
        x-nullable: true
      tenantIds:
        description: Specifies the tenants to which the group belongs to.
        type: array
        items:
          type: string
        x-go-name: TenantIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GroupParameters:
    description: |-
      Specifies the settings used to add/create a new group or modify an existing
      group.
    type: object
    title: Group Request.
    properties:
      description:
        description: Specifies a description of the group.
        type: string
        x-go-name: Description
        x-nullable: true
      domain:
        description: Specifies the domain of the group.
        type: string
        x-go-name: Domain
        x-nullable: true
      name:
        description: Specifies the name of the group.
        type: string
        x-go-name: Name
        x-nullable: true
      restricted:
        description: |-
          Whether the group is a restricted group. Users belonging to a restricted
          group can only view objects they have permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with the group such as
          'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for all the users in this group.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      smbPrincipals:
        description: |-
          Specifies the SMB principals. Principals will be added to this group only
          if IsSmbPrincipalOnly set to true.
        type: array
        items:
          $ref: '#/definitions/SmbPrincipal'
        x-go-name: SmbPrincipals
        x-nullable: true
      tenantIds:
        description: |-
          Specifies the tenants to which the group belongs to. If not specified,
          session user's tenant id is assumed.
        type: array
        items:
          type: string
        x-go-name: TenantIds
        x-nullable: true
      users:
        description: |-
          Specifies the SID of users who are members of the group.
          This field is used only for local groups.
        type: array
        items:
          type: string
        x-go-name: Users
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  GuidPair:
    description: Represents the guid pair of an AD Object.
    type: object
    title: GuidPair
    properties:
      destGuid:
        description: Specifies the guid of an AD object in the Production AD.
        type: string
        x-go-name: DestGuid
        x-nullable: true
      sourceGuid:
        description: Specifies the guid of an AD object in the Snapshot AD.
        type: string
        x-go-name: SourceGuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HBaseBackupJobParams:
    description: |-
      Contains any additional hbase environment specific backup params at the
      job level.
    type: object
    properties:
      hdfsConnectParams:
        description: Additional hdfs connection params required for HBase Backup.
        x-nullable: true
        $ref: '#/definitions/HdfsConnectParams'
    x-go-package: magneto/base/nosql.pb
  HBaseConnectParams:
    description: |-
      Specifies an Object containing information about a registered HBase
      source.
    type: object
    title: HBase Connect Params.
    properties:
      hdfsEntityId:
        description: The entity id of the HDFS source for this HBase
        type: integer
        format: int64
        x-go-name: HdfsEntityId
        x-nullable: true
      kerberosPrincipal:
        description: Specifies the kerberos principal.
        type: string
        x-go-name: KerberosPrincipal
        x-nullable: true
      rootDataDirectory:
        description: Specifies the HBase data root directory.
        type: string
        x-go-name: RootDataDirectory
        x-nullable: true
      zookeeperQuorum:
        description: Specifies the HBase zookeeper quorum.
        type: array
        items:
          type: string
        x-go-name: ZookeeperQuorum
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HBaseProtectionSource:
    description: Specifies an Object representing HBase.
    type: object
    title: HBase Protection Source.
    properties:
      name:
        description: Specifies the instance name of the HBase entity.
        type: string
        x-go-name: Name
        x-nullable: true
      tableInfo:
        description: |-
          Information of a HBase Table, only valid for an entity of type
          kTable.
        x-nullable: true
        $ref: '#/definitions/HBaseTable'
      type:
        description: |-
          Specifies the type of the managed Object in HBase Protection Source.
          Specifies the type of an HBase source entity.
          'kCluster' indicates a HBase cluster distributed over several physical
          nodes.
          'kNamespace' indicates a Namespace in the HBase environment.
          'kTable' indicates a Table in the HBase environment.
        type: string
        enum:
        - kCluster
        - kNamespace
        - kTable
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID for the HBase entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HBaseRecoverJobParams:
    description: |-
      Contains any additional hbase environment specific params for the
      recover job.
    type: object
    properties:
      hdfsConnectParams:
        description: Additional hdfs connection params required for HBase Backup.
        x-nullable: true
        $ref: '#/definitions/HdfsConnectParams'
      suffix:
        description: A suffix that is to be applied to all recovered entities
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  HBaseTable:
    description: Specifies an Object containing information about a HBase table.
    type: object
    title: HBase Table Info.
    properties:
      approxSizeBytes:
        description: Specifies the approx size of the table in bytes.
        type: integer
        format: int64
        x-go-name: ApproxSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HardwareInfo:
    description: |-
      This struct should match the fields in the hardware JSON file.
      Hardware JSON file serves as cache for hardware info to reduce
      hardware polling which takes time.
    type: object
    title: Hardware Information.
    properties:
      chassisModel:
        type: string
        x-go-name: ChassisModel
        x-nullable: true
      chassisSerial:
        type: string
        x-go-name: ChassisSerial
        x-nullable: true
      chassisType:
        type: string
        x-go-name: ChassisType
        x-nullable: true
      cohesityChassisSerial:
        type: string
        x-go-name: CohesityChassisSerial
        x-nullable: true
      cohesityNodeSerial:
        type: string
        x-go-name: CohesityNodeSerial
        x-nullable: true
      hbaModel:
        type: string
        x-go-name: HbaModel
        x-nullable: true
      ipmiLanChannel:
        type: string
        x-go-name: IpmiLanChannel
        x-nullable: true
      maxSlots:
        type: string
        x-go-name: MaxSlots
        x-nullable: true
      nodeModel:
        type: string
        x-go-name: NodeModel
        x-nullable: true
      nodeSerial:
        type: string
        x-go-name: NodeSerial
        x-nullable: true
      productModel:
        type: string
        x-go-name: ProductModel
        x-nullable: true
      productModelType:
        type: string
        x-go-name: ProductModelType
        x-nullable: true
      slotNumber:
        type: string
        x-go-name: SlotNumber
        x-nullable: true
    x-go-package: cohesity/util/hal
  HdfsBackupJobParams:
    description: |-
      Contains any additional hdfs environment specific backup params at the
      job level.
    type: object
    properties:
      hdfsExcludePattern:
        description: Any path/Glob pattern from HDFS that is to excluded.
        type: array
        items:
          type: string
        x-go-name: HdfsExcludePattern
        x-nullable: true
      hdfsProtectPattern:
        description: Any path/Glob pattern from HDFS that is to protected.
        type: array
        items:
          type: string
        x-go-name: HdfsProtectPattern
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  HdfsConnectParams:
    description: |-
      Specifies an Object containing information about a registered Hdfs
      source.
    type: object
    title: Hdfs Connect Params.
    properties:
      hadoopDistribution:
        description: |-
          Specifies the Hadoop Distribution.
          Hadoop distribution.

          'CDH' indicates Hadoop distribution type Cloudera.
          'HDP' indicates Hadoop distribution type Hortonworks.
        type: string
        enum:
        - CDH
        - HDP
        x-go-name: HadoopDistribution
        x-nullable: true
      hadoopVersion:
        description: Specifies the Hadoop version
        type: string
        x-go-name: HadoopVersion
        x-nullable: true
      kerberosPrincipal:
        description: Specifies the kerberos principal.
        type: string
        x-go-name: KerberosPrincipal
        x-nullable: true
      namenode:
        description: Specifies the Namenode host or Nameservice.
        type: string
        x-go-name: Namenode
        x-nullable: true
      port:
        description: Specifies the Webhdfs Port
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HdfsProtectionSource:
    description: Specifies an Object representing Hdfs.
    type: object
    title: Hdfs Protection Source.
    properties:
      name:
        description: Specifies the instance name of the Hdfs entity.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the managed Object in Hdfs Protection Source.
          Specifies the type of an Hdfs source entity.
          'kCluster' indicates a Hdfs cluster distributed over several physical
          nodes.
        type: string
        enum:
        - kCluster
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID for the Hdfs entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HdfsRecoverJobParams:
    description: |-
      Contains any additional hdfs environment specific params for the
      recover job.
    type: object
    properties:
      hdfsExcludePattern:
        description: Any path/Glob pattern from HDFS that is to excluded.
        type: array
        items:
          type: string
        x-go-name: HdfsExcludePattern
        x-nullable: true
      hdfsRecoverPattern:
        description: Any path/Glob pattern from HDFS that is to recovered.
        type: array
        items:
          type: string
        x-go-name: HdfsRecoverPattern
        x-nullable: true
      targetDirectory:
        description: A target directory where all the recovered entities are created
        type: string
        x-go-name: TargetDirectory
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  HealthTile:
    description: Health for Dashboard.
    type: object
    title: Health Tile.
    properties:
      capacityBytes:
        description: |-
          Raw Cluster Capacity in Bytes. This is not usable capacity and does not
          take replication factor into account.
        type: integer
        format: int64
        x-go-name: CapacityBytes
        x-nullable: true
      clusterCloudUsageBytes:
        description: Usage in Bytes on the cloud.
        type: integer
        format: int64
        x-go-name: ClusterCloudUsageBytes
        x-nullable: true
      lastDayAlerts:
        description: Alerts in last 24 hours.
        type: array
        items:
          $ref: '#/definitions/Alert'
        x-go-name: LastDayAlerts
        x-nullable: true
      lastDayNumCriticals:
        description: Number of Critical Alerts.
        type: integer
        format: int64
        x-go-name: LastDayNumCriticals
        x-nullable: true
      lastDayNumWarnings:
        description: Number of Warning Alerts.
        type: integer
        format: int64
        x-go-name: LastDayNumWarnings
        x-nullable: true
      numNodes:
        description: Number of nodes in the cluster.
        type: integer
        format: int32
        x-go-name: NumNodes
        x-nullable: true
      numNodesWithIssues:
        description: Number of nodes in the cluster that are unhealthy.
        type: integer
        format: int32
        x-go-name: NumNodesWithIssues
        x-nullable: true
      percentFull:
        description: Percent the cluster is full.
        type: number
        format: float
        x-go-name: PercentFull
        x-nullable: true
      rawUsedBytes:
        description: Raw Bytes used in the cluster.
        type: integer
        format: int64
        x-go-name: RawUsedBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HiveBackupJobParams:
    description: |-
      Contains any additional hive environment specific backup params at the
      job level.
    type: object
    properties:
      hdfsConnectParams:
        description: Additional hdfs connection params required for Hive Backup.
        x-nullable: true
        $ref: '#/definitions/HdfsConnectParams'
    x-go-package: magneto/base/nosql.pb
  HiveConnectParams:
    description: |-
      Specifies an Object containing information about a registered Hive
      source.
    type: object
    title: Hive Connect Params.
    properties:
      hdfsEntityId:
        description: Specifies the entity id of the HDFS source for this Hive
        type: integer
        format: int64
        x-go-name: HdfsEntityId
        x-nullable: true
      kerberosPrincipal:
        description: Specifies the kerberos principal.
        type: string
        x-go-name: KerberosPrincipal
        x-nullable: true
      metastore:
        description: Specifies the Hive metastore host.
        type: string
        x-go-name: Metastore
        x-nullable: true
      thriftPort:
        description: Specifies the Hive metastore thrift Port
        type: integer
        format: int32
        x-go-name: ThriftPort
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HiveProtectionSource:
    description: Specifies an Object representing Hive.
    type: object
    title: Hive Protection Source.
    properties:
      name:
        description: Specifies the instance name of the Hive entity.
        type: string
        x-go-name: Name
        x-nullable: true
      tableInfo:
        description: |-
          Information of a Hive Table, only valid for an entity of type
          kTable.
        x-nullable: true
        $ref: '#/definitions/HiveTable'
      type:
        description: |-
          Specifies the type of the managed Object in Hive Protection Source.
          Specifies the type of an Hive source entity.
          'kCluster' indicates a Hive cluster distributed over several physical
          nodes.
          'kDatabase' indicates a Database in the Hive environment.
          'kTable' indicates a Table in the Hive environment.
        type: string
        enum:
        - kCluster
        - kDatabase
        - kTable
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID for the Hive entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HiveRecoverJobParams:
    description: |-
      Contains any additional hive environment specific params for the
      recover job.
    type: object
    properties:
      hdfsConnectParams:
        description: Additional hdfs connection params required for Hive Backup.
        x-nullable: true
        $ref: '#/definitions/HdfsConnectParams'
      suffix:
        description: A suffix that is to be applied to all recovered entities
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  HiveTable:
    description: Specifies an Object containing information about a Hive table.
    type: object
    title: Hive Table Info.
    properties:
      approxSizeBytes:
        description: Specifies the approx size of the table in bytes.
        type: integer
        format: int64
        x-go-name: ApproxSizeBytes
        x-nullable: true
      createdOn:
        description: Specifies the created on, epoch millis.
        type: integer
        format: int64
        x-go-name: CreatedOn
        x-nullable: true
      isTransactionalTable:
        description: Specifies if this is a transactional table.
        type: boolean
        x-go-name: IsTransactionalTable
        x-nullable: true
      owner:
        description: Specifies the owner of the table.
        type: string
        x-go-name: Owner
        x-nullable: true
      tableType:
        description: |-
          Specifies the type of table ex. MANAGED,VIRTUAL etc.
          Specifies the type of an Hive table.
          'kManaged' indicates a MANAGED Hive table.
          'kExternal' indicates a EXTERNAL Hive table.
          'kVirtual' indicates a VIRTUAL Hive tablet.
          'kIndex' indicates a INDEX Hive table.
        type: string
        enum:
        - kManaged
        - kExternal
        - kVirtual
        - kIndex
        x-go-name: TableType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HostEntry:
    description: |-
      Specifies the parameters of a host entry that can be stored in the
      cluster's /etc/hosts file.
    type: object
    title: Host Entry.
    required:
    - ip
    - domainNames
    properties:
      description:
        description: Description the host entry.
        type: string
        x-go-name: Description
        x-nullable: true
      domainNames:
        description: Specifies the domain names of the host.
        type: array
        items:
          type: string
        x-go-name: DomainNames
        x-nullable: true
      ip:
        description: Specifies the IP address of the host.
        type: string
        x-go-name: Ip
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HostInfo:
    description: Specifies the list of all hosts on which the certificate is deployed.
    type: object
    title: Hosts Information list.
    properties:
      password:
        description: |-
          Specifies the password of the host to establish SSH connection.
          The certificate is copied to the host after generating the certificate
          on the cluster.
        type: string
        x-go-name: Password
        x-nullable: true
      serverName:
        description: Specifies the servername of the host where certificate is to
          be deployed.
        type: string
        x-go-name: ServerName
        x-nullable: true
      target:
        description: |-
          Specifies the target location on the host where the certificate is
          deployed.
        type: string
        x-go-name: Target
        x-nullable: true
      userName:
        description: Specifies the username of the host.
        type: string
        x-go-name: UserName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HostResult:
    description: |-
      Specifies the response received after requesting a PUT, POST, or DELETE
      method on the /network/hosts endpoint.
    type: object
    title: Host Result.
    properties:
      message:
        description: Specifies a message describing the status of the Hosts request.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HostSettingsCheckResult:
    description: Specifies the result of various checks performed internally on host.
    type: object
    title: Host Setting Check Result.
    properties:
      checkType:
        description: |-
          Specifies the type of the check internally performed.
          Specifies the type of the host check performed internally.
          'kIsAgentPortAccessible' indicates the check for agent port access.
          'kIsAgentRunning' indicates the status for the Cohesity agent service.
          'kIsSQLWriterRunning' indicates the status for SQLWriter service.
          'kAreSQLInstancesRunning' indicates the run status for all the SQL
          instances in the host.
          'kCheckServiceLoginsConfig' checks the privileges and sysadmin status
          of the logins used by the SQL instance services, Cohesity agent service
          and the SQLWriter service.
          'kCheckSQLFCIVIP' checks whether the SQL FCI is registered with a valid
          VIP or FQDN.
          'kCheckSQLDiskSpace' checks whether volumes containing SQL DBs have at
          least 10% free space.
        type: string
        enum:
        - kIsAgentPortAccessible
        - kIsAgentRunning
        - kIsSQLWriterRunning
        - kAreSQLInstancesRunning
        - kCheckServiceLoginsConfig
        - kCheckSQLFCIVIP
        - kCheckSQLDiskSpace
        x-go-name: CheckType
        x-nullable: true
      resultType:
        description: |-
          Specifies the type of the result returned after performing the internal
          host check.
          Specifies the type of the host check result performed internally.
          'kPass' indicates that the respective check was successful.
          'kFail' indicates that the respective check failed as some mandatory
          setting is not met
          'kWarning' indicates that the respective check has warning as certain
          non-mandatory setting is not met.
        type: string
        enum:
        - kPass
        - kFail
        - kWarning
        x-go-name: ResultType
        x-nullable: true
      userMessage:
        description: Specifies a descriptive message for failed/warning types.
        type: string
        x-go-name: UserMessage
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HyperFlexProtectionSource:
    description: Specifies a Storage Snapshot Provider in a HyperFlex environment.
    type: object
    title: HyperFlex Storae Snapshot.
    properties:
      name:
        description: Specifies a unique name of the Protection Source
        type: string
        x-go-name: Name
        x-nullable: true
      productVersion:
        description: Specifies the product version of the protection source.
        type: string
        x-go-name: ProductVersion
        x-nullable: true
      type:
        description: |-
          Specifies the type of managed Object in a HyperFlex protection source
          like kServer.
          Examples of a HyperFlex types include 'kServer'.
          'kServer' indicates HyperFlex server entity.
        type: string
        enum:
        - kServer
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the uuid of the protection source.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HyperVBackupEnvParams:
    description: Message to capture any additional backup params for a HyperV environment.
    type: object
    title: HyperV Backup Environment Parameters.
    properties:
      allowCrashConsistentSnapshot:
        description: |-
          Whether to fallback to take a crash-consistent snapshot incase taking
          an app-consistent snapshot fails.
        type: boolean
        x-go-name: AllowCrashConsistentSnapshot
        x-nullable: true
      backupJobType:
        description: |-
          The type of backup job to use. Default is to auto-detect the best type to
          use based on the VMs to backup. End user may select RCT or VSS also.
        type: integer
        format: int32
        x-go-name: BackupJobType
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  HypervCloneParameters:
    description: |-
      Specifies information needed when cloning VMs in HyperV enviroment.
      This field defines the HyperV specific params for restore tasks of type
      kCloneVMs.
    type: object
    title: Hyperv Clone Parameters.
    properties:
      disableNetwork:
        description: |-
          Specifies whether the network should be left in disabled state.
          Attached network is enabled by default. Set this flag to true to
          disable it.
        type: boolean
        x-go-name: DisableNetwork
        x-nullable: true
      networkId:
        description: |-
          Specifies a network configuration to be attached to the cloned or
          recovered object.
          For kCloneVMs and kRecoverVMs tasks, original network configuration
          is detached if the cloned or recovered object is kept under a different
          parent Protection Source or a different Resource Pool.
          By default, for kRecoverVMs task, original network configuration is
          preserved if the recovered object is kept under the same parent
          Protection Source and the same Resource Pool.
          Specify this field to override the preserved network configuration or
          to attach a new network configuration to the cloned or recovered objects.
          You can get the networkId of the kNetwork object by setting
          includeNetworks to 'true' in the GET /public/protectionSources operation.
          In the response, get the id of the desired kNetwork object, the resource
          pool, and the registered parent Protection Source.
        type: integer
        format: int64
        x-go-name: NetworkId
        x-nullable: true
      poweredOn:
        description: |-
          Specifies the power state of the cloned or recovered objects.
          By default, the cloned or recovered objects are powered off.
        type: boolean
        x-go-name: KeepPoweredOn
        x-nullable: true
      prefix:
        description: |-
          Specifies a prefix to prepended to the source object name to derive a
          new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Prefix
        x-nullable: true
      preserveTags:
        description: Specifies whether or not to preserve tags during the operation.
        type: boolean
        x-go-name: PreserveTags
        x-nullable: true
      resourceId:
        description: |-
          The resource (HyperV host) to which the restored VM will be attached.

          This field is optional for a kRecoverVMs task if the VMs are being
          restored to its original parent source. If not specified, restored VMs
          will be attached to its original host. This field is mandatory if the
          VMs are being restored to a different parent source.
        type: integer
        format: int64
        x-go-name: ResourceId
        x-nullable: true
      suffix:
        description: |-
          Specifies a suffix to appended to the original source object name
          to derive a new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HypervDatastore:
    description: Specifies information about a Datastore Object in HyperV environment.
    type: object
    title: HyperV Datastore Object.
    properties:
      capacity:
        description: Specifies the capacity of the datastore in bytes.
        type: integer
        format: uint64
        x-go-name: Capacity
        x-nullable: true
      freeSpace:
        description: Specifies the available space on the datastore in bytes.
        type: integer
        format: uint64
        x-go-name: FreeSpace
        x-nullable: true
      mountPoints:
        description: Specifies the available mount points on the datastore.
        type: array
        items:
          type: string
        x-go-name: MountPoints
        x-nullable: true
      type:
        description: |-
          Specifies the type of the datastore object like kFileShare or kVolume.
          overrideDescription: true
          Specifies the type of a HyperV datastore object.
          'kFileShare' indicates SMB file share datastore.
          'kVolume' indicates a volume which can a LUN.
        type: string
        enum:
        - kFileShare
        - kVolume
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HypervEnvJobParameters:
    description: |-
      Specifies job parameters applicable for all 'kHyperV' Environment type
      Protection Sources in a Protection Job.
    type: object
    title: Hyperv Environment Job Parameters.
    properties:
      fallbackToCrashConsistent:
        description: |-
          If true, takes a crash-consistent snapshot when app-consistent snapshot
          fails. Otherwise, the snapshot attempt is marked failed.
          By default, this field is set to false.
        type: boolean
        x-go-name: FallbackToCrashConsistent
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HypervProtectionSource:
    description: Specifies a Protection Source in HyperV environment.
    type: object
    title: HyperV Protection Source.
    properties:
      agents:
        description: |-
          Array of Agents on the Physical Protection Source.

          Specifiles the agents running on the HyperV Protection Source
          and the status information.
        type: array
        items:
          $ref: '#/definitions/AgentInformation'
        x-go-name: Agents
        x-nullable: true
      backupType:
        description: |-
          Specifies the type of backup supported by the VM.
          'kRctBackup', 'kVssBackup'
          Specifies the type of an HyperV datastore object.
          'kRctBackup' indicates backup is done using RCT/checkpoints.
          'kVssBackup' indicates backup is done using VSS.
        type: string
        enum:
        - kRctBackup
        - kVssBackup
        x-go-name: BackupType
        x-nullable: true
      buildNumber:
        description: Specifies the build number for HyperV SCVMM Servers.
        type: string
        x-go-name: BuildNumber
        x-nullable: true
      clusterName:
        description: Specifies the cluster name for 'kHostCluster' objects.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      datastoreInfo:
        description: Specifies additional information for 'kDatastore' objects.
        x-nullable: true
        $ref: '#/definitions/HypervDatastore'
      description:
        description: Specifies a description about the Protection Source.
        type: string
        x-go-name: Description
        x-nullable: true
      hostType:
        description: |-
          Specifies host OS type for 'kVirtualMachine' objects.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      hypervUuid:
        description: Specifies the UUID for 'kVirtualMachine' HyperV objects.
        type: string
        x-go-name: HypervUuid
        x-nullable: true
      name:
        description: Specifies the name of the HyperV Object.
        type: string
        x-go-name: Name
        x-nullable: true
      tagAttributes:
        description: |-
          Specifies the list of VM Tag attributes associated with this
          Object.
        type: array
        items:
          $ref: '#/definitions/TagAttribute'
        x-go-name: TagAttributes
        x-nullable: true
      type:
        description: |-
          Specifies the type of an HyperV Protection Source Object such as
          'kSCVMMServer', 'kStandaloneHost', 'kNetwork', etc.
          overrideDescription: true
          Specifies the type of an HyperV Protection Source.
          'kSCVMMServer' indicates a collection of root folders clusters.
          'kStandaloneHost' indicates a single Nutanix cluster.
          'kStandaloneCluster' indicates a single Nutanix cluster.
          'kHostGroup' indicates a Nutanix cluster managed by a Prism Central.
          'kHypervHost' indicates an HyperV host.
          'kHostCluster' indicates a Nutanix cluster managed by a Prism Central.
          'kVirtualMachine' indicates a Virtual Machine.
          'kNetwork' indicates a Virtual Machine network object.
          'kDatastore' represents a storage container object.
          'kTag' indicates a tag type object.
          'kCustomProperty' indicates a custom property including tag type.
        type: string
        enum:
        - kSCVMMServer
        - kStandaloneHost
        - kStandaloneCluster
        - kHostGroup
        - kHypervHost
        - kHostCluster
        - kVirtualMachine
        - kNetwork
        - kDatastore
        - kTag
        - kCustomProperty
        x-go-name: Type
        x-nullable: true
      uuid:
        description: |-
          Specifies the UUID of the Object. This is unique within the HyperV
          environment.
        type: string
        x-go-name: Uuid
        x-nullable: true
      vmInfo:
        description: Specifies additional information for 'kVirtualMachine' objects.
        x-nullable: true
        $ref: '#/definitions/HypervVirtualMachine'
      windowsVersion:
        description: Specifies the windows version for HyperV hosts.
        type: string
        x-go-name: WindowsVersion
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HypervRestoreParameters:
    description: |-
      Specifies information needed when restoring VMs in HyperV enviroment.
      This field defines the HyperV specific params for restore tasks of type
      kRecoverVMs.
    type: object
    title: Hyperv Restore Parameters.
    properties:
      datastoreId:
        description: |-
          A datastore entity where the object's files should be restored to. This
          field is optional if object is being restored to its original parent
          source. If not specified, the object's files will be restored to their
          original datastore locations. This field is mandatory if object is being
          restored to a different resource entity or to a different parent source.
        type: integer
        format: int64
        x-go-name: DatastoreId
        x-nullable: true
      disableNetwork:
        description: |-
          Specifies whether the network should be left in disabled state.
          Attached network is enabled by default. Set this flag to true to
          disable it.
        type: boolean
        x-go-name: DisableNetwork
        x-nullable: true
      networkId:
        description: |-
          Specifies a network configuration to be attached to the cloned or
          recovered object.
          For kCloneVMs and kRecoverVMs tasks, original network configuration
          is detached if the cloned or recovered object is kept under a different
          parent Protection Source or a different Resource Pool.
          By default, for kRecoverVMs task, original network configuration is
          preserved if the recovered object is kept under the same parent
          Protection Source and the same Resource Pool.
          Specify this field to override the preserved network configuration or
          to attach a new network configuration to the cloned or recovered objects.
          You can get the networkId of the kNetwork object by setting
          includeNetworks to 'true' in the GET /public/protectionSources operation.
          In the response, get the id of the desired kNetwork object, the resource
          pool, and the registered parent Protection Source.
        type: integer
        format: int64
        x-go-name: NetworkId
        x-nullable: true
      poweredOn:
        description: |-
          Specifies the power state of the cloned or recovered objects.
          By default, the cloned or recovered objects are powered off.
        type: boolean
        x-go-name: KeepPoweredOn
        x-nullable: true
      prefix:
        description: |-
          Specifies a prefix to prepended to the source object name to derive a
          new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Prefix
        x-nullable: true
      preserveTags:
        description: Specifies whether or not to preserve tags during the operation.
        type: boolean
        x-go-name: PreserveTags
        x-nullable: true
      resourceId:
        description: |-
          The resource (HyperV host) to which the restored VM will be attached.

          This field is optional for a kRecoverVMs task if the VMs are being
          restored to its original parent source. If not specified, restored VMs
          will be attached to its original host. This field is mandatory if the
          VMs are being restored to a different parent source.
        type: integer
        format: int64
        x-go-name: ResourceId
        x-nullable: true
      suffix:
        description: |-
          Specifies a suffix to appended to the original source object name
          to derive a new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  HypervVirtualMachine:
    description: Specifies information about a VirtualMachine Object in HyperV environment.
    type: object
    title: HyperV VirtualMachine Object.
    properties:
      isHighlyAvailable:
        description: Specifies whether the VM is Highly Available or not.
        type: boolean
        x-go-name: IsHighlyAvailable
        x-nullable: true
      version:
        description: Specifies the version of the VM. For example, 8.0, 5.0 etc.
        type: string
        x-go-name: Version
        x-nullable: true
      vmBackupStatus:
        description: |-
          Specifies the status of the VM for backup purpose.
          overrideDescription: true
          Specifies the backup status of a HyperV Virtual Machine object.
          'kSupported' indicates the agent on the VM can do backup.
          'kUnsupportedConfig' indicates the agent on the VM cannot do backup.
          'kMissing' indicates the VM is not found in SCVMM.
        type: string
        enum:
        - kSupported
        - kUnsupportedConfig
        - kMissing
        x-go-name: VmBackupStatus
        x-nullable: true
      vmBackupType:
        description: |-
          Specifies the type of backup supported by the VM.
          overrideDescription: true
          Specifies the type of an HyperV datastore object.
          'kRctBackup' indicates backup is done using RCT/checkpoints.
          'kVssBackup' indicates backup is done using VSS.
        type: string
        enum:
        - kRctBackup
        - kVssBackup
        x-go-name: VmBackupType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IcapConnectionStatusResponse:
    description: Specifies Icap server connection status response.
    type: object
    title: ICAP Connection Status Response.
    properties:
      failedConnectionStatus:
        description: Specifies the failed connection status of Icap servers.
        type: array
        items:
          type: string
        x-go-name: FailedConnectionStatus
        x-nullable: true
      succeededConnectionStatus:
        description: Specifies the success connection status of Icap servers.
        type: array
        items:
          type: string
        x-go-name: SucceededConnectionStatus
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IdMappingInfo:
    description: |-
      Specifies the params required to update the user id mapping info of an
      Active Directory.
    type: object
    title: Update ID Mapping Information Request.
    properties:
      fallbackUserIdMappingInfo:
        description: |-
          Specifies the fallback id mapping info which is used when an ID mapping
          for a user is not found via the above IdMappingInfo. Only supported for
          two types of fallback mapping types - 'kRid' and 'kFixed'.
        x-nullable: true
        $ref: '#/definitions/UserIdMapping'
      unixRootSid:
        description: |-
          Specifies the SID of the Active Directory domain user to be mapped to
          Unix root user.
        type: string
        x-go-name: UnixRootSid
        x-nullable: true
      userIdMappingInfo:
        description: |-
          Specifies the information about how the Unix and Windows users are mapped
          for this domain.
        x-nullable: true
        $ref: '#/definitions/UserIdMapping'
    x-go-package: cohesity/iris/server/data/public
  IdpPrincipalsAddParameters:
    description: |-
      Specifies the settings for adding new users and groups
      for Idp principals.
      These users and groups are added to the Cohesity Cluster.
      You cannot create users and groups in the default Cohesity domain
      called 'LOCAL' using this operation.
    type: object
    title: Add Groups or Users Request.
    properties:
      domain:
        description: |-
          Specifies the name of the Idp where the
          referenced principal is stored.
        type: string
        x-go-name: Domain
        x-nullable: true
      objectClass:
        description: |-
          Specifies the type of the referenced Idp principal.
          If 'kGroup', the referenced Idp principal is a group.
          If 'kUser', the referenced Idp principal is a user.
          'kUser' specifies a user object class.
          'kGroup' specifies a group object class.
          'kComputer' specifies a computer object class.
          'kWellKnownPrincipal' specifies a well known principal.
        type: string
        enum:
        - kUser
        - kGroup
        - kComputer
        - kWellKnownPrincipal
        x-go-name: ObjectClass
        x-nullable: true
      principalName:
        description: |-
          Specifies the name of the Idp principal,
          that will be referenced by the group or user.
          The name of the Idp principal is used for naming
          the new group or user on the Cohesity Cluster.
        type: string
        x-go-name: PrincipalName
        x-nullable: true
      restricted:
        description: |-
          Whether the principal is a restricted principal. A restricted principal
          can only view the objects he has permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with this user or group
          such as 'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for this group or user.
          For example if the 'joe' user is added for the Active Directory
          'joe' user principal and is associated with the Cohesity
          'View' role, 'joe' can log in to the Cohesity Dashboard
          and has a read-only view of the data on the Cohesity Cluster.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IdpReachabilityTestResult:
    description: Specifies the result of the reachability test done for an IdP.
    type: object
    title: IdP Reachability Test Result.
    properties:
      reachable:
        description: Specifies the flag for Idp reachability.
        type: boolean
        x-go-name: Reachable
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IdpServiceConfiguration:
    description: Specifies the configuration of an IdP service.
    type: object
    title: IdP Service Configuration.
    properties:
      allowLocalAuthentication:
        description: |-
          Specifies whether to allow local authentication. When IdP is configured,
          only IdP users are allowed to login to the Cluster. Local login is
          disabled except for users with admin role. If this flag is set to true,
          local (non-IdP) logins are allowed for all local and AD users. Local or
          AD users with admin role can login always independent of this flag's
          setting.
        type: boolean
        x-go-name: AllowLocalAuthentication
        x-nullable: true
      certificate:
        description: |-
          Specifies the certificate generated for the app by the IdP service when
          the Cluster is registered as an app. This is required to verify the
          SAML response.
        type: string
        x-go-name: Certificate
        x-nullable: true
      certificateFilename:
        description: Specifies the filename used to upload the certificate.
        type: string
        x-go-name: CertificateFilename
        x-nullable: true
      domain:
        description: Specifies a unique name for this IdP configuration.
        type: string
        x-go-name: Domain
        x-nullable: true
      enable:
        description: |-
          Specifies a flag to enable or disable this IdP service. When it is set
          to true, IdP service is enabled. When it is set to false, IdP service
          is disabled. When an IdP service is created, it is set to true.
        type: boolean
        x-go-name: Enable
        x-nullable: true
      id:
        description: Specifies the Id assigned by the Cluster for the IdP service.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      issuerId:
        description: |-
          Specifies the IdP provided Issuer ID for the app.
          For example, exkh1aov1nhHrgFhN0h7.
        type: string
        x-go-name: IssuerId
        x-nullable: true
      name:
        description: Specifies the name of the vendor providing IdP service.
        type: string
        x-go-name: Name
        x-nullable: true
      roles:
        description: |-
          Specifies a list of roles assigned to an IdP user if samlAttributeName is
          not given.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      samlAttributeName:
        description: |-
          Specifies the SAML attribute name that contains a comma separated list
          of Cluster roles. Either this field or roles must be set. This field
          takes higher precedence than the roles field.
        type: string
        x-go-name: SamlAttributeName
        x-nullable: true
      signRequest:
        description: |-
          Specifies whether to sign the SAML request or not. When it is set
          to true, SAML request will be signed. When it is set to false, SAML
          request is not signed. Default is false. Set this flag to true if
          the IdP site is configured to expect the SAML request from the Cluster
          signed. If this is set to true, users must get the Cluster's certificate
          and upload it on the IdP site.
        type: boolean
        x-go-name: SignRequest
        x-nullable: true
      ssoUrl:
        description: |-
          Specifies the SSO URL of the IdP service for the customer. This is the
          URL given by IdP when the customer created an account. Customers may use
          this for several clusters that are registered with on IdP site.
          For example, dev-332534.oktapreview.com
        type: string
        x-go-name: SsoUrl
        x-nullable: true
      tenantId:
        description: |-
          Specifies the Tenant Id if the IdP is configured for a Tenant. If this is
          not set, this IdP configuration is used for the Cluster level users and
          for all users of Tenants not having an IdP configuration.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IdpUserInfo:
    description: |-
      Specifies an IdP User's information logged in using an IdP.
      This information is not stored on the Cluster.
    type: object
    title: IdP User Information.
    properties:
      groups:
        description: |-
          Specifies the Idp groups that the user is part of. As the user may not be
          registered on the cluster, we may have to capture the idp group
          membership. This way, if a group is created on the cluster later,
          users will instantly have access to tenantIds from that group as well.
        type: array
        items:
          type: string
        x-go-name: Groups
        x-nullable: true
      idpId:
        description: Specifies the unique Id assigned by the Cluster for the IdP.
        type: integer
        format: int64
        x-go-name: IdpId
        x-nullable: true
      issuerId:
        description: Specifies the unique identifier assigned by the vendor for this
          Cluster.
        type: string
        x-go-name: IssuerId
        x-nullable: true
      userId:
        description: Specifies the unique identifier assigned by the vendor for the
          user.
        type: string
        x-go-name: UserId
        x-nullable: true
      vendor:
        description: Specifies the vendor providing the IdP service.
        type: string
        x-go-name: Vendor
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ImportConfigurations:
    description: |-
      ImportConfigurations struct used for ImportConfig endpoint.
      This is the form of the request.
    type: object
    title: Import Configurations.
    properties:
      activeDirectories:
        description: Selective import of active directories.
        type: array
        items:
          type: string
        x-go-name: ActiveDirectories
        x-nullable: true
      all:
        description: List of which entities to import all.
        type: array
        items:
          type: string
        x-go-name: All
        x-nullable: true
      clusters:
        description: Selective import certain cluster.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: Clusters
        x-nullable: true
      file:
        description: File is the config file.
        type: string
        x-go-name: File
        x-nullable: true
      groups:
        description: Selective import certain groups.
        type: array
        items:
          type: string
        x-go-name: Groups
        x-nullable: true
      partitions:
        description: Selective import of Partition.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: Partitions
        x-nullable: true
      principalSources:
        description: Selective import of principal sources.
        type: array
        items:
          type: string
        x-go-name: PrincipalSources
        x-nullable: true
      protectionJobs:
        description: Selective import of protection jobs.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionJobs
        x-nullable: true
      protectionPolicies:
        description: Selective import of protection policies.
        type: array
        items:
          type: string
        x-go-name: ProtectionPolicies
        x-nullable: true
      protectionSources:
        description: Selective import of protection sources.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionSources
        x-nullable: true
      remoteClusters:
        description: Selective import certain remote clusters.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: RemoteClusters
        x-nullable: true
      roles:
        description: Selective import certain roles (by username).
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      sql:
        description: Selective import of sql.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: Sql
        x-nullable: true
      users:
        description: Selective import certain users.
        type: array
        items:
          type: string
        x-go-name: Users
        x-nullable: true
      vaults:
        description: Selective import certain vaults.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: Vaults
        x-nullable: true
      viewBoxes:
        description: Selective import certain Storage Domains (View Boxes).
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxes
        x-nullable: true
      views:
        description: Selective import of views.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: Views
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IndexAndSnapshots:
    description: |-
      Specifies settings required to restore the index and Snapshots of
      a Protection Job.
    type: object
    title: Restore Protection Job Index and Snapshots.
    properties:
      archiveTaskUid:
        description: |-
          Specifies a unique id of the Archive task that originally archived the
          object to the Vault.
        title: Archive Task Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      endTimeUsecs:
        description: |-
          Specifies the end time as a Unix epoch Timestamp (in microseconds).
          If set, only index and Snapshots for Protection Job Runs that
          started before the specified end time are restored.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      remoteProtectionJobUid:
        description: |-
          Specifies a unique id assigned to the original Protection Job
          by the original Cluster that archived data to the remote Vault.
        title: Protection Job Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time as a Unix epoch Timestamp (in microseconds).
          If set, only the index and Snapshots for Protection Job Runs that
          started after the specified start time are restored.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      viewBoxId:
        description: |-
          Specifies the id of the local Storage Domain (View Box) where the index
          and the Snapshot will be restored to.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IndexingPolicy:
    description: |-
      Specifies settings for indexing files found in an Object
      (such as a VM) so these files can be searched and recovered.
      This also specifies inclusion and exclusion rules that determine
      the directories to index.
    type: object
    title: Indexing Policy.
    properties:
      allowPrefixes:
        description: |-
          Array of Indexed Directories.

          Specifies a list of directories to index.
        type: array
        items:
          type: string
        x-go-name: AllowPrefixes
        x-nullable: true
      denyPrefixes:
        description: |-
          Array of Excluded Directories.

          Specifies a list of directories to exclude from indexing.
        type: array
        items:
          type: string
        x-go-name: DenyPrefixes
        x-nullable: true
      disableIndexing:
        description: |-
          Specifies if the files found in an Object (such as a VM) should be
          indexed. If false (the default), files are indexed.
        type: boolean
        x-go-name: DisableIndexing
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IndexingPolicyProto:
    description: Proto to encapsulate file level indexing policy for VMs in a backup
      job.
    type: object
    title: Indexing Policy Proto.
    properties:
      allowPrefixes:
        description: List of directory prefixes to allow for indexing.
        type: array
        items:
          type: string
        x-go-name: AllowPrefixes
        x-nullable: true
      denyPrefixes:
        description: List of directory prefixes to filter out.
        type: array
        items:
          type: string
        x-go-name: DenyPrefixes
        x-nullable: true
      disableIndexing:
        description: If this field is set all the files in the VM will be filtered.
        type: boolean
        x-go-name: DisableIndexing
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  InfectedFile:
    description: Specifies the Result parameters for all infected files.
    type: object
    title: Infected file.
    properties:
      antivirusProviderName:
        description: Specifies the name of antivirus service provider.
        type: string
        x-go-name: AntivirusProviderName
        x-nullable: true
      entityId:
        description: Specifies the entity id of the infected file.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
      filePath:
        description: Specifies file path of the infected file.
        type: string
        x-go-name: FilePath
        x-nullable: true
      infectionDetectionTimestamp:
        description: |-
          Specifies unix epoch timestamp (in microseconds) at which these threats
          were detected.
        type: integer
        format: int64
        x-go-name: InfectionDetectionTimestamp
        x-nullable: true
      modifiedTimestampUsecs:
        description: |-
          Specifies unix epoch timestamp (in microseconds) at which this file is
          modified.
        type: integer
        format: int64
        x-go-name: ModifiedTimestampUsecs
        x-nullable: true
      remediationState:
        description: |-
          Specifies the remediation state of the file.
          Remediation State.
          'kQuarantine' indicates 'Quarantine' state of the file. This state blocks
          the client access. The administrator will have to manually delete, rescan or
          unquarantine the file.
          'kUnquarantine' indicates 'Unquarantine' state of the file.
          The administrator has manually moved files from quarantined to the
          unquarantined state to allow client access. Unquarantined files are
          not scanned for virus until manually reset.
        type: string
        enum:
        - kQuarantine
        - kUnquarantine
        x-go-name: RemediationState
        x-nullable: true
      rootInodeId:
        description: |-
          Specifies the root inode id of the file system that infected file belongs
          to.
        type: integer
        format: int64
        x-go-name: RootInodeId
        x-nullable: true
      scanTimestampUsecs:
        description: |-
          Specifies unix epoch timestamp (in microseconds) at which inode was
          scanned for viruses.
        type: integer
        format: int64
        x-go-name: ScanTimestampUsecs
        x-nullable: true
      serviceIcapUri:
        description: |-
          Specifies the instance of an antivirus ICAP server in the cluster config
          that detected these threats.
        type: string
        x-go-name: ServiceIcapUri
        x-nullable: true
      threatDescriptions:
        description: Specifies the list of virus threat descriptions found in the
          file.
        type: array
        items:
          type: string
        x-go-name: ThreatDescriptions
        x-nullable: true
      viewId:
        description: Specifies the id of the View the infected file belongs to.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
      viewName:
        description: Specifies the View name corresponding to above view id.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  InfectedFileId:
    description: |-
      Specifies the infected file Identifier. A file is identified with three Ids
      mentioned in the InfectedFileId definition.
    type: object
    properties:
      entityId:
        description: Specifies the entity id of the infected file.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
      rootInodeId:
        description: |-
          Specifies the root inode id of the file system that infected file belongs
          to.
        type: integer
        format: int64
        x-go-name: RootInodeId
        x-nullable: true
      viewId:
        description: Specifies the id of the View the infected file belongs to.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  InfectedFileParam:
    type: object
    title: Specifies the parameters to delete a infected file.
    properties:
      entityId:
        description: Specifies the entity id of the infected file.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
      remediationState:
        description: |-
          Specifies the remediation state of the file.
          Remediation State.
          'kQuarantine' indicates 'Quarantine' state of the file. This state blocks
          the client access. The administrator will have to manually delete, rescan or
          unquarantine the file.
          'kUnquarantine' indicates 'Unquarantine' state of the file.
          The administrator has manually moved files from quarantined to the
          unquarantined state to allow client access. Unquarantined files are
          not scanned for virus until manually reset.
        type: string
        enum:
        - kQuarantine
        - kUnquarantine
        x-go-name: RemediationState
        x-nullable: true
      rootInodeId:
        description: |-
          Specifies the root inode id of the file system that infected file belongs
          to.
        type: integer
        format: int64
        x-go-name: RootInodeId
        x-nullable: true
      viewId:
        description: Specifies the id of the View the infected file belongs to.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  InfectedFiles:
    description: Specifies the Result parameters for all infected files.
    type: object
    title: Infected files.
    properties:
      infectedFiles:
        description: Specifies the infected files.
        type: array
        items:
          $ref: '#/definitions/InfectedFile'
        x-go-name: InfectedFiles
        x-nullable: true
      paginationCookie:
        description: |-
          This cookie can be used in the succeeding call to list infected files to
          get the next set of infected files. If set to nil, it means that there's
          no more results that the server could provide.
        type: string
        x-go-name: PaginationCookie
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  InputSpec:
    type: object
    title: Input selector. Selects the files to map over.
    properties:
      filesSelector:
        x-nullable: true
        $ref: '#/definitions/InputSpec_InputFilesSelector'
      onNfsFiles:
        description: |-
          Selects whether input is files inside vmdks or files on NFS. One of
          vm_selector or files_selector will be chosen based on this flag.
        type: boolean
        x-go-name: OnNfsFiles
        x-nullable: true
      vmSelector:
        x-nullable: true
        $ref: '#/definitions/InputSpec_InputVMsSelector'
    x-go-package: yoda/base/analytics.pb
  InputSpec_FileTimeFilter:
    description: |-
      File time filter to filter files based on their last change time. All
      files whose change time is in the range [change_time_range_start_secs,
      change_time_range_end_secs) will be processed. Both values are time
      duration in seconds w.r.t. to current time and not absolute points in
      time.
    type: object
    properties:
      changeTimeRangeEndSecs:
        description: End of file's change time range.
        type: integer
        format: int64
        x-go-name: ChangeTimeRangeEndSecs
        x-nullable: true
      changeTimeRangeStartSecs:
        description: Start of file's change time range.
        type: integer
        format: int64
        x-go-name: ChangeTimeRangeStartSecs
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  InputSpec_InputFilesSelector:
    description: |-
      If mapper is going to run over files on SnapFS, this selects the input
      files.
    type: object
    properties:
      fileTimeFilter:
        description: File time filter for file's last change time.
        x-nullable: true
        $ref: '#/definitions/InputSpec_FileTimeFilter'
      filenameGlob:
        description: Glob patterns to match on file. e.g. {*.txt, *.cc}
        type: array
        items:
          type: string
        x-go-name: FilenameGlob
        x-nullable: true
      jobIds:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        x-nullable: true
      maxSnapshotTimestamp:
        description: |-
          Exclusive end of snapshot_timestamp range. If missing, inf will be used
          as the timestamp range.
        type: integer
        format: int64
        x-go-name: MaxSnapshotTimestamp
        x-nullable: true
      minSnapshotTimestamp:
        description: Inclusive. If missing, 0 will the default lower end of timestamp
          range
        type: integer
        format: int64
        x-go-name: MinSnapshotTimestamp
        x-nullable: true
      partitionIds:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: PartitionIds
        x-nullable: true
      processLatestOnly:
        description: |-
          Boolean flag to indicate if only latest snapshot of each object should
          be processed.
        type: boolean
        x-go-name: ProcessLatestOnly
        x-nullable: true
      rootDir:
        description: |-
          Within each volume, traversal will be rooted at this directory. A
          typical value here might be /home
        type: string
        x-go-name: RootDir
        x-nullable: true
      viewBoxIds:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIds
        x-nullable: true
      viewName:
        description: |-
          This is the view name user enters manually. If this is set we will
          process this view only. partition_id and view_box_id will be populated
          only if view_name is present.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  InputSpec_InputVMsSelector:
    type: object
    properties:
      fileTimeFilter:
        description: Time filter for file's last change time.
        x-nullable: true
        $ref: '#/definitions/InputSpec_FileTimeFilter'
      filenameGlob:
        description: |-
          After VMDKs are selected as above, the files within them can be selected
          by using these predicates.
        type: array
        items:
          type: string
        x-go-name: FilenameGlob
        x-nullable: true
      jobIds:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        x-nullable: true
      maxSnapshotTimestamp:
        description: |-
          Exclusive end of snapshot_timestamp range. If missing, inf will be used
          as the timestamp range.
        type: integer
        format: int64
        x-go-name: MaxSnapshotTimestamp
        x-nullable: true
      minSnapshotTimestamp:
        description: Inclusive. If missing, 0 will the default lower end of timestamp
          range
        type: integer
        format: int64
        x-go-name: MinSnapshotTimestamp
        x-nullable: true
      partitionIds:
        description: Filters are AND of ORs.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: PartitionIds
        x-nullable: true
      processLatestOnly:
        description: |-
          Boolean flag to indicate if only latest snapshot of each object should
          be processed.
        type: boolean
        x-go-name: ProcessLatestOnly
        x-nullable: true
      rootDir:
        description: |-
          Within each volume, traversal will be rooted at this directory. A
          typical value here might be /home
        type: string
        x-go-name: RootDir
        x-nullable: true
      sourceEntityIds:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: SourceEntityIds
        x-nullable: true
      viewBoxIds:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIds
        x-nullable: true
      viewNames:
        type: array
        items:
          type: string
        x-go-name: ViewNames
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  Interface:
    type: object
    properties:
      message:
        type: string
        x-go-name: Message
        x-nullable: true
      name:
        type: string
        x-go-name: Name
        x-nullable: true
      networkParams:
        x-nullable: true
        $ref: '#/definitions/NetworkParams'
    x-go-package: cohesity/iris/server/data/public
  InterfaceGroup:
    description: Specifies the settings of an interface group.
    type: object
    title: InterfaceGroup.
    properties:
      id:
        description: |-
          Interface group Id.

          Specifies the id of the interface group.
        type: integer
        format: int32
        x-go-name: Id
        x-nullable: true
      modelInterfaceLists:
        description: Specifies the product model and interface lists.
        type: array
        items:
          $ref: '#/definitions/ProductModelInterfaceTuple'
        x-go-name: ModelInterfaceLists
        x-nullable: true
      name:
        description: Specifies the name of the interface group.
        type: string
        x-go-name: Name
        x-nullable: true
      networkParams:
        x-nullable: true
        $ref: '#/definitions/NetworkParams'
    x-go-package: cohesity/iris/server/data/public
  IoPreferentialTier:
    description: Specifies the preferred storage tier for IO operations.
    type: object
    title: IO Preferential Tier.
    properties:
      apolloIOPreferentialTier:
        description: Specifies the preferred storage tier used by Apollo as its working
          directory.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: ApolloIOPreferentialTier
      apolloWalIOPreferentialTier:
        description: Specifies the preferred storage tier used by Apollo as its actions
          WAL.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: ApolloWalIOPreferentialTier
      athenaIOPreferentialTier:
        description: Specifies the list of perferred storage tiers used by Athena.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: AthenaIOPreferentialTier
      athenaSlowerIOPreferentialTier:
        description: Specifies the list of perferred storage tiers used by Athena
          for slower storage.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: AthenaSlowerIOPreferentialTier
      downTierUsagePercentThresholds:
        description: Specifies the usage percentage thresholds for the correponding
          storage tier.
        type: array
        items:
          type: integer
          format: int32
        x-go-name: DownTierUsagePercentThresholds
      grootIOPreferentialTier:
        description: Specifies the preferred storage tier used by Groot as its working
          directory.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: GrootIOPreferentialTier
      hydraDowntierIOPreferentialTier:
        description: Specifies the list of perferred storage tiers used by Hydra for
          offloading.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: HydraDowntierIOPreferentialTier
      hydraIOPreferentialTier:
        description: Specifies the list of perferred storage tiers used by Hydra.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: HydraIOPreferentialTier
      librarianIOPreferentialTier:
        description: Specifies the list of perferred storage tiers used by librarian.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: LibrarianIOPreferentialTier
      randomIOPreferentialTier:
        description: Specifies the order of perferred storage tiers for random IO
          operations.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: RandomIOPreferentialTier
      scribeIOPreferentialTier:
        description: Specifies the list of perferred storage tiers used by Scribe.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: ScribeIOPreferentialTier
      sequentialIOPreferentialTier:
        description: Specifies the preferred storage tier for sequential IO operations.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: SequentialIOPreferentialTier
      yodaIOPreferentialTier:
        description: Specifies the list of perferred storage tiers used by Yoda.
        type: array
        items:
          type: string
          enum:
          - kPcieSsd
          - kSataSsd
          - kSataHdd
          - kCloud
          x-nullable: true
        x-go-name: YodaIOPreferentialTier
  IopsTile:
    description: IOPs information for dashboard.
    type: object
    title: IOPS Tile.
    properties:
      maxReadIops:
        description: Maximum Read IOs per second in last 24 hours.
        type: integer
        format: int64
        x-go-name: MaxReadIops
        x-nullable: true
      maxWriteIops:
        description: Maximum number of Write IOs per second in last 24 hours.
        type: integer
        format: int64
        x-go-name: MaxWriteIops
        x-nullable: true
      readIopsSamples:
        description: |-
          Read IOs per second samples taken for the past 24 hours at 10 minutes
          interval given in descending order of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: ReadIopsSamples
        x-nullable: true
      writeIopsSamples:
        description: |-
          Write IOs per second samples taken for the past 24 hours at 10 minutes
          interval given in descending order of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: WriteIopsSamples
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IpConfig:
    description: Specifies the configuration of an IP.
    type: object
    title: Config Ip Parameters.
    properties:
      interfaceName:
        description: |-
          The interface name.

          Specifies which interface to assign IP to.
        type: string
        x-go-name: InterfaceName
        x-nullable: true
      ipFamily:
        description: IpFamily of this config.
        type: integer
        format: int32
        x-go-name: IpFamily
        x-nullable: true
      ips:
        description: The interface ips.
        type: array
        items:
          type: string
        x-go-name: Ips
        x-nullable: true
      nodeIds:
        description: Node ids.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: NodeIds
        x-nullable: true
      role:
        description: The interface role.
        type: string
        x-go-name: Role
        x-nullable: true
      subnetGateway:
        description: The interface gateway.
        type: string
        x-go-name: SubnetGateway
        x-nullable: true
      subnetMaskBits:
        description: The interface subnet mask bits.
        type: integer
        format: int32
        x-go-name: SubnetMaskBits
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IpDetails:
    description: |-
      Entity Type      |  IP Address Details             | Details field

      kHostSystem      |  VMKernel Adapter IP Addresses  | VMKernelAdapter

      TODO(Matthew) : Use an enum for the 'Details'.
    type: object
    title: |-
      IP address details
      The table below captures the type if information published by an entity
      type using this field.
    properties:
      details:
        description: Details of the IP Addresses captured below
        type: string
        x-go-name: Details
        x-nullable: true
      ipAddresses:
        description: The IP Addresses
        type: array
        items:
          type: string
        x-go-name: IpAddresses
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IpRange:
    description: IP Range for range of vip address addition
    type: object
    properties:
      endIp:
        description: |-
          Optional End IP of the range
          If not specified, EndIp is same as StartIp
        type: string
        x-go-name: EndIp
        x-nullable: true
      startIp:
        description: Start IP of the range
        type: string
        x-go-name: StartIp
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IpUnconfig:
    description: Specifies the unconfiguration of an IP.
    type: object
    title: Unconfig Ip Parameters.
    properties:
      IpFamily:
        description: IpFamily of this config.
        type: integer
        format: int32
        x-nullable: true
      interfaceName:
        description: The interface name.
        type: string
        x-go-name: InterfaceName
        x-nullable: true
      nodeIds:
        description: Node ids.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: NodeIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IpmiConfiguration:
    description: |-
      Specifies the parameters for configuration of IPMI. This is only needed
      for physical clusters.
    type: object
    title: IPMI Configuration.
    properties:
      ipmiGateway:
        description: Specifies the default Gateway IP Address for the IPMI network.
        type: string
        x-go-name: IpmiGateway
        x-nullable: true
      ipmiPassword:
        description: Specifies the IPMI Password.
        type: string
        x-go-name: IpmiPassword
        x-nullable: true
      ipmiSubnetMask:
        description: Specifies the subnet mask for the IPMI network.
        type: string
        x-go-name: IpmiSubnetMask
        x-nullable: true
      ipmiUsername:
        description: Specifies the IPMI Username.
        type: string
        x-go-name: IpmiUsername
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IscsiSanPort:
    description: Specifies an iSCSI SAN Port.
    type: object
    title: ISCSI SAN Port.
    properties:
      ipAddress:
        description: Specifies the IP address of the SAN port.
        type: string
        x-go-name: IpAddress
        x-nullable: true
      iqn:
        description: Specifies the qualified name of the iSCSI port (IQN).
        type: string
        x-go-name: Iqn
        x-nullable: true
      tcpPort:
        description: Specifies the listening port(tcp) of the SAN port.
        type: integer
        format: int32
        x-go-name: TcpPort
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IsilonAccessZone:
    description: Specifies information about access zone in an Isilon Cluster.
    type: object
    title: Isilon Access Zone.
    properties:
      id:
        description: Specifies the id of the access zone.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the access zone.
        type: string
        x-go-name: Name
        x-nullable: true
      path:
        description: |-
          Specifies the path of the access zone in ifs. This should include the
          leading "/ifs/".
        type: string
        x-go-name: Path
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IsilonCluster:
    description: Specifies information about an Isilon Cluster.
    type: object
    title: Isilon Cluster.
    properties:
      apiVersionStr:
        description: Specifies the API version of an Isilon Cluster as string.
        type: string
        x-go-name: ApiVersionStr
        x-nullable: true
      description:
        description: Specifies the description of an Isilon Cluster.
        type: string
        x-go-name: Description
        x-nullable: true
      guid:
        description: Specifies a globally unique id of an Isilon Cluster.
        type: string
        x-go-name: Guid
        x-nullable: true
      version:
        description: Specifies the version of an Isilon Cluster.
        type: string
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IsilonMountPoint:
    description: Specifies information about a mount point in an Isilon OneFs Cluster.
    type: object
    title: Isilon Mount Point.
    properties:
      accessZoneName:
        description: Specifies the name of access zone.
        type: string
        x-go-name: AccessZoneName
        x-nullable: true
      nfsMountPoint:
        description: |-
          Specifies information about an NFS export. This field is set if the file
          system supports protocol type 'kNfs'.
        x-nullable: true
        $ref: '#/definitions/IsilonNfsMountPoint'
      path:
        description: |-
          Specifies the path of the access zone in ifs. This should include the
          leading "/ifs/".
        type: string
        x-go-name: Path
        x-nullable: true
      protocols:
        description: |-
          List of Protocols on Isilon.

          Specifies the list of protocols enabled on Isilon OneFs file system.
          'kNfs' indicates NFS exports in an Isilon Cluster.
          'kSmb' indicates CIFS/SMB Shares in an Isilon Cluster.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kSmb
        x-go-name: Protocols
        x-nullable: true
      smbMountPoints:
        description: |-
          Specifies information about an SMB share. This field is set if the
          file system supports protocol type 'kSmb'.
        type: array
        items:
          $ref: '#/definitions/IsilonSmbMountPoint'
        x-go-name: SmbMountPoints
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IsilonNfsMountPoint:
    description: Specifies NFS Mount Point exposed by Isilon Protection Source.
    type: object
    title: Isilon NFS Mount Point.
    properties:
      accessZoneName:
        description: Specifies the Access Zone name.
        type: string
        x-go-name: AccessZoneName
        x-nullable: true
      description:
        description: Specifies the description of the NFS mount point.
        type: string
        x-go-name: Description
        x-nullable: true
      id:
        description: Specifies the Id of the NFS export.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IsilonProtectionSource:
    description: Specifies a Protection Source in Isilon OneFs environment.
    type: object
    title: Isilon Protection Source.
    properties:
      accessZone:
        description: |-
          Specifies an access zone in an Isilon OneFs file system. This is set only
          when the entity type is 'kZone'.
        x-nullable: true
        $ref: '#/definitions/IsilonAccessZone'
      cluster:
        description: |-
          Specifies information of an Isilon OneFs Cluster. This is set only
          when the entity type is 'kCluster'.
        x-nullable: true
        $ref: '#/definitions/IsilonCluster'
      mountPoint:
        description: |-
          Specifies information about a mount point in an Isilon OneFs file system.
          This is set only when the entity type is 'kMountPoint'.
        x-nullable: true
        $ref: '#/definitions/IsilonMountPoint'
      name:
        description: Specifies a unique name of the Protection Source.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the entity in an Isilon OneFs file system
          like 'kCluster', 'kZone', or, 'kMountPoint'.
          'kCluster' indicates an Isilon OneFs Cluster.
          'kZone' indicates an access zone in an Isilon OneFs Cluster.
          'kMountPoint' indicates a mount point exposed by an Isilon OneFs Cluster.
        type: string
        enum:
        - kCluster
        - kZone
        - kMountPoint
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  IsilonSmbMountPoint:
    description: |-
      Specifies information specific to SMB shares exposed by Isilon
      file system.
    type: object
    title: Isilon SMB Mount Point.
    properties:
      accessZoneId:
        description: Specifies the Access Zone Id.
        type: integer
        format: int64
        x-go-name: AccessZoneId
        x-nullable: true
      description:
        description: Specifies the description of the NFS mount point.
        type: string
        x-go-name: Description
        x-nullable: true
      shareName:
        description: Specifies the name of the SMB/CIFS share.
        type: string
        x-go-name: ShareName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  JobPolicyProto:
    description: A message that specifies the policies to use for a job.
    type: object
    title: DEPRECATED in 5.0!
    properties:
      backupPolicy:
        description: |-
          Specifies the scheduling and retention policy to use when backing up
          sources.
        x-nullable: true
        $ref: '#/definitions/BackupPolicyProto'
      snapshotTargetPolicyVec:
        description: |-
          Specifies additional policies that can be used to copy snapshots created
          by a backup run to different targets (such as a remote replica, tape etc).
          Each policy also specifies the retention policy that should be applied to
          the copied snapshots at the respective target.
        type: array
        items:
          $ref: '#/definitions/SnapshotTargetPolicyProto'
        x-go-name: SnapshotTargetPolicyVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  JobRunsTile:
    description: Jon Runs information.
    type: object
    title: Job Runs Tile.
    properties:
      lastDayNumJobErrors:
        description: Number of Error runs in the last 24 hours.
        type: integer
        format: int32
        x-go-name: LastDayNumJobErrors
        x-nullable: true
      lastDayNumJobRuns:
        description: Number of Job Runs in the last 24 hours.
        type: integer
        format: int32
        x-go-name: LastDayNumJobRuns
        x-nullable: true
      lastDayNumJobSlaViolations:
        description: Number of SLA Violations in the last 24 hours.
        type: integer
        format: int32
        x-go-name: LastDayNumJobSlaViolations
        x-nullable: true
      numJobRunning:
        description: Number of Jobs currently running.
        type: integer
        format: int32
        x-go-name: NumJobRunning
        x-nullable: true
      objectsProtectedByPolicy:
        description: Objects Protected By Policy.
        type: array
        items:
          $ref: '#/definitions/ObjectsProtectedByPolicy'
        x-go-name: ObjectsProtectedByPolicy
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  KeyValuePair:
    description: Specifies a key/value pair.
    type: object
    title: Key Value Pair.
    properties:
      key:
        description: Specifies the name of the key.
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        description: Specifies a value for the key.
        x-nullable: true
        $ref: '#/definitions/Value'
    x-go-package: stats/base/stats_types.pb
  KillMapReduceInstanceResult:
    type: object
    properties:
      error:
        description: Status code of http rpc.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
    x-go-package: yoda/base/analytics.pb
  KmsConfigurationResponse:
    description: Specifies response parameters to a KMS request.
    type: object
    title: Get KMS Configuration Response Parameters.
    properties:
      awsKms:
        description: AWS KMS conifg response.
        x-nullable: true
        $ref: '#/definitions/AwsKmsConfiguration'
      connectionStatus:
        description: Specifies if connection to this KMS exists.
        type: boolean
        x-go-name: ConnectionStatus
        x-nullable: true
      cryptsoftKms:
        description: Specifies the config response for cryptsoftKMS.
        x-nullable: true
        $ref: '#/definitions/CryptsoftKmsConfigResponse'
      id:
        description: The Id of a KMS server.
        type: integer
        format: int64
        x-go-name: ID
        x-nullable: true
      serverName:
        description: Specifies the name given to the KMS Server.
        type: string
        x-go-name: ServerName
        x-nullable: true
      serverType:
        description: |-
          Specifies the type of key mangement system.
          'kInternalKms' indicates an internal KMS object.
          'kAwsKms' indicates an Aws KMS object.
          'kCryptsoftKms' indicates a Cryptsoft KMS object.
        type: string
        enum:
        - kInternalKms
        - kAwsKms
        - kCryptsoftKms
        x-go-name: ServerType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  KmsCreateRequestParameters:
    type: object
    title: Request to create a KMS with specified configuration.
    properties:
      awsKms:
        description: AWS KMS conifg.
        x-nullable: true
        $ref: '#/definitions/AwsKmsConfiguration'
      cryptsoftKms:
        description: Cryptsoft KMS config.
        x-nullable: true
        $ref: '#/definitions/CryptsoftKmsConfiguration'
      id:
        description: The Id of a KMS server.
        type: integer
        format: int64
        x-go-name: ID
        x-nullable: true
      serverName:
        description: Specifies the name given to the KMS Server.
        type: string
        x-go-name: ServerName
        x-nullable: true
      serverType:
        description: |-
          Specifies the type of key mangement system.
          'kInternalKms' indicates an internal KMS object.
          'kAwsKms' indicates an Aws KMS object.
          'kCryptsoftKms' indicates a Cryptsoft KMS object.
        type: string
        enum:
        - kInternalKms
        - kAwsKms
        - kCryptsoftKms
        x-go-name: ServerType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  KmsUpdateRequestParameters:
    type: object
    title: Request to create a KMS with specified configuration.
    properties:
      awsKms:
        description: AWS KMS conifg response.
        x-nullable: true
        $ref: '#/definitions/AwsKmsUpdateParams'
      cryptsoftKms:
        description: Specifies the config response for cryptsoftKMS.
        x-nullable: true
        $ref: '#/definitions/CryptsoftKmsUpdateParams'
      id:
        description: The Id of a KMS server.
        type: integer
        format: int64
        x-go-name: ID
        x-nullable: true
      serverName:
        description: Specifies the name given to the KMS Server.
        type: string
        x-go-name: ServerName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  KubernetesCredentials:
    description: Specifies the credentials to authenticate with a Kubernetes Cluster.
    type: object
    title: Kubernetes Credentials.
    properties:
      clientPrivateKey:
        description: Specifies Client private associated with the service account.
        type: string
        x-go-name: ClientPrivateKey
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  KubernetesProtectionSource:
    description: Specifies a Protection Source in Kubernetes environment.
    type: object
    title: Kubernetes Protection Source.
    properties:
      description:
        description: Specifies an optional description of the object.
        type: string
        x-go-name: Description
        x-nullable: true
      name:
        description: Specifies a unique name of the Protection Source.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the entity in a Kubernetes environment.
          Specifies the type of a Kubernetes Protection Source.
          'kCluster' indicates a Kubernetes Cluster.
          'kNamespace' indicates a namespace in a Kubernetes Cluster.
          'kService' indicates a service running on a Kubernetes Cluster.
        type: string
        enum:
        - kCluster
        - kNamespace
        - kService
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID of the object.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  KubernetesRestoreParameters:
    description: Specifies the information required for recovering kubernetes entities.
    type: object
    title: Kubernetes Restore Parameters.
    properties:
      prefix:
        description: |-
          Specifies a prefix to prepended to the source object name to derive a
          new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Prefix
        x-nullable: true
      suffix:
        description: |-
          Specifies a suffix to appended to the original source object name
          to derive a new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  KvmProtectionSource:
    description: Specifies a Protection Source in KVM environment.
    type: object
    title: KVM Protection Source.
    properties:
      agentError:
        description: Specifies a message when the agent cannot be reached.
        type: string
        x-go-name: AgentError
        x-nullable: true
      agentId:
        description: |-
          Specifies the ID of the Agent with which this KVM entity is associated
          when the entity represents a Delegate host or KVM host.
        type: integer
        format: int64
        x-go-name: AgentId
        x-nullable: true
      clusterId:
        description: Specifies the cluster ID for 'kCluster' objects.
        type: string
        x-go-name: ClusterId
        x-nullable: true
      datacenterId:
        description: Specifies the ID of the 'kDatacenter' objects.
        type: string
        x-go-name: DatacenterId
        x-nullable: true
      description:
        description: Specifies a description about the Protection Source.
        type: string
        x-go-name: Description
        x-nullable: true
      name:
        description: Specifies the name of the KVM entity.
        type: string
        x-go-name: Name
        x-nullable: true
      networkId:
        description: Specifies the network ID to which Vnic is attached.
        type: string
        x-go-name: NetworkId
        x-nullable: true
      type:
        description: |-
          Specifies the type of KVM Protection Source entities such as
          'kDatacenter', 'kCluster', 'kVirtualMachine', etc.
          Specifies the type of an KVM source entity.
          'kOVirtManager' indicates the root entity registered with Cohesity cluster.
          'kStandaloneHost' indicates a host registered with Cohesity cluster.
          'kDatacenter' indicates a KVM datacenter managed by the OVirt manager.
          'kCluster' indicates a KVM cluster managed by the OVirt manager.
          'kHost' indicates a host within the KVM environment.
          'kVirtualMachine' indicates a virtual machine in the KVM enironment.
          'kNetwork' represents a network used by the virtual machine entity.
          'kStorageDomain' represents a storage domain in the KVM environment.
          'kVNicProfile' represents a VNic profile.
        type: string
        enum:
        - kOVirtManager
        - kStandaloneHost
        - kDatacenter
        - kCluster
        - kHost
        - kVirtualMachine
        - kNetwork
        - kStorageDomain
        - kVNicProfile
        x-go-name: Type
        x-nullable: true
      uuid:
        description: |-
          Specifies the UUID of the Object. This is unique within the KVM
          environment.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LastProtectionRunStats:
    description: Specifies the stats of last Protection Run.
    type: object
    title: Last Protection Run stats.
    properties:
      numRunsFailed:
        description: Specifies the number of Protection Jobs for which specified Protection
          Run failed.
        type: integer
        format: int64
        x-go-name: NumRunsFailed
        x-nullable: true
      numRunsFailedSla:
        description: Specifies the number of Protection Jobs for which specified Protection
          Run failed SLA.
        type: integer
        format: int64
        x-go-name: NumRunsFailedSla
        x-nullable: true
      numRunsMetSla:
        description: Specifies the number of Protection Jobs for which specified Protection
          Run met SLA.
        type: integer
        format: int64
        x-go-name: NumRunsMetSla
        x-nullable: true
      statsByEnv:
        description: Specifies the last Protection Run stats by environment.
        type: array
        items:
          $ref: '#/definitions/LastProtectionRunStatsByEnv'
        x-go-name: StatsByEnv
  LastProtectionRunStatsByEnv:
    description: Specifies the last Protection Run stats by env.
    type: object
    title: Last Protection Run stats by env.
    properties:
      environment:
        description: Specifies the environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kVCD
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kAD
        - kAWSSnapshotManager
        x-go-name: Environment
        x-nullable: true
      numObjectsFailed:
        description: Specifies the count of objects that failed last Protection Run.
        type: integer
        format: int64
        x-go-name: NumObjectsFailed
        x-nullable: true
      numObjectsFailedSla:
        description: Specifies the count of objects that failed sla in the last Run.
        type: integer
        format: int64
        x-go-name: NumObjectsFailedSla
        x-nullable: true
      numObjectsMetSla:
        description: Specifies the count of objects that met sla in the last Run.
        type: integer
        format: int64
        x-go-name: NumObjectsMetSla
        x-nullable: true
  LastProtectionRunSummary:
    description: |-
      LastProtectionRunsSummary is the summary of the last Protection Run for the
      Protection Jobs using the Specified Protection Policy.
    type: object
    properties:
      numberOfCancelledProtectionRuns:
        description: |-
          Specifies the number of cancelled Protection Runs the given
          Protection Policy has in the Last Run.
        type: integer
        format: int64
        x-go-name: NumberOfCancelledProtectionRuns
        x-nullable: true
      numberOfFailedProtectionRuns:
        description: |-
          Specifies the number of failed Protection Runs the given
          Protection Policy has in the Last Run.
        type: integer
        format: int64
        x-go-name: NumberOfFailedProtectionRuns
        x-nullable: true
      numberOfProtectedSources:
        description: |-
          Specifies the number of Protection Sources protected by the given
          Protection Policy.
        type: integer
        format: int64
        x-go-name: NumberOfProtectedSources
        x-nullable: true
      numberOfRunningProtectionRuns:
        description: |-
          Specifies the number of running Protection Runs using the current
          Protection Policy.
        type: integer
        format: int64
        x-go-name: NumberOfRunningProtectionRuns
        x-nullable: true
      numberOfSlaViolations:
        description: |-
          Specifies the number of SLA violations the given
          Protection Policy has in the Last Run..
        type: integer
        format: int64
        x-go-name: NumberOfSlaViolations
        x-nullable: true
      numberOfSuccessfulProtectionRuns:
        description: |-
          Specifies the number of successful Protection Runs the given
          Protection Policy has in the Last Run.
        type: integer
        format: int64
        x-go-name: NumberOfSuccessfulProtectionRuns
        x-nullable: true
      totalLogicalBackupSizeInBytes:
        description: |-
          Specifies the aggregated total logical backup performed in all the
          Latest Protection Runs made for all the Protection Jobs which have the
          given Protection Policy Specified.
        type: integer
        format: int64
        x-go-name: TotalLogicalBackupSizeInBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LatencyThresholds:
    description: |-
      Specifies latency thresholds that trigger throttling for all datastores
      found in the registered Protection Source or specific to one datastore.
    type: object
    title: Latency Thresholds.
    properties:
      activeTaskMsecs:
        description: |-
          If the latency of a datastore is above this value, existing backup tasks
          using the datastore are throttled.
        type: integer
        format: int64
        x-go-name: ActiveTaskMsecs
        x-nullable: true
      newTaskMsecs:
        description: |-
          If the latency of a datastore is above this value, then new backup tasks
          using the datastore will not be started.
        type: integer
        format: int64
        x-go-name: NewTaskMsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LatestProtectionJobRunInfo:
    description: Specifies the information about the Protection Runs per snapshot
      target.
    type: object
    title: Latest Protection Job Run Information.
    properties:
      latestSnapshotInfo:
        description: Specifies the information about the latest successful snapshot
          infomation.
        x-nullable: true
        $ref: '#/definitions/LatestProtectionRun'
      locationName:
        description: Specifies the name of location that the object is backedup to.
        type: string
        x-go-name: LocationName
        x-nullable: true
      numSnapshots:
        description: Specifies of number of successful snapshots.
        type: integer
        format: int64
        x-go-name: NumSnapshots
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LatestProtectionRun:
    description: Specifies the information about the latest Protection Run.
    type: object
    title: Latest Protection Run.
    properties:
      backupRun:
        description: |-
          Specifies information about the latest successful Protection Job Run for
          local and replication snapshots.
        x-nullable: true
        $ref: '#/definitions/SourceBackupStatus'
      changeEventId:
        description: Specifies the event id which caused last update on this object.
        type: integer
        format: int64
        x-go-name: ChangeEventId
        x-nullable: true
      copyRun:
        description: |-
          Specifies information about the latest successful Protection Job Run for
          an archival snapshot.
        x-nullable: true
        $ref: '#/definitions/CopyRun'
      jobRunId:
        description: Specifies job run id of the latest successful Protection Job
          Run.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      protectionJobRunUid:
        description: Specifies the universal id of the latest successful Protection
          Job Run.
        x-nullable: true
        $ref: '#/definitions/RunUid'
      snapshotTarget:
        description: |-
          Specifies the cluster id in case of local or replication snapshots and
          name of location in case of archival snapshots.
        type: string
        x-go-name: SnapshotTarget
        x-nullable: true
      snapshotTargetType:
        description: Specifies the snapshot target type of the latest snapshot.
        type: integer
        format: int32
        x-go-name: SnapshotTargetType
        x-nullable: true
      taskStatus:
        description: Specifies the task status of the Protection Job Run in the final
          attempt.
        type: integer
        format: int32
        x-go-name: TaskStatus
        x-nullable: true
      uuid:
        description: |-
          Specifies the unique id of the Protection Source for which a snapshot is
          taken.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LaunchAppInstance:
    description: Specifies app instance parameters.
    type: object
    title: Launch App Instance.
    properties:
      appUid:
        description: Specifies the app Id.
        type: integer
        format: int64
        x-go-name: AppUid
        x-nullable: true
      appVersion:
        description: Specifies the app version.
        type: integer
        format: int64
        x-go-name: AppVersion
        x-nullable: true
      creationUid:
        description: |-
          Specifies unique identifier generated by the client to let the backend distinguish
          retries of the creation of the app instance.
        type: string
        x-go-name: CreationUid
        x-nullable: true
      description:
        description: Specifies user configured description for the app instance.
        type: string
        x-go-name: Description
        x-nullable: true
      settings:
        description: Specifies launch settings.
        x-nullable: true
        $ref: '#/definitions/AppInstanceSettings'
    x-go-package: cohesity/iris/server/data/public
  LdapProvider:
    description: Specifies the configuration settings for an LDAP provider.
    type: object
    title: LDAP.
    properties:
      adDomainName:
        description: |-
          Specifies the domain name of an Active Directory which is mapped to this
          LDAP provider
        type: string
        x-go-name: AdDomainName
        x-nullable: true
      authType:
        description: |-
          Specifies the authentication type used while connecting to LDAP servers.
          Authentication level.
          'kAnonymous' indicates LDAP authentication type 'Anonymous'
          'kSimple' indicates LDAP authentication type 'Simple'
        type: string
        enum:
        - kAnonymous
        - kSimple
        x-go-name: AuthType
        x-nullable: true
      baseDistinguishedName:
        description: |-
          Specifies the base distinguished name used as the base for LDAP
          search requests.
        type: string
        x-go-name: BaseDistinguishedName
        x-nullable: true
      domainName:
        description: |-
          Specifies the name of the domain name to be used for querying LDAP servers
          from DNS. If PreferredLdapServerList is set, then DomainName field is
          ignored.
        type: string
        x-go-name: DomainName
        x-nullable: true
      name:
        description: Specifies the name of the LDAP provider.
        type: string
        x-go-name: Name
        x-nullable: true
      port:
        description: Specifies LDAP server port.
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
      preferredLdapServerList:
        description: |-
          Specifies the preferred LDAP servers. Server names should be either in
          fully qualified domain name (FQDN) format or IP addresses.
        type: array
        items:
          type: string
        x-go-name: PreferredLdapServerList
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      useSsl:
        description: Specifies whether to use SSL for LDAP connections.
        type: boolean
        x-go-name: UseSsl
        x-nullable: true
      userDistinguishedName:
        description: |-
          Specifies the user distinguished name that is used for LDAP authentication.
          It should be provided if the AuthType is set to either kSimple or kSasl.
        type: string
        x-go-name: UserDistinguishedName
        x-nullable: true
      userPassword:
        description: Specifies the user password that is used for LDAP authentication.
        type: string
        x-go-name: UserPassword
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LdapProviderResponse:
    description: LDAP provider response struct.
    type: object
    title: LDAP Provider Response.
    properties:
      adDomainName:
        description: |-
          Specifies the domain name of an Active Directory which is mapped to this
          LDAP provider
        type: string
        x-go-name: AdDomainName
        x-nullable: true
      authType:
        description: |-
          Specifies the authentication type used while connecting to LDAP servers.
          Authentication level.
          'kAnonymous' indicates LDAP authentication type 'Anonymous'
          'kSimple' indicates LDAP authentication type 'Simple'
        type: string
        enum:
        - kAnonymous
        - kSimple
        x-go-name: AuthType
        x-nullable: true
      baseDistinguishedName:
        description: |-
          Specifies the base distinguished name used as the base for LDAP
          search requests.
        type: string
        x-go-name: BaseDistinguishedName
        x-nullable: true
      domainName:
        description: |-
          Specifies the name of the domain name to be used for querying LDAP servers
          from DNS. If PreferredLdapServerList is set, then DomainName field is
          ignored.
        type: string
        x-go-name: DomainName
        x-nullable: true
      id:
        description: Specifies the ID of the LDAP provider.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the LDAP provider.
        type: string
        x-go-name: Name
        x-nullable: true
      port:
        description: Specifies LDAP server port.
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
      preferredLdapServerList:
        description: |-
          Specifies the preferred LDAP servers. Server names should be either in
          fully qualified domain name (FQDN) format or IP addresses.
        type: array
        items:
          type: string
        x-go-name: PreferredLdapServerList
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      useSsl:
        description: Specifies whether to use SSL for LDAP connections.
        type: boolean
        x-go-name: UseSsl
        x-nullable: true
      userDistinguishedName:
        description: |-
          Specifies the user distinguished name that is used for LDAP authentication.
          It should be provided if the AuthType is set to either kSimple or kSasl.
        type: string
        x-go-name: UserDistinguishedName
        x-nullable: true
      userPassword:
        description: Specifies the user password that is used for LDAP authentication.
        type: string
        x-go-name: UserPassword
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LdapProviderStatus:
    description: LDAP provider status struct.
    type: object
    title: LDAP Provider Status.
    properties:
      statusMessage:
        description: Specifies the connection status message of an LDAP provider.
        type: string
        x-go-name: StatusMessage
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LegalHoldings:
    description: Specifies the legal holding of a Protection Source.
    type: object
    title: Legal Holdings.
    properties:
      holdForLegalPurpose:
        description: Specifies whether the source is put on legal hold or not.
        type: boolean
        x-go-name: HoldForLegalPurpose
        x-nullable: true
      protectionSourceId:
        description: Specifies an Protection Source Id in the snapshot.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LicenseAccountUsageRsp:
    description: Structure to hold account usage response
    type: object
    properties:
      featureOverusage:
        description: Holds information about consumption usage of overused features
        type: array
        items:
          $ref: '#/definitions/Overusage'
        x-go-name: FeatureOverusages
        x-nullable: true
      freeSetupMode:
        description: Free Setup Mode
        type: boolean
        x-go-name: FreeSetupMode
        x-nullable: true
      isTrial:
        description: Check if trial license.
        type: boolean
        x-go-name: IsTrial
        x-nullable: true
      last12MonthsAvgEntitlement:
        description: Holds monthly avg usage values of feature
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/MonthlyEntitlement'
        x-go-name: MonthEnt
        x-nullable: true
      last12MonthsAvgUsage:
        description: Holds monthly avg usage values of feature
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/MonthlyUsage'
        x-go-name: MonthUse
        x-nullable: true
      last30DaysEntitlement:
        description: Holds daily entitled capacity values of feature
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/DailyEntitlement'
        x-go-name: DayEnt
        x-nullable: true
      last30DaysUsage:
        description: Holds daily usage values of feature
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/DailyUsage'
        x-go-name: DayUse
        x-nullable: true
      lastUpdateTime:
        description: Last time, this report was updated.
        type: integer
        format: int64
        x-go-name: LastUpdateTime
        x-nullable: true
      licensedUsage:
        description: |-
          LicenseFeatureUsages holds information about each feature
          from license orders.
        type: array
        items:
          $ref: '#/definitions/LicensedUsage'
        x-go-name: LicenseFeatureUsages
        x-nullable: true
      trialExpiration:
        description: Trial expiration period.
        type: integer
        format: int64
        x-go-name: TrialExpirationTime
        x-nullable: true
      usage:
        description: |-
          Creating a map of cluster id and feature usage to make it consistent
          display usage UI for the helios server license page UI.
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/FeatureUsage'
        x-go-name: Usage
        x-nullable: true
    x-go-package: cohesity/nexus/server/common
  LicenseState:
    description: Specifies the state of licensing workflow.
    type: object
    title: |-
      Data definition related to Licensing states.
      Refer: clusterConfigProto.LicenseState
    properties:
      failedAttempts:
        description: Specifies no of failed attempts at claiming the license server
        type: integer
        format: int64
        x-go-name: FailedAttempts
        x-nullable: true
      state:
        description: |-
          Specifies the current state of licensing workflow.
          LicenseStateType specifies the licenseState type.
          'kInProgressNewCluster' indicates licensing server claim is in progress
          for 'New' Cluster.
          'kInProgressOldCluster' indicates licensing server claim is in progress
          for 'Old' Cluster.
          'kClaimed' indicates licensing server is claimed.
          'kSkipped' indicates licensing workflow has been skipped.
          'kStarted' indicates licensing UI workflow has started.
        type: string
        enum:
        - kInProgressNewCluster
        - kInProgressOldCluster
        - kClaimed
        - kSkipped
        - kStarted
        x-go-name: State
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LicensedUsage:
    type: object
    title: Structure to hold feature usage on cluster side.
    properties:
      capacityGiB:
        description: Feature usage by the cluster.
        type: integer
        format: int64
        x-go-name: CapacityGb
        x-nullable: true
      expiryTime:
        description: |-
          Expiry time(epoch) of each feature.
          There could be multiple expiry time for the given SKU.
        type: integer
        format: int64
        x-go-name: ExpiryTimeInSecs
        x-nullable: true
      featureName:
        description: Name of feature.
        type: string
        x-go-name: FeatureName
        x-nullable: true
      licenseType:
        description: Type of License
        type: string
        x-go-name: LicenseType
        x-nullable: true
      numVm:
        description: Number of VM spinned.
        type: integer
        format: int64
        x-go-name: NumVm
        x-nullable: true
    x-go-package: cohesity/nexus/server/common
  LinuxSupportUserBashShellAccessReqParams:
    type: object
    title: Linux Support Bash Shell Access Req Params.
    properties:
      regenerateToken:
        description: |-
          If RegenerateToken is set to true, the token would be regenerated
          and the new token will be
          returned.
        type: boolean
        x-go-name: RegenerateToken
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LinuxSupportUserBashShellAccessResult:
    description: |-
      Specifies the result returned after a successful request to get
      the linux 'support' user bash shell access token,
    type: object
    title: Linux Support Bash Shell Access.
    properties:
      supportUserToken:
        description: SSH identity key to login as 'support' user.
        type: string
        x-go-name: SupportUserToken
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LinuxSupportUserSudoAccessReqParams:
    type: object
    title: Linux Support Sudo Access Req Params.
    properties:
      sudoAccessEnable:
        description: |-
          If the enable flag is set to true, the sudo access will be enabled.
          If the enable flag is set to false, the sudo access will be disabled.
        type: boolean
        x-go-name: SudoAccessEnable
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LinuxSupportUserSudoAccessResult:
    description: |-
      Specifies the result returned after a successful request to enable/disable
      the linux 'support' user sudo access.
    type: object
    title: Linux Support Sudo Access.
    properties:
      result:
        description: Date format is in MM/DD/YYYY HH:MM:SS
        type: string
        x-go-name: Result
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ListCentrifyZone:
    type: object
    properties:
      centrifySchema:
        description: |-
          Specifies the schema of this Centrify zone.
          The below list of schemas and their values are taken from the document
          Centrify Server Suite 2016 Windows API Programmer's Guide
          https://docs.centrify.com/en/css/suite2016/centrify-win-progguide.pdf
          'kCentrifyDynamicSchema_1_0' specifies dynamic schema, version 1.0.
          'kCentrifyDynamicSchema_2_0' specifies dynamic schema, version 2.0.
          'kCentrifyDynamicSchema_3_0' specifies dynamic schema, version 3.0.
          'kCentrifyDynamicSchema_5_0' specifies dynamic schema, version 5.0.
          'kCentrifySfu_3_0' specifies sfu schema, version 3.0.
          'kCentrifySfu_3_0_V5' specifies sfu schema, 3.0.5.
          'kCentrifySfu_4_0' specifies sfu schema, version 4.0.
          'kCentrifyCdcRfc2307' specifies cdcrfc2307 schema.
          'kCentrifyCdcRfc2307_2' specifies cdcrfc2307, version 2.
          'kCentrifyCdcRfc2307_3' specifies cdcrfc2307, version 3.
        type: string
        enum:
        - kCentrifyDynamicSchema_1_0
        - kCentrifyDynamicSchema_2_0
        - kCentrifySfu_3_0
        - kCentrifySfu_4_0
        - kCentrifyCdcRfc2307
        - kCentrifyDynamicSchema_3_0
        - kCentrifyCdcRfc2307_2
        - kCentrifyDynamicSchema_5_0
        - kCentrifyCdcRfc2307_3
        - kCentrifySfu_3_0_V5
        x-go-name: CentrifySchema
        x-nullable: true
      description:
        description: Specifies a description of the Centrify zone.
        type: string
        x-go-name: Description
        x-nullable: true
      distinguishedName:
        description: Specifies the distinguished name of the Centrify zone.
        type: string
        x-go-name: DistinguishedName
        x-nullable: true
      zoneName:
        description: Specifies the zone name.
        type: string
        x-go-name: ZoneName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ListCertResponse:
    description: Specifies list of all certificates deployed from the cluster.
    type: object
    title: List Certificates Response
    properties:
      certificateList:
        type: array
        items:
          $ref: '#/definitions/CertificateDetails'
        x-go-name: CertificateList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ListNlmLocksResponse:
    description: Query response to list of NLM locks.
    type: object
    title: List of NLM locks response.
    properties:
      cookie:
        description: |-
          Specifies an opaque string to pass to get the next set of NLM locks.
          If null is returned, this response is the last set of NLM locks.
        type: string
        x-go-name: Cookie
        x-nullable: true
      filesNlmLocks:
        description: Specifies the list of NLM locks.
        type: array
        items:
          $ref: '#/definitions/FileNlmLocks'
        x-go-name: FilesNlmLocks
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ListStorageProfilesResponseBody:
    description: |-
      Specifies the response to request to list the storage profiles associated
      with a VDC.
    type: object
    title: List Storage Profiles Response Body.
    properties:
      storageProfiles:
        description: Specifies a list of storage profiles.
        type: array
        items:
          $ref: '#/definitions/VcdStorageProfile'
        x-go-name: StorageProfiles
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LockFileParams:
    description: Specifies the parameters to lock a file in a view.
    type: object
    title: Lock File Parameters.
    properties:
      expiryTimestampMsecs:
        description: |-
          Specifies a definite timestamp in milliseconds for retaining the file, or
          to extend it's expiry timestamp.
        type: integer
        format: uint64
        x-go-name: ExpiryTimestampMsecs
        x-nullable: true
      path:
        description: Specifies the file path that needs to be locked.
        type: string
        x-go-name: Path
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LockRange:
    type: object
    title: Specifies details of an entity lock.
    properties:
      isExclusive:
        type: boolean
        x-go-name: IsExclusive
        x-nullable: true
      length:
        type: integer
        format: uint64
        x-go-name: Length
        x-nullable: true
      offset:
        type: integer
        format: uint64
        x-go-name: Offset
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LogicalStats:
    description: |-
      Provides logical statistics for logical entities such as Clusters
      and Domains (View Boxes).
      The logical size is the size of the data when it is fully hydrated or
      expanded.
      The actual physical data stored on the Cohesity Cluster is
      reduced by change-block tracking, compression and deduplication.
    type: object
    title: Logical Statistics
    properties:
      totalLogicalUsageBytes:
        description: |-
          Provides the combined data residing on protected objects.
          The size of data before reduction by deduplication and compression.
        type: integer
        format: int64
        x-go-name: TotalLogicalUsageBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  LogicalVolume:
    description: Specifies attributes for a kLVM (Linux) or kLDM (Windows) filesystem.
    type: object
    title: Logical Volume.
    properties:
      deviceRootNode:
        description: |-
          Specifies the device tree defining how to combine partitions to create
          this logical volume.
        x-nullable: true
        $ref: '#/definitions/DeviceTreeDetails'
      groupName:
        description: Specifies the group name of the logical volume.
        type: string
        x-go-name: GroupName
        x-nullable: true
      groupUuid:
        description: Specifies the group uuid of the logical volume.
        type: string
        x-go-name: GroupUuid
        x-nullable: true
      name:
        description: Specifies the name of the logical volume.
        type: string
        x-go-name: Name
        x-nullable: true
      uuid:
        description: Specifies the uuid of the logical volume.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MORef:
    type: object
    title: Type that represents the ManagedObjectReference in VMware.
    properties:
      item:
        type: string
        x-go-name: Item
        x-nullable: true
      type:
        type: string
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/entities/vmware_common.pb
  MSExchangeParams:
    description: All the params specific to MS exchange application.
    type: object
    title: MS Exchange Parameters.
    properties:
      performLogTruncation:
        description: |-
          If this is set to true, then an attempt will be made to truncate
          exchange logs.
        type: boolean
        x-go-name: PerformLogTruncation
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  MagnetoInstanceId:
    type: object
    properties:
      attemptNum:
        description: The attempt of the job instance that took the snapshot.
        type: integer
        format: int64
        x-go-name: AttemptNum
        x-nullable: true
      jobInstanceId:
        description: Instance of the job that took the snapshot.
        type: integer
        format: int64
        x-go-name: JobInstanceId
        x-nullable: true
      jobStartTimeUsecs:
        description: Start time of the job instance.
        type: integer
        format: int64
        x-go-name: JobStartTimeUsecs
        x-nullable: true
    x-go-package: yoda/base/yoda_types.pb
  MagnetoObjectId:
    type: object
    title: Message that represents a Magneto object. Only used by Yoda.
    properties:
      entity:
        description: Entity proto that represents the object being snapshotted.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      jobId:
        description: |-
          The id of the local job that the object belongs to, which may or may not
          match the object_id field in job_uid below depending on whether the object
          originally belonged to this local job or to a different remote job.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobUid:
        description: |-
          The globally unique id of the job that the object originally belonged to.
          If this object originally belonged to a job from a remote cluster, this
          field will contain the uid of the remote job, else it will contain the uid
          of the local job.
        x-nullable: true
        $ref: '#/definitions/UniversalIdProto'
    x-go-package: magneto/base/magneto.pb
  MapReduceAuxData:
    description: |-
      This message encapsulates auxillary data for a MapReduce. One example of
      such data is saved patterns for Pattern finder app.
    type: object
    properties:
      patternVec:
        description: Pattern auxiliary data for a MapReduce.
        type: array
        items:
          $ref: '#/definitions/Pattern'
        x-go-name: PatternVec
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  MapReduceFileFormats:
    description: Specifies information about file formats produced by a mapo reduce
      instance.
    type: object
    title: Map Reduce File Formats.
    properties:
      supportedFormats:
        description: |-
          Specifies the list of formats supported with integer enum mapping to file
          format.
        type: array
        items:
          type: string
        x-go-name: SupportedFormats
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MapReduceInfo:
    description: |-
      This will be used to encapsulate information about mapper and reducer only.
      On UI this will be used to show the list of available apps to the user.
    type: object
    title: Map Reduce Information.
    properties:
      appProperty:
        x-nullable: true
        $ref: '#/definitions/MapReduceInfo_AppProperty'
      auxData:
        description: Auxiliary data for map reduce.
        x-nullable: true
        $ref: '#/definitions/MapReduceAuxData'
      description:
        description: Map reduce job description.
        type: string
        x-go-name: Description
        x-nullable: true
      excludedDataSourceVec:
        description: List of all excluded data sources for this app.
        type: array
        items:
          type: integer
          format: int32
        x-go-name: ExcludedDataSourceVec
        x-nullable: true
      id:
        description: ID of map reduce job.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      isSystemDefined:
        description: |-
          Flag to denote if this is system pre-defined app or user has written this
          app.
        type: boolean
        x-go-name: IsSystemDefined
        x-nullable: true
      mapperId:
        description: ID of the mapper to process the input.
        type: integer
        format: int64
        x-go-name: MapperId
        x-nullable: true
      name:
        description: Map reduce job name.
        type: string
        x-go-name: Name
        x-nullable: true
      reducerId:
        description: ID of the reducer.
        type: integer
        format: int64
        x-go-name: ReducerId
        x-nullable: true
      requiredPropertyVec:
        type: array
        items:
          $ref: '#/definitions/MapReduceInfo_RequiredProperty'
        x-go-name: RequiredPropertyVec
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  MapReduceInfo_AppProperty:
    description: |-
      AppProperty message encapsulates properties that are same across all run
      instances of an app.
    type: object
    properties:
      csvHeader:
        description: csv_header should be tab separated column names.
        type: string
        x-go-name: CsvHeader
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  MapReduceInfo_RequiredProperty:
    description: |-
      A required property represents a property that user must set before
      invoking a mapreduction instance. e.g., SimpleGrepMapper will require a
      property named searchPattern to be set.
    type: object
    properties:
      defaultValue:
        description: Default Value of the property.
        type: string
        x-go-name: DefaultValue
        x-nullable: true
      description:
        description: Description of this property
        type: string
        x-go-name: Description
        x-nullable: true
      isRequired:
        description: Whether the property is required or optional.
        type: boolean
        x-go-name: IsRequired
        x-nullable: true
      name:
        description: Name of the property.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  MapReduceInstance:
    description: Information about a Map reduce instance. An instance can be run only
      once.
    type: object
    title: Map Reduce Instance.
    properties:
      id:
        description: System generated ID of map reduce instance.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      inputParams:
        type: array
        items:
          $ref: '#/definitions/MapReduceInstance_InputParam'
        x-go-name: InputParams
        x-nullable: true
      inputSpec:
        description: Input spec for the MR.
        x-nullable: true
        $ref: '#/definitions/InputSpec'
      mapReduceInfoId:
        description: ID of Map reduce info.
        type: integer
        format: int64
        x-go-name: MapReduceInfoId
        x-nullable: true
      outputSpec:
        description: Output spec for the MR.
        x-nullable: true
        $ref: '#/definitions/OutputSpec'
      runInfo:
        description: |-
          Information about run of this instance. All fields of RunInfo will be
          populated by yoda/analytics components.
        x-nullable: true
        $ref: '#/definitions/MapReduceInstance_RunInfo'
    x-go-package: yoda/base/analytics.pb
  MapReduceInstanceWrapper:
    description: |-
      MapReduceInstanceWrapper is the struct containing the map reduce instance
      information along with the output file path information required to download
      the results set.
    type: object
    title: Map Reduce Instance Wrapper.
    properties:
      logPath:
        description: LogPath is the path of the log files for the MR instance run.
        type: string
        x-go-name: LogPath
        x-nullable: true
      mrInstance:
        description: InstanceInfo is the information about the map reduce application
          instance.
        x-nullable: true
        $ref: '#/definitions/MapReduceInstance'
      outputFilePathList:
        description: |-
          OutputFilePathList is the list containing the output files path suffix
          that Yoda uses to build the full path of the MR instance run output files.
        type: array
        items:
          type: string
        x-go-name: OutputFilePathList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MapReduceInstance_InputParam:
    description: |-
      User can also pass Input params to run a map reduce. E.g. a grep MR
      will need input about what to grep.
    type: object
    properties:
      key:
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  MapReduceInstance_RunInfo:
    type: object
    title: Stores the progress of run of this instance.
    properties:
      endTime:
        description: Time when map redcue job completed.
        type: integer
        format: int64
        x-go-name: EndTime
        x-nullable: true
      errorMessage:
        description: If this run failed, then error message for failure.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      executionStartTimeUsecs:
        description: Time (in usecs) when job was picked up for execution.
        type: integer
        format: int64
        x-go-name: ExecutionStartTimeUsecs
        x-nullable: true
      filesProcessed:
        description: Number of files processed in this run.
        type: integer
        format: int32
        x-go-name: FilesProcessed
        x-nullable: true
      mapDoneTimeUsecs:
        description: Time (in usecs) when map tasks were done.
        type: integer
        format: int64
        x-go-name: MapDoneTimeUsecs
        x-nullable: true
      mapInputBytes:
        description: Total size of data processed by this run in bytes.
        type: integer
        format: int64
        x-go-name: MapInputBytes
        x-nullable: true
      mappersSpawned:
        description: Number of mappers spawned till now.
        type: integer
        format: int32
        x-go-name: MappersSpawned
        x-nullable: true
      numMapOutputs:
        description: Number of outputs from mappers.
        type: integer
        format: int64
        x-go-name: NumMapOutputs
        x-nullable: true
      numReduceOutputs:
        description: Number of outputs from reducers.
        type: integer
        format: int64
        x-go-name: NumReduceOutputs
        x-nullable: true
      percentageCompletion:
        description: Percentage completion of this run so far.
        type: number
        format: float
        x-go-name: PercentageCompletion
        x-nullable: true
      percentageMapperCompletion:
        description: Percentage of mapper phase completed.
        type: number
        format: float
        x-go-name: PercentageMapperCompletion
        x-nullable: true
      percentageReducerCompletion:
        description: Percentage of reducer phase completed.
        type: number
        format: float
        x-go-name: PercentageReducerCompletion
        x-nullable: true
      reducersSpawned:
        description: Number of reducers spawned till now.
        type: integer
        format: int32
        x-go-name: ReducersSpawned
        x-nullable: true
      remainingTimeMins:
        description: Expected remaining time in minutes for completion of this run.
        type: integer
        format: int32
        x-go-name: RemainingTimeMins
        x-nullable: true
      startTime:
        description: Time when map reduce job was started by user.
        type: integer
        format: int64
        x-go-name: StartTime
        x-nullable: true
      status:
        description: Status of this run.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
      totalNumMappers:
        description: Total number of mappers to be spawned.
        type: integer
        format: int32
        x-go-name: TotalNumMappers
        x-nullable: true
      totalNumReducers:
        description: Total number of reducers to be spawned.
        type: integer
        format: int32
        x-go-name: TotalNumReducers
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  MapperInfo:
    type: object
    title: Information about a mapper.
    properties:
      code:
        description: The code of the mapper in the specified language. Should be UTF-8.
        type: string
        x-go-name: Code
        x-nullable: true
      id:
        description: |-
          Mapper ID generated by system. Absent when user is creating a new mapper.
          Mandatory in all other use cases.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      isSystemDefined:
        description: Whether the mapper is system defined.
        type: boolean
        x-go-name: IsSystemDefined
        x-nullable: true
      jarName:
        description: |-
          User can write their own mapper/reducer or upload jar files containing
          mappers and reducers. If this mapper was part of a jar file, then this
          field will have the JAR name.
        type: string
        x-go-name: JarName
        x-nullable: true
      jarPath:
        description: |-
          path of JAR in which this mapper was found. This is applicable only when
          this mapper was uploaded via JAR.
        type: string
        x-go-name: JarPath
        x-nullable: true
      language:
        description: Language of the mapper.
        type: integer
        format: int32
        x-go-name: Language
        x-nullable: true
      name:
        description: Name of the mapper.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  MappersWrapper:
    description: MappersWrapper is the struct to define the list of mappers.
    type: object
    title: Mappers Wrapper.
    properties:
      mappers:
        description: Mappers specifies the list of available mappers in analytics
          workbench.
        type: array
        items:
          $ref: '#/definitions/MapperInfo'
        x-go-name: Mappers
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MetricDataBlock:
    description: Specifies a series of metric data points for a time series.
    type: object
    title: Metric Data Block.
    properties:
      dataPointVec:
        description: |-
          Array of Data Points.

          Specifies a list of metric data points for a time series.
        type: array
        items:
          $ref: '#/definitions/MetricDataPoint'
        x-go-name: DataPointVec
        x-nullable: true
      metricName:
        description: Specifies the name of a metric such as 'kDiskAwaitTimeMsecs'.
        type: string
        x-go-name: MetricName
        x-nullable: true
      type:
        description: |-
          Specifies the data type of the data points.
          0 specifies a data point of type Int64.
          1 specifies a data point of type Double.
          2 specifies a data point of type String.
          3 specifies a data point of type Bytes.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: stats/base/stats.pb
  MetricDataPoint:
    description: Specifies information about a single data point in a time series.
    type: object
    title: Metric Data Point.
    properties:
      data:
        description: |-
          Corresponding value of a metric at the given timestamp. When client
          adds or pushes the stats, this field must be specified. When Stats module,
          returns the time series data, this field could be empty if data point is
          not available for the given timestamp.
        x-nullable: true
        $ref: '#/definitions/Value_Data'
      rollupFunction:
        description: |-
          If this is a rolled up data point, following enum denotes the rollup
          function used for rolling up. For a raw point this enum is not set.
        type: integer
        format: int32
        x-go-name: RollupFunction
        x-nullable: true
      timestampMsecs:
        description: Specifies a timestamp when the metric data point was captured.
        type: integer
        format: int64
        x-go-name: TimestampMsecs
        x-nullable: true
    x-go-package: stats/base/stats.pb
  MetricValue:
    description: Specifies one data point of a metric.
    type: object
    title: Metric Value.
    properties:
      metricName:
        description: Specifies the metric name.
        type: string
        x-go-name: MetricName
        x-nullable: true
      timestampMsecs:
        description: |-
          Specifies the creation time of a data point as a Unix epoch Timestamp
          (in milliseconds).
        type: integer
        format: int64
        x-go-name: TimestampMsecs
        x-nullable: true
      value:
        description: Specifies the value of the data point.
        x-nullable: true
        $ref: '#/definitions/Value'
    x-go-package: stats/base/stats.pb
  MongoDBAdditionalParams:
    description: |-
      Contains additional  parameters required for taking backup from
      this Mongo cluster.
    type: object
    properties:
      secondaryNodeTag:
        description: |-
          The tag associated with the secondary nodes from which backups
          should be performed.
        type: array
        items:
          type: string
        x-go-name: SecondaryNodeTag
        x-nullable: true
      useSecondaryForBackup:
        description: Set to true if this cluster uses secondary nodes for backup.
        type: boolean
        x-go-name: UseSecondaryForBackup
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  MongoDBBackupJobParams:
    description: |-
      Contains any additional mongodb environment specific backup params at the
      job level.
    type: object
    properties:
      mongodbAdditionalInfo:
        description: Additional parameters required for Mongo backup
        x-nullable: true
        $ref: '#/definitions/MongoDBAdditionalParams'
    x-go-package: magneto/base/nosql.pb
  MongoDBCluster:
    description: Specifies an Object containing information about a mongodb cluster.
    type: object
    title: MongoDB Cluster Info.
    properties:
      seeds:
        description: Seeds of this MongoDB Cluster.
        type: array
        items:
          type: string
        x-go-name: Seeds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MongoDBCollection:
    description: Specifies an Object containing information about a mongodb collection.
    type: object
    title: MongoDB Collection Info.
    properties:
      isCappedCollection:
        description: Set to true if this is a capped Collection.
        type: boolean
        x-go-name: IsCappedCollection
        x-nullable: true
      isMongoView:
        description: Set to true if this Collection is a view.
        type: boolean
        x-go-name: IsMongoView
        x-nullable: true
      sizeBytes:
        description: Size of this Collection.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MongoDBConnectParams:
    description: |-
      Specifies an Object containing information about a registered mongodb
      source.
    type: object
    title: MongoDB Connect Params.
    properties:
      authType:
        description: |-
          Specifies whether authentication is configured on this MongoDB cluster.
          Specifies the type of an MongoDB source entity.
          'SCRAM'
          'LDAP'
          'NONE'
        type: string
        enum:
        - SCRAM
        - LDAP
        - NONE
        x-go-name: AuthType
        x-nullable: true
      authenticatingDatabaseName:
        description: Specifies the Authenticating Database for this MongoDB cluster.
        type: string
        x-go-name: AuthenticatingDatabaseName
        x-nullable: true
      requiresSsl:
        description: Specifies whether connection is allowed through SSL only in this
          cluster.
        type: boolean
        x-go-name: RequiresSsl
        x-nullable: true
      secondaryNodeTag:
        description: |-
          MongoDB Secondary node tag. Required only if 'useSecondaryForBackup' is true.
          The system will use this to identify the secondary nodes for reading backup data.
        type: string
        x-go-name: SecondaryNodeTag
        x-nullable: true
      seeds:
        description: Specifies the seeds of this MongoDB Cluster.
        type: array
        items:
          type: string
        x-go-name: Seeds
        x-nullable: true
      useSecondaryForBackup:
        description: Set this to true if you want the system to peform backups from
          secondary nodes.
        type: boolean
        x-go-name: UseSecondaryForBackup
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MongoDBDatabase:
    description: Specifies an Object containing information about a mongodb database.
    type: object
    title: MongoDB Database Info.
    properties:
      sizeBytes:
        description: Size of this Database.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MongoDBProtectionSource:
    description: Specifies an Object representing MongoDB.
    type: object
    title: MongoDB Protection Source.
    properties:
      clusterInfo:
        description: |-
          Information of a mongodb cluster, only valid for an entity of type
          kCluster.
        x-nullable: true
        $ref: '#/definitions/MongoDBCluster'
      collectionInfo:
        description: |-
          Information about a mongodb collection, only valid for an entity of type
          kCollection.
        x-nullable: true
        $ref: '#/definitions/MongoDBCollection'
      databaseInfo:
        description: |-
          Information of a mongodb database, only valid for an entity of type
          kDatabase.
        x-nullable: true
        $ref: '#/definitions/MongoDBDatabase'
      name:
        description: Specifies the instance name of the MongoDB entity.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of the managed Object in MongoDB Protection Source.
          Specifies the type of an MongoDB source entity.
          'kCluster' indicates a mongodb cluster distributed over several physical
          nodes.
          'kDatabase' indicates a Database within the MongoDB environment.
          'kCollection' indicates a Collection in the MongoDB enironment.
        type: string
        enum:
        - kCluster
        - kDatabase
        - kCollection
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID for the MongoDB entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MongoDBRecoverJobParams:
    description: |-
      Contains any additional mongodb environment specific params for the
      recover job.
    type: object
    properties:
      suffix:
        description: A suffix that is to be applied to all recovered entities
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  MonthlyEntitlement:
    type: object
    properties:
      featureName:
        type: string
        x-go-name: FeatureName
        x-nullable: true
      monthlyAvgEntitlement:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: MonthlyEntitlementVal
        x-nullable: true
    x-go-package: cohesity/nexus/server/common
  MonthlySchedule:
    description: |-
      Specifies a monthly backup schedule by specifying a day in the week
      and a week in the month.
      For example, if day is set to 'kMonday' and dayCount is set
      to 'kThird', a Job Run is started on the third Monday of every month.
    type: object
    title: Monthly Schedule.
    properties:
      day:
        description: |-
          Specifies the day of the week (such as 'kMonday') to start the Job Run.
          Used with day count to define the day in the month to start
          the Job Run.
          Specifies a day in a week such as 'kSunday', 'kMonday', etc.
        type: string
        enum:
        - kSunday
        - kMonday
        - kTuesday
        - kWednesday
        - kThursday
        - kFriday
        - kSaturday
        x-go-name: Day
        x-nullable: true
      dayCount:
        description: |-
          Specifies the day count in the month (such as 'kThird') to start
          the Job Run.
          Used in combination with day to define the day in the month to start
          the Job Run.
          Specifies the day count in the month to start the backup.
          For example if day count is set to 'kThird' and day is set to 'kMonday',
          a backup is performed on the third Monday of every month.
          'kFirst' indicates that the first week should be chosen for specified
          day of every month.
          'kSecond' indicates that the second week should be chosen for specified
          day of every month.
          'kThird' indicates that the third week should be chosen for specified
          day of every month.
          'kFourth' indicates that the fourth week should be chosen for specified
          day of every month.
          'kLast' indicates that the last week should be chosen for specified
          day of every month.
        type: string
        enum:
        - kFirst
        - kSecond
        - kThird
        - kFourth
        - kLast
        x-go-name: DayCount
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MonthlyUsage:
    type: object
    properties:
      featureName:
        type: string
        x-go-name: FeatureName
        x-nullable: true
      monthlyAvgUsage:
        type: array
        items:
          type: integer
          format: int64
        x-go-name: MonthlyUsageVal
        x-nullable: true
    x-go-package: cohesity/nexus/server/common
  MountVolumeResult:
    type: object
    title: This message captures result of mount of an individual volume.
    properties:
      error:
        description: This is set if there is any error during the mount.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      filesystemType:
        description: Filesystem on this volume.
        type: string
        x-go-name: FilesystemType
        x-nullable: true
      mountPoint:
        description: |-
          This is populated with the mount point where the volume corresponding to
          the newly attached volume is mounted.
          NOTE: This may not be present in the VM environments if onlining of disks
          is not requested or if the there was any issue during onlining.
        type: string
        x-go-name: MountPoint
        x-nullable: true
      originalVolumeName:
        description: This is the name or mount point of the original volume.
        type: string
        x-go-name: OriginalVolumeName
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  MountVolumeResultDetails:
    description: |-
      Specifies the result of mounting an individual mount volume in a
      Restore Task.
    type: object
    title: Mount Volume Result Details.
    properties:
      mountError:
        description: |-
          Specifies the cause of the mount failure if the mounting of a
          volume failed.
        allOf:
        - $ref: '#/definitions/RequestError'
        x-nullable: true
      mountPoint:
        description: |-
          Specifies the mount point where the volume is mounted.
          NOTE: This field may not be populated for VM environments if the
          onlining of disks is not requested or there was any issue during onlining.
        type: string
        x-go-name: MountPoint
        x-nullable: true
      volumeName:
        description: Specifies the name of the original volume.
        type: string
        x-go-name: VolumeName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MountVolumesHyperVParams:
    type: object
    title: HyperV specific additional params.
    properties:
      bringDisksOnline:
        description: |-
          Optional setting which will determine if the volumes need to be onlined
          within the target environment after attaching the disks.
          NOTE: If this is set to true, then target_entity_credentials must be
          specified and HyperV Integration Services must be installed on the VM.
        type: boolean
        x-go-name: BringDisksOnline
        x-nullable: true
      targetEntityCredentials:
        description: |-
          Credentials to access the target entity such as a VM.
          This is not required if bring_disks_online is set to false.
        x-nullable: true
        $ref: '#/definitions/Credentials'
    x-go-package: magneto/base/magneto.pb
  MountVolumesInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined.

      MountVolumesInfoProto extension                     Location
      =============================================================================
      vmware::MountVolumesInfoProto::vmware_mount_volumes_info vmware/vmware.proto
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about mount volumes task for any
      of the environments we support. Environment specific mount volume infos are
      defined as extensions to this proto.
    properties:
      cleanupError:
        description: |-
          If an error is encountered while cleaning up state, then it will be
          captured as part of this.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      error:
        description: |-
          If the mounting of volumes failed, this field may contain the cause
          of the failure.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      finished:
        description: This will be set to true if the task is complete on the slave.
        type: boolean
        x-go-name: Finished
        x-nullable: true
      mountVolumeResultVec:
        description: Contains the result information of the mounted volumes.
        type: array
        items:
          $ref: '#/definitions/MountVolumeResult'
        x-go-name: MountVolumeResultVec
        x-nullable: true
      restoreDisksTaskInfoProto:
        description: |-
          The environment specific extensions of this proto store the detailed
          status information about the task.
        title: |-
          The state of the task that sets up and tears down the restore disks that
          are needed during the mount/teardown operation
        x-nullable: true
        $ref: '#/definitions/SetupRestoreDiskTaskInfoProto'
      slaveTaskStartTimeUsecs:
        description: This is the timestamp at which the slave task started.
        type: integer
        format: int64
        x-go-name: SlaveTaskStartTimeUsecs
        x-nullable: true
      type:
        description: The type of environment this mount volumes info pertains to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      vmOnlineDisksError:
        description: |-
          If an error was encountered while onlining the disks within the VM, then
          this will capture that error. This is only applicable to the VMware
          environment.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
    x-go-package: magneto/base/magneto.pb
  MountVolumesParameters:
    description: |-
      Specifies the information required for mounting volumes.
      Only required for Restore Tasks of type 'kMountVolumes'.
      At a minimum, the targetSourceId must be specified for 'kMountVolumes'
      Restore Tasks. If only targetSourceId is specified, all disks are
      attached but may not be mounted.
      The mount target must be registered on the Cohesity Cluster.
      If the mount target is a VM, VMware Tools must be installed.
      If the mount target is a physical server, a Cohesity Agent must be
      be installed. See the Cohesity Dashboard help documentation for details.
      In the username and password fields, specify the credentials to
      access the mount target.
    type: object
    title: Mounting Volumes.
    properties:
      bringDisksOnline:
        description: |-
          Optional setting that determines if the volumes are brought
          online on the mount target after attaching the disks.
          This field is only set for VMs. The Cohesity Cluster always
          attempts to mount Physical servers.
          If true and the mount target is a VM, to mount the volumes
          VMware Tools must be installed on the guest operating system of the VM
          and login credentials to the mount target must be specified.
          NOTE: If automount is configured for a Windows system, the
          volumes may be automatically brought online.
        type: boolean
        x-go-name: BringDisksOnline
        x-nullable: true
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      targetSourceId:
        description: |-
          Specifies the target Protection Source id where the volumes will be
          mounted.
          NOTE: The source that was backed up and the mount target must be the
          same type, for example if the source is a VMware VM, then the mount
          target must also be a VMware VM.
          The mount target must be registered on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: TargetSourceId
        x-nullable: true
      useExistingAgent:
        description: |-
          Optional setting that determines if this will use an existing agent
          on the target vm to bring disks online.
        type: boolean
        x-go-name: UseExistingAgent
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
      volumeNames:
        description: |-
          Array of Volume Names.

          Optionally specify the names of volumes to mount.
          If none are specified, all volumes of the Server are mounted on the
          target. To get the names of the volumes, call the
          GET /public/restore/vms/volumesInformation operation.
        type: array
        items:
          type: string
        x-go-name: VolumeNames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MountVolumesParams:
    type: object
    title: Contains information needed when mounting volumes.
    properties:
      hypervParams:
        description: |-
          Environment specific additional params if any.
          This is populated for HyperV environments.
        x-nullable: true
        $ref: '#/definitions/MountVolumesHyperVParams'
      readonlyMount:
        description: |-
          Allows the caller to force the Agent to perform a read-only mount. This is
          not usually required and we want to give customers the ability to mutate
          this mount for test/dev purposes.
        type: boolean
        x-go-name: ReadonlyMount
        x-nullable: true
      targetEntity:
        description: |-
          Target entity where the volumes are being mounted.
          NOTE: The source entity from which the backup was done and the
          target entity must be of the same type, i.e if the source entity is a
          VMware VM, then the target entity should be a VMware VM as well.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      useExistingAgent:
        description: |-
          Whether this will use an existing agent on the target vm to do a restore
          operation.
        type: boolean
        x-go-name: UseExistingAgent
        x-nullable: true
      vmwareParams:
        description: |-
          Environment specific additional params if any.
          This is populated for VMware environments.
        x-nullable: true
        $ref: '#/definitions/MountVolumesVMwareParams'
      volumeNameVec:
        description: |-
          Optional names of volumes that need to be mounted. The names here
          correspond to the volume names obtained by Iris from Yoda as part of
          VMVolumeInfo call.
          NOTE: If this is not specified then all volumes that are part of the
          server will be mounted on the target entity.
        type: array
        items:
          type: string
        x-go-name: VolumeNameVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  MountVolumesState:
    description: |-
      Specifies the states of mounting all the volumes onto a mount target
      for a 'kRecoverVMs' Restore Task.
    type: object
    title: Mount Volumes States.
    properties:
      bringDisksOnline:
        description: |-
          Optional setting that determines if the volumes are brought
          online on the mount target after attaching the disks.
          This option is only significant for VMs.
        type: boolean
        x-go-name: BringDisksOnline
        x-nullable: true
      mountVolumeResults:
        description: |-
          Array of Mount Volume Results.

          Specifies the results of mounting each specified volume.
        type: array
        items:
          $ref: '#/definitions/MountVolumeResultDetails'
        x-go-name: MountVolumeResults
        x-nullable: true
      otherError:
        description: Specifies an error that did not occur during the mount operation.
        title: Non-mount Error.
        allOf:
        - $ref: '#/definitions/RequestError'
        x-nullable: true
      targetSourceId:
        description: |-
          Specifies the target Protection Source Id where the volumes will be
          mounted.
          NOTE: The source that was backed up and the mount target must be the
          same type, for example if the source is a VMware VM, then the mount
          target must also be a VMware VM.
          The mount target must be registered on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: TargetSourceId
        x-nullable: true
      username:
        description: Specifies the username to access the mount target.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  MountVolumesTaskStateProto:
    type: object
    title: Persistent state for a "mount volumes" restore task.
    properties:
      fullNasPath:
        description: |-
          Contains the SMB/NFS path of the share we expose to clients. The share
          contains the files pertinent to the original backup run type.
        type: string
        x-go-name: FullNasPath
        x-nullable: true
      hostEntity:
        description: |-
          The host on which the VM where the disks are attached to are running.
          NOTE: This is only used in HyperV environment.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      mountInfo:
        description: |-
          Contains information about the mount virtual disks task that is populated
          by the slave.
        x-nullable: true
        $ref: '#/definitions/MountVolumesInfoProto'
      mountParams:
        description: |-
          This captures all the necessary information required to perform mount
          virtual disks task.
        x-nullable: true
        $ref: '#/definitions/MountVolumesParams'
    x-go-package: magneto/master/base/master.pb
  MountVolumesVMwareParams:
    type: object
    title: VMware specific additional params.
    properties:
      bringDisksOnline:
        description: |-
          Optional setting which will determine if the volumes need to be onlined
          within the target environment after attaching the disks.
          NOTE: If this is set to true, then target_entity_credentials must be
          specified and VMware tools must be installed on the VM.
        type: boolean
        x-go-name: BringDisksOnline
        x-nullable: true
      targetEntityCredentials:
        description: |-
          Credentials to access the target entity such as a VM.
          This is not required if bring_disks_online is set to false.
        x-nullable: true
        $ref: '#/definitions/Credentials'
    x-go-package: magneto/base/magneto.pb
  NasBackupParams:
    description: Message to capture any additional backup params for a NAS environment.
    type: object
    title: NAS Backup Parameters.
    properties:
      backupExistingSnapshot:
        description: |-
          This bool parameter will be set only for DP volumes when customer doesn't
          select the full_backup_snapshot_label and
          incremental_backup_snapshot_label. When set to true, backend will be
          using existing oldest snapshot for the first backup. Each incremental
          will be selected in ascending of snapshot create time on the source.
        type: boolean
        x-go-name: BackupExistingSnapshot
        x-nullable: true
      blacklistedIpAddrs:
        description: A list of IP addresses that should not be used.
        type: array
        items:
          type: string
        x-go-name: BlacklistedIpAddrs
        x-nullable: true
      continueOnError:
        description: |-
          Whether the backup job should continue on errors for snapshot based
          backups. For non-snapshot-based generic NAS backup jobs, Magneto always
          continues on errors.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      encryptionEnabled:
        description: Whether this backup job should use encryption.
        type: boolean
        x-go-name: EncryptionEnabled
        x-nullable: true
      filteringPolicy:
        description: |-
          The filtering policy to decide which objects within a source should be
          backed up. If this is not specified, then all of the objects within the
          source will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilteringPolicyProto'
      fldConfig:
        description: |-
          File level data lock configuration.
          To support File DataLock functionality similar to Netapp SnapLock,
          the following fields will be required from the user.
          This is same as what Cohesity as a filer offers for File DataLock.
        x-nullable: true
        $ref: '#/definitions/ViewIdMappingProto_FileLevelDataLockConfig'
      fullBackupSnapshotLabel:
        description: |-
          Only used when we backup using discovered snapshots. This prefix is to
          figure out which discovered snapshot we need to use for full backup.
        type: string
        x-go-name: FullBackupSnapshotLabel
        x-nullable: true
      incrementalBackupSnapshotLabel:
        description: |-
          Only used when we backup using discovered snapshots. This prefix is to
          figure out which discovered snapshot we need to use for incremental
          backup.
        type: string
        x-go-name: IncrementalBackupSnapshotLabel
        x-nullable: true
      mixedModePreference:
        description: |-
          If the target entity is a mixed mode volume, which NAS protocol type the
          user prefer to backup. This does not apply to generic NAS and will be
          ignored.
        type: integer
        format: int32
        x-go-name: MixedModePreference
        x-nullable: true
      snapshotChangeEnabled:
        description: |-
          Whether this backup job should utilize changelist like API when available
          for faster incremental backups.
        type: boolean
        x-go-name: SnapshotChangeEnabled
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  NasCredentials:
    description: Specifies the server credentials to connect to a NetApp server.
    type: object
    title: NAS Server Credentials.
    properties:
      host:
        description: Specifies the hostname or IP address of the NAS server.
        type: string
        x-go-name: Host
        x-nullable: true
      mountPath:
        description: Specifies the mount path to the NAS server.
        type: string
        x-go-name: MountPath
        x-nullable: true
      password:
        description: |-
          If using the CIFS protocol and a Username was specified, specify
          the password for the username.
        type: string
        x-go-name: Password
        x-nullable: true
      shareType:
        description: |-
          Specifies the sharing protocol type used to mount the file system.
          Currently, only NFS is supported.
          'kNFS' indicates use the NFS protocol to mount the file system.
          'kCIFS' indicates use the CIFS protocol to mount the file system.
        type: string
        enum:
        - kNFS
        - kCIFS
        x-go-name: ShareType
        x-nullable: true
      username:
        description: |-
          If using the CIFS protocol, you can optional specify a username
          to use when mounting.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NasEnvJobParameters:
    description: |-
      Specifies job parameters applicable for all 'kGenericNas' Environment type
      Protection Sources in a Protection Job.
    type: object
    title: NAS Environment Job Parameters.
    properties:
      continueOnError:
        description: |-
          Specifies if the backup should continue on with other Protection Sources
          even if the backup operation of some Protection Source fails. If true,
          the Cohesity Cluster ignores the errors and continues with remaining
          Protection Sources in the job. If false, the backup operation stops when
          an error occurs. This does not apply to non-snapshot based generic NAS
          backup jobs. If not set, default value is true.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      dataMigrationJobParameters:
        description: |-
          Specifies additional parameters that are applicable only to the data
          migration jobs in NAS environment.
        x-nullable: true
        $ref: '#/definitions/DataMigrationJobParameters'
      dataUptierJobParameters:
        description: |-
          Specifies additional parameters that are applicable only to the data
          uptier jobs in NAS environment.
        x-nullable: true
        $ref: '#/definitions/DataUptierJobParameters'
      enableFasterIncrementalBackups:
        description: |-
          Specifies whether this job will enable faster incremental backups using
          change list or similar APIs
        type: boolean
        x-go-name: EnableFasterIncrementalBackups
        x-nullable: true
      encryptionEnabled:
        description: Specifies if the protection job should use encryption while backing
          up
        type: boolean
        x-go-name: EncryptionEnabled
        x-nullable: true
      fileLockConfig:
        description: |-
          Optional config that enables file locking for this job. It cannot be
          disabled during the edit of a job, if it has been enabled during the
          creation of the job. Also, it cannot be enabled if it was disabled
          during the creation of the job.
        x-nullable: true
        $ref: '#/definitions/FileLevelDataLockConfig'
      filePathFilters:
        description: |-
          Specifies filters on the backup objects like files and directories.
          Specifying filters decide which objects within a source should be backed
          up. If this field is not specified, then all of the objects within the
          source will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilePathFilter'
      nasProtocol:
        description: |-
          Specifies the preferred protocol to use for backup. This does not
          apply to generic NAS and will be ignored.
          Specifies the protocol used by a NAS server.
          'kNfs3' indicates NFS v3 protocol.
          'kCifs1' indicates CIFS v1.0 protocol.
        type: string
        enum:
        - kNfs3
        - kCifs1
        x-go-name: NasProtocol
        x-nullable: true
      snapshotLabel:
        description: |-
          Specifies the incremental and full snapshot label for
          Data-Protect Netapp Volumes backup. If field is set , incremental
          and full snapshot label has to be provided. If field is not set, the
          snapshot label will be automatically set using timestamp.
        x-nullable: true
        $ref: '#/definitions/SnapshotLabel'
    x-go-package: cohesity/iris/server/data/public
  NasMountCredentialParams:
    description: Specifies the credentials to mount a volume on a NetApp server.
    type: object
    title: NAS Mount Credentials.
    properties:
      domain:
        description: Specifies the domain in which this credential is valid.
        type: string
        x-go-name: Domain
        x-nullable: true
      domainController:
        description: Specifies the domain controller for the selected domain
        type: string
        x-go-name: DomainController
        x-nullable: true
      managePasswordByCohesity:
        description: Specifies if Cohesity can manage the password after registration
        type: boolean
        x-go-name: ManagePasswordByCohesity
        x-nullable: true
      nasProtocol:
        description: |-
          Specifies the protocol used by the NAS server.
          Specifies the protocol used by a NAS server.
          'kNfs3' indicates NFS v3 protocol.
          'kCifs1' indicates CIFS v1.0 protocol.
        type: string
        enum:
        - kNfs3
        - kCifs1
        x-go-name: NasProtocol
        x-nullable: true
      nasType:
        description: |-
          Specifies the type of a NAS Object such as 'kGroup', or 'kHost'.
          Specifies the kind of NAS mount.
          'kGroup' indicates top level node that holds individual NAS hosts.
          'kHost' indicates a single NAS path that can be mounted.
          'kDfsGroup' indicates a DFS group containing top level directories mapped
          to different servers.
          'kDfsTopDir' indicates a top level directory inside a DFS group,
          discovered when registering a DFS group.
        type: string
        enum:
        - kGroup
        - kHost
        - kDfsGroup
        - kDfsTopDir
        x-go-name: NasType
        x-nullable: true
      password:
        description: Specifies the password for the username to use for mounting the
          NAS.
        type: string
        x-go-name: Password
        x-nullable: true
      skipValidation:
        description: |-
          Specifies the flag to disable mount point validation during registration
          process.
        type: boolean
        x-go-name: SkipValidation
        x-nullable: true
      username:
        description: Specifies a username to use for mounting the NAS.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NasProtectionSource:
    description: Specifies a Protection Source in a Generic NAS environment.
    type: object
    title: Generic NAS Protection Source.
    properties:
      description:
        description: Specifies a description about the Protection Source.
        type: string
        x-go-name: Description
        x-nullable: true
      mountPath:
        description: |-
          Specifies the mount path of this NAS. For example, for a NFS mount point,
          this should be in the format of IP or hostname:/foo/bar.
        type: string
        x-go-name: MountPath
        x-nullable: true
      name:
        description: Specifies the name of the NetApp Object.
        type: string
        x-go-name: Name
        x-nullable: true
      protocol:
        description: |-
          Specifies the protocol used by the NAS server.
          Specifies the protocol used by a NAS server.
          'kNfs3' indicates NFS v3 protocol.
          'kCifs1' indicates CIFS v1.0 protocol.
        type: string
        enum:
        - kNfs3
        - kCifs1
        x-go-name: Protocol
        x-nullable: true
      skipValidation:
        description: Specifies whether to skip validation of the given mount point.
        type: boolean
        x-go-name: SkipValidation
        x-nullable: true
      type:
        description: |-
          Specifies the type of a Protection Source Object in a generic NAS Source
          such as 'kGroup', or 'kHost'.
          Specifies the kind of NAS mount.
          'kGroup' indicates top level node that holds individual NAS hosts.
          'kHost' indicates a single NAS path that can be mounted.
          'kDfsGroup' indicates a DFS group containing top level directories mapped
          to different servers.
          'kDfsTopDir' indicates a top level directory inside a DFS group,
          discovered when registering a DFS group.
        type: string
        enum:
        - kGroup
        - kHost
        - kDfsGroup
        - kDfsTopDir
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NetappClusterInfo:
    description: Specifies information about a NetApp Cluster Protection Source.
    type: object
    title: NetApp Cluster Information.
    properties:
      contactInfo:
        description: |-
          Specifies information about the contact for the NetApp cluster
          such as a name, phone number, and email address.
        type: string
        x-go-name: ContactInfo
        x-nullable: true
      location:
        description: |-
          Specifies where this NetApp cluster is located.
          This location identification string is configured by the
          NetApp system administrator.
          This field does not contain the NetApp cluster
          hostname or IP address.
        type: string
        x-go-name: Location
        x-nullable: true
      serialNumber:
        description: |-
          Specifies the serial number of the NetApp cluster in the
          format: x-xx-xxxxxx.
        type: string
        x-go-name: SerialNumber
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NetappProtectionSource:
    description: Specifies a Protection Source in a NetApp environment.
    type: object
    title: NetApp Protection Source.
    properties:
      clusterInfo:
        description: |-
          Specifies information about a NetApp cluster and is only valid for a
          NetApp Object of type kCluster.
        x-nullable: true
        $ref: '#/definitions/NetappClusterInfo'
      isTopLevel:
        description: |-
          Specifies if this Object is a top level Object.
          Because a top level Object can either be a NetApp cluster or a Vserver,
          this cannot be determined only by type.
        type: boolean
        x-go-name: IsTopLevel
        x-nullable: true
      name:
        description: Specifies the name of the NetApp Object.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of managed NetApp Object in a NetApp Protection Source
          such as 'kCluster', 'kVserver' or 'kVolume'.
          'kCluster' indicates a Netapp cluster as a protection source.
          'kVserver' indicates a Netapp vserver in a cluster as a protection source.
          'kVolume' indicates  a volume in Netapp vserver as a protection source.
        type: string
        enum:
        - kCluster
        - kVserver
        - kVolume
        x-go-name: Type
        x-nullable: true
      uuid:
        description: |-
          Specifies the globally unique ID of this Object assigned by the
          NetApp server.
        type: string
        x-go-name: Uuid
        x-nullable: true
      volumeInfo:
        description: |-
          Specifies information about a NetApp volume and is only valid for a
          NetApp Object of type kVolume.
        x-nullable: true
        $ref: '#/definitions/NetappVolumeInfo'
      vserverInfo:
        description: |-
          Specifies information about a NetApp Vserver and is only valid for a
          NetApp Object of type kVserver.
        x-nullable: true
        $ref: '#/definitions/NetappVserverInfo'
    x-go-package: cohesity/iris/server/data/public
  NetappVolumeInfo:
    description: Specifies information about a volume in a NetApp cluster.
    type: object
    title: NetApp Volume Information.
    properties:
      aggregateName:
        description: Specifies the containing aggregate name of this volume.
        type: string
        x-go-name: AggregateName
        x-nullable: true
      capacityBytes:
        description: Specifies the total capacity in bytes of this volume.
        type: integer
        format: int64
        x-go-name: CapacityBytes
        x-nullable: true
      cifsShares:
        description: |-
          Array of CIFS Shares.

          Specifies the set of CIFS Shares exported for this volume.
        type: array
        items:
          $ref: '#/definitions/CifsShareInfo'
        x-go-name: CifsShares
        x-nullable: true
      creationTimeUsecs:
        description: |-
          Specifies the creation time of the volume specified in Unix epoch time
          (in microseconds).
        type: integer
        format: int64
        x-go-name: CreationTimeUsecs
        x-nullable: true
      dataProtocols:
        description: |-
          Array of Data Protocols.

          Specifies the set of data protocols supported by this volume.
          'kNfs' indicates NFS connections.
          'kCifs' indicates SMB (CIFS) connections.
          'kIscsi' indicates iSCSI connections.
          'kFc' indicates Fiber Channel connections.
          'kFcache' indicates Flex Cache connections.
          'kHttp' indicates HTTP connections.
          'kNdmp' indicates NDMP connections.
          'kManagement' indicates non-data connections used for management purposes.
          'kNvme' indicates NVMe connections.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kCifs
          - kIscsi
          - kFc
          - kFcache
          - kHttp
          - kNdmp
          - kManagement
          - kNvme
        x-go-name: DataProtocols
        x-nullable: true
      exportPolicyName:
        description: |-
          Specifies the name of the export policy (which defines the access
          permissions for the mount client) that has been assigned to this volume.
        type: string
        x-go-name: ExportPolicyName
        x-nullable: true
      junctionPath:
        description: |-
          Specifies the junction path of this volume.
          This path can be used to mount this volume via protocols such as NFS.
        type: string
        x-go-name: JunctionPath
        x-nullable: true
      name:
        description: Specifies the name of the NetApp Vserver that this volume belongs
          to.
        type: string
        x-go-name: Name
        x-nullable: true
      securityInfo:
        description: Specifies the security information of this volume.
        x-nullable: true
        $ref: '#/definitions/VolumeSecurityInfo'
      state:
        description: |-
          Specifies the state of this volume.
          Specifies the state of a NetApp Volume.
          'kOnline' indicates the volume is online. Read and write access to this
          volume is allowed.
          'kRestricted' indicates the volume is restricted. Some operations,
          such as parity reconstruction, are allowed, but data access is not
          allowed.
          'kOffline' indicates the volume is offline. No access to the volume is
          allowed.
          'kMixed' indicates the volume is in mixed state, which means its
          aggregates are not all in the same state.
        type: string
        enum:
        - kOnline
        - kRestricted
        - kOffline
        - kMixed
        x-go-name: State
        x-nullable: true
      type:
        description: |-
          Specifies the NetApp type of this volume.
          Specifies the type of a NetApp Volume.
          'kReadWrite' indicates read-write volume.
          'kLoadSharing' indicates load-sharing volume.
          'kDataProtection' indicates data-protection volume.
          'kDataCache' indicates data-cache volume.
          'kTmp' indicates temporary purpose.
          'kUnknownType' indicates unknown type.
        type: string
        enum:
        - kReadWrite
        - kLoadSharing
        - kDataProtection
        - kDataCache
        - kTmp
        - kUnknownType
        x-go-name: Type
        x-nullable: true
      usedBytes:
        description: Specifies the total space (in bytes) used in this volume.
        type: integer
        format: int64
        x-go-name: UsedBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NetappVserverInfo:
    description: Specifies information about a NetApp Vserver in a NetApp Protection
      Source.
    type: object
    title: NetApp Vserver Information.
    properties:
      dataProtocols:
        description: |-
          Array of Data Protocols.

          Specifies the set of data protocols supported by this Vserver.
          The kManagement protocol is not supported for this case.
          'kNfs' indicates NFS connections.
          'kCifs' indicates SMB (CIFS) connections.
          'kIscsi' indicates iSCSI connections.
          'kFc' indicates Fiber Channel connections.
          'kFcache' indicates Flex Cache connections.
          'kHttp' indicates HTTP connections.
          'kNdmp' indicates NDMP connections.
          'kManagement' indicates non-data connections used for management purposes.
          'kNvme' indicates NVMe connections.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kCifs
          - kIscsi
          - kFc
          - kFcache
          - kHttp
          - kNdmp
          - kManagement
          - kNvme
        x-go-name: DataProtocols
        x-nullable: true
      interfaces:
        description: |-
          Array of Interfaces.

          Specifies information about all interfaces on this Vserver.
        type: array
        items:
          $ref: '#/definitions/VserverNetworkInterface'
        x-go-name: Interfaces
        x-nullable: true
      rootCifsShare:
        description: |-
          Specifies the root 'c$' CIFS share of this Vserver.
          If it exists, it can be used to mount all CIFS volumes that are
          junctioned under '/' on this Vserver.
        x-nullable: true
        $ref: '#/definitions/CifsShareInfo'
      type:
        description: |-
          Specifies the type of this Vserver.
          Specifies the type of the NetApp Vserver.
          'kData' indicates the Vserver is used for data backup and restore.
          'kAdmin' indicates the Vserver is used for cluster-wide management.
          'kSystem' indicates the Vserver is used for cluster-scoped communications
          in an IPspace.
          'kNode' indicates the Vserver is used as the physical controller.
          'kUnknown' indicates the Vserver is used for an unknown purpose.
        type: string
        enum:
        - kData
        - kAdmin
        - kSystem
        - kNode
        - kUnknown
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NetworkConfiguration:
    description: |-
      Specifies all of the parameters needed for network configuration of
      the new Cluster.
    type: object
    title: Network Configuration.
    properties:
      clusterGateway:
        description: |-
          Specifies the default gateway IP address (or addresses) for the Cluster
          network.
        type: string
        x-go-name: ClusterGateway
        x-nullable: true
      clusterSubnetMask:
        description: Specifies the subnet mask (or masks) of the Cluster network.
        type: string
        x-go-name: ClusterSubnetMask
        x-nullable: true
      dnsServers:
        description: Specifies the list of DNS Servers this cluster should be configured
          with.
        type: array
        items:
          type: string
        x-go-name: DnsServers
        x-nullable: true
      domainNames:
        description: |-
          Specifies the list of domain names this cluster should be configured
          with.
        type: array
        items:
          type: string
        x-go-name: DomainNames
        x-nullable: true
      ntpServers:
        description: Specifies the list of NTP Servers this cluster should be configured
          with.
        type: array
        items:
          type: string
        x-go-name: NtpServers
        x-nullable: true
      vipHostname:
        description: Specifies the virtual IP hostname.
        type: string
        x-go-name: VipHostname
        x-nullable: true
      vips:
        description: Specifies the list of virtual IPs for the new cluster.
        type: array
        items:
          type: string
        x-go-name: Vips
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NetworkInterface:
    description: Specifies the properties of a network interface.
    type: object
    title: Network Interface.
    properties:
      bondSlaveSlotTypes:
        description: |-
          Specifies the types of the slots of any slaves if this interface is a
          bond.
        type: array
        items:
          type: string
        x-go-name: BondSlaveSlot
        x-nullable: true
      bondSlaves:
        description: Specifies the names of any slaves if this interface is a bond.
        type: array
        items:
          type: string
        x-go-name: BondSlaves
        x-nullable: true
      bondingMode:
        description: Specifies the bonding mode if this interface is a bond.
        type: integer
        format: int32
        x-go-name: BondingMode
        x-nullable: true
      gateway:
        description: Specifies the gateway of the interface.
        type: string
        x-go-name: Gateway
        x-nullable: true
      gateway6:
        description: Specifies the gateway6 of the interface.
        type: string
        x-go-name: Gateway6
        x-nullable: true
      group:
        description: Specifies the group that this interface belongs to.
        type: string
        x-go-name: IfaceGroup
        x-nullable: true
      id:
        description: Specifies the ID of this network interface.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      isConnected:
        description: Specifies whether or not the Interface is connected.
        type: boolean
        x-go-name: IsConnected
        x-nullable: true
      isDefaultRoute:
        description: Specifies whether or not to use this interface as the default
          route.
        type: boolean
        x-go-name: IsDefaultRoute
        x-nullable: true
      isUp:
        description: Specifies whether or not the interface is currently  up.
        type: boolean
        x-go-name: IsUp
        x-nullable: true
      macAddress:
        description: Specifies the Mac address of the Interface.
        type: string
        x-go-name: MacAddress
        x-nullable: true
      mtu:
        description: Specifies the MTU of the interface.
        type: integer
        format: int32
        x-go-name: Mtu
        x-nullable: true
      name:
        description: Specifies the name of the interface port.
        type: string
        x-go-name: Name
        x-nullable: true
      role:
        description: Specifies the role of this interface.
        type: string
        x-go-name: Role
        x-nullable: true
      services:
        description: Specifies the types of services this interface is used for.
        type: array
        items:
          type: string
        x-go-name: Services
        x-nullable: true
      speed:
        description: Specifies the speed of the Interface.
        type: string
        x-go-name: Speed
        x-nullable: true
      staticIp:
        description: Specifies the static IP of the interface.
        type: string
        x-go-name: StaticIp
        x-nullable: true
      staticIp6:
        description: Specifies the static IPv6 of the interface.
        type: string
        x-go-name: StaticIp6
        x-nullable: true
      subnet:
        description: Specifies the subnet mask of the interface.
        type: string
        x-go-name: Subnet
        x-nullable: true
      subnet6:
        description: Specifies the subnet6 mask of the interface.
        type: string
        x-go-name: Subnet6
        x-nullable: true
      type:
        description: Specifies the type of interface.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      virtualIp:
        description: Specifies the virtual IP of the interface.
        type: string
        x-go-name: VirtualIp
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NetworkMapping:
    description: |-
      Specifies the information needed when mapping the source networks to
      target networks during restore and clone actions.
    type: object
    title: Network Mapping
    properties:
      disableNetwork:
        description: |-
          Specifies if the network should be disabled. On restore or clone
          of the VM, if the network should be kept in disabled state, set this
          flag to true. The mapped network is enabled by default.
        type: boolean
        x-go-name: DisableNetwork
        x-nullable: true
      preserveMacAddress:
        description: |-
          Specifies if the source mac address should be preserved after restore
          or clone. In case of collision of mac address on target network the
          job won't fail. Address collision should be resolved manually.
        type: boolean
        x-go-name: PreserveMacAddress
        x-nullable: true
      sourceNetworkId:
        description: Specifies the id of the source network.
        type: integer
        format: int64
        x-go-name: SourceNetworkId
        x-nullable: true
      targetNetworkId:
        description: Specifies the id of target network.
        type: integer
        format: int64
        x-go-name: TargetNetworkId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NetworkMappingProto:
    type: object
    properties:
      disableNetwork:
        description: |-
          This can be set to true to indicate that the attached network should be
          left in disabled state. This value takes priority over the value in
          RestoredObjectNetworkConfigProto.
        type: boolean
        x-go-name: DisableNetwork
        x-nullable: true
      preserveMacAddressOnNewNetwork:
        description: |-
          VM's MAC address will be preserved on the new network. This value takes
          priority over the value in RestoredObjectNetworkConfigProto.
        type: boolean
        x-go-name: PreserveMacAddressOnNewNetwork
        x-nullable: true
      sourceNetworkEntity:
        description: |-
          The network entity (i.e, either a standard switch port group or a
          distributed port group in a VMware env) that is attached to
          one of the source object.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      targetNetworkEntity:
        description: |-
          The network entity (i.e, either a standard switch port group or a
          distributed port group in a VMware env) that will be attached to
          one of the target object.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  NetworkParams:
    type: object
    properties:
      bondingOpts:
        x-nullable: true
        $ref: '#/definitions/BondingOpts'
      mtu:
        type: integer
        format: int32
        x-go-name: Mtu
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NetworkingInformation:
    description: |-
      Specifies the struct containing information about network addresses
      configured on the given box. This is needed for dealing with Windows/Oracle
      Cluster resources that we discover and protect automatically.
    type: object
    title: Networking Information.
    properties:
      resourceVec:
        description: |-
          The list of resources on the system that are accessible by an
          IP address.
        type: array
        items:
          $ref: '#/definitions/ClusterNetworkingResourceInformation'
        x-go-name: ResourceVec
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NewS3SecretAccessKey:
    type: object
    properties:
      newKey:
        description: Specifies the new S3 Secret Access key.
        type: string
        x-go-name: NewKey
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NfsRootPermissions:
    description: Specifies the config of NFS root permission of a view file system.
    type: object
    title: NfsRootPermissions
    properties:
      gid:
        description: Unix GID for the root of the file system.
        type: integer
        format: uint32
        x-go-name: Gid
        x-nullable: true
      mode:
        description: Unix mode bits for the root of the file system.
        type: integer
        format: uint32
        x-go-name: Mode
        x-nullable: true
      uid:
        description: Unix UID for the root of the file system.
        type: integer
        format: uint32
        x-go-name: Uid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NfsSquash:
    type: object
    title: NfsSquash specifies the squash config for client subnet whitelist.
    properties:
      gid:
        description: GID mapped for all clients.
        type: integer
        format: uint32
        x-go-name: Gid
        x-nullable: true
      uid:
        description: UID mapped for all clients.
        type: integer
        format: uint32
        x-go-name: Uid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NimbleProtectionSource:
    description: Specifies a Protection Source in a Nimble environment.
    type: object
    title: Nimble Protection Source.
    properties:
      name:
        description: Specifies a unique name of the Protection Source
        type: string
        x-go-name: Name
        x-nullable: true
      storageArray:
        description: |-
          Specifies a SAN Storage Array information. This is set only when
          the type is kStorageArray.
        x-nullable: true
        $ref: '#/definitions/SanStorageArray'
      type:
        description: |-
          Specifies the type of managed Object in a SAN/Nimble Protection
          Source like a kStorageArray or kVolume.
          Examples of SAN Objects include 'kStorageArray' and 'kVolume'.
          'kStorageArray' indicates that entire SAN storage array is being
          protected.
          'kVolume' indicates that volume within the array is being protected.
        type: string
        enum:
        - kStorageArray
        - kVolume
        x-go-name: Type
        x-nullable: true
      volume:
        description: |-
          Specifies a SAN Volume information within a storage array.
          This is set only when the type is kVolume.
        x-nullable: true
        $ref: '#/definitions/SanVolume'
    x-go-package: cohesity/iris/server/data/public
  NisNetgroup:
    description: Defines an NIS Netgroup.
    type: object
    title: Netgroup
    properties:
      description:
        description: Description of the netgroup.
        type: string
        x-go-name: Description
        x-nullable: true
      domain:
        description: Specifies the domain of the netgroup.
        type: string
        x-go-name: Domain
        x-nullable: true
      name:
        description: Specifies the name of the netgroup.
        type: string
        x-go-name: Name
        x-nullable: true
      nfsAccess:
        description: |-
          Specifies whether clients from this netgroup can mount using NFS protocol.
          Protocol access level.
          'kDisabled' indicates Protocol access level 'Disabled'
          'kReadOnly' indicates Protocol access level 'ReadOnly'
          'kReadWrite' indicates Protocol access level 'ReadWrite'
        type: string
        enum:
        - kDisabled
        - kReadOnly
        - kReadWrite
        x-go-name: NfsAccess
        x-nullable: true
      nfsSquash:
        description: Specifies the NFS squash type.
        type: integer
        format: int32
        x-go-name: NfsSquash
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NlmLock:
    description: |-
      Response <clientID-Locks> map as received from view-keeper is converted into
      this structure. These Locks belong to one file-path.
    type: object
    title: Specifies a NLM lock.
    properties:
      clientId:
        description: Specifies the client ID
        type: string
        x-go-name: ClientId
        x-nullable: true
      lockRanges:
        type: array
        items:
          $ref: '#/definitions/LockRange'
        x-go-name: LockRanges
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NoSqlBackupJobParams:
    type: object
    title: Contains backup params at the job level applicable for nosql environment.
    properties:
      bandwidthBytesPerSecond:
        description: Net bandwidth bytes per second.
        type: integer
        format: int64
        x-go-name: BandwidthBytesPerSecond
        x-nullable: true
      cassandraBackupJobParams:
        description: Params specific to cassandra backup job.
        x-nullable: true
        $ref: '#/definitions/CassandraBackupJobParams'
      compactionJobIntervalSecs:
        description: |-
          Frequency at which compaction jobs should run in seconds.
          Will be only applicable for Cassandra, Mongo and Couchbase environment.
        type: integer
        format: int64
        x-go-name: CompactionJobIntervalSecs
        x-nullable: true
      concurrency:
        description: Max number of mappers.
        type: integer
        format: int32
        x-go-name: Concurrency
        x-nullable: true
      couchbaseBackupJobParams:
        description: Params specific to couchbase backup job.
        x-nullable: true
        $ref: '#/definitions/CouchbaseBackupJobParams'
      gcJobIntervalSecs:
        description: Frequency at which garbage collection jobs should run in seconds.
        type: integer
        format: int64
        x-go-name: GcJobIntervalSecs
        x-nullable: true
      gcRetentionPeriodDays:
        description: Retention period for logs of this job in days.
        type: integer
        format: int32
        x-go-name: GcRetentionPeriodDays
        x-nullable: true
      hbaseBackupJobParams:
        description: Params specific to hbase backup job.
        x-nullable: true
        $ref: '#/definitions/HBaseBackupJobParams'
      hdfsBackupJobParams:
        description: Params specific to hdfs backup job.
        x-nullable: true
        $ref: '#/definitions/HdfsBackupJobParams'
      hiveBackupJobParams:
        description: Params specific to hive backup job.
        x-nullable: true
        $ref: '#/definitions/HiveBackupJobParams'
      lastCompactionRunTimeUsecs:
        description: The last time (in usecs) when the compaction ran for this jobs.
        type: integer
        format: int64
        x-go-name: LastCompactionRunTimeUsecs
        x-nullable: true
      lastGcRunTimeUsecs:
        description: The last time (in usecs) when the gc ran for this jobs.
        type: integer
        format: int64
        x-go-name: LastGcRunTimeUsecs
        x-nullable: true
      mongodbBackupJobParams:
        description: Params specific to mongodb backup job.
        x-nullable: true
        $ref: '#/definitions/MongoDBBackupJobParams'
    x-go-package: magneto/base/nosql.pb
  NoSqlConnectParams:
    type: object
    properties:
      cassandraAdditionalParams:
        description: Additional params required for cassandra backup.
        x-nullable: true
        $ref: '#/definitions/CassandraAdditionalParams'
      cassandraConnectParams:
        description: |-
          Connect params for connecting to cassandra cluster. Set only if
          env_type is kCassandra.
        x-nullable: true
        $ref: '#/definitions/CassandraConnectParams'
      couchbaseConnectParams:
        description: |-
          Additional params for connecting to couchbase cluster. Set only if
          env_type is kCouchbase.
        x-nullable: true
        $ref: '#/definitions/CouchbaseConnectParams'
      hbaseConnectParams:
        description: |-
          Additional params for connecting to hbase cluster. Set only if
          env_type is kHBase.
        x-nullable: true
        $ref: '#/definitions/HBaseConnectParams'
      hdfsConnectParams:
        description: |-
          Additional params for connecting to hdfs cluster. Set only if
          env_type is kHdfs.
        x-nullable: true
        $ref: '#/definitions/HdfsConnectParams'
      hiveConnectParams:
        description: |-
          Additional params for connecting to hive cluster. Set only if
          env_type is kHive.
        x-nullable: true
        $ref: '#/definitions/HiveConnectParams'
      mongodbAdditionalParams:
        description: Additional params required for mongodb backup.
        x-nullable: true
        $ref: '#/definitions/MongoDBAdditionalParams'
      mongodbConnectParams:
        description: |-
          Additional params for connecting to mongodb cluster. Set only if
          env_type is kMongoDB.
        x-nullable: true
        $ref: '#/definitions/MongoDBConnectParams'
    x-go-package: magneto/base/magneto.pb
  NoSqlRecoverJobParams:
    type: object
    properties:
      bandwidthBytesPerSecond:
        description: Net bandwidth bytes per second
        type: integer
        format: int64
        x-go-name: BandwidthBytesPerSecond
        x-nullable: true
      cassandraRecoverJobParams:
        description: Params specific to cassandra recover job.
        x-nullable: true
        $ref: '#/definitions/CassandraRecoverJobParams'
      concurrency:
        description: Max number of mappers
        type: integer
        format: int32
        x-go-name: Concurrency
        x-nullable: true
      couchbaseRecoverJobParams:
        description: Params specific to couchbase recover job.
        x-nullable: true
        $ref: '#/definitions/CouchbaseRecoverJobParams'
      hbaseRecoverJobParams:
        description: Params specific to hbase recover job.
        x-nullable: true
        $ref: '#/definitions/HBaseRecoverJobParams'
      hdfsRecoverJobParams:
        description: Params specific to hdfs recover job.
        x-nullable: true
        $ref: '#/definitions/HdfsRecoverJobParams'
      hiveRecoverJobParams:
        description: Params specific to hive recover job.
        x-nullable: true
        $ref: '#/definitions/HiveRecoverJobParams'
      mongodbRecoverJobParams:
        description: Params specific to mongodb recover job.
        x-nullable: true
        $ref: '#/definitions/MongoDBRecoverJobParams'
      overwrite:
        description: |-
          Whether to overwrite or keep the object if the object being recovered
          already exists in the destination.
        type: boolean
        x-go-name: Overwrite
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  NoSqlRecoverParams:
    type: object
    properties:
      restoreObjects:
        type: array
        items:
          $ref: '#/definitions/NoSqlRestoreObject'
        x-go-name: RestoreObjects
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  NoSqlRestoreObject:
    type: object
    properties:
      objectRestorePropertiesMap:
        description: |-
          Key-Value pair for properties to apply on restore object.
          Ex. Compaction for cassandra or ShardKeyJson for Mongo.
        type: array
        items:
          $ref: '#/definitions/NoSqlRestoreObject_ObjectRestorePropertiesMapEntry'
        x-go-name: ObjectRestorePropertiesMap
        x-nullable: true
      objectUuid:
        description: Uuid of the object to be restored.
        type: string
        x-go-name: ObjectUuid
        x-nullable: true
      rename:
        description: The new name of the object after restore.
        type: string
        x-go-name: Rename
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  NoSqlRestoreObject_ObjectRestorePropertiesMapEntry:
    type: object
    properties:
      key:
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  Node:
    description: Node is the struct for a Node.
    type: object
    title: Node.
    properties:
      capacityByTier:
        description: CapacityByTier describes the capacity of each storage tier.
        type: array
        items:
          $ref: '#/definitions/CapacityByTier'
        x-go-name: CapacityByTier
        x-nullable: true
      chassisInfo:
        description: ChassisInfo describes the information for the chassis of the
          node.
        x-nullable: true
        $ref: '#/definitions/ChassisInfo'
      clusterPartitionId:
        description: |-
          ClusterPartitionId is the Id of the cluster partition to which
          the Node belongs.
        type: integer
        format: int64
        x-go-name: ClusterPartitionId
        x-nullable: true
      clusterPartitionName:
        description: |-
          ClusterPartitionName is the name of the cluster to which the Node
          belongs.
        type: string
        x-go-name: ClusterPartitionName
        x-nullable: true
      cohesityNodeSerial:
        description: Cohesity Node Serial Number of the Node.
        type: string
        x-go-name: CohesityNodeSerial
        x-nullable: true
      diskCount:
        description: DiskCount is the number of disks in a node.
        type: integer
        format: int64
        x-go-name: DiskCount
        x-nullable: true
      diskCountByTier:
        description: DiskCountByTier describes the disk number of each storage tier.
        type: array
        items:
          $ref: '#/definitions/CountByTier'
        x-go-name: DiskCountByTier
        x-nullable: true
      id:
        description: Id is the Id of the Node.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      ip:
        description: Ip is the IP address of the Node.
        type: string
        x-go-name: Ip
        x-nullable: true
      isAppNode:
        description: Whether node is app node.
        type: boolean
        x-go-name: IsAppNode
        x-nullable: true
      isMarkedForRemoval:
        description: |-
          IsMarkedForRemoval specifies whether the node has been marked for
          removal.
        type: boolean
        x-go-name: IsMarkedForRemoval
        x-nullable: true
      maxPhysicalCapacityBytes:
        description: |-
          MaxPhysicalCapacityBytes specifies the maximum physical capacity of the
          node in bytes.
        type: integer
        format: int64
        x-go-name: MaxPhysicalCapacityBytes
        x-nullable: true
      nodeHardwareInfo:
        description: HardwareInfo describes the hardware of the node.
        x-nullable: true
        $ref: '#/definitions/NodeHardwareInfo'
      nodeIncarnationId:
        description: |-
          NodeIncarnationId is the incarnation id  of this node. The incarnation
          id is changed every time the data is wiped from the node. Various
          services on a node is only run if incarnation id of the node matches the
          incarnation id of the cluster. Whenever a mismatch is detected, Nexus
          will stop all services and clean the data from the node. After clean
          operation is completed, Nexus will set the node incarnation id to
          cluster incarnation id and start the services.
        type: integer
        format: int64
        x-go-name: NodeIncarnationId
        x-nullable: true
      nodeSoftwareVersion:
        description: |-
          NodeSoftwareVersion is the current version of Cohesity software installed
          on a node.
        type: string
        x-go-name: NodeSoftwareVersion
        x-nullable: true
      nodeType:
        description: 'Node type: StorageNode, AllFlashNode, RoboNode, AppNode, etc.'
        type: string
        x-go-name: NodeType
        x-nullable: true
      offlineMountPathsOfDisks:
        description: |-
          OfflineMountPathsOfDisks provides the corresponding mount paths for
          direct attached disks that are currently offline - access to these were
          detected to hang sometime in the past. After these disks have been fixed,
          their mount paths needs to be removed from the following list before
          these will be accessed again.
        type: array
        items:
          type: string
        x-go-name: OfflineMountPathsOfDisks
        x-nullable: true
      removalReason:
        description: |-
          RemovalReason specifies the removal reason of the node.
          'kAutoHealthCheck' means the entity health is bad.
          'kUserGracefulRemoval' means user initiated a graceful removal.
          'kUserAvoidAccess' means user initiated a mark offline.
          'kUserGracefulNodeRemoval' mean users initiated graceful node removal.
          'kUserRemoveDownNode' mean user initiated graceful removal of down node.
        type: array
        items:
          type: string
          enum:
          - kAutoHealthCheck
          - kUserGracefulRemoval
          - kUserAvoidAccess
          - kUserGracefulNodeRemoval
          - kUserRemoveDownNode
        x-go-name: RemovalReason
        x-nullable: true
      removalState:
        description: |-
          RemovalState specifies the removal state of the node.
          'kDontRemove' means the state of object is functional and
          it is not being removed.
          'kMarkedForRemoval' means the object is being removed.
          'kOkToRemove' means the object has been removed on the Cohesity Cluster and
          if the object is physical, it can be removed from the Cohesity Cluster.
        type: string
        enum:
        - kDontRemove
        - kMarkedForRemoval
        - kOkToRemove
        x-go-name: RemovalState
        x-nullable: true
      slotNumber:
        description: Slot number occupied by this node within the chassis.
        type: integer
        format: uint32
        x-go-name: SlotNumber
        x-nullable: true
      stats:
        description: Stats describes the node stats.
        x-nullable: true
        $ref: '#/definitions/NodeStats'
      systemDisks:
        description: SystemDisk describes the node system disks.
        type: array
        items:
          $ref: '#/definitions/NodeSystemDiskInfo'
        x-go-name: SystemDisks
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NodeHardwareInfo:
    description: NodeHardwareInfo provides the information regarding the hardware.
    type: object
    title: Node Hardware Information.
    properties:
      cpu:
        description: Cpu provides the information regarding the CPU.
        type: string
        x-go-name: Cpu
        x-nullable: true
      memorySizeBytes:
        description: MemorySizeBytes provides the memory size in bytes.
        type: integer
        format: int64
        x-go-name: MemorySizeBytes
        x-nullable: true
      network:
        description: Network provides the information regarding the network cards.
        type: string
        x-go-name: Network
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NodeNetworkInterfaces:
    description: Specifies the network interfaces present on a specific Node in a
      Cluster.
    type: object
    title: Node Network Interfaces.
    properties:
      chassisSerial:
        description: Specifies the serial number of Chassis.
        type: string
        x-go-name: ChassisSerial
        x-nullable: true
      interfaces:
        description: Specifies the list of network interfaces present on this Node.
        type: array
        items:
          $ref: '#/definitions/NetworkInterface'
        x-go-name: Interfaces
        x-nullable: true
      message:
        description: |-
          Specifies an optional message describing the result of the request
          pertaining to this Node.
        type: string
        x-go-name: Message
        x-nullable: true
      nodeId:
        description: Specifies the ID of the Node.
        type: integer
        format: int64
        x-go-name: NodeId
        x-nullable: true
      slot:
        description: Specifies the slot number the Node is located in.
        type: integer
        format: int64
        x-go-name: Slot
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NodePort:
    description: |-
      VmInfo specifies information of a NodePort per service and port
      combination within an application instance.
    type: object
    title: Node port information.
    properties:
      isUiPort:
        type: boolean
        x-go-name: IsUiPort
        x-nullable: true
      port:
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
      tag:
        description: |-
          Specifies use of the nodeport
          kDefault - No specific service.
          kHttp - HTTP server.
          kHttps -  Secure HTTP server.
          kSsh - Secure shell server.
        type: string
        enum:
        - kDefault
        - kHttp
        - kHttps
        - kSsh
        x-go-name: Tag
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NodeStats:
    description: NodeStats provides various statistics for the node.
    type: object
    title: Node Statistics.
    properties:
      id:
        description: Id is the Id of the Node.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      usagePerfStats:
        description: UsagePerfStats provides the usage and performance stats for the
          node.
        x-nullable: true
        $ref: '#/definitions/UsageAndPerformanceStats'
    x-go-package: cohesity/iris/server/data/public
  NodeStatus:
    description: Specifies the status of each node in the cluster being created.
    type: object
    title: Node Status.
    properties:
      errorMessage:
        description: Specifies an optional message relating to the node status.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      ipmiIp:
        description: Specifies the IPMI IP of the node (if physical cluster).
        type: string
        x-go-name: IpmiIp
        x-nullable: true
      nodeId:
        description: Specifies the ID of the node.
        type: integer
        format: int64
        x-go-name: NodeId
        x-nullable: true
      nodeIp:
        description: For physical nodes this will specify the IP address of the node.
        type: string
        x-go-name: NodeIp
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NodeStatusResult:
    description: Specifies the current status of a Node in the cluster.
    type: object
    title: Node Status Result.
    properties:
      activeOperation:
        description: |-
          Specifies the active operation on the Node if there is one.
          'kNone' specifies that there is no active operation on the Node.
          'kDestroyCluster' specifies that the Cluster which the Node is a part of
          is currently being destroyed.
          'kUpgradeCluster' specifies that the Cluster which the Node is a part of
          is currently being upgraded to a new software package.
          'kRestartCluster' specifies that the Cluster which the Node is a part of
          is currently being restarted.
          'kCreateCluster' specifies that the Node is currently being used to create
          a new Cluster.
          'kExpandCluster' specifies that the Node is currently being added to a
          Cluster or being used to assist in adding another Node to a Cluster.
          'kUpgradeNode' specifies that the Node is currently being upgraded to a new
          software package.
          'kRemoveNode' specifies that the Node is currently being removed from a
          Cluster or that it is assisting in removing another Node from a Cluster.
          'kAddDisks' specifies that the Node is being used to assist in adding disks
          to the Cluster.
          'kMarkDiskOffline' specifies that the Node is being use to assist in
          marking a disk in the Cluster as offline.
        type: string
        enum:
        - kNone
        - kDestroyCluster
        - kUpgradeCluster
        - kRestartCluster
        - kCreateCluster
        - kExpandCluster
        - kUpgradeNode
        - kRemoveNode
        - kAddDisks
        - kMarkDiskOffline
        x-go-name: ActiveOperation
        x-nullable: true
      clusterId:
        description: Specifies the Cluster ID if the Node is part of a Cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      id:
        description: Specifies the ID of the Node.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      inCluster:
        description: Specifies whether or not the Node is part of a Cluster.
        type: boolean
        x-go-name: InCluster
        x-nullable: true
      incarnationId:
        description: Specifies the Incarnation ID if the Node is part of a Cluster.
        type: integer
        format: int64
        x-go-name: IncarnationId
        x-nullable: true
      ip:
        description: Specifies the IP address of the Node.
        type: string
        x-go-name: Ip
        x-nullable: true
      lastUpgradeTimeSecs:
        description: Specifies the time of the last upgrade in seconds since the epoch.
        type: integer
        format: int64
        x-go-name: LastUpgradeTimeSecs
        x-nullable: true
      markedForRemoval:
        description: Specifies whether or not this node is marked for removal.
        type: boolean
        x-go-name: MarkedForRemoval
        x-nullable: true
      message:
        description: Specifies an optional message describing the current state of
          the Node.
        type: string
        x-go-name: Message
        x-nullable: true
      removalReason:
        description: |-
          Specifies the reason for the removal operation if there is a removal
          operation going on.
          'kUnknown' specifies that the removal reason is not known.
          'kAutoHealthCheck' specifies that an internal health check found problems
          with the Node.
          'kUserGracefulRemoval' specifies that the user requested a graceful
          removal.
          'kUserAvoidAccess' specifies that the user requested to avoid access to
          this Node.
          'kUserGracefulNodeRemoval' specifies that the user requested a graceful
          removal for all of the disks in this Node.
          'kUserRemoveDownNode' specifies that the user requested a graceful removal
          of the Node while it is down.
        type: string
        enum:
        - kUnknown
        - kAutoHealthCheck
        - kUserGracefulRemoval
        - kUserAvoidAccess
        - kUserGracefulNodeRemoval
        - kUserRemoveDownNode
        x-go-name: RemovalReason
        x-nullable: true
      services:
        description: |-
          Specifies the list of services running on the cluster and their process
          Ids.
        type: array
        items:
          $ref: '#/definitions/ServiceProcessEntry'
        x-go-name: Services
        x-nullable: true
      softwareVersion:
        description: Specifies the version of the software running on the Node.
        type: string
        x-go-name: SoftwareVersion
        x-nullable: true
      uptime:
        description: Uptime of node.
        type: string
        x-go-name: Uptime
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NodeStopOp:
    type: object
    title: Struct to hold node stop.
    x-go-package: cohesity/nexus/server/ops/services
  NodeSystemDiskInfo:
    type: object
    properties:
      devicePath:
        description: DevicePath is the device path of the disk.
        type: string
        x-go-name: DevicePath
        x-nullable: true
      id:
        description: Id is the id of the disk.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      offline:
        description: Offline specifies whether a disk is marked offline.
        type: boolean
        x-go-name: Offline
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NodeToTieredStorageDirectoriesMap:
    type: object
    title: Mapping of each Cassandra node to a list of tiered storage directories.
    properties:
      cassandraNodeName:
        description: Name of the Cassandra node.
        type: string
        x-go-name: CassandraNodeName
        x-nullable: true
      tieredStorageDirectoriesVec:
        description: Array of tiered storage directories.
        type: array
        items:
          type: string
        x-go-name: TieredStorageDirectoriesVec
        x-nullable: true
    x-go-package: magneto/base/nosql.pb
  NotificationRule:
    description: |-
      Specifies a rule to notify delivery targets such as sending emails,
      invoking an external api etc based on the alert type, category and
      severity of the generated alert.
    type: object
    title: Notification Rule
    properties:
      alertTypeList:
        description: Specifies alert types this rule is applicable to.
        type: array
        items:
          type: integer
          format: int32
        x-go-name: AlertTypeList
        x-nullable: true
      categories:
        description: |-
          Specifies alert categories this rule is applicable to.
          Specifies the category of an Alert.
          kDisk - Alerts that are related to Disk.
          kNode - Alerts that are related to Node.
          kCluster - Alerts that are related to Cluster.
          kNodeHealth - Alerts that are related to Node Health.
          kClusterHealth - Alerts that are related to Cluster Health.
          kBackupRestore - Alerts that are related to Backup/Restore.
          kEncryption - Alerts that are related to Encryption.
          kArchivalRestore - Alerts that are related to Archival/Restore.
          kRemoteReplication - Alerts that are related to Remote Replication.
          kQuota - Alerts that are related to Quota.
          kLicense - Alerts that are related to License.
          kHeliosProActiveWellness - Alerts that are related to Helios ProActive Wellness.
          kHeliosAnalyticsJobs - Alerts that are related to Helios Analytics Jobs.
          kHeliosSignatureJobs - Alerts that are related to Helios Signature Jobs.
          kSecurity - Alerts that are related to Security.
          kAppsInfra - Alerts that are related to applications infra.
          kAntivirus - Alerts that are related to antivirus.
          kArchivalCopy - Alerts that are related to archival copies.
        type: array
        items:
          type: string
          enum:
          - kDisk
          - kNode
          - kCluster
          - kNodeHealth
          - kClusterHealth
          - kBackupRestore
          - kEncryption
          - kArchivalRestore
          - kRemoteReplication
          - kQuota
          - kLicense
          - kHeliosProActiveWellness
          - kHeliosAnalyticsJobs
          - kHeliosSignatureJobs
          - kSecurity
          - kAppsInfra
          - kAntivirus
          - kArchivalCopy
        x-go-name: Categories
        x-nullable: true
      emailDeliveryTargets:
        description: |-
          Specifies email addresses to be notified when an alert matching this
          rule is generated.
        type: array
        items:
          $ref: '#/definitions/EmailDeliveryTarget'
        x-go-name: EmailDeliveryTargets
        x-nullable: true
      ruleId:
        description: Specifies id of the alert delivery rule.
        type: integer
        format: int64
        x-go-name: RuleId
        x-nullable: true
      ruleName:
        description: Specifies name of the alert delivery rule.
        type: string
        x-go-name: RuleName
        x-nullable: true
      severities:
        description: |-
          Specifies alert severity types this rule is applicable to.
          Specifies the severity level of an Alert.
          kCritical - Alerts whose severity type is Critical.
          kWarning - Alerts whose severity type is Warning.
          kInfo - Alerts whose severity type is Info.
        type: array
        items:
          type: string
          enum:
          - kCritical
          - kWarning
          - kInfo
        x-go-name: Severities
        x-nullable: true
      snmpEnabled:
        description: |-
          Specifies whether SNMP notification to be invoked when an alert matching
          this rule is generated.
        type: boolean
        x-go-name: SnmpEnabled
        x-nullable: true
      syslogEnabled:
        description: |-
          Specifies whether syslog notification to be invoked when an alert matching
          this rule is generated.
        type: boolean
        x-go-name: SyslogEnabled
        x-nullable: true
      tenantId:
        description: Specifies tenant id this rule is applicable to.
        type: string
        x-go-name: TenantId
        x-nullable: true
      webHookDeliveryTargets:
        description: |-
          Specifies external api urls to be invoked when an alert matching this
          rule is generated.
        type: array
        items:
          $ref: '#/definitions/WebHookDeliveryTarget'
        x-go-name: WebHookDeliveryTargets
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Notifications:
    description: |-
      All the Notification events generated for a given user. This is used for
      for transferring notifications over wire.
    type: object
    title: Notifications.
    properties:
      count:
        description: Notification Count.
        type: integer
        format: int64
        x-go-name: Count
        x-nullable: true
      notificationList:
        description: Notification list.
        type: array
        items:
          $ref: '#/definitions/TaskNotification'
        x-go-name: NotificationList
        x-nullable: true
      unreadCount:
        description: Unread Notification Count.
        type: integer
        format: int64
        x-go-name: UnreadCount
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  NtpSettingsConfig:
    type: object
    properties:
      ntpServersInternal:
        description: Flag to specify if the NTP servers are on internal network or
          not.
        type: boolean
        x-go-name: NtpServersInternal
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  O365BackupEnvParams:
    description: |-
      Message to capture any additional backup params for Office365 environment.
      This encapsulates both Outlook & OneDrive backup parameters.
    type: object
    title: Office365 Backup Environment Parameters.
    properties:
      filteringPolicy:
        description: |-
          This field has been deprecated. Use 'filtering_policy' specified within
          'outlook_backup_params' for Outlook exclusions filter and
          'onedrive_backup_params' for OneDrive exclusions filter respectively.
        x-nullable: true
        $ref: '#/definitions/FilteringPolicyProto'
      onedriveBackupParams:
        description: |-
          OneDrive specific backup parameters. Refer 'OneDriveBackupEnvParams' for
          details.
        x-nullable: true
        $ref: '#/definitions/OneDriveBackupEnvParams'
      outlookBackupParams:
        description: |-
          Outlook specific backup parameters. Refer 'OutlookBackupEnvParams' for
          details.
        x-nullable: true
        $ref: '#/definitions/OutlookBackupEnvParams'
      publicFoldersBackupParams:
        description: |-
          PublicFolders specific backup parameters.
          Refer 'PublicFoldersEnvParams' for details.
        x-nullable: true
        $ref: '#/definitions/PublicFoldersBackupEnvParams'
      siteBackupParams:
        description: |-
          SharePoint specific backup parameters.
          Refer 'SharepPointSiteBackupEnvParams' for details.
        x-nullable: true
        $ref: '#/definitions/SharepPointSiteBackupEnvParams'
    x-go-package: magneto/base/env_params.pb
  O365RegionProto:
    description: |-
      O365Region proto will store the information about the region from where o365
      connector apis calls are made.
    type: object
    properties:
      country:
        description: The country where the o365 connector apis were called from.
        type: integer
        format: int32
        x-go-name: Country
        x-nullable: true
    x-go-package: magneto/connectors/o365/o365_additional.pb
  ObjectInformation:
    type: object
    properties:
      accessibleUsers:
        description: Species the list of user who have access to this object.
        type: array
        items:
          type: string
        x-go-name: AccessibleUsers
        x-nullable: true
      auditLogs:
        description: Specifies the audit log information.
        type: array
        items:
          $ref: '#/definitions/ClusterAuditLog'
        x-go-name: AuditLogs
        x-nullable: true
      copyTaskInfo:
        description: Specifies the copy task information.
        type: array
        items:
          $ref: '#/definitions/GdprCopyTask'
        x-go-name: CopyTaskInfo
        x-nullable: true
      isProtected:
        description: Specifies the protection status of the object.
        type: boolean
        x-go-name: IsProtected
        x-nullable: true
      location:
        description: Specifies the location of the parent source.
        type: string
        x-go-name: Location
        x-nullable: true
      protectionInfo:
        description: Specifies the data locations for the protected objects.
        type: array
        items:
          $ref: '#/definitions/ProtectionInfo'
        x-go-name: ProtectionInfo
        x-nullable: true
      rootNodeId:
        description: Specifies the id of the root node.
        type: integer
        format: int64
        x-go-name: RootNodeId
        x-nullable: true
      sourceId:
        description: Specifies the id of the Protection Source.
        type: integer
        format: int64
        x-go-name: SourceId
        x-nullable: true
      sourceName:
        description: Specifies the name of the object.
        type: string
        x-go-name: SourceName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ObjectSearchResults:
    description: |-
      Specifies an array of backup objects and a count to indicate
      if additional requests must be made to get the full result.
    type: object
    title: Object Search Results.
    properties:
      objectSnapshotInfo:
        description: |-
          Array of Snapshot Objects.

          Specifies the list of backup objects returned by this request that
          match the specified search and filter criteria.
          The number of objects returned is limited by the pageCount field.
        type: array
        items:
          $ref: '#/definitions/ObjectSnapshotInfo'
        x-go-name: ObjectSnapshotInfo
        x-nullable: true
      totalCount:
        description: |-
          Specifies the total number of backup objects that match the filter and
          search criteria. Use this value
          to determine how many additional requests are required to get the
          full result.
        type: integer
        format: int64
        x-go-name: TotalCount
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ObjectSnapshotInfo:
    description: Specifies information about an object that has been backed up.
    type: object
    title: Object Snapshot.
    properties:
      clusterPartitionId:
        description: Specifies the Cohesity Cluster partition id where this object
          is stored.
        type: integer
        format: int64
        x-go-name: ClusterPartitionId
        x-nullable: true
      jobId:
        description: |-
          Specifies the id for the Protection Job that is currently
          associated with the object. If the object was backed up on
          current Cohesity Cluster, this field contains the id for the Job
          that captured this backup object.
          If the object was backed up on a Primary Cluster and
          replicated to this Cohesity Cluster, a new Inactive Job is created,
          the object is now associated with new Inactive Job, and this field
          contains the id of the new Inactive Job.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobName:
        description: Specifies the name of the Protection Job that captured the backup.
        type: string
        x-go-name: JobName
        x-nullable: true
      jobUid:
        description: |-
          Specifies the globally unique id of the Protection Job that backed up
          this object. This id is unique across Cohesity Clusters.
          Even if this object is replicated to a Remote Cohesity Cluster
          and the object is associated with a new Job, the value specified
          in this field does not change.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      objectName:
        description: Specifies the primary name of the object.
        type: string
        x-go-name: ObjectName
        x-nullable: true
      osType:
        description: Specifies the inferred OS type.
        type: string
        x-go-name: OsType
        x-nullable: true
      registeredSource:
        description: |-
          Specifies the id of the original root Protection Source tree
          (such as a vCenter Server) that was accessed by the Protection Job
          to capture a backup of this object.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      snapshottedSource:
        description: |-
          Specifies the Protection Source that represents the original object being
          backed up. When a root Protection Source is registered, it creates
          a tree of source Protection Source objects. This field defines the
          specific Protection Source leaf object (such as a VM)
          that was backed up.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      versions:
        description: |-
          Array of Snapshots.

          Specifies all snapshot versions of this object. Each time a Job Run
          of a Job executes, it may create a new snapshot version of an object.
          This array stores the different snapshots versions of the object.
        type: array
        items:
          $ref: '#/definitions/SnapshotVersion'
        x-go-name: Versions
        x-nullable: true
      viewBoxId:
        description: |-
          Specifies the id of the Domain (View Box) where this
          object is stored.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName:
        description: Specifies the View name where this object is stored.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ObjectSnapshotType:
    type: object
    title: This message captures information about the snapshot type.
    properties:
      msg:
        description: |-
          This captures any additional message about the snapshot itself, e.g. if
          the app-consistent snapshot had to fallback to crash consistent, this
          will contain that.
        type: string
        x-go-name: Msg
        x-nullable: true
      type:
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  ObjectsByEnv:
    description: Number of Objects by Type.
    type: object
    title: Objects By Env.
    properties:
      envType:
        description: Environment Type.
        type: string
        x-go-name: EnvType
        x-nullable: true
      numObjects:
        description: Number of Objects.
        type: integer
        format: int32
        x-go-name: NumObjects
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ObjectsProtectedByPolicy:
    description: Objects (e.g. VMs) protected by Policy.
    type: object
    title: Objects Protected By Policy.
    properties:
      objectsProtected:
        description: Protected Objects.
        type: array
        items:
          $ref: '#/definitions/ObjectsByEnv'
        x-go-name: ObjectsProtected
        x-nullable: true
      policyId:
        description: Id of the policy.
        type: string
        x-go-name: PolicyId
        x-nullable: true
      policyName:
        description: Name of the policy.
        type: string
        x-go-name: PolicyName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Office365Credentials:
    description: Specifies the credentials to authenticate with Office365 account.
    type: object
    title: Office365 Credentials.
    properties:
      clientId:
        description: |-
          Specifies the application ID that the registration portal
          (apps.dev.microsoft.com) assigned.
        type: string
        x-go-name: ClientId
        x-nullable: true
      clientSecret:
        description: |-
          Specifies the application secret that was created in app registration
          portal.
        type: string
        x-go-name: ClientSecret
        x-nullable: true
      grantType:
        description: |-
          Specifies the application grant type. eg: For client credentials flow, set
          this to "client_credentials"; For refreshing access-token, set this to
          "refresh_token".
        type: string
        x-go-name: GrantType
        x-nullable: true
      scope:
        description: |-
          Specifies a space separated list of scopes/permissions for the user.
          eg: Incase of MS Graph APIs for Office365, scope is set to default:
          https://graph.microsoft.com/.default
        type: string
        x-go-name: Scope
        x-nullable: true
      useOAuthForExchangeOnline:
        description: |-
          This field is deprecated from here and placed in RegisteredSourceInfo
          and ProtectionSourceParameters.
          deprecated: true
        type: boolean
        x-go-name: UseOAuthForExchangeOnline
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Office365EnvJobParameters:
    description: |-
      Specifies Office365 parameters applicable for all Office365 Environment
      type Protection Sources in a Protection Job. This encapsulates both OneDrive
      & Mailbox parameters.
    type: object
    title: Office365 Environment Job Parameters.
    properties:
      onedriveParameters:
        description: Specifies OneDrive backup parameters.
        x-nullable: true
        $ref: '#/definitions/OneDriveEnvJobParameters'
      outlookParameters:
        description: Specifies Outlook backup parameters.
        x-nullable: true
        $ref: '#/definitions/OutlookEnvJobParameters'
    x-go-package: cohesity/iris/server/data/public
  Office365ProtectionSource:
    description: Specifies a Protection Source in Office 365 environment.
    type: object
    title: Office 365 Protection Source.
    properties:
      description:
        description: Specifies the description of the Office 365 entity.
        type: string
        x-go-name: Description
        x-nullable: true
      name:
        description: Specifies the name of the office 365 entity.
        type: string
        x-go-name: Name
        x-nullable: true
      primarySMTPAddress:
        description: Specifies the SMTP address for the Outlook source.
        type: string
        x-go-name: PrimarySMTPAddress
        x-nullable: true
      type:
        description: |-
          Specifies the type of the Office 365 entity.
          Specifies the type of Office 365 entity
          'kDomain' indicates the O365 domain through which authentication occurs.
          'kOutlook' indicates the Exchange online entities.
          'kMailbox' indicates the user's mailbox account.
          'kUsers' indicates the container for User entities.
          'kGroups' indicates the container for Group entities.
          'kSites' indicates the container for Site entities.
          'kUser' indicates an Office365 User entity.
          'kGroup' indicates an Office365 Group entity.
          'kSite' indicates an Office365 SharePoint Site entity.
        type: string
        enum:
        - kDomain
        - kOutlook
        - kMailbox
        - kUsers
        - kGroups
        - kSites
        - kUser
        - kGroup
        - kSite
        x-go-name: Type
        x-nullable: true
      userInfo:
        description: |-
          Specifies the information about Office365 user regarding its Mailbox &
          OneDrive. This is only present if the entity type is a User.
        x-nullable: true
        $ref: '#/definitions/Office365UserInfo'
      uuid:
        description: Specifies the UUID of the Office 365 entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Office365UserInfo:
    description: Specifies information about an Office365 user.
    type: object
    title: Office 365 User Info.
    properties:
      city:
        description: Specifies the city in which the Office365 user is located.
        type: string
        x-go-name: City
        x-nullable: true
      country:
        description: Specifies the country/region in which the Office365 user is located.
        type: string
        x-go-name: Country
        x-nullable: true
      department:
        description: Specifies the department within the enterprise of the Office365
          user.
        type: string
        x-go-name: Department
        x-nullable: true
      designation:
        description: Specifies the designation of the Office365 user.
        type: string
        x-go-name: Designation
        x-nullable: true
      graphUuid:
        description: Specifies the MS Graph UUID for the given user entity.
        type: string
        x-go-name: GraphUuid
        x-nullable: true
      mailboxSize:
        description: |-
          Specifies the size of the Outlook Mailbox associated with this Office365
          entity.
        type: integer
        format: int64
        x-go-name: MailboxSize
        x-nullable: true
      oneDriveId:
        description: |-
          Specifies the Id of the OneDrive associated with the this Office 365
          entity.
        type: string
        x-go-name: OneDriveId
        x-nullable: true
      oneDriveSize:
        description: Specifies the size of the OneDrive associated with this Office365
          entity.
        type: integer
        format: int64
        x-go-name: OneDriveSize
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OneDriveBackupEnvParams:
    description: |-
      Message to capture any additonal backup params for OneDrive within the
      Office365 environment.
    type: object
    title: Onedrive Backup Environment Parameters.
    properties:
      filteringPolicy:
        description: |-
          The filtering policy describes which objects within a source should be
          excluded within the backup. If this is not specified, then all of the
          objects within the source will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilteringPolicyProto'
      shouldBackupOnedrive:
        description: |-
          Specifies whether the OneDrive(s) for all the Office365 Users present in
          the protection job should be backed up.
        type: boolean
        x-go-name: ShouldBackupOnedrive
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  OneDriveDocumentMetadata:
    description: Specifies the metadata for the OneDrive document.
    type: object
    title: OneDrive document metadata.
    properties:
      documentType:
        description: |-
          Specifies the type of OneDrive document(file/folder).
          Specifies the OneDrive document type.

          'kFile' specifies a file.
          'kFolder' specifies a folder.
        type: string
        enum:
        - kFile
        - kFolder
        x-go-name: DocumentType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OneDriveEnvJobParameters:
    description: |-
      Specifies OneDrive job parameters applicable for all Office365 Environment
      type Protection Sources in a Protection Job.
    type: object
    title: OneDrive Environment Job Parameters.
    properties:
      filePathFilter:
        description: |-
          The filtering policy describes which paths within the onedrive should be
          excluded within the backup. If this is not specified, then the entire
          onedrive will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilePathFilter'
      shouldBackupOnedrive:
        description: |-
          Specifies whether OneDrive(s) of each Office365 Users/Groups within the
          job, should be backed up or not.
        type: boolean
        x-go-name: ShouldBackupOnedrive
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OneDriveInfo:
    description: Specifies OneDrive details with the items which need to be restored.
    type: object
    title: OneDrive Information.
    properties:
      driveId:
        description: Specifies the Id of the Drive.
        type: string
        x-go-name: DriveId
        x-nullable: true
      driveItemList:
        description: Specifies the Drive items such as files/folders.
        type: array
        items:
          $ref: '#/definitions/OneDriveItem'
        x-go-name: DriveItemList
        x-nullable: true
      restoreEntireDrive:
        description: |-
          Specifies whether entire drive is to be restored. This should be set to
          false if specific drive items are to be restored within 'DriveItemList'.
        type: boolean
        x-go-name: RestoreEntireDrive
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OneDriveItem:
    description: Specifies the details about OneDrive file/folder.
    type: object
    title: OneDrive Item.
    properties:
      isFileItem:
        description: Specifies whether the current item is a file or not.
        type: boolean
        x-go-name: IsFileItem
        x-nullable: true
      itemId:
        description: Specifies the Id of the Drive item.
        type: string
        x-go-name: ItemId
        x-nullable: true
      itemPath:
        description: Specifies the path of the Drive item within the drive.
        type: string
        x-go-name: ItemPath
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OneDriveOwner:
    description: Specifies OneDrive owner details.
    type: object
    title: OneDrive Owner.
    properties:
      driveInfoList:
        description: Specifies the Drives that a user owns which are to be restored.
        type: array
        items:
          $ref: '#/definitions/OneDriveInfo'
        x-go-name: DriveInfoList
        x-nullable: true
      userDetailObject:
        description: Specifies the details about the Office365 user who owns the drive.
        x-nullable: true
        $ref: '#/definitions/RestoreObjectDetails'
    x-go-package: cohesity/iris/server/data/public
  OneDriveRestoreParameters:
    description: Specifies information needed for recovering Drive(s) & Drive items.
    type: object
    title: OneDrive Restore Parameters.
    properties:
      driveOwnerList:
        description: |-
          Specifies the list of Drive owners which are to be restored along with the
          details of their drives.
        type: array
        items:
          $ref: '#/definitions/OneDriveOwner'
        x-go-name: DriveOwnerList
        x-nullable: true
      restoreToOriginalDrive:
        description: Specifies whether the objects are to be restored to the original
          drive.
        type: boolean
        x-go-name: RestoreToOriginalDrive
        x-nullable: true
      targetDriveId:
        description: |-
          Specifies the Drive Id of the target user where the OneDrive items are to
          be recovered.
        type: string
        x-go-name: TargetDriveId
        x-nullable: true
      targetFolderPath:
        description: |-
          Specifies the target folder path within the drive where recovery has to be
          done.
        type: string
        x-go-name: TargetFolderPath
        x-nullable: true
      targetUser:
        description: |-
          Specifies the target user where the recovery of the entire OneDrive or the
          OneDrive items is to be done.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
    x-go-package: cohesity/iris/server/data/public
  OracleAppParams:
    description: |-
      Specifies special settings applicable for a app entity i.e
      database/dataguard.
    type: object
    title: Oracle App Params.
    properties:
      databaseAppId:
        description: Specifies the source entity id of the selected app entity.
        type: integer
        format: int64
        x-go-name: DatabaseAppId
        x-nullable: true
      nodeChannelList:
        description: |-
          Array of database node channel info.

          Specifies the node channel info for all the databases of app entity.
          Length of this array will be 1 for RAC and Standalone setups.
        type: array
        items:
          $ref: '#/definitions/OracleDatabaseNodeChannel'
        x-go-name: NodeChannelList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleBackupJobParams:
    description: Message to capture any additional backup params specific to Oracle.
    type: object
    title: Oracle Backup Enviroment Parameters.
    properties:
      persistMountpoints:
        description: |-
          Indicates whether the mountpoints created while backing up Oracle DBs
          should be persisted. If this is set to 'false' all Oracle views mounted to
          the hosts will be unmounted at the end.
          Note: This parameter is for the entire Job. For overriding persistence of
          mountpoints for a subset of Oracle hosts within the job,
          refer OracleSourceParams.
        type: boolean
        x-go-name: PersistMountpoints
        x-nullable: true
      vlanParams:
        description: |-
          Indicates the vlan preference that is selected by the user for doing
          backup.
        x-nullable: true
        $ref: '#/definitions/VlanParams'
    x-go-package: magneto/base/env_params.pb
  OracleCloudCredentials:
    description: |-
      Specifies the Oracle Cloud Credentials to connect to an Oracle S3 Compatible
      vault account.

      Oracle Cloud Credentials Region, Access-Key-Id and Secret-Access-Key.
      Oracle Cloud properties Tenant and Tier Type.
    type: object
    title: Oracle Cloud Credentials.
    properties:
      accessKeyId:
        description: Specifies access key to connect to Oracle S3 Compatible vault
          account.
        type: string
        x-go-name: AccessKeyId
        x-nullable: true
      region:
        description: Specifies the region for Oracle S3 Compatible vault account.
        type: string
        x-go-name: Region
        x-nullable: true
      secretAccessKey:
        description: Specifies the secret access key for Oracle S3 Compatible vault
          account.
        type: string
        x-go-name: SecretAccessKey
        x-nullable: true
      tenant:
        description: |-
          Specifies the tenant which is part of the REST endpoints for Oracle S3
          compatible vaults.
        type: string
        x-go-name: Tenant
        x-nullable: true
      tierType:
        description: |-
          Specifies the storage class of Oracle vault.
          OracleTierType specifies the storage class for Oracle.
          'kOracleTierStandard' indicates a tier type of Oracle properties that
          requires fast, immediate and frequent access.
          'kOracleTierArchive' indicates a tier type of Oracle properties that is
          rarely accesed and preserved for long times.
        type: string
        enum:
        - kOracleTierStandard
        - kOracleTierArchive
        x-go-name: TierType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleContainerDatabaseInfo:
    description: |-
      Specifies the Container Database information along with the Pluggable DBs
      within the container.
      The multitenant architecture enables an Oracle database to function as a
      multitenant container database (CDB). A CDB includes zero, one, or many
      customer-created pluggable databases (PDBs).
    type: object
    properties:
      pluggableDatabaseInfoList:
        description: Specifies the list of Pluggable databases within this Container
          Database.
        type: array
        items:
          $ref: '#/definitions/OraclePluggableDatabaseInfo'
        x-go-name: PluggableDatabaseInfoList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleDBChannelInfo:
    description: |-
      Note: The name of this proto message is out-dated. This proto can represent
      more than just the database channel information. It should be renamed
      in the future.
    type: object
    title: |-
      Message to contain backup or restore parameters for a unique Oracle
      database. The Oracle database unique name is used to determine uniqueness
      of the database.
    properties:
      archivelogKeepDays:
        description: |-
          Archived log deletion policy for this unique Oracle database.
          1: keep archived log forever
          0: delete archived log immediately
          n>0: delete archived log after n days
        type: integer
        format: int32
        x-go-name: ArchivelogKeepDays
        x-nullable: true
      dbUniqueName:
        description: The unique name of the database.
        type: string
        x-go-name: DbUniqueName
        x-nullable: true
      dbUuid:
        description: |-
          Database id, internal field, is filled by magneto master based on
          corresponding app entity id.
        type: string
        x-go-name: DbUuid
        x-nullable: true
      enableDgPrimaryBackup:
        description: |-
          If set to false, and if the DG database role is primary, we will not allow
          the backup of that database.
        type: boolean
        x-go-name: EnableDgPrimaryBackup
        x-nullable: true
      hostInfoVec:
        description: |-
          Vector of Oracle hosts from which we are allowed to take the
          backup/restore. In case of RAC database it may be more than one.
        type: array
        items:
          $ref: '#/definitions/OracleDBChannelInfo_HostInfo'
        x-go-name: HostInfoVec
        x-nullable: true
      maxNumHost:
        description: |-
          Maximum number of hosts from which we are allowed to take backup/restore
          parallely. This will be less than or equal to host_info_vec_size. If
          this is less than host_info_vec_size we will choose max_num_host from
          host_info_vec and take backup/restore from this number of host.
        type: integer
        format: int32
        x-go-name: MaxNumHost
        x-nullable: true
      numChannels:
        description: |-
          The default number of channels to use per host per db. This value is used
          on all hosts unless host_info_vec.num_channels is specified for that host.
          Default value for num_channels will be calculated as minimum number of
          nodes in cohesity cluster, and 2 * number of cpu on Oracle host.
          Preference order for number of channels per host for given db is:
          1. If user has specified host_info_vec.num_channels for host we will use
          that.
          2. If user has not specified host_info_vec.num_channels but specified
          num_channels we will use this.
          3. If user has neither specified host_info_vec.num_channels nor
          num_channels we will calculate default channels with above formula.
        type: integer
        format: int32
        x-go-name: NumChannels
        x-nullable: true
      rmanBackupType:
        description: Type of Oracle RMAN backup rquested (i.e ImageCopy, BackupSets).
        type: integer
        format: int32
        x-go-name: RmanBackupType
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  OracleDBChannelInfo_HostInfo:
    description: |-
      The name of this proto message is out-dated. This proto should
      generally be used to represent parameters needed for each Oracle
      'cluster' node. 'cluster' here is a loose term used to include
      more than Oracle RAC cluster, e.g. 'active-passive' cluster is also
      considered here as 'cluster' and its 'cluster node will also be
      represented by the following proto.
    type: object
    properties:
      host:
        description: |-
          'agent_id' of the host from which we are allowed to take the
          backup/restore.
        type: string
        x-go-name: Host
        x-nullable: true
      numChannels:
        description: |-
          Number of channels we need to create for this host. Default value for
          num_channels will be calculated as minimum of number of nodes in
          cohesity cluster, 2 * number of cpu on Oracle host.
        type: integer
        format: int32
        x-go-name: NumChannels
        x-nullable: true
      portnum:
        description: port number where database is listening.
        type: integer
        format: int64
        x-go-name: Portnum
        x-nullable: true
      sbtHostParams:
        description: |-
          The necessury parameters for SBT. This is set only when backup type is
          kSbt.
        x-nullable: true
        $ref: '#/definitions/OracleSbtHostParams'
    x-go-package: magneto/base/env_params.pb
  OracleDBConfig:
    description: |-
      This proto captures the oracle database configuration for alternate DB
      restore.
    type: object
    properties:
      auditLogDest:
        description: Audit log destination.
        type: string
        x-go-name: AuditLogDest
        x-nullable: true
      bctFilePath:
        description: BCT file path.
        type: string
        x-go-name: BctFilePath
        x-nullable: true
      controlFilePathVec:
        description: List of paths where the control file needs to be multiplexed.
        type: array
        items:
          type: string
        x-go-name: ControlFilePathVec
        x-nullable: true
      dbConfigFilePath:
        description: |-
          Path to the file on oracle host which decides the configuration of
          restored DB.
        type: string
        x-go-name: DbConfigFilePath
        x-nullable: true
      diagDest:
        description: Diag destination.
        type: string
        x-go-name: DiagDest
        x-nullable: true
      enableArchiveLogMode:
        description: If set to false, archive log mode is disabled.
        type: boolean
        x-go-name: EnableArchiveLogMode
        x-nullable: true
      fraDest:
        description: FRA path.
        type: string
        x-go-name: FraDest
        x-nullable: true
      fraSizeMb:
        description: FRA Size in MBs.
        type: integer
        format: int32
        x-go-name: FraSizeMb
        x-nullable: true
      numTempfiles:
        description: How many tempfiles to use for the recovered database.
        type: integer
        format: int32
        x-go-name: NumTempfiles
        x-nullable: true
      pfileParameterMap:
        description: Map of pfile parameters to its values.
        type: array
        items:
          $ref: '#/definitions/OracleDBConfig_PfileParameterMapEntry'
        x-go-name: PfileParameterMap
        x-nullable: true
      redoLogConf:
        description: List of redo log groups for this DB.
        x-nullable: true
        $ref: '#/definitions/OracleDBConfig_RedoLogGroupConf'
      sgaTargetSize:
        description: SGA_TARGET_SIZE size [ Default value same as Source DB ].
        type: string
        x-go-name: SgaTargetSize
        x-nullable: true
      sharedPoolSize:
        description: Shared pool size [ Default value same as Source DB ].
        type: string
        x-go-name: SharedPoolSize
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  OracleDBConfig_PfileParameterMapEntry:
    type: object
    properties:
      key:
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  OracleDBConfig_RedoLogGroupConf:
    description: |-
      GROUP1 : {DST1/CH1.log, DST2/CH1.log}
      GROUP2 : {DST1/CH2.log, DST2/CH2.log}
      GROUP3 : {DST1/CH3.log, DST2/CH3.log}
    type: object
    title: Example redo log config for 3 groups and 2 members with prefix=CH.
    properties:
      groupMemberVec:
        description: List of members of this redo log group.
        type: array
        items:
          type: string
        x-go-name: GroupMemberVec
        x-nullable: true
      memberPrefix:
        description: Log member name prefix.
        type: string
        x-go-name: MemberPrefix
        x-nullable: true
      numGroups:
        description: Number of redo log groups.
        type: integer
        format: int32
        x-go-name: NumGroups
        x-nullable: true
      sizeMb:
        description: Size of the member in MB.
        type: integer
        format: int32
        x-go-name: SizeMb
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  OracleDataGuardInfo:
    description: |-
      Specifies information about the Database in Oracle DataGuard configuration.
      Data GUard provides a comprehensive set of services that create, maintain,
      and monitor one or more standby databases to enable production Oracle
      databases to survive disasters and data corruptions. Data Guard maintains
      these standby databases as transactionally consistent copies of the
      production databases.
    type: object
    title: Oracle Data Guard Configuration Info.
    properties:
      role:
        description: |-
          Specifies the role of the DataGuard database.
          Specifies the role of the DataGuard database.

          A Data Guard configuration contains one production database, also referred
          to as the primary database, that functions in the primary role.
          The primary database can be either a single-instance Oracle database or an
          Oracle Real Application Clusters database.

          A standby database is a transactionally consistent copy of the primary
          database. Similar to a primary database, a standby database can be either
          a single-instance Oracle database or an Oracle Real Application Clusters
          database.
          'kPrimary' indicates that the current database is primary database.
          'kStandby' indicates that the current database is standby database.
        type: string
        enum:
        - kPrimary
        - kStandby
        x-go-name: Role
        x-nullable: true
      type:
        description: |-
          Specifies the type of standby database.
          Specifies the type of standby database.
          'kPhysical' indicates that the current database provides a physically
          identical copy of the primary database, with on disk structures identical
          to the primary database on a block-for-block basis. It is kept
          synchronized with the primary database, though Redo Apply, which recovers
          the redo data received from the primary database and applies the redo to
          the physical standby database.
          'kLogical' indicates that the current database provides the same logical
          information as the production database, although the physical structure
          can be different. It is kept synchronized with the primary database
          thorugh SQL Apply, which transforms the data in the redo received from the
          primary database into SQL statements and then executing the SQL statements
          on the standby database.
          'kSnapshot' indicates that the current database is a fully updateable
          standby created by converting a physical standby database into a snasphot
          standby database. It receives and archives but does not apply redo data
          from a primary database.
        type: string
        enum:
        - kPhysical
        - kLogical
        - kSnapshot
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleDatabaseNode:
    description: |-
      Oracle Database Node.

      Specifies database node required for the backup and restore.
    type: object
    title: |-
      Data related to a 'kOracle' database node.
      Refer: magnetoProto.OracleDBChannelInfo_HostInfo
    properties:
      channelCount:
        description: |-
          Specifies the number of channels user wants for the backup/recovery
          of this node.
        type: integer
        format: int32
        x-go-name: ChannelCount
        x-nullable: true
      node:
        description: Specifies the ip of the database node.
        type: string
        x-go-name: Node
        x-nullable: true
      port:
        description: Specifies the port on which user wants to run the backup/recovery.
        type: integer
        format: int64
        x-go-name: Port
        x-nullable: true
      sbtHostParams:
        description: Specifies the necessary parameters for SBT.
        x-nullable: true
        $ref: '#/definitions/OracleSbtHostParams'
    x-go-package: cohesity/iris/server/data/public
  OracleDatabaseNodeChannel:
    description: |-
      Specifies node and channel info required for the backup and restore of
      a database.
    type: object
    title: Oracle Database Node Channel.
    properties:
      archiveLogKeepDays:
        description: Specifies the number of days archive log should be stored.
        type: integer
        format: int32
        x-go-name: ArchiveLogKeepDays
        x-nullable: true
      databaseNodeList:
        description: |-
          Array of nodes of a database.

          Specifies the Node info from where we are allowed to take the
          backup/restore.
        type: array
        items:
          $ref: '#/definitions/OracleDatabaseNode'
        x-go-name: DatabaseNodeList
        x-nullable: true
      databaseUniqueName:
        description: Specifies the unique Name of the database.
        type: string
        x-go-name: DatabaseUniqueName
        x-nullable: true
      databaseUuid:
        description: |-
          Specifies the database unique id. This is an internal field and is filled
          by magneto master based on corresponding app entity id.
        type: string
        x-go-name: DatabaseUuid
        x-nullable: true
      defaultChannelCount:
        description: |-
          Specifies the default number of channels to use per node per database.
          The default number of channels to use per host per db.
          This value is used on all OracleDatabaseNode's unless
          databaseNodeList item's channelCount is specified for the node.
        type: integer
        format: int32
        x-go-name: DefaultChannelCount
        x-nullable: true
      enableDgPrimaryBackup:
        description: |-
          Specifies whether the database having the Primary role within Data Guard
          configuration is to be backed up.
        type: boolean
        x-go-name: EnableDgPrimaryBackup
        x-nullable: true
      maxNodeCount:
        description: |-
          Specifies the maximum number of nodes from which we are allowed to take
          backup/restore.
        type: integer
        format: int32
        x-go-name: MaxNodeCount
        x-nullable: true
      rmanBackupType:
        description: Specifies the type of Oracle RMAN backup.
        type: integer
        format: int32
        x-go-name: RmanBackupType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleEnvJobParameters:
    description: |-
      Specifies job parameters applicable for all 'kOracle' Environment type
      Protection Sources in a Protection Job.
    type: object
    title: Oracle Environment Job Parameters.
    properties:
      persistMountpoints:
        description: |-
          Specifies whether the mountpoints created while backing up Oracle DBs
          should be persisted.
          Note: This parameter is for the entire Job. For overriding persistence of
          mountpoints for a subset of Oracle hosts within the job,
          refer OracleSourceParams.
        type: boolean
        x-go-name: PersistMountpoints
        x-nullable: true
      vlanParams:
        description: |-
          Indicates the vlan preference that is selected by the user for doing
          backup.
        x-nullable: true
        $ref: '#/definitions/VlanParams'
    x-go-package: cohesity/iris/server/data/public
  OracleHost:
    description: Specifies information about an Oracle Host.
    type: object
    title: Oracle Host.
    properties:
      cpuCount:
        description: Specifies the count of CPU available on the host.
        type: integer
        format: int32
        x-go-name: CpuCount
        x-nullable: true
      ipAddresses:
        description: Specifies the IP address of the host.
        type: array
        items:
          type: string
        x-go-name: IpAddresses
        x-nullable: true
      ports:
        description: Specifies ports available for this host.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: Ports
        x-nullable: true
      sessions:
        description: Specifies multiple session configurations available for this
          host.
        type: array
        items:
          $ref: '#/definitions/OracleSession'
        x-go-name: Sessions
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OraclePluggableDatabaseInfo:
    description: |-
      Specifies the informatiomn about the pluggable database. A Pluggabele
      Database(PDB) is a portable collection of schemas, schema objects, and
      nonschema objects that appears to an Oracle Net client as a non-CDB.
    type: object
    properties:
      databaseId:
        description: Specifies the ID of the Pluggable Database.
        type: string
        x-go-name: DatabaseId
        x-nullable: true
      name:
        description: Speicifes the name of the Pluggable Database.
        type: string
        x-go-name: Name
        x-nullable: true
      openMode:
        description: |-
          Specifies the OPEN_MODE information.
          Specifies the OPEN_MODE type for the Oracle database.
          'kMounted' indicates that the database is open in Mounted mode.
          'kReadWrite' indicates that the database is open in R/W mode.
          'kReadOnly' indicates that the database is open in ReadOnly mode.
          'kMigrate' inidcates that the database is open in Migrate mode.
        type: string
        enum:
        - kMounted
        - kReadWrite
        - kReadOnly
        - kMigrate
        x-go-name: OpenMode
        x-nullable: true
      sizeBytes:
        description: Specifies the Size in Bytes of the Pluggable Database.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleProtectionSource:
    description: Specifies an Object representing one Oracle database.
    type: object
    title: Oracle Protection Source.
    properties:
      archiveLogEnabled:
        description: |-
          Specifies whether the database is running in ARCHIVELOG mode. It enables
          the redo of log files into archived redo log files.
        type: boolean
        x-go-name: ArchiveLogEnabled
        x-nullable: true
      bctEnabled:
        description: |-
          Specifies whether the Block Change Tracking is enabled. BCT improves the
          performance of incremental backups by recording changed blocks into the
          block change tracking file. RMAN then uses this file to identify changed
          blocks to be backed up.
        type: boolean
        x-go-name: BCTEnabled
        x-nullable: true
      containerDatabaseInfo:
        description: |-
          Specifies the Container Database Information including the Pluggable
          databases within the container.
        x-nullable: true
        $ref: '#/definitions/OracleContainerDatabaseInfo'
      dataGuardInfo:
        description: |-
          Specifies the Data Gurad configuration information for the current DB
          entity.
        x-nullable: true
        $ref: '#/definitions/OracleDataGuardInfo'
      databaseUniqueName:
        description: Specifies the unique name of the Oracle entity.
        type: string
        x-go-name: DatabaseUniqueName
        x-nullable: true
      dbType:
        description: |-
          Specifies the type of the database in Oracle Protection Source.
          'kRACDatabase' indicates the database is a RAC DB.
          'kSingleInstance' indicates that the database is single instance.
        type: string
        enum:
        - kSingleInstance
        - kRACDatabase
        x-go-name: DbType
        x-nullable: true
      domain:
        description: Specifies the Oracle DB Domain.
        type: string
        x-go-name: Domain
        x-nullable: true
      fraSize:
        description: Specifies Flash/Fast Recovery area size for the current DB entity.
        type: integer
        format: int64
        x-go-name: FraSize
        x-nullable: true
      hosts:
        description: Specifies the list of hosts for the current DB entity.
        type: array
        items:
          $ref: '#/definitions/OracleHost'
        x-go-name: Hosts
        x-nullable: true
      name:
        description: Specifies the instance name of the Oracle entity.
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: |-
          Specifies the entity id of the owner entity (such as a VM). This is only
          set if type is kDatabase.
        type: integer
        format: int64
        x-go-name: OwnerId
        x-nullable: true
      sgaTargetSize:
        description: |-
          Specifies System Global Area size for the current DB entity.
          A system global area (SGA) is a group of shared memory structures that
          contain data and control information for one Oracle database.
        type: string
        x-go-name: SgaTargetSize
        x-nullable: true
      sharedPoolSize:
        description: Specifies Shared Pool Size for the current DB entity.
        type: string
        x-go-name: SharedPoolSize
        x-nullable: true
      size:
        description: Specifies database size.
        type: integer
        format: int64
        x-go-name: Size
        x-nullable: true
      tdeEncryptedTsCount:
        description: Specifies the number of TDE encrypted tablespaces found in the
          database.
        type: integer
        format: int64
        x-go-name: TdeEncryptedTsCount
        x-nullable: true
      tempFilesCount:
        description: Specifies number of temporary files for the current DB entity.
        type: integer
        format: int64
        x-go-name: TempFilesCount
        x-nullable: true
      type:
        description: |-
          Specifies the type of the managed Object in Oracle Protection Source.
          'kRACRootContainer' indicates the entity is a root container to an Oracle
          Real Application clusters(Oracle RAC).
          'kRootContainer' indicates the entity is a root container to an Oracle
          standalone server.
          'kHost' indicates the entity is an Oracle host.
          'kDatabase' indicates the entity is an Oracle Database.
          'kTableSpace' indicates the entity is an Oracle table space.
          'kTable' indicates the entity is an Oracle table.
        type: string
        enum:
        - kRACRootContainer
        - kRootContainer
        - kHost
        - kDatabase
        - kTableSpace
        - kTable
        x-go-name: Type
        x-nullable: true
      uuid:
        description: Specifies the UUID for the Oracle entity.
        type: string
        x-go-name: Uuid
        x-nullable: true
      version:
        description: Specifies the Oracle database instance version.
        type: string
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleSbtHostParams:
    type: object
    title: Message to capture Oracle SBT host info.
    properties:
      sbtLibraryPath:
        description: The path of sbt library, This is set only when backup type is
          kSbt.
        type: string
        x-go-name: SbtLibraryPath
        x-nullable: true
      viewFsPath:
        description: Cohesity view path.
        type: string
        x-go-name: ViewFsPath
        x-nullable: true
      vipVec:
        description: Vector of Cohesity primary VIPs.
        type: array
        items:
          type: string
        x-go-name: VipVec
        x-nullable: true
      vlanInfoVec:
        description: Vlan information for Cohesity cluster.
        type: array
        items:
          $ref: '#/definitions/OracleVlanInfo'
        x-go-name: VlanInfoVec
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  OracleSession:
    description: Specifies information about session configuration for an Oracle host.
    type: object
    title: Oracle Session.
    properties:
      location:
        description: Location is the path where Oracle is installed.
        type: string
        x-go-name: Location
        x-nullable: true
      systemIdentifier:
        description: |-
          SystemIdentifier is the unique Oracle System Identifier for the DB
          instance.
        type: string
        x-go-name: SystemIdentifier
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleSourceParams:
    description: Message to capture additional backup/restore params for a Oracle
      source.
    type: object
    title: Oracle Source Parameters.
    properties:
      additionalOracleDbParamsVec:
        description: |-
          A vector of unique Oracle databases. Each vector entry represents the
          backup/restore parameters for one unique Oracle database. Uniqueness is
          determined by the database unique name.
        type: array
        items:
          $ref: '#/definitions/AdditionalOracleDBParams'
        x-go-name: AdditionalOracleDbParamsVec
        x-nullable: true
      persistMountpoints:
        description: |-
          This parameter indicates whether or not to persist mountpoints.
          Default is set to true, which was the behavior before this option.
        type: boolean
        x-go-name: PersistMountpoints
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  OracleSpecialParameters:
    description: Specifies special settings applicable for 'kOracle' environment.
    type: object
    title: Oracle Special Parameters.
    properties:
      appParamsList:
        description: |-
          Array of application parameters i.e. database parameters for
          standalone/RAC and DG parameters for data guard.

          Specifies the list of parameters required at app entity level.
        type: array
        items:
          $ref: '#/definitions/OracleAppParams'
        x-go-name: AppParamsList
        x-nullable: true
      applicationEntityIds:
        description: |-
          Array of Ids of Application Entities like Oracle instances, and
          databases that should be protected in a Protection Source.

          Specifies the subset of application entities like Oracle instances, and
          databases to protect in a Protection Source of type kOracle'. If
          not specified, all application entities on the Protection Source.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ApplicationEntityIds
        x-nullable: true
      persistMountpoints:
        description: |-
          Specifies if the mountpoints for Oracle view for the current host are to
          be persisted.
        type: boolean
        x-go-name: PersistMountpoints
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OracleVlanInfo:
    type: object
    title: Message to capture Cohesity cluster vlan info for Oracle workflow.
    properties:
      gateway:
        description: Gateway for this VLAN.
        type: string
        x-go-name: Gateway
        x-nullable: true
      id:
        description: ID of this VLAN.
        type: integer
        format: int32
        x-go-name: Id
        x-nullable: true
      ipVec:
        description: List of IPs in this VLAN.
        type: array
        items:
          type: string
        x-go-name: IpVec
        x-nullable: true
      subnetIp:
        description: Subnet IP for this VLAN.
        type: string
        x-go-name: SubnetIp
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  OutlookBackupEnvParams:
    description: |-
      Message to capture any additional backup params for Outlook within Office365
      environment.
    type: object
    title: Outlook Backup Environment Parameters.
    properties:
      filteringPolicy:
        description: |-
          The filtering policy describes which paths within a mailbox should be
          excluded within the backup. If this is not specified, then the entire
          Outlook mailbox will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilteringPolicyProto'
      shouldBackupMailbox:
        description: |-
          Specifies whether the mailbox for all the Office365 Users present in the
          protection job should be backed up.
        type: boolean
        x-go-name: ShouldBackupMailbox
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  OutlookEnvJobParameters:
    description: |-
      Specifies Outlook job parameters applicable for all Office365 Environment
      type Protection Sources in a Protection Job.
    type: object
    title: Outlook Environment Job Parameters.
    properties:
      filePathFilter:
        description: |-
          The filtering policy describes which paths within the mailbox should be
          excluded within the backup. If this is not specified, then the entire
          mailbox will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilePathFilter'
      shouldBackupMailbox:
        description: |-
          Specifies whether mailbox of each Office365 Users/Groups within the job,
          should be backed up or not.
        type: boolean
        x-go-name: ShouldBackupMailbox
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OutlookFolder:
    description: Specifies the Outlook folder details.
    type: object
    title: Outlook Folder.
    properties:
      folderId:
        description: Specifies the unique ID of the folder.
        type: string
        x-go-name: FolderId
        x-nullable: true
      folderKey:
        description: Specifies the key unique within the mailbox of the folder.
        type: integer
        format: int64
        x-go-name: FolderKey
        x-nullable: true
      outlookItemIdList:
        description: |-
          Specifies the outlook items within the folder to be restored incase the
          user wishes not to restore the entire folder.
        type: array
        items:
          type: string
        x-go-name: OutlookItemIdList
        x-nullable: true
      restoreEntireFolder:
        description: Specifies whether the entire folder is to be restored.
        type: boolean
        x-go-name: RestoreEntireFolder
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OutlookMailbox:
    description: |-
      Specifies the Outlook mailbox with restore details to support full or
      partial recovery.
    type: object
    title: Outlook Mailbox.
    properties:
      mailboxObject:
        description: Specifies the details of the mailbox object.
        x-nullable: true
        $ref: '#/definitions/RestoreObjectDetails'
      outlookFolderList:
        description: |-
          Specifies the list of folders to be restored incase user wishes not to
          restore entire mailbox.
        type: array
        items:
          $ref: '#/definitions/OutlookFolder'
        x-go-name: OutlookFolderList
        x-nullable: true
      restoreEntireMailbox:
        description: Specifies whether the entire mailbox is to be restored.
        type: boolean
        x-go-name: RestoreEntireMailbox
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  OutlookRestoreParameters:
    description: |-
      Specifies information needed for recovering Mailboxes in O365Outlook
      environment.
    type: object
    title: Outlook Restore Parameters.
    properties:
      outlookMailboxList:
        description: Specifies the list of mailboxes to be restored.
        type: array
        items:
          $ref: '#/definitions/OutlookMailbox'
        x-go-name: OutlookMailboxList
        x-nullable: true
      targetFolderPath:
        description: |-
          Specifies the target folder path to restore the mailboxes. This will
          always be specified whether the target mailbox is the original or an
          alternate one.
        type: string
        x-go-name: TargetFolderPath
        x-nullable: true
      targetMailbox:
        description: |-
          Specifies the destination mailbox where the mailboxes specified within
          OutlookMailboxes will be restored with their appropriate names.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
    x-go-package: cohesity/iris/server/data/public
  OutputSpec:
    type: object
    title: Output specification for the mapreduce.
    properties:
      numReduceShards:
        description: Number of reduce shards.
        type: integer
        format: int32
        x-go-name: NumReduceShards
        x-nullable: true
      outputDir:
        description: Name of output directory.
        type: string
        x-go-name: OutputDir
        x-nullable: true
      partitionId:
        description: Partition id where output will go.
        type: integer
        format: int64
        x-go-name: PartitionId
        x-nullable: true
      reduceOutputPrefix:
        description: |-
          Prefix of the reduce output files. File names will be:
          ${reduce_output_prefix}-00000-of-00100 if num_reduce_shards=100
          This name can contain some path components. e.g. "awb_results/run1" is a
          valid value. output_dir is deprecated.
        type: string
        x-go-name: ReduceOutputPrefix
        x-nullable: true
      viewBoxId:
        description: Viewbox id where the output will go.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName:
        description: Name of the view where output will go. This will be filled up
          by yoda.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  Overusage:
    type: object
    properties:
      featureName:
        description: Name of feature.
        type: string
        x-go-name: FeatureName
        x-nullable: true
      overusedGiB:
        description: Feature overusage by the cluster.
        type: integer
        format: int64
        x-go-name: FeatureOverusedGb
        x-nullable: true
      overusedVm:
        description: Number of overused VM spinned.
        type: integer
        format: int64
        x-go-name: NumVmOverused
        x-nullable: true
    x-go-package: cohesity/nexus/server/common
  OverwriteViewParam:
    description: Specifies the overwrite parameters for the view.
    type: object
    title: Overwrite View Parameters.
    required:
    - sourceViewName
    - targetViewName
    properties:
      sourceViewName:
        description: Specifies the source view name.
        type: string
        x-go-name: SourceViewName
        x-nullable: true
      targetViewName:
        description: Specifies the target view name.
        type: string
        x-go-name: TargetViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PackageDetails:
    description: |-
      Specifies all of the details of a package that is currently installed
      on the cluster.
    type: object
    title: Package Details
    properties:
      downtimeRequired:
        description: Specifies whether or not downtime is required to update to this
          package.
        type: boolean
        x-go-name: DowntimeRequired
        x-nullable: true
      installedOnNodes:
        description: |-
          Specifies the list of IDs of nodes on the cluster where this package is
          currently installed.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: InstalledOnNodes
        x-nullable: true
      packageName:
        description: Specifies the name of the current package.
        type: string
        x-go-name: PackageName
        x-nullable: true
      releaseDate:
        description: Specifies the release date of this package.
        type: string
        x-go-name: ReleaseDate
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PaginationParameters:
    description: |-
      Specifies the cursor based pagination parameters for Protection Source and
      its children. Pagination is supported at a given level within the Protection
      Source Hierarchy with the help of before or after cursors.
      A Cursor will always refer to a specific source within the source dataset
      but will be invalidated if the item is removed.
    type: object
    properties:
      afterCursorEntityId:
        description: Specifies the entity id starting from which the items are to
          be returned.
        type: integer
        format: int64
        x-go-name: AfterCursorEntityId
        x-nullable: true
      beforeCursorEntityId:
        description: Specifies the entity id upto which the items are to be returned.
        type: integer
        format: int64
        x-go-name: BeforeCursorEntityId
        x-nullable: true
      nodeId:
        description: |-
          Specifies the entity id for the Node at any level within the Source entity
          hierarchy whose children are to be paginated.
        type: integer
        format: int64
        x-go-name: NodeId
        x-nullable: true
      pageSize:
        description: Specifies the maximum number of entities to be returned within
          the page.
        type: integer
        format: int64
        x-go-name: PageSize
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Pattern:
    type: object
    title: Proto to represent pattern auxiliary data type.
    properties:
      isSystemDefined:
        description: Whether this pattern is system defined.
        type: boolean
        x-go-name: IsSystemDefined
        x-nullable: true
      name:
        description: Name of the pattern. This is marked optional but is required.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: Pattern type.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      value:
        description: Value of the pattern. This is marked optional but is required.
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  PatternRequestBody:
    description: Specifies details about the pattern which has to be saved.
    type: object
    title: Pattern Request Body.
    required:
    - applicationId
    - applicationDataType
    - userPattern
    properties:
      applicationDataType:
        description: Specifies the data type for which supported patterns can be fetched.
        type: integer
        format: int32
        x-go-name: ApplicationDataType
        x-nullable: true
      applicationId:
        description: Specifies AWB Application ID.
        type: integer
        format: int64
        x-go-name: ApplicationId
        x-nullable: true
      userPattern:
        description: Specifies the pattern details to be saved.
        x-nullable: true
        $ref: '#/definitions/SupportedPattern'
    x-go-package: cohesity/iris/server/data/public
  PerformRestoreJobStateProto:
    description: |-
      Proto to define the persistent information of a wrapper restore job that
      spawns multiple child restore tasks.
    type: object
    properties:
      admittedTimeUsecs:
        description: |-
          The time at which the restore job was admitted to run on a Magneto master.
          This field will be set only after the status changes to 'kAdmitted'.
          Using this field, amount of time spent in the waiting/queued state and the
          amount of time taken taken to actually run the job can be determined.
          wait time = admitted_time_usecs - start_time_usecs
          run time = end_time_usecs - admitted_time_usecs
        type: integer
        format: int64
        x-go-name: AdmittedTimeUsecs
        x-nullable: true
      cancellationRequested:
        description: Whether this restore job has a pending cancellation request.
        type: boolean
        x-go-name: CancellationRequested
        x-nullable: true
      continueRestoreOnError:
        description: |-
          Whether to continue with the restore operation if restore of any object
          fails.
        type: boolean
        x-go-name: ContinueRestoreOnError
        x-nullable: true
      deployVmsToCloudTaskState:
        description: |-
          This contains information regarding deploy vm to cloud task state. This is
          set for restore type kConvertAndDeployVMs and kDeployVms.
        x-nullable: true
        $ref: '#/definitions/DeployVMsToCloudTaskStateProto'
      endTimeUsecs:
        description: |-
          If the restore job has finished, this field contains the end time for the
          job.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: The error encountered by job (if any). Only valid if the job
          has finished.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      name:
        description: The name of the restore job.
        type: string
        x-go-name: Name
        x-nullable: true
      nosqlConnectParams:
        description: Parameters to connect to destination nosql parent entity.
        x-nullable: true
        $ref: '#/definitions/NoSqlConnectParams'
      nosqlRecoverJobParams:
        description: Additional parameters for the recovery job to send to imanis
          server.
        x-nullable: true
        $ref: '#/definitions/NoSqlRecoverJobParams'
      objects:
        description: |-
          Information on the exact set of objects being restored (along with
          snapshots they are being recovered from). Even if the user wanted to
          restore an entire job form the latest snapshot, this will have
          individual objects and the exact snapshot they are bein restored from.
          If specified, this can only have leaf-level entities.
        type: array
        items:
          $ref: '#/definitions/RestoreObject'
        x-go-name: Objects
        x-nullable: true
      parentSourceConnectionParams:
        description: A way to connect to the parent source.
        x-nullable: true
        $ref: '#/definitions/ConnectorParams'
      physicalFlrParallelRestore:
        description: |-
          If enabled, magneto physical file restore will be enabled via job
          framework
        type: boolean
        x-go-name: PhysicalFlrParallelRestore
        x-nullable: true
      powerStateConfig:
        description: |-
          The power state configuration to be applied to the restored object.
          Please refer to comments for the field
          CreateRestoreTaskArg.power_state_config for more details.
        x-nullable: true
        $ref: '#/definitions/PowerStateConfigProto'
      preserveTags:
        description: |-
          Whether to preserve tags for the clone op.
          This field is currently used by HyperV and VMWare.
        type: boolean
        x-go-name: PreserveTags
        x-nullable: true
      progressMonitorTaskPath:
        description: Root path of a Pulse task tracking the progress of the restore
          job.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
      renameRestoredObjectParam:
        description: |-
          List of env and action type for which this field is applicable are:
          AWS: kCloneVMs, kRecoverVMs.
        title: |-
          By default, objects are restored with their original name. This field can
          be used to specify the transformation ( i.e prefix/suffix) to be applied
          to the source object name to derive the new name of the restored object.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
      renameRestoredVappParam:
        description: |-
          An optional parameter to specify how restored vApps(kVirtualApp) are
          renamed. Please refer to comments for the field
          CreateRestoreTaskARg.rename_restored_vapp_param for more details.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
      restoreAcropolisVmsParams:
        description: |-
          This field defines the Acropolis specific params for restore task of type
          kRecoverVMs.
        x-nullable: true
        $ref: '#/definitions/RestoreAcropolisVMsParams'
      restoreJobId:
        description: A globally unique id for this restore job.
        type: integer
        format: int64
        x-go-name: RestoreJobId
        x-nullable: true
      restoreKubernetesNamespacesParams:
        description: |-
          This field defines the kubernetes specific params for restore task of type
          kRecoverNamespaces.
        x-nullable: true
        $ref: '#/definitions/RestoreKubernetesNamespacesParams'
      restoreKvmVmsParams:
        description: |-
          This field defines the KVM specific params for restore task of type
          kRecoverVMs.
        x-nullable: true
        $ref: '#/definitions/RestoreKVMVMsParams'
      restoreParentSource:
        description: |-
          An optional registered parent source to which objects are to be restored.
          If not specified, objects are restored back to the original source that
          was managing the objects.
          If 'restored_to_different_source' is set to true, then this field must be
          specified.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restorePublicFoldersParams:
        description: |-
          This field defines the O365 Public Folders specific params for restore
          task of type kRecoverO365PublicFolders.
        x-nullable: true
        $ref: '#/definitions/RestoreO365PublicFoldersParams'
      restoreSiteParams:
        description: |-
          This field defines o365 site specific params for restore job of type
          kRecoverSites.
        x-nullable: true
        $ref: '#/definitions/RestoreSiteParams'
      restoreTaskStateProtoTmpl:
        description: |-
          This will be optionally populated for certain type of restores (FLR for
          now) and can be used as a template proto while creating the actual restore
          task later.
        x-nullable: true
        $ref: '#/definitions/PerformRestoreTaskStateProto'
      restoreTaskVec:
        description: |-
          Even if the user wanted to restore an entire job from the latest snapshot,
          this will have info of all the individual objects.
        type: array
        items:
          $ref: '#/definitions/PerformRestoreJobStateProto_RestoreTask'
        x-go-name: RestoreTaskVec
        x-nullable: true
      restoreVmwareVmParams:
        description: |-
          This field defines the VMware specific params for restore task of type
          kCloneVMs and kRecoverVMs.
        x-nullable: true
        $ref: '#/definitions/RestoreVMwareVMParams'
      restoredObjectsNetworkConfig:
        description: This is populated for VMware environment.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectNetworkConfigProto'
      restoredToDifferentSource:
        description: Whether restore is being performed to a different parent source.
        type: boolean
        x-go-name: RestoredToDifferentSource
        x-nullable: true
      startTimeUsecs:
        description: The start time for this restore job.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      status:
        description: Status of the restore job.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
      type:
        description: The type of restore being performed.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      user:
        description: The user who requested this restore job.
        type: string
        x-go-name: User
        x-nullable: true
      userInfo:
        description: Specifies information about the user who made the request.
        x-nullable: true
        $ref: '#/definitions/UserInformation'
      vcdConfig:
        description: The params to use while recovering a vcd entity.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectVCDConfigProto'
      viewBoxId:
        description: The view box id to which the restore job belongs to.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      warnings:
        description: |-
          Populate warnings on the job if any. The warning messages are propagated
          from the child restore tasks upon completion of the task.
        type: array
        items:
          $ref: '#/definitions/ErrorProto'
        x-go-name: Warnings
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  PerformRestoreJobStateProto_RestoreTask:
    description: |-
      Information of the object being restored along with the info of the task
      tracking the restore of that object.
    type: object
    properties:
      object:
        description: |-
          Information of the object being restored (along with the snapshot it is
          being restored from).
        x-nullable: true
        $ref: '#/definitions/RestoreObject'
      objectProgressMonitorTaskPath:
        description: |-
          The relative task path of the progress monitor for the restore of the
          above 'object'.
          Please note that this field will be set only after progress monitor is
          created for this restore job.
        type: string
        x-go-name: ObjectProgressMonitorTaskPath
        x-nullable: true
      taskId:
        description: Id of the task tracking the restore of the above 'object'.
        type: integer
        format: int64
        x-go-name: TaskId
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  PerformRestoreTaskStateProto:
    type: object
    properties:
      actionExecutorTargetType:
        description: |-
          Denotes the target for action executor(Bridge / BridgeProxy) on which task
          on slave should execute actions.
        type: integer
        format: int32
        x-go-name: ActionExecutorTargetType
        x-nullable: true
      base:
        description: Contains basic information about the restore task.
        x-nullable: true
        $ref: '#/definitions/RestoreTaskStateBaseProto'
      canTeardown:
        description: |-
          This is set if the clone operation has created any objects on the primary
          environment and teardown operation is possible. UI will disable the
          teardown button only if this is not set or set to false.
          NOTE: This won't be reset if the teardown operation subsequently
          completes as teardown state is managed separately.
        type: boolean
        x-go-name: CanTeardown
        x-nullable: true
      cdpRestoreProgressMonitorTaskPath:
        description: |-
          The path of the progress monitor for the task that is responsible for
          creating the CDP hydrated view.
        type: string
        x-go-name: CdpRestoreProgressMonitorTaskPath
        x-nullable: true
      cdpRestoreTask:
        description: |-
          The CDP restore helper task which creates the hydrated views for the
          other restores.
        x-nullable: true
        $ref: '#/definitions/PerformRestoreTaskStateProto'
      cdpRestoreTaskId:
        description: The id of the task that will create the CDP hydrated view.
        type: integer
        format: int64
        x-go-name: CdpRestoreTaskId
        x-nullable: true
      cdpRestoreViewName:
        description: The temporary view where the hydrated disks of the CDP restores
          are kept.
        type: string
        x-go-name: CdpRestoreViewName
        x-nullable: true
      childCloneTaskId:
        description: The id of the child clone task triggered by refresh op.
        type: integer
        format: int64
        x-go-name: ChildCloneTaskId
        x-nullable: true
      childDestroyTaskId:
        description: |-
          The following fields are used by clone refresh op. These will be present
          only in case of refresh task op.

          The id of the child destroy clone task triggered by refresh op.
        type: integer
        format: int64
        x-go-name: ChildDestroyTaskId
        x-nullable: true
      cloneAppViewInfo:
        description: |-
          The information about cloned backup view of an App [ ex. Oracle,SQL].
          Currently this only contains the clone view information for Oracle,
          which contains the vector of mount-paths where the cloned view got mounted
          on the Oracle Host.
        x-nullable: true
        $ref: '#/definitions/CloneAppViewInfoProto'
      cloudDeployInfo:
        description: |-
          This is set only when the restore task is of type kDeployVMs. It contains
          information about the kDeployVMs restore task that is populated by the
          slave.
        x-nullable: true
        $ref: '#/definitions/CloudDeployInfoProto'
      continueRestoreOnError:
        description: |-
          Whether to continue with the restore operation if restore of any object
          fails.
        type: boolean
        x-go-name: ContinueRestoreOnError
        x-nullable: true
      createView:
        description: True iff the target view needs to be created.
        type: boolean
        x-go-name: CreateView
        x-nullable: true
      datastoreEntityVec:
        description: |-
          Please refer to comments for the field
          CreateRestoreTaskArg.datastore_entity_vec for more details.
        type: array
        items:
          $ref: '#/definitions/EntityProto'
        x-go-name: DatastoreEntityVec
        x-nullable: true
      deployVmsToCloudTaskState:
        description: |-
          This contains information regarding deploy vm to cloud task state. This is
          set for restore type kConvertAndDeployVMs.
        x-nullable: true
        $ref: '#/definitions/DeployVMsToCloudTaskStateProto'
      folderEntity:
        description: |-
          Semantics for a restore task of type kCloneVMs: For a successful restore
          task, it will be always set. For a failed task, it may or may not be set.

          Semantics for a restore task of type kRecoverVMs: Folder entity will be
          set only if objects were restored to a different source.
        title: An optional folder entity where the restored objects are placed.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      fullViewName:
        description: |-
          The full view name (internal or external). This is composed of an optional
          Cohesity specific prefix and the user provided view name.
        type: string
        x-go-name: FullViewName
        x-nullable: true
      includeVmConfig:
        description: |-
          This is set to true if the vm-config.xml need to be copied in the target
          view/folder.
        type: boolean
        x-go-name: IncludeVmConfig
        x-nullable: true
      mountVolumesTaskState:
        description: |-
          This contains information regarding mount volumes task state. This is set
          for restore type kMountVolumes.
        x-nullable: true
        $ref: '#/definitions/MountVolumesTaskStateProto'
      nosqlConnectParams:
        description: Parameters to connect to destination nosql parent entity.
        x-nullable: true
        $ref: '#/definitions/NoSqlConnectParams'
      nosqlRecoverJobParams:
        description: Additional parameters for the recovery job to send to imanis
          server.
        x-nullable: true
        $ref: '#/definitions/NoSqlRecoverJobParams'
      objectName_DEPRECATED:
        description: An optional name to give to the restored object.
        type: string
        x-go-name: ObjectName_DEPRECATED
        x-nullable: true
      objects:
        description: |-
          Information on the exact set of objects being restored (along with
          snapshots they are being recovered from). Even if the user wanted to
          restore an entire job from the latest snapshot, this will have
          individual objects and the exact snapshot they are being restored from.
          If specified, this can only have leaf-level entities.
        type: array
        items:
          $ref: '#/definitions/RestoreObject'
        x-go-name: Objects
        x-nullable: true
      objectsProgressMonitorTaskPaths:
        description: |-
          Vector containing the relative task path of progress monitors of the
          objects in the above field 'objects' to be restored. There is one to one
          correspondence between elements in 'objects' and
          'objects_progress_monitor_task_paths'.

          Please note that this field will be set only after progress monitor is
          created for this restore task.
        type: array
        items:
          type: string
        x-go-name: ObjectsProgressMonitorTaskPaths
        x-nullable: true
      parentRestoreJobId:
        description: |-
          If this a child restore task, this field will contain the id of the parent
          restore job that spawned this task.

          List of env and action type for which this field is applicable are:
          Acropolis: kRecoverVMs.
        type: integer
        format: int64
        x-go-name: ParentRestoreJobId
        x-nullable: true
      parentRestoreTaskId:
        description: |-
          The id of the parent restore task if this is a restore sub-task.

          List of environments that use this field:
          kSQL : Used for multi-stage SQL restore that supports a hot-standy.

          This will also be used by refresh op to mark the new clone as internal
          sub-task.
        type: integer
        format: int64
        x-go-name: ParentRestoreTaskId
        x-nullable: true
      pathPrefix_DEPRECATED:
        type: string
        x-go-name: PathPrefix_DEPRECATED
        x-nullable: true
      physicalFlrParallelRestore:
        description: |-
          If enabled, magneto physical file restore will be enabled via job
          framework
        type: boolean
        x-go-name: PhysicalFlrParallelRestore
        x-nullable: true
      physicalFlrUseNewLockingMethod:
        description: |-
          If enabled, magneto physical file restore will be enabled via job
          framework
        type: boolean
        x-go-name: PhysicalFlrUseNewLockingMethod
        x-nullable: true
      powerStateConfig:
        description: |-
          The power state configuration to be applied to the restored object.
          Please refer to comments for the field
          CreateRestoreTaskArg.power_state_config for more details.
        x-nullable: true
        $ref: '#/definitions/PowerStateConfigProto'
      preserveTags:
        description: This field is currently used by HyperV and VMWare.
        type: boolean
        x-go-name: PreserveTags
        x-nullable: true
      progressMonitorTaskPath:
        description: Root path of a Pulse task tracking the progress of the restore
          task.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
      recoverDisksTaskState:
        description: |-
          Contains information pertinent to a virtual disk recovery task. This is
          set for restore type kRecoverDisks.
        x-nullable: true
        $ref: '#/definitions/RecoverDisksTaskStateProto'
      recoverVolumesTaskState:
        description: |-
          Contains information pertinent to a volume recovery task. This is set
          for restore type kRecoverVolumes.
        x-nullable: true
        $ref: '#/definitions/RecoverVolumesTaskStateProto'
      relatedRestoreTaskId:
        description: |-
          The task id of a related restore task. For example, a SQL restore
          operation may involve restoring a VM first and then restoring SQL
          databases after that. So the corresponding VM restore and SQL database
          restore tasks will be related, and they will each have their
          'related_restore_task_id' set to the id of the other task.
        type: integer
        format: int64
        x-go-name: RelatedRestoreTaskId
        x-nullable: true
      renameRestoredObjectParam:
        description: |-
          An optional parameter to specify how restored objects are renamed.
          Please refer to comments for the field
          CreateRestoreTaskArg.rename_restored_object_param for more details.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
      renameRestoredVappParam:
        description: |-
          An optional parameter to specify how restored vApps(kVirtualApp) are
          renamed. Please refer to comments for the field
          CreateRestoreTaskArg.rename_restored_vapp_param for more details.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
      resourcePoolEntity:
        description: |-
          The resource pool entity where the restored objects will be attached.
          Please refer to comments for the field
          CreateRestoreTaskArg.resource_pool_entity for more details.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restoreAcropolisVmsParams:
        description: |-
          This field defines the Acropolis specific params for restore task of type
          kRecoverVMs.
        x-nullable: true
        $ref: '#/definitions/RestoreAcropolisVMsParams'
      restoreAppTaskState:
        description: |-
          This contains information about application restore task state. This is
          set for restore types kRecoverApp/kCloneApp/kCloneRefreshApp.
        x-nullable: true
        $ref: '#/definitions/RestoreAppTaskStateProto'
      restoreFilesTaskState:
        description: |-
          This contains information regarding restore files task state. This is
          set for restore type kRestoreFiles and kDownloadFiles.
        x-nullable: true
        $ref: '#/definitions/RestoreFilesTaskStateProto'
      restoreHypervVmParams:
        description: |-
          This field defines the HyperV specific params for restore tasks of type
          kCloneVMs and kRecoverVMs.
        x-nullable: true
        $ref: '#/definitions/RestoreHyperVVMParams'
      restoreInfo:
        description: |-
          Contains information about this restore task that is populated by the
          slave.
        x-nullable: true
        $ref: '#/definitions/RestoreInfoProto'
      restoreKubernetesNamespacesParams:
        description: |-
          This field defines the Kubernetes specific params for restore task of
          type kRecoverNamespaces.
        x-nullable: true
        $ref: '#/definitions/RestoreKubernetesNamespacesParams'
      restoreKvmVmsParams:
        description: |-
          This field defines the KVM specific params for restore task of type
          kRecoverVMs.
        x-nullable: true
        $ref: '#/definitions/RestoreKVMVMsParams'
      restoreOneDriveParams:
        description: |-
          This field defines the one drive specific params for restore task of type
          kRecoverO365Drive.
        x-nullable: true
        $ref: '#/definitions/RestoreOneDriveParams'
      restoreOutlookParams:
        description: |-
          This field defines the O365 specific params for restore task of type
          kRecoverEmails.
        x-nullable: true
        $ref: '#/definitions/RestoreOutlookParams'
      restoreParentSource:
        description: |-
          An optional registered parent source to which objects are to be restored.
          If not specified, objects are restored back to the original source that
          was managing the objects.
          If 'restored_to_different_source' is set to true, then this field must be
          specified.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restorePublicFoldersParams:
        description: |-
          This field defines the O365 Public Folders specific params for restore
          task of type kRecoverO365PublicFolders.
        x-nullable: true
        $ref: '#/definitions/RestoreO365PublicFoldersParams'
      restoreSiteParams:
        description: |-
          This field defines the O365 site specific params for restore task of type
          kRecoverSites.
        x-nullable: true
        $ref: '#/definitions/RestoreSiteParams'
      restoreSubTaskVec:
        description: |-
          Inside Magneto, these are represented as regular restore tasks with their
          own PerformRestoreTaskStateProto. Each restore sub-task will have its
          parent_restore_task_id field set.

          List of environments that use this field:
          kSQL : Used for multi-stage SQL restore that supports a hot-standy.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: RestoreSubTaskVec
        x-nullable: true
      restoreTaskPurged:
        description: |-
          Whether the restore task is purged. During WAL recovery, purged restore
          tasks are ignored.
        type: boolean
        x-go-name: RestoreTaskPurged
        x-nullable: true
      restoreViewDatastoreEntity:
        description: |-
          Please note that this field will be set only for the restore task of type
          kCloneVMs.
        title: |-
          The datastore entity where the object's files are restored to. This entity
          corresponds to the datastore created for the Cohesity view on the primary
          source by the restore task.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restoreVmwareVmParams:
        description: |-
          This field defines the VMware specific params for restore tasks of type
          kCloneVMs and kRecoverVMs.
        x-nullable: true
        $ref: '#/definitions/RestoreVMwareVMParams'
      restoredObjectsNetworkConfig:
        description: |-
          The network configuration to be applied to the restored object.
          Please refer to comments for the field
          CreateRestoreTaskArg.restored_objects_network_config for more details.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectNetworkConfigProto'
      restoredToDifferentSource:
        description: Whether restore is being performed to a different parent source.
        type: boolean
        x-go-name: RestoredToDifferentSource
        x-nullable: true
      retrieveArchiveProgressMonitorTaskPath:
        description: |-
          The path of the progress monitor for the task that is responsible for
          retrieving the objects from the archive.
        type: string
        x-go-name: RetrieveArchiveProgressMonitorTaskPath
        x-nullable: true
      retrieveArchiveStubViewName:
        description: |-
          The stub view created by Icebox corresponding to the archive. The stub
          view is used to selectively retrieve files and folders.
        type: string
        x-go-name: RetrieveArchiveStubViewName
        x-nullable: true
      retrieveArchiveTaskUidVec:
        description: |-
          The uid of the tasks that will retrieve the objects from the archive.
          Typically we only retrieve one snapshot for an enity but for point in time
          restores for SQL/Oracle database, we may need to retrieve multiple
          snapshots typically one full, and few logs. Hence we may need multiple
          uids to start retrieval task.
        type: array
        items:
          $ref: '#/definitions/UniversalIdProto'
        x-go-name: RetrieveArchiveTaskUidVec
        x-nullable: true
      retrieveArchiveTaskVec:
        description: |-
          Proto that contains all the information about the retrieve archive task.
          Typically we only retrieve one snapshot for an enity but for point in time
          restores for SQL/Oracle database, we may need to retrieve multiple
          snapshots typically one full, and few logs. As we may start the multiple
          retrieval tasks, we need vector of RetrieveArchiveTaskStateProto for
          storing information of retrieved archive tasks.
        type: array
        items:
          $ref: '#/definitions/RetrieveArchiveTaskStateProto'
        x-go-name: RetrieveArchiveTaskVec
        x-nullable: true
      retrieveArchiveViewName:
        description: |-
          The temporary view where the entities that have been retrieved from an
          archive have been placed in by Icebox.
        type: string
        x-go-name: RetrieveArchiveViewName
        x-nullable: true
      selectedDatastoreIdx:
        description: |-
          In case of restore job with multi-vm multi-datastore this field denotes
          the specific datastore index in datastore_entity_vec to be selected for
          the task.
          Not going for specific datastore allocation in datastore_entity_vec so
          that we have required information in case of extensibility for task level
          retries with different datastore
        type: integer
        format: int64
        x-go-name: SelectedDatastoreIdx
        x-nullable: true
      stubViewRelativeDirName:
        description: Relative directory inside the stub view that corresponds with
          the archive.
        type: string
        x-go-name: StubViewRelativeDirName
        x-nullable: true
      vaultRestoreParams:
        description: Params to be passed to Icebox while restoring data from an archive.
        x-nullable: true
        $ref: '#/definitions/VaultParams_RestoreParams'
      vcdConfig:
        description: VApp config for the restored object.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectVCDConfigProto'
      vcdStorageProfileDatastoreMorefVec:
        description: |-
          This field is applicable for VCD type recovery. It defines the compatible
          datastores for recovery to alternate location.
          This field is inferred using the storage profile in
          restore_vmware_vm_params below.
        type: array
        items:
          type: string
        x-go-name: VcdStorageProfileDatastoreMorefVec
        x-nullable: true
      viewBoxId:
        description: |-
          The view box id to which 'view_name' belongs to. In case the restore task
          corresponds to a backup job, this view box corresponds to the view box of
          the backup job.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName_DEPRECATED:
        description: The view name as provided by the user for this restore operation.
        type: string
        x-go-name: ViewName_DEPRECATED
        x-nullable: true
      viewParams:
        description: The params to use when cloning the view.
        x-nullable: true
        $ref: '#/definitions/ViewParams'
      volumeInfoVec:
        description: |-
          Information regarding volumes that are required for the restore task. This
          is populated for restore files and mount virtual disk ops.
        type: array
        items:
          $ref: '#/definitions/VolumeInfo'
        x-go-name: VolumeInfoVec
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  PhysicalBackupEnvParams:
    description: Message to capture any additional backup params for a Physical environment.
    type: object
    title: Physical Backup Environment Parameters.
    properties:
      enableIncrementalBackupAfterRestart:
        description: |-
          If this is set to true, then incremental backup will be performed
          after the server restarts, otherwise a full-backup will be done.
          NOTE: This is applicable to windows host environments.
        type: boolean
        x-go-name: EnableIncrementalBackupAfterRestart
        x-nullable: true
      filteringPolicy:
        description: |-
          The filtering policy to decide which objects within a source should be
          backed up. If this is not specified, then all of the objects within the
          source will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilteringPolicyProto'
    x-go-package: magneto/base/env_params.pb
  PhysicalBackupSourceParams:
    description: Message to capture additional backup params for a Physical type source.
    type: object
    title: Physical Backup Source Parameters.
    properties:
      enableSystemBackup:
        description: |-
          Allows Magneto to drive a "system" backup using a 3rd-party tool installed
          on the Agent host.
        type: boolean
        x-go-name: EnableSystemBackup
        x-nullable: true
      fileBackupParams:
        description: |-
          If the backup job type is kPhysicalFiles, this field should be set to
          specify the files to be backed up from the volumes on this source.
        x-nullable: true
        $ref: '#/definitions/PhysicalFileBackupParams'
      snapshotParams:
        description: This captures params to use for taking the snapshot.
        x-nullable: true
        $ref: '#/definitions/PhysicalSnapshotParams'
      sourceAppParams:
        description: |-
          This message will capture params for applications that are running as
          part of the server.
        x-nullable: true
        $ref: '#/definitions/SourceAppParams'
      volumeGuidVec:
        description: |-
          If this list is non-empty, then only volumes in this will be
          protected, otherwise all volumes belonging to the host will be
          protected.
        type: array
        items:
          type: string
        x-go-name: VolumeGuidVec
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  PhysicalEnvJobParameters:
    description: |-
      Protection Job parameters applicable to 'kPhysical' Environment type.
      Specifies job parameters applicable for all 'kPhysical' Environment type
      Protection Sources in a Protection Job.
    type: object
    title: Physical Environment Job Parameters.
    properties:
      filePathFilters:
        description: |-
          Specifies filters on the backup objects like files and directories.
          Specifying filters decide which objects within a source should be backed
          up. If this field is not specified, then all of the objects within the
          source will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilePathFilter'
      incrementalSnapshotUponRestart:
        description: |-
          If true, performs an incremental backup after server restarts. Otherwise
          a full backup is done. NOTE: This is applicable only to Windows servers.
          If not set, default value is false.
        type: boolean
        x-go-name: IncrementalSnapshotUponRestart
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PhysicalFileBackupParams:
    description: Message to capture params when backing up files on a Physical source.
    type: object
    title: Physical File Backup Parameters.
    properties:
      backupPathInfoVec:
        description: Specifies the paths to backup on the Physical source.
        type: array
        items:
          $ref: '#/definitions/PhysicalFileBackupParams_BackupPathInfo'
        x-go-name: BackupPathInfoVec
        x-nullable: true
      metadataFilePath:
        description: |-
          Specifies metadata path on source. This file contains absolute paths of
          files that needs to be backed up on the same source. If this field is
          set, backup_path_info_vec will be ignored.
        type: string
        x-go-name: MetadataFilePath
        x-nullable: true
      skipNestedVolumesVec:
        description: Mount types of nested volumes to be skipped.
        type: array
        items:
          type: string
        x-go-name: SkipNestedVolumesVec
        x-nullable: true
      symlinkFollowNasTarget:
        description: |-
          Specifies whether to follow nas target pointed by symlink.
          Set to true only for windows physical file based job.
        type: boolean
        x-go-name: SymlinkFollowNasTarget
        x-nullable: true
      usesSkipNestedVolumesVec:
        description: |-
          Specifies whether to use skip_nested_volumes_vec to skip nested mounts.
          Before 6.4, BackupPathInfo.skip_nested_volumes boolean was used to skip
          nested volumes. So we use this boolean to support older jobs.
        type: boolean
        x-go-name: UsesSkipNestedVolumesVec
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  PhysicalFileBackupParams_BackupPathInfo:
    description: Describes a set of files rooted under a path that need to be backed
      up.
    type: object
    title: Backup Path Information.
    properties:
      excludePaths:
        description: |-
          A list of absolute paths on the Physical source that should not be
          backed up. Any path that is a descendant of these paths will also be
          skipped.
        type: array
        items:
          type: string
        x-go-name: ExcludePaths
        x-nullable: true
      includePath:
        description: |-
          An absolute path on the Physical source that should be backed up. Any
          path that is a descendant of this path will also be backed up, unless
          (a) it is excluded from backup by exclude_paths below, OR
          (b) it belongs to a volume that is different from the volume
          include_path belongs to and there are no relevant paths in that
          volume being backed up.
        type: string
        x-go-name: IncludePath
        x-nullable: true
      skipNestedVolumes:
        description: |-
          Whether to skip any nested volumes (both local and network) that are
          mounted under 'include_path'. Note that if a path to a nested volume
          is specified as an include_path in another BackupPathInfo entry, that
          path will still get backed up.
        type: boolean
        x-go-name: SkipNestedVolumes
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  PhysicalFileBackupParams_GlobalIncludeExclude:
    description: |-
      Descibes job level includes and excludes. Right now, only supports
      excludes but includes will be added in future.
    type: object
    properties:
      excludeVec:
        description: |-
          Describes exclude vec at job level used in combination with
          to exclude_paths to exclude files.
        type: array
        items:
          type: string
        x-go-name: ExcludeVec
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  PhysicalNodeConfiguration:
    description: Specifies the configuration for a node in the Cluster.
    type: object
    title: Physical Node Configuration.
    properties:
      nodeId:
        description: Specifies the Node ID for this node.
        type: integer
        format: int64
        x-go-name: NodeId
        x-nullable: true
      nodeIp:
        description: Specifies the Node IP address for this node.
        type: string
        x-go-name: NodeIp
        x-nullable: true
      nodeIpmiIp:
        description: Specifies IPMI IP for this node.
        type: string
        x-go-name: NodeIpmiIp
        x-nullable: true
      useAsComputeNode:
        description: Specifies whether to use the Node for compute only.
        type: boolean
        x-go-name: UseAsComputeNode
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PhysicalProtectionSource:
    description: Specifies a Protection Source in a Physical environment.
    type: object
    title: Physical Protection Source.
    properties:
      agents:
        description: |-
          Array of Agents on the Physical Protection Source.

          Specifiles the agents running on the Physical Protection Source and the
          status information.
        type: array
        items:
          $ref: '#/definitions/AgentInformation'
        x-go-name: Agents
        x-nullable: true
      hostName:
        description: Specifies the hostname.
        type: string
        x-go-name: HostName
        x-nullable: true
      hostType:
        description: |-
          Specifies the environment type for the host.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      id:
        description: |-
          Specifies a unique id of a Physical Protection Source.
          The id is unique across Cohesity Clusters.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      memorySizeBytes:
        description: Specifies the total memory on the host in bytes.
        type: integer
        format: int64
        x-go-name: MemorySizeBytes
        x-nullable: true
      name:
        description: Specifies a human readable name of the Protection Source.
        type: string
        x-go-name: Name
        x-nullable: true
      networkingInfo:
        description: |-
          Cached networking info. This establishes physical-->agent linkage for
          the Cluster case.
        x-nullable: true
        $ref: '#/definitions/NetworkingInformation'
      numProcessors:
        description: Specifies the number of processors on the host.
        type: integer
        format: int64
        x-go-name: NumProcessors
        x-nullable: true
      osName:
        description: Specifies a human readable name of the OS of the Protection Source.
        type: string
        x-go-name: OsName
        x-nullable: true
      type:
        description: |-
          Specifies the type of managed Object in a Physical Protection Source.
          'kGroup' indicates the EH container.
          'kHost' indicates a single physical server.
          'kWindowsCluster' indicates a Microsoft Windows cluster.
          'kOracleRACCluster' indicates an Oracle Real Application Cluster(RAC).
          'kOracleAPCluster' indicates an Oracle Active-Passive Cluster.
        type: string
        enum:
        - kGroup
        - kHost
        - kWindowsCluster
        - kOracleRACCluster
        - kOracleAPCluster
        x-go-name: Type
        x-nullable: true
      vcsVersion:
        description: Specifies cluster version for VCS host.
        type: string
        x-go-name: VcsVersion
        x-nullable: true
      volumes:
        description: |-
          Array of Physical Volumes.

          Specifies the volumes available on the physical host.
          These fields are populated only for the kPhysicalHost type.
        type: array
        items:
          $ref: '#/definitions/PhysicalVolume'
        x-go-name: Volumes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PhysicalSnapshotParams:
    description: |-
      This message contains params that controls the snapshot process for a
      physical host.
    type: object
    properties:
      fetchSnapshotMetadataDisabled:
        description: Whether fetching and storing of snapshot metadata was disabled.
        type: boolean
        x-go-name: FetchSnapshotMetadataDisabled
        x-nullable: true
      notifyBackupCompleteDisabled:
        description: Whether notify backup complete step was disabled.
        type: boolean
        x-go-name: NotifyBackupCompleteDisabled
        x-nullable: true
      vssCopyOnlyBackup:
        description: If copy_only_backup option is requrested at the time of the snapshot.
        type: boolean
        x-go-name: VssCopyOnlyBackup
        x-nullable: true
      vssExcludedWriters:
        description: List of VSS writers that were excluded.
        type: array
        items:
          type: string
        x-go-name: VssExcludedWriters
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  PhysicalSpecialParameters:
    description: |-
      Specifies additional special settings applicable for a Protection Source
      of 'kPhysical' type in a Protection Job.
    type: object
    title: Physical Source Special Job Parameters.
    properties:
      applicationParameters:
        description: |-
          Specifies parameters that are related to applications running on the
          Protection Source.
        x-nullable: true
        $ref: '#/definitions/ApplicationParameters'
      enableSystemBackup:
        description: |-
          Specifies whether to allow system backup using 3rd party tools installed
          on the Protection Host. System backups are used for doing bare metal
          recovery later. This field is applicable only for System backups.
        type: boolean
        x-go-name: EnableSystemBackup
        x-nullable: true
      filePaths:
        description: |-
          Array of File Paths to Back Up.

          Specifies a list of directories or files to protect in a
          Physical Server.
        type: array
        items:
          $ref: '#/definitions/FilePathParameters'
        x-go-name: FilePaths
        x-nullable: true
      metadataFilePath:
        description: |-
          Specifies metadata path on source. This file contains absolute paths of
          files that needs to be backed up on the same source.
        type: string
        x-go-name: MetadataFilePath
        x-nullable: true
      skipNestedVolumesVec:
        description: Specifies mounttypes of nested volumes to be skipped.
        type: array
        items:
          type: string
        x-go-name: SkipNestedVolumesVec
        x-nullable: true
      usesSkipNestedVolumesVec:
        description: Specifies whether to use SkipNestedVolumes vec to skip nested
          mounts.
        type: boolean
        x-go-name: UsesSkipNestedVolumesVec
        x-nullable: true
      volumeGuid:
        description: |-
          Array of Mounted Volumes to Back Up.

          Specifies the subset of mounted volumes to protect in
          a Physical Server. If not specified, all mounted volumes on a
          Physical Server are protected.
        type: array
        items:
          type: string
        x-go-name: VolumeGuid
        x-nullable: true
      windowsParameters:
        description: Specifies parameters applicable only to Windows hosts.
        x-nullable: true
        $ref: '#/definitions/WindowsHostSnapshotParameters'
    x-go-package: cohesity/iris/server/data/public
  PhysicalVolume:
    description: Specifies volume information about a Physical Protection Source.
    type: object
    title: Physical Volume.
    properties:
      devicePath:
        description: Specifies the path to the device that hosts the volume locally.
        type: string
        x-go-name: DevicePath
        x-nullable: true
      guid:
        description: Specifies an id for the Physical Volume.
        type: string
        x-go-name: Guid
        x-nullable: true
      isBootVolume:
        description: Specifies whether the volume is boot volume.
        type: boolean
        x-go-name: IsBootVolume
        x-nullable: true
      isExtendedAttributesSupported:
        description: |-
          Specifies whether this volume supports extended attributes (like ACLs)
          when performing file backups.
        type: boolean
        x-go-name: IsExtendedAttributesSupported
        x-nullable: true
      isProtected:
        description: Specifies if a volume is protected by a Job.
        type: boolean
        x-go-name: IsProtected
        x-nullable: true
      isSharedVolume:
        description: Specifies whether the volume is shared volume.
        type: boolean
        x-go-name: IsSharedVolume
        x-nullable: true
      label:
        description: |-
          Specifies a volume label that can be used for displaying additional
          identifying information about a volume.
        type: string
        x-go-name: Label
        x-nullable: true
      logicalSizeBytes:
        description: |-
          Specifies the logical size of the volume in bytes that is
          not reduced by change-block tracking, compression and deduplication.
        type: integer
        format: uint64
        x-go-name: LogicalSizeBytes
        x-nullable: true
      mountPoints:
        description: |-
          Array of Mount Points.

          Specifies the mount points where the volume is mounted,
          for example: 'C:\', '/mnt/foo' etc.
        type: array
        items:
          type: string
        x-go-name: MountPoints
        x-nullable: true
      mountType:
        description: Specifies mount type of volume e.g. nfs, autofs, ext4 etc.
        type: string
        x-go-name: MountType
        x-nullable: true
      networkPath:
        description: |-
          Specifies the full path to connect to the network attached volume.
          For example, (IP or hostname):/path/to/share for NFS volumes).
        type: string
        x-go-name: NetworkPath
        x-nullable: true
      usedSizeBytes:
        description: Specifies the size used by the volume in bytes.
        type: integer
        format: uint64
        x-go-name: UsedSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PostgresNodeInfo:
    description: |-
      Specifies the Node Id, IP and port information to access the postgres
      database.
    type: object
    title: Postgres Node Information.
    properties:
      defaultPassword:
        description: Specifies the default password to access the postgres database.
        type: string
        x-go-name: DefaultPassword
        x-nullable: true
      defaultUsername:
        description: Specifies the default username to access the postgres database.
        type: string
        x-go-name: DefaultUsername
        x-nullable: true
      nodeId:
        description: Specifies the id of the node where postgres database is running.
        type: integer
        format: int64
        x-go-name: NodeId
        x-nullable: true
      nodeIp:
        description: Specifies the ip of the node where postgres database is running.
        type: string
        x-go-name: NodeIp
        x-nullable: true
      port:
        description: Specifies the information where postgres database is running.
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PowerStateConfigProto:
    type: object
    title: Proto to specify the power state (i.e, power on or power off) of an object.
    properties:
      powerOn:
        type: boolean
        x-go-name: PowerOn
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  Preferences:
    type: object
    title: User's preferences.
    properties:
      locale:
        description: |-
          Locale reflects the language settings of the user. Populate using the
          user preferences stored in Scribe for the user wherever needed.
        type: string
        x-go-name: Locale
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PreferredDomainController:
    description: Specifies Preferred domain controllers (DCs) for an Active Directory
      domain.
    type: object
    title: Update Preferred Domain Controller Request.
    properties:
      domainControllers:
        description: |-
          List of Domain controllers DCs in FQDN format that are mapped to an Active
          Directory Domain name.
        type: array
        items:
          type: string
        x-go-name: DomainControllers
        x-nullable: true
      domainName:
        description: Specifies the Domain name or the trusted domain of an Active
          Directory.
        type: string
        x-go-name: DomainName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Principal:
    description: Specifies information about a single Principal.
    type: object
    title: Principal.
    properties:
      domain:
        description: |-
          Specifies the domain name of the where the principal' account is
          maintained.
        type: string
        x-go-name: Domain
        x-nullable: true
      fullName:
        description: Specifies the full name (first and last names) of the principal.
        type: string
        x-go-name: FullName
        x-nullable: true
      objectClass:
        description: |-
          Specifies the object class of the principal (either 'kGroup' or 'kUser').
          'kUser' specifies a user object class.
          'kGroup' specifies a group object class.
          'kComputer' specifies a computer object class.
          'kWellKnownPrincipal' specifies a well known principal.
        type: string
        enum:
        - kUser
        - kGroup
        - kComputer
        - kWellKnownPrincipal
        x-go-name: ObjectClass
        x-nullable: true
      principalName:
        description: Specifies the name of the principal.
        type: string
        x-go-name: PrincipalName
        x-nullable: true
      sid:
        description: Specifies the unique Security id (SID) of the principal.
        type: string
        x-go-name: Sid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PrivilegeInfo:
    description: |-
      Specifies details about a privilege such as the category,
      description, name, etc.
    type: object
    title: Privilege Information.
    properties:
      PrivilegeId:
        description: |-
          Specifies unique id for a privilege. This number must be unique when
          creating a new privilege.
          Type for unique privilege Id values.
          All below enum values specify a value for all uniquely defined
          privileges in Cohesity.
        type: string
        enum:
        - kPrincipalView
        - kPrincipalModify
        - kAppLaunch
        - kAppsManagement
        - kOrganizationView
        - kOrganizationModify
        - kOrganizationImpersonate
        - kCloneView
        - kCloneModify
        - kClusterView
        - kClusterModify
        - kClusterCreate
        - kClusterSupport
        - kClusterUpgrade
        - kClusterRemoteView
        - kClusterRemoteModify
        - kClusterExternalTargetView
        - kClusterExternalTargetModify
        - kClusterAudit
        - kAlertView
        - kAlertModify
        - kVlanView
        - kVlanModify
        - kHybridExtenderView
        - kHybridExtenderDownload
        - kAdLdapView
        - kAdLdapModify
        - kSchedulerView
        - kSchedulerModify
        - kProtectionView
        - kProtectionModify
        - kProtectionJobOperate
        - kProtectionSourceModify
        - kProtectionPolicyView
        - kProtectionPolicyModify
        - kRestoreView
        - kRestoreModify
        - kRestoreDownload
        - kRemoteRestore
        - kStorageView
        - kStorageModify
        - kStorageDomainView
        - kStorageDomainModify
        - kAnalyticsView
        - kAnalyticsModify
        - kReportsView
        - kMcmModify
        - kDataSecurity
        - kSmbBackup
        - kSmbRestore
        - kSmbTakeOwnership
        - kSmbAuditing
        - kMcmUnregister
        - kMcmUpgrade
        - kMcmModifySuperAdmin
        - kMcmViewSuperAdmin
        - kMcmModifyCohesityAdmin
        - kMcmViewCohesityAdmin
        - kObjectSearch
        - kFileDatalockExpiryTimeDecrease
        x-nullable: true
      category:
        description: Specifies a category for the privilege such as 'Access Management'.
        type: string
        x-go-name: Category
        x-nullable: true
      description:
        description: Specifies a description defining what the privilege provides.
        type: string
        x-go-name: Description
        x-nullable: true
      isAvailableOnHelios:
        description: Specifies that this privilege is available for Helios operations.
        type: boolean
        x-go-name: IsAvailableOnHelios
        x-nullable: true
      isCustomRoleDefault:
        description: Specifies if this privilege is automatically assigned to custom
          roles.
        type: boolean
        x-go-name: IsCustomRoleDefault
        x-nullable: true
      isSpecial:
        description: |-
          Specifies if this privilege is automatically assigned to the default
          System Admin user called 'admin'.
          If true, the privilege is NOT assigned to the default System Admin user
          called 'admin'.
          By default, privileges are automatically assigned to the default System
          Admin user called 'admin'.
        type: boolean
        x-go-name: IsSpecial
        x-nullable: true
      isViewOnly:
        description: Specifies if privilege is view-only privilege that cannot make
          changes.
        type: boolean
        x-go-name: IsViewOnly
        x-nullable: true
      label:
        description: |-
          Specifies the label for the privilege as displayed on the Cohesity
          Dashboard such as 'Access Management View'.
        type: string
        x-go-name: Label
        x-nullable: true
      name:
        description: Specifies the Cluster name for the privilege such as PRINCIPAL_VIEW.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProductModelInterfaceTuple:
    description: Specifies a group of product model and interface set.
    type: object
    title: Product model and interface tuple.
    properties:
      ifaceName:
        description: Specifies the name of the interface.
        type: string
        x-go-name: IfaceName
        x-nullable: true
      productModelName:
        description: Specifies the product model name.
        type: string
        x-go-name: ProductModelName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectObjectParameters:
    description: Specifies the parameters to protect an object.
    type: object
    title: Protect Object Parameters
    required:
    - rpoPolicyId
    - protectionSourceIds
    properties:
      protectionSourceEnvironment:
        description: |-
          Specifies the environment type of the Protection Source object.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: ProtectionSourceEnvironment
        x-nullable: true
      protectionSourceIds:
        description: Specifies the ids of the Protection Sources to protect.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionSourceIds
        x-nullable: true
      rpoPolicyId:
        description: Specifies the Rpo policy id.
        type: string
        x-go-name: RpoPolicyId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectedObject:
    description: Provides details about a Protected Object.
    type: object
    title: Protected Object.
    properties:
      jobId:
        description: Specifies the id of the jobs protecting this Protection Source.
        x-nullable: true
        $ref: '#/definitions/UniversalId'
      protectionFauilureReason:
        description: |-
          If protection fails then specifies why the protection failed on this
          object.
        type: string
        x-go-name: ProtectionFailureReason
        x-nullable: true
      protectionSourceId:
        description: Specifies the id of the Protection Source.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectedObjectPrivileges:
    description: |-
      ProtectedObjectPrivileges specifies which protected objects are allowed to
      be accessed by an app instance.
    type: object
    title: Protected objects privileges.
    properties:
      protectedObjectsprivilegesType:
        description: |-
          Specifies if all, none or specific protected objects are allowed to be
          accessed.
          Specifies if all, none or specific protected objects are allowed to be
          accessed.
          kNone - None of the protected objects have access.
          kAll - All the protected objects have access.
          kSpecific - Only specific protected objects have access.
        type: string
        enum:
        - kNone
        - kAll
        - kSpecific
        x-go-name: ProtectedObjectsPrivilegesType
        x-nullable: true
      protectionSourceIds:
        description: |-
          Specifies the ids of the protection sources which are allowed to be
          accessed in case the privilege type is kSpecific.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionSourceIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectedObjectsByEnv:
    description: Number of Protected Objects by Type.
    type: object
    title: Protected Objects By Enviournment.
    properties:
      envType:
        description: Environment Type.
        type: string
        x-go-name: EnvType
        x-nullable: true
      protectedCount:
        description: Number of Protected Objects.
        type: integer
        format: int32
        x-go-name: ProtectedCount
        x-nullable: true
      protectedSizeBytes:
        description: Size of Protected Objects.
        type: integer
        format: int64
        x-go-name: ProtectedSizeBytes
        x-nullable: true
      unprotectedCount:
        description: Number of Unprotected Objects.
        type: integer
        format: int32
        x-go-name: UnprotectedCount
        x-nullable: true
      unprotectedSizeBytes:
        description: Size of Unprotected Objects.
        type: integer
        format: int64
        x-go-name: UnprotectedSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectedObjectsSummary:
    description: Specifies the statistics of the protected objects on the cluster.
    type: object
    title: Protected Objects Summary.
    properties:
      numObjectsProtected:
        description: Specifies the total number of protected objects.
        type: integer
        format: int64
        x-go-name: NumObjectsProtected
        x-nullable: true
      numObjectsUnprotected:
        description: Specifies the total number of unprotected objects.
        type: integer
        format: int64
        x-go-name: NumObjectsUnprotected
        x-nullable: true
      protectedSizeBytes:
        description: Specifies the total size of protected objects in bytes.
        type: integer
        format: int64
        x-go-name: protectedSizeBytes
        x-nullable: true
      statsByEnv:
        description: Specifies the stats of Protected objects by environment.
        type: array
        items:
          $ref: '#/definitions/ProtectedObjectsSummaryByEnv'
        x-go-name: StatsByEnv
      unprotectedSizeBytes:
        description: Specifies the total size of unprotected objects in bytes.
        type: integer
        format: int64
        x-go-name: unprotectedSizeBytes
        x-nullable: true
  ProtectedObjectsSummaryByEnv:
    description: Specifies the protection summary of given environment type.
    type: object
    title: Protected Object Summary by Environment.
    properties:
      environment:
        description: Specifies the environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kVCD
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kAD
        - kAWSSnapshotManager
        x-go-name: Environment
        x-nullable: true
      numObjectsProtected:
        description: Specifies the total number of protected objects.
        type: integer
        format: int64
        x-go-name: NumObjectsProtected
        x-nullable: true
      numObjectsUnprotected:
        description: Specifies the total number of unprotected objects.
        type: integer
        format: int64
        x-go-name: NumObjectsUnprotected
        x-nullable: true
      protectedSizeBytes:
        description: Specifies the total size of protected objects in bytes.
        type: integer
        format: int64
        x-go-name: protectedSizeBytes
        x-nullable: true
      unprotectedSizeBytes:
        description: Specifies the total size of unprotected objects in bytes.
        type: integer
        format: int64
        x-go-name: unprotectedSizeBytes
        x-nullable: true
  ProtectedObjectsTile:
    description: Protected Objects information.
    type: object
    title: Protected Objects Tile.
    properties:
      objectsProtected:
        description: Protected Objects breakdown by object type.
        type: array
        items:
          $ref: '#/definitions/ProtectedObjectsByEnv'
        x-go-name: ObjectsProtected
        x-nullable: true
      protectedCount:
        description: Number of Protected Objects.
        type: integer
        format: int32
        x-go-name: ProtectedCount
        x-nullable: true
      protectedSizeBytes:
        description: Size of Protected Objects.
        type: integer
        format: int64
        x-go-name: ProtectedSizeBytes
        x-nullable: true
      unprotectedCount:
        description: Number of Unprotected Objects.
        type: integer
        format: int32
        x-go-name: UnprotectedCount
        x-nullable: true
      unprotectedSizeBytes:
        description: Size of Unprotected Objects.
        type: integer
        format: int64
        x-go-name: UnprotectedSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectedSourceSummary:
    description: |-
      ProtectedSourceSummary is the summary of all the Protection Runs for the
      Protection Jobs using the Specified Protection Policy. This is only
      populated for a policy of type kRPO.
    type: object
    properties:
      backupRun:
        description: |-
          Specifies details about the last Backup task.
          A Backup task captures the original backup snapshots.
        x-nullable: true
        $ref: '#/definitions/BackupRun'
      copyRuns:
        description: |-
          Specifies details about the Copy tasks of the Job Run.
          A Copy task copies the captured snapshots to an external target
          or a Remote Cohesity Cluster.
        type: array
        items:
          $ref: '#/definitions/CopyRun'
        x-go-name: CopyRuns
        x-nullable: true
      isPaused:
        description: Specifies the status of the backup job.
        type: boolean
        x-go-name: IsPaused
        x-nullable: true
      nextProtectionRunTimeUsecs:
        description: |-
          Specifies the time at which the next Protection Run is scheduled for the
          given Protection Source in Unix epoch Time (microseconds).
        type: integer
        format: int64
        x-go-name: NextProtectionRunTimeUsecs
        x-nullable: true
      protectedSourceUid:
        description: Specifies the globally unique id of the Protected Source.
        x-nullable: true
        $ref: '#/definitions/UniversalId'
      protectionSource:
        description: Specifies the Protection Source summary information.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      sourceParameters:
        description: Specifies additional special settings for a single Protected
          Source.
        type: array
        items:
          $ref: '#/definitions/SourceSpecialParameter'
        x-go-name: SourceParameters
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectedVmInfo:
    description: Specifies the Protection Jobs information of a VM.
    type: object
    title: Protected VM Information.
    properties:
      protectionJobs:
        description: Specifies the list of Protection Jobs that protect the VM.
        type: array
        items:
          $ref: '#/definitions/ProtectionJob'
        x-go-name: ProtectionJobs
        x-nullable: true
      protectionPolicies:
        description: Specifies the list of Policies that are used by the Protection
          Jobs.
        type: array
        items:
          $ref: '#/definitions/ProtectionPolicy'
        x-go-name: ProtectionPolicies
        x-nullable: true
      protectionSource:
        description: Specifies a VM that is being protected on the Cohesity Cluster.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      stats:
        description: Specifies the protection stats of VM.
        allOf:
        - $ref: '#/definitions/ProtectionSummary'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionInfo:
    description: dataLocation defines data location related information.
    type: object
    title: Protection Information.
    properties:
      endTimeUsecs:
        description: Specifies the end time for object retention.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      location:
        description: Specifies the location of the object.
        type: string
        x-go-name: Location
        x-nullable: true
      policyId:
        description: Specifies the id of the policy.
        type: string
        x-go-name: PolicyId
        x-nullable: true
      protectionJobId:
        description: Specifies the id of the protection job.
        type: integer
        format: int64
        x-go-name: ProtectionJobId
        x-nullable: true
      protectionJobName:
        description: Specifies the protection job name which protects this object.
        type: string
        x-go-name: ProtectionJobName
        x-nullable: true
      retentionPeriod:
        description: Specifies the retention period.
        type: integer
        format: int64
        x-go-name: RetentionPeriod
        x-nullable: true
      startTimeUsecs:
        description: Specifies the start time for object retention.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      storageDomain:
        description: Specifies the storage domain name.
        type: string
        x-go-name: StorageDomain
        x-nullable: true
      totalSnapshots:
        description: Specifies the total number of snapshots.
        type: integer
        format: int64
        x-go-name: TotalSnapshots
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionJob:
    description: Provides details about a Protection Job.
    type: object
    title: Protection Job.
    required:
    - name
    - policyId
    - viewBoxId
    - sourceSpecialParameters
    properties:
      LeverageSanTransport:
        description: |-
          If this field is set to true, then the backup for the objects will be
          performed using dedicated storage area network (SAN) instead of LAN or
          managment network.
        type: boolean
        x-nullable: true
      abortInBlackoutPeriod:
        description: |-
          If true, the Cohesity Cluster aborts any currently executing Job Runs
          of this Protection Job when a blackout period specified for this Job
          starts, even if the Job Run started before the blackout
          period began.
          If false, a Job Run continues to execute, if the Job Run started before
          the blackout period starts.
        type: boolean
        x-go-name: AbortInBlackoutPeriod
        x-nullable: true
      alertingConfig:
        description: |-
          Alerting configuration can be used to specify optional details for the
          alerts triggered by this job.
        x-nullable: true
        $ref: '#/definitions/AlertingConfig'
      alertingPolicy:
        description: |-
          Array of Job Events.

          During Job Runs, the following Job Events are generated:
          1) Job succeeds 2) Job fails
          3) Job violates the SLA
          These Job Events can cause Alerts to be generated.
          'kSuccess' means the Protection Job succeeded.
          'kFailure' means the Protection Job failed.
          'kSlaViolation' means the Protection Job took longer than the time period
          specified in the SLA.
        type: array
        items:
          type: string
          enum:
          - kSuccess
          - kFailure
          - kSlaViolation
        x-go-name: AlertingPolicy
        x-nullable: true
      cloudParameters:
        description: Specifies Cloud specific parameters applicable in various scenarios.
        x-nullable: true
        $ref: '#/definitions/CloudParameters'
      continueOnQuiesceFailure:
        description: Whether to continue backing up on quiesce failure.
        type: boolean
        x-go-name: ContinueOnQuiesceFailure
        x-nullable: true
      createRemoteView:
        description: Specifies whether to create a remote view name to use for view
          overwrite.
        type: boolean
        x-go-name: CreateRemoteView
        x-nullable: true
      creationTimeUsecs:
        description: Specifies the time when the Protection Job was created.
        type: integer
        format: int64
        x-go-name: CreationTimeUsecs
        x-nullable: true
      dataMigrationPolicy:
        description: |-
          Specifies policy for a data migration job. It contains inline schedule to
          run the data migration job. In addition to this, it also contains
          retention policy that should be applied to files after they have been
          moved to cohesity cluster. It is present only in case data migration job.
        x-nullable: true
        $ref: '#/definitions/DataMigrationPolicy'
      dedupDisabledSourceIds:
        description: |-
          List of source ids for which source side dedup is disabled from the backup
          job.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: DedupDisabledSourceIds
        x-nullable: true
      description:
        description: Specifies a text description about the Protection Job.
        type: string
        x-go-name: Description
        x-nullable: true
      endTimeUsecs:
        description: |-
          Specifies the epoch time (in microseconds) after which the Protection Job
          becomes dormant.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      environment:
        description: |-
          Specifies the environment type (such as kVMware or kSQL)
          of the Protection Source this Job is protecting.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      environmentParameters:
        description: |-
          Specifies additional settings that are applicable to all Sources in
          the Protection Job that are of specified environment type. For example,
          you can specify to exclude a disk from backup for all 'kVMware'
          Protection Sources in the Protection Job. If a setting conflicts with
          sourceSpecialParameters, then sourceSpecialParameters will be used.
        x-nullable: true
        $ref: '#/definitions/EnvironmentTypeJobParameters'
      excludeSourceIds:
        description: |-
          Array of Excluded Source Objects.

          List of Object ids from a Protection Source that should not be
          protected and are excluded from being backed up by the Protection Job.
          Leaf and non-leaf Objects may be in this list and an Object in this list
          must have an ancestor in the sourceId list.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ExcludeSourceIds
        x-nullable: true
      excludeVmTagIds:
        description: |-
          Array of Arrays of VM Tag Ids that Specify VMs to Exclude.

          Optionally specify a list of VMs to exclude from protecting by listing
          Protection Source ids of VM Tags in this two dimensional array.
          Using this two dimensional array of Tag ids, the Cluster
          generates a list of VMs to exclude from protecting,
          which are derived from intersections of the inner arrays
          and union of the outer array, as shown by the following example.
          For example a Datacenter is selected to be protected but you want to
          exclude all the 'Former Employees' VMs in the East and West but
          keep all the VMs for 'Former Employees' in the South which are
          also stored in this Datacenter, by specifying the
          following tag id array:
          [ [1000, 2221], [1000, 3031] ],
          where 1000 is the 'Former Employee' VM Tag id,
          2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id.
          The first inner array [1000, 2221] produces a list of VMs that are
          both tagged with 'Former Employees' and 'East' (an intersection).
          The second inner array [1000, 3031] produces a list of VMs that are both
          tagged with 'Former Employees' and 'West' (an intersection).
          The outer array combines the list of VMs from the two inner
          arrays. The list of resulting VMs are excluded from being protected
          this Job.
        type: array
        items:
          type: array
          items:
            type: integer
            format: int64
        x-go-name: ExcludeVmTagIds
        x-nullable: true
      fullProtectionSlaTimeMins:
        description: |-
          If specified, this setting is number of minutes that a Job Run
          of a Full (no CBT) backup schedule is expected to complete, which is
          known as a Service-Level Agreement (SLA).
          A SLA violation is reported when the run time of a Job Run exceeds
          the SLA time period specified for this backup schedule.
        type: integer
        format: int64
        x-go-name: FullProtectionSlaTimeMins
        x-nullable: true
      fullProtectionStartTime:
        description: |-
          Specifies the time of day to start the Full Protection Schedule.
          This is optional and only applicable if the Protection Policy defines
          a monthly or a daily Full (no CBT) Protection Schedule.
          Default value is 02:00 AM.
          deprecated: true
        title: Full (no CBT) Protection Schedule Start Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
      id:
        description: Specifies an id for the Protection Job.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      incrementalProtectionSlaTimeMins:
        description: |-
          If specified, this setting is number of minutes that a Job Run
          of a CBT-based backup schedule is expected to complete, which
          is known as a Service-Level Agreement (SLA).
          A SLA violation is reported when the run time of a Job Run exceeds
          the SLA time period specified for this backup schedule.
        type: integer
        format: int64
        x-go-name: IncrementalProtectionSlaTimeMins
        x-nullable: true
      incrementalProtectionStartTime:
        description: |-
          Specifies the time of day to start the CBT-based Protection Schedule.
          This is optional and only applicable if the Protection Policy defines
          a monthly or a daily CBT-based Protection Schedule.
          Default value is 02:00 AM.
          deprecated: true
        title: CBT-based Protection Schedule Start Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
      indexingPolicy:
        description: |-
          Specifies the settings for indexing files found in an Object
          (such as a VM) so these files can be searched and recovered.
          In addition, it specifies inclusion and exclusion rules that determine
          the directories to index.
        x-nullable: true
        $ref: '#/definitions/IndexingPolicy'
      isActive:
        description: |-
          Indicates if the current state of the Protection Job is Active
          or Inactive.
          When you create a Protection Job on a Primary Cluster
          with a replication schedule, the Cohesity Cluster creates an
          Inactive copy of the Job on the Remote Cluster.
          In addition, when an Active and running Job is deactivated,
          the Job becomes Inactive.
        type: boolean
        x-go-name: IsActive
        x-nullable: true
      isDeleted:
        description: |-
          Equals 'true' if the Protection Job was deleted but some Snapshots
          are still associated with this Job. If 'true', no new Job Runs are started
          by this Protection Job.
        type: boolean
        x-go-name: IsDeleted
        x-nullable: true
      isDirectArchiveEnabled:
        description: Specifies if this is a direct archive backup job.
        type: boolean
        x-go-name: IsDirectArchiveEnabled
        x-nullable: true
      isNativeFormat:
        description: |-
          Specifies if native format should be used for archiving, applicable for
          only direct archive jobs.
        type: boolean
        x-go-name: IsNativeFormat
        x-nullable: true
      isPaused:
        description: |-
          Indicates if the Protection Job is paused, which means that no new
          Job Runs are started but any existing Job Runs continue to
          execute.
        type: boolean
        x-go-name: IsPaused
        x-nullable: true
      lastRun:
        description: |-
          Specifies the last run of the Protection Job if any.
          This field is set only if it was requested.
        x-nullable: true
        $ref: '#/definitions/ProtectionRunInstance'
      leverageStorageSnapshots:
        description: |-
          Specifies whether to leverage the storage array based snapshots for this
          backup job. To leverage storage snapshots, the storage array has to be
          registered as a source. If storage based snapshots can not be taken, job
          will fallback to the default backup method.
        type: boolean
        x-go-name: LeverageStorageSnapshots
        x-nullable: true
      leverageStorageSnapshotsForHyperflex:
        description: Specifies whether to leverage Hyperflex as the storage snapshot
          array
        type: boolean
        x-go-name: LeverageStorageSnapshotsForHyperflex
        x-nullable: true
      modificationTimeUsecs:
        description: Specifies the last time this Job was updated.
        type: integer
        format: int64
        x-go-name: ModificationTimeUsecs
        x-nullable: true
      modifiedByUser:
        description: Specifies the last Cohesity user who updated this Job.
        type: string
        x-go-name: ModifiedByUser
        x-nullable: true
      name:
        description: Specifies the name of the Protection Job.
        type: string
        x-go-name: Name
        x-nullable: true
      parentSourceId:
        description: |-
          Specifies the id of the registered Protection Source that is the
          parent of the Objects that may be protected by this Job.
          For example when a vCenter Server is registered on a Cohesity Cluster,
          the Cohesity Cluster assigns a unique id to this field that represents
          the vCenter Server.
        type: integer
        format: int64
        x-go-name: ParentSourceId
        x-nullable: true
      performSourceSideDedup:
        description: Specifies whether source side dedupe should be performed or not.
        type: boolean
        x-go-name: PerformSourceSideDedup
        x-nullable: true
      policyAppliedTimeMsecs:
        description: |-
          Specifies the epoch time (in milliseconds) when the
          associated Policy was last applied to this Job.
          This is used to determine if the Policy has changed since it
          was last applied to this Job.
        type: integer
        format: int64
        x-go-name: PolicyAppliedTimeMsecs
        x-nullable: true
      policyId:
        description: |-
          Specifies the unique id of the Protection Policy associated with
          the Protection Job. The Policy provides retry settings,
          Protection Schedules, Priority, SLA, etc.
          The Job defines the Storage Domain (View Box), the Objects to Protect
          (if applicable), Start Time, Indexing settings, etc.
        type: string
        x-go-name: PolicyId
        x-nullable: true
      postBackupScript:
        description: |-
          Specifies the script associated with the backup job. This field must be
          specified for 'kPhysical' jobs. This script will be executed post backup
          run.
        allOf:
        - $ref: '#/definitions/BackupScript'
        x-nullable: true
      preBackupScript:
        description: |-
          Specifies the script associated with the backup job. This field must be
          specified for 'kPhysical' jobs. This script will be executed pre backup
          run. The 'remoteScript' field will be used for remote adapter jobs and
          'preBackupScript' field will be used for 'kPhysical' jobs.
        allOf:
        - $ref: '#/definitions/BackupScript'
        x-nullable: true
      priority:
        description: |-
          Specifies the priority of execution for a Protection Job.
          Cohesity supports concurrent backups but if the number of Jobs exceeds
          the ability to process Jobs, the specified priority determines the
          execution Job priority.
          This field also specifies the replication priority.
          'kLow' indicates lowest execution priority for a Protection job.
          'kMedium' indicates medium execution priority for a Protection job.
          'kHigh' indicates highest execution priority for a Protection job.
        type: string
        enum:
        - kLow
        - kMedium
        - kHigh
        x-go-name: Priority
        x-nullable: true
      qosType:
        description: |-
          Specifies the QoS policy type to use for this Protection Job.
          'kBackupHDD' indicates the Cohesity Cluster writes data directly to
          the HDD tier for this Protection Job. This is the recommended setting.
          'kBackupSSD' indicates the Cohesity Cluster writes data directly to
          the SSD tier for this Protection Job. Only specify this policy if
          you need fast ingest speed for a small number of Protection Jobs.
        type: string
        enum:
        - kBackupHDD
        - kBackupSSD
        x-go-name: QosType
        x-nullable: true
      quiesce:
        description: |-
          Indicates if the App-Consistent option is enabled for this Job.
          If the option is enabled, the Cohesity Cluster quiesces
          the file system and applications before taking
          Application-Consistent Snapshots. VMware Tools must be installed
          on the guest Operating System.
        type: boolean
        x-go-name: Quiesce
        x-nullable: true
      remoteScript:
        description: |-
          For a Remote Adapter 'kPuppeteer' Job, this field specifies the
          settings about the remote script that will be executed by this Job.
          Only specify this field for Remote Adapter 'kPuppeteer' Jobs.
        allOf:
        - $ref: '#/definitions/RemoteJobScript'
        x-nullable: true
      remoteViewName:
        description: Specifies the remote view name to use for view overwrite.
        type: string
        x-go-name: RemoteViewName
        x-nullable: true
      sourceIds:
        description: |-
          Array of Protected Source Objects.

          Specifies the list of Object ids from the Protection Source to
          protect (or back up) by the Protection Job.
          An Object in this list may be descendant of another Object in this list.
          For example a Datacenter could be selected but its child Host excluded.
          However, a child VM under the Host could be explicitly
          selected to be protected. Both the Datacenter and the VM are listed.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: SourceIds
        x-nullable: true
      sourceSpecialParameters:
        description: |-
          Array of Special Source Parameters.

          Specifies additional settings that can apply to a subset of the
          Sources listed in the Protection Job. For example, you can specify a list
          of files and folders to protect instead of protecting the entire Physical
          Server. If this field's setting conflicts with environmentParameters,
          then this setting will be used. Specific volume selections must be passed
          in here to take effect.
        type: array
        items:
          $ref: '#/definitions/SourceSpecialParameter'
        x-go-name: SourceSpecialParameters
        x-nullable: true
      startTime:
        description: |-
          Specifies the time of day to start the Protection Schedule.
          This is optional and only applicable if the Protection Policy defines
          a monthly or a daily Protection Schedule.
          Default value is 02:00 AM.
        title: Protection Schedule Start Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
      summaryStats:
        description: |-
          Specifies the summary stats of the Protection Job.
          This field is set only if it was requested.
        x-nullable: true
        $ref: '#/definitions/ProtectionJobSummaryStats'
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      timezone:
        description: |-
          Specifies the timezone to use when calculating time for this
          Protection Job such as the Job start time.
          Specify the timezone in the following format: "Area/Location",
          for example: "America/New_York".
        type: string
        x-go-name: Timezone
        x-nullable: true
      uid:
        description: |-
          Specifies a global Protection Job id that is unique across Cohesity
          Clusters.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      userSpecifiedTags:
        description: |-
          Tags associated with the job. User can specify tags/keywords that can
          indexed by Yoda and can be later searched in UI. For example, user can
          create a 'kPuppeteer' job to backup Oracle DB for 'payroll' department.
          User can specify following tags: 'payroll', 'Oracle_DB'.
        type: array
        items:
          type: string
        x-go-name: UserSpecifiedTags
        x-nullable: true
      viewBoxId:
        description: Specifies the Storage Domain (View Box) id where this Job writes
          data.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName:
        description: |-
          For a Remote Adapter 'kPuppeteer' Job or a 'kView' Job, this field
          specifies a View name that should be protected. Specify this field when
          creating a Protection Job for the first time for a View. If this field
          is specified, ParentSourceId, SourceIds, and ExcludeSourceIds should not
          be specified.
        type: string
        x-go-name: ViewName
        x-nullable: true
      vmTagIds:
        description: |-
          Array of Arrays of VMs Tags Ids that Specify VMs to Protect.

          Optionally specify a list of VMs to protect by listing
          Protection Source ids of VM Tags in this two dimensional array.
          Using this two dimensional array of Tag ids, the Cluster
          generates a list of VMs to protect which are derived from
          intersections of the inner arrays and union of the outer array,
          as shown by the following example.
          To protect only 'Eng' VMs in the East and all the VMs in the West,
          specify the following tag id array:
          [ [1101, 2221], [3031] ],
          where 1101 is the 'Eng' VM Tag id, 2221 is the 'East' VM Tag id and
          3031 is the 'West' VM Tag id. The inner array [1101, 2221] produces a
          list of VMs that are both tagged with 'Eng' and 'East'
          (an intersection). The outer array combines the list from the inner
          array with list of VMs tagged with 'West' (a union). The list
          of resulting VMs are protected by this Job.
        type: array
        items:
          type: array
          items:
            type: integer
            format: int64
        x-go-name: VmTagIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionJobAuditTrail:
    description: Specifies the fields for Protection job audit Response.
    type: object
    title: Protection Job Audit Trail.
    properties:
      after:
        description: Specifies the audit logs for Protection Job after change.
        x-nullable: true
        $ref: '#/definitions/ProtectionJob'
      before:
        description: Specifies the audit logs for Protection Job before change.
        x-nullable: true
        $ref: '#/definitions/ProtectionJob'
      changes:
        description: |-
          Specifies the list of changed values in a Protection Job.
          kProtectionJobName implies that protection job has change in the name field
          kProtectionJobDescription implies that protection job has change in the
          description field.
          kProtectionJobSources implies that protection job has change in the
          source field.
          kProtectionJobSchedule implies that protection job has change in the
          schedule field.
          kProtectionJobFullSchedule implies that protection job has change in the
          full schedule field.
          kProtectionJobRetrySettings implies that protection job has change in the
          retry settings.
          kProtectionJobRetentionPolicy implies that protection job has change in the
          retention policy.
          kProtectionJobIndexingPolicy implies that protection job has change in the
          indexing policy.
          kProtectionJobAlertingPolicy implies that protection job has change in the
          alerting policy.
          kProtectionJobPriority implies that protection job has change in the
          alerting policy.
          kProtectionJobQuiesce implies that protection job has change in the
          Quiesce.
          kProtectionJobSla implies that protection job has change in the SLA
          settings.
          kProtectionJobPolicyId implies that protection job has change in the
          poilcy Id settings.
          kProtectionJobTimezone implies that protection job has change in the
          timezone settings.
          kProtectionJobFutureRunsPaused implies that protection job has change in
          the future run settings.
          kProtectionJobFutureRunsResumed implies that protection job has change in
          the future run resume settings.
          kSnapshotTargetPolicy implies that protection job has change in
          the snapshot target policy settings.
          kProtectionJobQOS implies that protection job has change in QOS settings.
          kProtectionJobInvalidField implies that the changed field is invalid.
        type: array
        items:
          type: string
          enum:
          - kProtectionJobName
          - kProtectionJobDescription
          - kProtectionJobSources
          - kProtectionJobSchedule
          - kProtectionJobFullSchedule
          - kProtectionJobRetrySettings
          - kProtectionJobRetentionPolicy
          - kProtectionJobIndexingPolicy
          - kProtectionJobAlertingPolicy
          - kProtectionJobPriority
          - kProtectionJobQuiesce
          - kProtectionJobSla
          - kProtectionJobPolicyId
          - kProtectionJobTimezone
          - kProtectionJobFutureRunsPaused
          - kProtectionJobFutureRunsResumed
          - kSnapshotTargetPolicy
          - kProtectionJobBlackoutWindow
          - kProtectionJobQOS
          - kProtectionJobInvalidField
        x-go-name: Changes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionJobInfo:
    description: Specifies basic information about a Protection Job.
    type: object
    title: Protection Job Info
    properties:
      jobId:
        description: Specifies the id of the Protection Job.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobName:
        description: Specifies the name of the Protection Job.
        type: string
        x-go-name: JobName
        x-nullable: true
      type:
        description: |-
          Specifies the type of the Protection Job such as kView or kPuppeteer.
          'kPuppeteer' refers to a Remote Adapter Job.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionJobRequestBody:
    description: Specifies information about a Protection Job.
    type: object
    title: Protection Job Request.
    required:
    - name
    - policyId
    - viewBoxId
    - sourceSpecialParameters
    properties:
      LeverageSanTransport:
        description: |-
          If this field is set to true, then the backup for the objects will be
          performed using dedicated storage area network (SAN) instead of LAN or
          managment network.
        type: boolean
        x-nullable: true
      abortInBlackoutPeriod:
        description: |-
          If true, the Cohesity Cluster aborts any currently executing Job Runs
          of this Protection Job when a blackout period specified for this Job
          starts, even if the Job Run started before the blackout
          period began.
          If false, a Job Run continues to execute, if the Job Run started before
          the blackout period starts.
        type: boolean
        x-go-name: AbortInBlackoutPeriod
        x-nullable: true
      alertingConfig:
        description: |-
          Alerting configuration can be used to specify optional details for the
          alerts triggered by this job.
        x-nullable: true
        $ref: '#/definitions/AlertingConfig'
      alertingPolicy:
        description: |-
          Array of Job Events.

          During Job Runs, the following Job Events are generated:
          1) Job succeeds 2) Job fails
          3) Job violates the SLA
          These Job Events can cause Alerts to be generated.
          'kSuccess' means the Protection Job succeeded.
          'kFailure' means the Protection Job failed.
          'kSlaViolation' means the Protection Job took longer than the time period
          specified in the SLA.
        type: array
        items:
          type: string
          enum:
          - kSuccess
          - kFailure
          - kSlaViolation
        x-go-name: AlertingPolicy
        x-nullable: true
      cloudParameters:
        description: Specifies Cloud specific parameters applicable in various scenarios.
        x-nullable: true
        $ref: '#/definitions/CloudParameters'
      continueOnQuiesceFailure:
        description: Whether to continue backing up on quiesce failure.
        type: boolean
        x-go-name: ContinueOnQuiesceFailure
        x-nullable: true
      createRemoteView:
        description: Specifies whether to create a remote view name to use for view
          overwrite.
        type: boolean
        x-go-name: CreateRemoteView
        x-nullable: true
      dataMigrationPolicy:
        description: |-
          Specifies policy for a data migration job. It contains inline schedule to
          run the data migration job. In addition to this, it also contains
          retention policy that should be applied to files after they have been
          moved to cohesity cluster. It is present only in case data migration job.
        x-nullable: true
        $ref: '#/definitions/DataMigrationPolicy'
      dedupDisabledSourceIds:
        description: |-
          List of source ids for which source side dedup is disabled from the backup
          job.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: DedupDisabledSourceIds
        x-nullable: true
      description:
        description: Specifies a text description about the Protection Job.
        type: string
        x-go-name: Description
        x-nullable: true
      endTimeUsecs:
        description: |-
          Specifies the epoch time (in microseconds) after which the Protection Job
          becomes dormant.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      environment:
        description: |-
          Specifies the environment type (such as kVMware or kSQL)
          of the Protection Source this Job is protecting.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      environmentParameters:
        description: |-
          Specifies additional settings that are applicable to all Sources in
          the Protection Job that are of specified environment type. For example,
          you can specify to exclude a disk from backup for all 'kVMware'
          Protection Sources in the Protection Job. If a setting conflicts with
          sourceSpecialParameters, then sourceSpecialParameters will be used.
        x-nullable: true
        $ref: '#/definitions/EnvironmentTypeJobParameters'
      excludeSourceIds:
        description: |-
          Array of Excluded Source Objects.

          List of Object ids from a Protection Source that should not be
          protected and are excluded from being backed up by the Protection Job.
          Leaf and non-leaf Objects may be in this list and an Object in this list
          must have an ancestor in the sourceId list.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ExcludeSourceIds
        x-nullable: true
      excludeVmTagIds:
        description: |-
          Array of Arrays of VM Tag Ids that Specify VMs to Exclude.

          Optionally specify a list of VMs to exclude from protecting by listing
          Protection Source ids of VM Tags in this two dimensional array.
          Using this two dimensional array of Tag ids, the Cluster
          generates a list of VMs to exclude from protecting,
          which are derived from intersections of the inner arrays
          and union of the outer array, as shown by the following example.
          For example a Datacenter is selected to be protected but you want to
          exclude all the 'Former Employees' VMs in the East and West but
          keep all the VMs for 'Former Employees' in the South which are
          also stored in this Datacenter, by specifying the
          following tag id array:
          [ [1000, 2221], [1000, 3031] ],
          where 1000 is the 'Former Employee' VM Tag id,
          2221 is the 'East' VM Tag id and 3031 is the 'West' VM Tag id.
          The first inner array [1000, 2221] produces a list of VMs that are
          both tagged with 'Former Employees' and 'East' (an intersection).
          The second inner array [1000, 3031] produces a list of VMs that are both
          tagged with 'Former Employees' and 'West' (an intersection).
          The outer array combines the list of VMs from the two inner
          arrays. The list of resulting VMs are excluded from being protected
          this Job.
        type: array
        items:
          type: array
          items:
            type: integer
            format: int64
        x-go-name: ExcludeVmTagIds
        x-nullable: true
      fullProtectionSlaTimeMins:
        description: |-
          If specified, this setting is number of minutes that a Job Run
          of a Full (no CBT) backup schedule is expected to complete, which is
          known as a Service-Level Agreement (SLA).
          A SLA violation is reported when the run time of a Job Run exceeds
          the SLA time period specified for this backup schedule.
        type: integer
        format: int64
        x-go-name: FullProtectionSlaTimeMins
        x-nullable: true
      fullProtectionStartTime:
        description: |-
          Specifies the time of day to start the Full Protection Schedule.
          This is optional and only applicable if the Protection Policy defines
          a monthly or a daily Full (no CBT) Protection Schedule.
          Default value is 02:00 AM.
          deprecated: true
        title: Full (no CBT) Protection Schedule Start Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
      incrementalProtectionSlaTimeMins:
        description: |-
          If specified, this setting is number of minutes that a Job Run
          of a CBT-based backup schedule is expected to complete, which
          is known as a Service-Level Agreement (SLA).
          A SLA violation is reported when the run time of a Job Run exceeds
          the SLA time period specified for this backup schedule.
        type: integer
        format: int64
        x-go-name: IncrementalProtectionSlaTimeMins
        x-nullable: true
      incrementalProtectionStartTime:
        description: |-
          Specifies the time of day to start the CBT-based Protection Schedule.
          This is optional and only applicable if the Protection Policy defines
          a monthly or a daily CBT-based Protection Schedule.
          Default value is 02:00 AM.
          deprecated: true
        title: CBT-based Protection Schedule Start Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
      indexingPolicy:
        description: |-
          Specifies the settings for indexing files found in an Object
          (such as a VM) so these files can be searched and recovered.
          In addition, it specifies inclusion and exclusion rules that determine
          the directories to index.
        x-nullable: true
        $ref: '#/definitions/IndexingPolicy'
      isDirectArchiveEnabled:
        description: Specifies if this is a direct archive backup job.
        type: boolean
        x-go-name: IsDirectArchiveEnabled
        x-nullable: true
      isNativeFormat:
        description: |-
          Specifies if native format should be used for archiving, applicable for
          only direct archive jobs.
        type: boolean
        x-go-name: IsNativeFormat
        x-nullable: true
      isPaused:
        description: |-
          Specifies if the Protection Job is paused, which means that no new
          Job Runs are started but any existing Job Runs continue to
          execute.
        type: boolean
        x-go-name: IsPaused
        x-nullable: true
      leverageStorageSnapshots:
        description: |-
          Specifies whether to leverage the storage array based snapshots for this
          backup job. To leverage storage snapshots, the storage array has to be
          registered as a source. If storage based snapshots can not be taken, job
          will fallback to the default backup method.
        type: boolean
        x-go-name: LeverageStorageSnapshots
        x-nullable: true
      leverageStorageSnapshotsForHyperflex:
        description: Specifies whether to leverage Hyperflex as the storage snapshot
          array
        type: boolean
        x-go-name: LeverageStorageSnapshotsForHyperflex
        x-nullable: true
      name:
        description: Specifies the name of the Protection Job.
        type: string
        x-go-name: Name
        x-nullable: true
      parentSourceId:
        description: |-
          Specifies the id of the registered Protection Source that is the
          parent of the Objects that may be protected by this Job.
          For example when a vCenter Server is registered on a Cohesity Cluster,
          the Cohesity Cluster assigns a unique id to this field that represents
          the vCenter Server.
        type: integer
        format: int64
        x-go-name: ParentSourceId
        x-nullable: true
      performSourceSideDedup:
        description: Specifies whether source side dedupe should be performed or not.
        type: boolean
        x-go-name: PerformSourceSideDedup
        x-nullable: true
      policyId:
        description: |-
          Specifies the unique id of the Protection Policy associated with
          the Protection Job. The Policy provides retry settings,
          Protection Schedules, Priority, SLA, etc.
          The Job defines the Storage Domain (View Box), the Objects to Protect
          (if applicable), Start Time, Indexing settings, etc.
        type: string
        x-go-name: PolicyId
        x-nullable: true
      postBackupScript:
        description: |-
          Specifies the script associated with the backup job. This field must be
          specified for 'kPhysical' jobs. This script will be executed post backup
          run.
        allOf:
        - $ref: '#/definitions/BackupScript'
        x-nullable: true
      preBackupScript:
        description: |-
          Specifies the script associated with the backup job. This field must be
          specified for 'kPhysical' jobs. This script will be executed pre backup
          run. The 'remoteScript' field will be used for remote adapter jobs and
          'preBackupScript' field will be used for 'kPhysical' jobs.
        allOf:
        - $ref: '#/definitions/BackupScript'
        x-nullable: true
      priority:
        description: |-
          Specifies the priority of execution for a Protection Job.
          Cohesity supports concurrent backups but if the number of Jobs exceeds
          the ability to process Jobs, the specified priority determines the
          execution Job priority.
          This field also specifies the replication priority.
          'kLow' indicates lowest execution priority for a Protection job.
          'kMedium' indicates medium execution priority for a Protection job.
          'kHigh' indicates highest execution priority for a Protection job.
        type: string
        enum:
        - kLow
        - kMedium
        - kHigh
        x-go-name: Priority
        x-nullable: true
      qosType:
        description: |-
          Specifies the QoS policy type to use for this Protection Job.
          'kBackupHDD' indicates the Cohesity Cluster writes data directly to
          the HDD tier for this Protection Job. This is the recommended setting.
          'kBackupSSD' indicates the Cohesity Cluster writes data directly to
          the SSD tier for this Protection Job. Only specify this policy if
          you need fast ingest speed for a small number of Protection Jobs.
        type: string
        enum:
        - kBackupHDD
        - kBackupSSD
        x-go-name: QosType
        x-nullable: true
      quiesce:
        description: |-
          Indicates if the App-Consistent option is enabled for this Job.
          If the option is enabled, the Cohesity Cluster quiesces
          the file system and applications before taking
          Application-Consistent Snapshots. VMware Tools must be installed
          on the guest Operating System.
        type: boolean
        x-go-name: Quiesce
        x-nullable: true
      remoteScript:
        description: |-
          For a Remote Adapter 'kPuppeteer' Job, this field specifies the
          settings about the remote script that will be executed by this Job.
          Only specify this field for Remote Adapter 'kPuppeteer' Jobs.
        allOf:
        - $ref: '#/definitions/RemoteJobScript'
        x-nullable: true
      remoteViewName:
        description: Specifies the remote view name to use for view overwrite.
        type: string
        x-go-name: RemoteViewName
        x-nullable: true
      sourceIds:
        description: |-
          Array of Protected Source Objects.

          Specifies the list of Object ids from the Protection Source to
          protect (or back up) by the Protection Job.
          An Object in this list may be descendant of another Object in this list.
          For example a Datacenter could be selected but its child Host excluded.
          However, a child VM under the Host could be explicitly
          selected to be protected. Both the Datacenter and the VM are listed.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: SourceIds
        x-nullable: true
      sourceSpecialParameters:
        description: |-
          Array of Special Source Parameters.

          Specifies additional settings that can apply to a subset of the
          Sources listed in the Protection Job. For example, you can specify a list
          of files and folders to protect instead of protecting the entire Physical
          Server. If this field's setting conflicts with environmentParameters,
          then this setting will be used. Specific volume selections must be passed
          in here to take effect.
        type: array
        items:
          $ref: '#/definitions/SourceSpecialParameter'
        x-go-name: SourceSpecialParameters
        x-nullable: true
      startTime:
        description: |-
          Specifies the time of day to start the Protection Schedule.
          This is optional and only applicable if the Protection Policy defines
          a monthly or a daily Protection Schedule.
          Default value is 02:00 AM.
        title: Protection Schedule Start Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
      timezone:
        description: |-
          Specifies the timezone to use when calculating time for this
          Protection Job such as the Job start time.
          Specify the timezone in the following format: "Area/Location",
          for example: "America/New_York".
        type: string
        x-go-name: Timezone
        x-nullable: true
      userSpecifiedTags:
        description: |-
          Tags associated with the job. User can specify tags/keywords that can
          indexed by Yoda and can be later searched in UI. For example, user can
          create a 'kPuppeteer' job to backup Oracle DB for 'payroll' department.
          User can specify following tags: 'payroll', 'Oracle_DB'.
        type: array
        items:
          type: string
        x-go-name: UserSpecifiedTags
        x-nullable: true
      viewBoxId:
        description: Specifies the Storage Domain (View Box) id where this Job writes
          data.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName:
        description: |-
          For a Remote Adapter 'kPuppeteer' Job or a 'kView' Job, this field
          specifies a View name that should be protected. Specify this field when
          creating a Protection Job for the first time for a View. If this field
          is specified, ParentSourceId, SourceIds, and ExcludeSourceIds should not
          be specified.
        type: string
        x-go-name: ViewName
        x-nullable: true
      vmTagIds:
        description: |-
          Array of Arrays of VMs Tags Ids that Specify VMs to Protect.

          Optionally specify a list of VMs to protect by listing
          Protection Source ids of VM Tags in this two dimensional array.
          Using this two dimensional array of Tag ids, the Cluster
          generates a list of VMs to protect which are derived from
          intersections of the inner arrays and union of the outer array,
          as shown by the following example.
          To protect only 'Eng' VMs in the East and all the VMs in the West,
          specify the following tag id array:
          [ [1101, 2221], [3031] ],
          where 1101 is the 'Eng' VM Tag id, 2221 is the 'East' VM Tag id and
          3031 is the 'West' VM Tag id. The inner array [1101, 2221] produces a
          list of VMs that are both tagged with 'Eng' and 'East'
          (an intersection). The outer array combines the list from the inner
          array with list of VMs tagged with 'West' (a union). The list
          of resulting VMs are protected by this Job.
        type: array
        items:
          type: array
          items:
            type: integer
            format: int64
        x-go-name: VmTagIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionJobRunStats:
    description: |-
      Specifies statistics about a Protection Job Run.
      This contains the Job Run level statistics.
    type: object
    title: Protection Job Run Statistics.
    properties:
      admittedTimeUsecs:
        description: |-
          Specifies the time the task was unqueued from the queue to start running.
          This field can be used to determine the following times:
          initial-wait-time = admittedTimeUsecs - startTimeUsecs
          run-time = endTimeUsecs - admittedTimeUsecs
          If the task ends up waiting in other queues, then actual run-time will
          be smaller than the run-time computed this way.
          This field is only populated for Backup tasks currently.
        type: integer
        format: int64
        x-go-name: AdmittedTimeUsecs
        x-nullable: true
      endTimeUsecs:
        description: |-
          Specifies the end time of the Protection Run. The end time
          is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      numAppInstances:
        description: |-
          Specifies the number of application instances backed up by this Run.
          For example if the environment type is kSQL, this field contains
          the number of SQL Server instances.
        type: integer
        format: int32
        x-go-name: NumAppInstances
        x-nullable: true
      numCanceledTasks:
        description: Specifies the number of backup tasks that were canceled.
        type: integer
        format: int64
        x-go-name: NumCanceledTasks
        x-nullable: true
      numCancelledAppObjects:
        description: |-
          Specifies the number of application objects that were cancelled in this
          Run.
        type: integer
        format: int32
        x-go-name: NumCancelledAppObjects
        x-nullable: true
      numFailedAppObjects:
        description: Specifies the number of application objects that failed in this
          Run.
        type: integer
        format: int32
        x-go-name: NumFailedAppObjects
        x-nullable: true
      numFailedTasks:
        description: Specifies the number of backup tasks that failed.
        type: integer
        format: int64
        x-go-name: NumFailedTasks
        x-nullable: true
      numSuccessfulAppObjects:
        description: |-
          Specifies the number of application objects successfully backed up by this
          Run. For example, if the environment type is kSQL, this number is for
          all of the SQL server databases.
        type: integer
        format: int32
        x-go-name: NumSuccessfulAppObjects
        x-nullable: true
      numSuccessfulTasks:
        description: Specifies the number of backup tasks that completed successfully.
        type: integer
        format: int64
        x-go-name: NumSuccessfulTasks
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time of the Protection Run. The start time
          is specified as a Unix epoch Timestamp (in microseconds).
          This time is when the task is queued to an internal queue where tasks
          are waiting to run.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      timeTakenUsecs:
        description: |-
          Specifies the actual execution time for the protection run to complete
          the backup task and the copy tasks. This time will not include the
          time waited in various internal queues.
          This field is only populated for Backup tasks currently.
        type: integer
        format: int64
        x-go-name: TimeTakenUsecs
        x-nullable: true
      totalBytesReadFromSource:
        description: Specifies the total amount of data read from the source (so far).
        type: integer
        format: int64
        x-go-name: TotalBytesReadFromSource
        x-nullable: true
      totalBytesToReadFromSource:
        description: |-
          Specifies the total amount of data expected to be read from the
          source.
        type: integer
        format: int64
        x-go-name: TotalBytesToReadFromSource
        x-nullable: true
      totalLogicalBackupSizeBytes:
        description: |-
          Specifies the size of the source object (such as a VM) protected by
          this task on the primary storage after the snapshot is taken.
          The logical size of the data on the source if the
          data is fully hydrated or expanded and not reduced
          by change-block tracking, compression and deduplication.
        type: integer
        format: int64
        x-go-name: TotalLogicalBackupSizeBytes
        x-nullable: true
      totalPhysicalBackupSizeBytes:
        description: |-
          Specifies the total amount of physical space used on the Cohesity
          Cluster to store the protected object after being reduced by change-block
          tracking, compression and deduplication. For example, if the logical
          backup size is 1GB, but only 1MB was used on the Cohesity Cluster
          to store it, this field be equal to 1MB.
        type: integer
        format: int64
        x-go-name: TotalPhysicalBackupSizeBytes
        x-nullable: true
      totalSourceSizeBytes:
        description: |-
          Specifies the size of the source object (such as a VM) protected by
          this task on the primary storage before the snapshot is taken.
          The logical size of the data on the source if the
          data is fully hydrated or expanded and not reduced
          by change-block tracking, compression and deduplication.
        type: integer
        format: int64
        x-go-name: TotalSourceSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionJobSummary:
    type: object
    title: Specifies Protection Job summary of an object.
    properties:
      clusterId:
        description: Specifies the id of the cluster on which object is protected.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: Specifies the incarnation id of the cluster on which object is
          protected.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      isRpoJob:
        description: Specifies if the Protection Job is created by an RPO policy.
        type: boolean
        x-go-name: IsRpoJob
        x-nullable: true
      jobId:
        description: Specifies the id of the Protection Job.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobName:
        description: Specifies the name of the Protection Job.
        type: string
        x-go-name: JobName
        x-nullable: true
      lastProtectionJobRunStatus:
        description: Specifies the last job run status.
        type: integer
        format: int32
        x-go-name: LastProtectionJobRunStatus
        x-nullable: true
      policyId:
        description: |-
          Specifies the id of the policy that is used by a Protection Job.
          Format of policy id will be like following:
          clusterid:clusterincarnationid:policyid.
        type: string
        x-go-name: PolicyId
        x-nullable: true
      policyName:
        description: Specifies the name of the policy that is used by a Protection
          Job.
        type: string
        x-go-name: PolicyName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionJobSummaryForPolicies:
    description: |-
      ProtectionJobSummaryForPolicies is the summary of a Protection
      Jobs associated with the Specified Protection Policy. This is only
      populated for a policy of type kRegular.
    type: object
    properties:
      backupRun:
        description: |-
          Specifies details about the last Backup task.
          A Backup task captures the original backup snapshots.
        x-nullable: true
        $ref: '#/definitions/BackupRun'
      copyRuns:
        description: |-
          Specifies details about the Copy tasks of the Job Run.
          A Copy task copies the captured snapshots to an external target
          or a Remote Cohesity Cluster.
        type: array
        items:
          $ref: '#/definitions/CopyRun'
        x-go-name: CopyRuns
        x-nullable: true
      protectionJob:
        description: Specifies the Protection job information.
        x-nullable: true
        $ref: '#/definitions/ProtectionJob'
    x-go-package: cohesity/iris/server/data/public
  ProtectionJobSummaryStats:
    description: Specifies statistics about a Protection Job.
    type: object
    title: Protection Job Summary Statistics.
    properties:
      averageRunTimeUsecs:
        description: |-
          Specifies the average run time of all successful Protection Runs.
          It is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: AverageRunTimeUsecs
        x-nullable: true
      fastestRunTimeUsecs:
        description: |-
          Specifies the time taken for a fastest successful Protection Run so far.
          It is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: FastestRunTimeUsecs
        x-nullable: true
      numCanceledRuns:
        description: Specifies the number of runs that were cancelled.
        type: integer
        format: int64
        x-go-name: NumCanceledRuns
        x-nullable: true
      numFailedRuns:
        description: Specifies the number of runs that failed to finish.
        type: integer
        format: int64
        x-go-name: NumFailedRuns
        x-nullable: true
      numSlaViolations:
        description: Specifies the number of runs having SLA violations.
        type: integer
        format: int64
        x-go-name: NumSlaViolations
        x-nullable: true
      numSuccessfulRuns:
        description: Specifies the number of runs that finished successfully.
        type: integer
        format: int64
        x-go-name: NumSuccessfulRuns
        x-nullable: true
      slowestRunTimeUsecs:
        description: |-
          Specifies the time taken for a slowest successful Protection Run so far.
          It is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: SlowestRunTimeUsecs
        x-nullable: true
      totalBytesReadFromSource:
        description: Specifies the total amount of data read from the source (so far).
        type: integer
        format: int64
        x-go-name: TotalBytesReadFromSource
        x-nullable: true
      totalLogicalBackupSizeBytes:
        description: |-
          Specifies the size of the source object (such as a VM) protected by
          this task on the primary storage after the snapshot is taken.
          The logical size of the data on the source if the
          data is fully hydrated or expanded and not reduced
          by change-block tracking, compression and deduplication.
        type: integer
        format: int64
        x-go-name: TotalLogicalBackupSizeBytes
        x-nullable: true
      totalPhysicalBackupSizeBytes:
        description: |-
          Specifies the total amount of physical space used on the Cohesity
          Cluster to store the protected object after being reduced by change-block
          tracking, compression and deduplication. For example, if the logical
          backup size is 1GB, but only 1MB was used on the Cohesity Cluster
          to store it, this field be equal to 1MB.
        type: integer
        format: int64
        x-go-name: TotalPhysicalBackupSizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionObjectSummary:
    type: object
    properties:
      latestArchivalSnapshotTimeUsecs:
        description: |-
          Specifies the Unix epoch Timestamp (in microseconds) of the latest
          Archival Snapshot.
        type: integer
        format: int64
        x-go-name: LatestArchivalSnapshotTimeUsecs
        x-nullable: true
      latestLocalSnapshotTimeUsecs:
        description: |-
          Specifies the Unix epoch Timestamp (in microseconds) of the latest
          Local Snapshot.
        type: integer
        format: int64
        x-go-name: LatestLocalSnapshotTimeUsecs
        x-nullable: true
      latestReplicationSnapshotTimeUsecs:
        description: |-
          Specifies the Unix epoch Timestamp (in microseconds) of the latest
          Replication Snapshot.
        type: integer
        format: int64
        x-go-name: LatestReplicationSnapshotTimeUsecs
        x-nullable: true
      parentProtectionSource:
        description: Specifies the parent Protection Source object such as vCenter.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      protectionJobs:
        description: Returns the list of Protection Jobs with summary Information.
        type: array
        items:
          $ref: '#/definitions/ProtectionRunInstance'
        x-go-name: ProtectionJobsSummary
        x-nullable: true
      protectionSource:
        description: Specifies the leaf Protection Source Object such as a VM.
        allOf:
        - $ref: '#/definitions/ProtectionSource'
        x-nullable: true
      rpoPolicies:
        description: Specifies the id of the RPO policy protecting this object.
        type: array
        items:
          $ref: '#/definitions/ProtectionPolicy'
        x-go-name: RpoPolicies
        x-nullable: true
      totalArchivalSnapshots:
        description: Specifies the total number of Archival Snapshots.
        type: integer
        format: int32
        x-go-name: TotalArchivalSnapshots
        x-nullable: true
      totalLocalSnapshots:
        description: Specifies the total number of Local Snapshots.
        type: integer
        format: int32
        x-go-name: TotalLocalSnapshots
        x-nullable: true
      totalReplicationSnapshots:
        description: Specifies the total number of Replication Snapshots.
        type: integer
        format: int32
        x-go-name: TotalReplicationSnapshots
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionPolicy:
    type: object
    properties:
      blackoutPeriods:
        description: |-
          Array of Blackout Periods.

          If specified, this field defines black periods when new Job Runs
          are not started. If a Job Run has been scheduled but not yet
          executed and the blackout period starts, the behavior depends on
          the policy field AbortInBlackoutPeriod.
        type: array
        items:
          $ref: '#/definitions/BlackoutPeriod'
        x-go-name: BlackoutPeriods
        x-nullable: true
      cdpSchedulingPolicy:
        description: |-
          Specifies the CDP backup schedule of a Protection Job and how long
          log files captured by this schedule are retained on the
          Cohesity Cluster.
        title: CDP Job Policy.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicy'
      cloudDeployPolicies:
        description: |-
          Array of Cloud Deploy Policies.

          Specifies settings for copying Snapshots to Cloud.
          CloudDeploy target where backup snapshots may be converted and stored.
          It also defines the retention of copied Snapshots on the Cloud.
        type: array
        items:
          $ref: '#/definitions/SnapshotCloudCopyPolicy'
        x-go-name: SnapshotCloudCopyPolicies
        x-nullable: true
      daysToKeep:
        description: Specifies how many days to retain Snapshots on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: DaysToKeep
        x-nullable: true
      daysToKeepLog:
        description: Specifies the number of days to retain log run if Log Schedule
          exists.
        type: integer
        format: int64
        x-go-name: DaysToKeepLog
        x-nullable: true
      daysToKeepSystem:
        description: |-
          Specifies the number of days to retain system backups made for bare metal
          recovery. This field is applicable if systemSchedulingPolicy is specified.
        type: integer
        format: int64
        x-go-name: DaysToKeepSystem
        x-nullable: true
      description:
        description: Description of the Protection Policy.
        type: string
        x-go-name: Description
        x-nullable: true
      extendedRetentionPolicies:
        description: |-
          Specifies additional retention policies that should be applied to the
          backup snapshots. A backup snapshot will be retained up to a time that is
          the maximum of all retention policies that are applicable to it.
        type: array
        items:
          $ref: '#/definitions/ExtendedRetentionPolicy'
        x-go-name: ExtendedRetentionPolicies
        x-nullable: true
      fullSchedulingPolicy:
        description: |-
          Specifies the Full (no CBT) backup schedule of a Protection Job and
          how long Snapshots captured by this schedule are retained on the
          Cohesity Cluster.
        title: Full (no CBT) Job Policy.
        allOf:
        - $ref: '#/definitions/SchedulingPolicy'
        x-nullable: true
      id:
        description: Specifies a unique Policy id assigned by the Cohesity Cluster.
        type: string
        x-go-name: Id
        x-nullable: true
      incrementalSchedulingPolicy:
        description: |-
          Specifies the CBT-based backup schedule of a Protection Job and
          how long Snapshots captured by this schedule are
          retained on the Cohesity Cluster.
        title: CBT-based Job Policy.
        allOf:
        - $ref: '#/definitions/SchedulingPolicy'
        x-nullable: true
      isUsable:
        description: Specifies if the policy can be used to create a job.
        type: boolean
        x-go-name: IsUsable
        x-nullable: true
      lastModifiedTimeMsecs:
        description: |-
          Specifies the epoch time (in milliseconds) when the Protection Policy
          was last modified.
        type: integer
        format: int64
        x-go-name: LastModifiedTimeMsecs
        x-nullable: true
      logSchedulingPolicy:
        description: |-
          Specifies the Log backup schedule of a Protection Job and how long
          log files captured by this schedule are retained on the
          Cohesity Cluster.
        title: Log Job Policy.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicy'
      name:
        description: Specifies the name of the Protection Policy.
        type: string
        x-go-name: Name
        x-nullable: true
      numLinkedPolicies:
        description: Species the number of policies linked to a global policy.
        type: integer
        format: int64
        x-go-name: NumLinkedPolicies
        x-nullable: true
      parentPolicyId:
        description: |-
          Specifies the parent global policy Id. This must be specified when
          creating a policy from global policy template.
        type: string
        x-go-name: ParentPolicyId
        x-nullable: true
      retries:
        description: |-
          Specifies the number of times to retry capturing Snapshots before
          the Job Run fails.
        type: integer
        format: int32
        x-go-name: Retries
        x-nullable: true
      retryIntervalMins:
        description: Specifies the number of minutes before retrying a failed Protection
          Job.
        type: integer
        format: int32
        x-go-name: RetryIntervalMins
        x-nullable: true
      rpoPolicySettings:
        description: Specifies the RPO Policy related settings.
        x-nullable: true
        $ref: '#/definitions/RpoPolicySettings'
      skipIntervalMins:
        description: |-
          Specifies the period of time before skipping the execution of new
          Job Runs if an existing queued Job Run of the same Protection Job
          has not started. For example if this field is set to 30 minutes and
          a Job Run is scheduled to start at 5:00 AM every day but does not start
          due to conflicts (such as too many Jobs are running). If the new Job Run
          does not start by 5:30AM, the Cohesity Cluster will skip the new Job Run.
          If the original Job Run completes before 5:30AM the next day, a new
          Job Run is created and starts executing.
          This field is optional.
        type: integer
        format: int32
        x-go-name: SkipIntervalMins
        x-nullable: true
      snapshotArchivalCopyPolicies:
        description: |-
          Array of External Targets.

          Specifies settings for copying Snapshots to  Archival External Targets
          (such as AWS or Tape).
          It also defines the retention of copied Snapshots on an External Targets
          such as AWS and Tape.
        type: array
        items:
          $ref: '#/definitions/SnapshotArchivalCopyPolicy'
        x-go-name: SnapshotArchivalCopyPolicies
        x-nullable: true
      snapshotReplicationCopyPolicies:
        description: |-
          Array of Remote Clusters.

          Specifies settings for copying Snapshots to Remote Clusters.
          It also defines the retention of copied Snapshots on a Remote Cluster.
        type: array
        items:
          $ref: '#/definitions/SnapshotReplicationCopyPolicy'
        x-go-name: SnapshotReplicationCopyPolicies
        x-nullable: true
      systemSchedulingPolicy:
        description: |-
          Specifies the system backup schedule for agents running on servers to run
          low frequency backup jobs. Images created as part of the backup can be
          used to perform a "bare metal" recovery.
        title: Agent driven System Job Policy.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicy'
      tenantIds:
        description: |-
          Specifies which organizations have been assigned this policy.
          This value is only populated for the cluster admin for now.
        type: array
        items:
          type: string
        x-go-name: TenantIds
        x-nullable: true
      type:
        description: |-
          Specifies the type of the protection policy.
          'kRegular' means a regular Protection Policy.
          'kRPO' means an RPO Protection Policy.
        type: string
        enum:
        - kRegular
        - kRPO
        x-go-name: Type
        x-nullable: true
      wormRetentionType:
        description: |-
          Specifies WORM retention type for the snapshots. When a WORM retention
          type is specified, the snapshots of the Protection Jobs using this policy
          will be kept until the maximum of the snapshot retention time. During
          that time, the snapshots cannot be deleted.
          'kNone' implies there is no WORM retention set.
          'kCompliance' implies WORM retention is set for compliance reason.
          'kAdministrative' implies WORM retention is set for administrative purposes.
        type: string
        enum:
        - kNone
        - kCompliance
        - kAdministrative
        x-go-name: WormRetentionType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionPolicyRequest:
    description: Specifies information about a Protection Policy.
    type: object
    title: Protection Policy Request.
    properties:
      blackoutPeriods:
        description: |-
          Array of Blackout Periods.

          If specified, this field defines black periods when new Job Runs
          are not started. If a Job Run has been scheduled but not yet
          executed and the blackout period starts, the behavior depends on
          the policy field AbortInBlackoutPeriod.
        type: array
        items:
          $ref: '#/definitions/BlackoutPeriod'
        x-go-name: BlackoutPeriods
        x-nullable: true
      cdpSchedulingPolicy:
        description: |-
          Specifies the CDP backup schedule of a Protection Job and how long
          log files captured by this schedule are retained on the
          Cohesity Cluster.
        title: CDP Job Policy.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicy'
      cloudDeployPolicies:
        description: |-
          Array of Cloud Deploy Policies.

          Specifies settings for copying Snapshots to Cloud.
          CloudDeploy target where backup snapshots may be converted and stored.
          It also defines the retention of copied Snapshots on the Cloud.
        type: array
        items:
          $ref: '#/definitions/SnapshotCloudCopyPolicy'
        x-go-name: SnapshotCloudCopyPolicies
        x-nullable: true
      daysToKeep:
        description: Specifies how many days to retain Snapshots on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: DaysToKeep
        x-nullable: true
      daysToKeepLog:
        description: Specifies the number of days to retain log run if Log Schedule
          exists.
        type: integer
        format: int64
        x-go-name: DaysToKeepLog
        x-nullable: true
      daysToKeepSystem:
        description: |-
          Specifies the number of days to retain system backups made for bare metal
          recovery. This field is applicable if systemSchedulingPolicy is specified.
        type: integer
        format: int64
        x-go-name: DaysToKeepSystem
        x-nullable: true
      description:
        description: Description of the Protection Policy.
        type: string
        x-go-name: Description
        x-nullable: true
      extendedRetentionPolicies:
        description: |-
          Specifies additional retention policies that should be applied to the
          backup snapshots. A backup snapshot will be retained up to a time that is
          the maximum of all retention policies that are applicable to it.
        type: array
        items:
          $ref: '#/definitions/ExtendedRetentionPolicy'
        x-go-name: ExtendedRetentionPolicies
        x-nullable: true
      fullSchedulingPolicy:
        description: |-
          Specifies the Full (no CBT) backup schedule of a Protection Job and
          how long Snapshots captured by this schedule are retained on the
          Cohesity Cluster.
        title: Full (no CBT) Job Policy.
        allOf:
        - $ref: '#/definitions/SchedulingPolicy'
        x-nullable: true
      incrementalSchedulingPolicy:
        description: |-
          Specifies the CBT-based backup schedule of a Protection Job and
          how long Snapshots captured by this schedule are
          retained on the Cohesity Cluster.
        title: CBT-based Job Policy.
        allOf:
        - $ref: '#/definitions/SchedulingPolicy'
        x-nullable: true
      logSchedulingPolicy:
        description: |-
          Specifies the Log backup schedule of a Protection Job and how long
          log files captured by this schedule are retained on the
          Cohesity Cluster.
        title: Log Job Policy.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicy'
      name:
        description: Specifies the name of the Protection Policy.
        type: string
        x-go-name: Name
        x-nullable: true
      numLinkedPolicies:
        description: Species the number of policies linked to a global policy.
        type: integer
        format: int64
        x-go-name: NumLinkedPolicies
        x-nullable: true
      parentPolicyId:
        description: |-
          Specifies the parent global policy Id. This must be specified when
          creating a policy from global policy template.
        type: string
        x-go-name: ParentPolicyId
        x-nullable: true
      retries:
        description: |-
          Specifies the number of times to retry capturing Snapshots before
          the Job Run fails.
        type: integer
        format: int32
        x-go-name: Retries
        x-nullable: true
      retryIntervalMins:
        description: Specifies the number of minutes before retrying a failed Protection
          Job.
        type: integer
        format: int32
        x-go-name: RetryIntervalMins
        x-nullable: true
      rpoPolicySettings:
        description: Specifies the RPO Policy related settings.
        x-nullable: true
        $ref: '#/definitions/RpoPolicySettings'
      skipIntervalMins:
        description: |-
          Specifies the period of time before skipping the execution of new
          Job Runs if an existing queued Job Run of the same Protection Job
          has not started. For example if this field is set to 30 minutes and
          a Job Run is scheduled to start at 5:00 AM every day but does not start
          due to conflicts (such as too many Jobs are running). If the new Job Run
          does not start by 5:30AM, the Cohesity Cluster will skip the new Job Run.
          If the original Job Run completes before 5:30AM the next day, a new
          Job Run is created and starts executing.
          This field is optional.
        type: integer
        format: int32
        x-go-name: SkipIntervalMins
        x-nullable: true
      snapshotArchivalCopyPolicies:
        description: |-
          Array of External Targets.

          Specifies settings for copying Snapshots to  Archival External Targets
          (such as AWS or Tape).
          It also defines the retention of copied Snapshots on an External Targets
          such as AWS and Tape.
        type: array
        items:
          $ref: '#/definitions/SnapshotArchivalCopyPolicy'
        x-go-name: SnapshotArchivalCopyPolicies
        x-nullable: true
      snapshotReplicationCopyPolicies:
        description: |-
          Array of Remote Clusters.

          Specifies settings for copying Snapshots to Remote Clusters.
          It also defines the retention of copied Snapshots on a Remote Cluster.
        type: array
        items:
          $ref: '#/definitions/SnapshotReplicationCopyPolicy'
        x-go-name: SnapshotReplicationCopyPolicies
        x-nullable: true
      systemSchedulingPolicy:
        description: |-
          Specifies the system backup schedule for agents running on servers to run
          low frequency backup jobs. Images created as part of the backup can be
          used to perform a "bare metal" recovery.
        title: Agent driven System Job Policy.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicy'
      type:
        description: |-
          Specifies the type of the protection policy.
          'kRegular' means a regular Protection Policy.
          'kRPO' means an RPO Protection Policy.
        type: string
        enum:
        - kRegular
        - kRPO
        x-go-name: Type
        x-nullable: true
      wormRetentionType:
        description: |-
          Specifies WORM retention type for the snapshots. When a WORM retention
          type is specified, the snapshots of the Protection Jobs using this policy
          will be kept until the maximum of the snapshot retention time. During
          that time, the snapshots cannot be deleted.
          'kNone' implies there is no WORM retention set.
          'kCompliance' implies WORM retention is set for compliance reason.
          'kAdministrative' implies WORM retention is set for administrative purposes.
        type: string
        enum:
        - kNone
        - kCompliance
        - kAdministrative
        x-go-name: WormRetentionType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionPolicySummary:
    description: |-
      ProtectionPolicySummary specifies protection summary of a given
      Protection Policy.
    type: object
    properties:
      lastProtectionRunSummary:
        description: |-
          Specifies the summary of the last Protection Runs of all the related
          Protection Sources and Protection Jobs.
        x-nullable: true
        $ref: '#/definitions/LastProtectionRunSummary'
      paginationCookie:
        description: |-
          If there are more results to display, use this value to get
          the next set of results, by using this value in paginationCookie param
          for the next request to GetProtectionPolicySummary.
        type: string
        x-go-name: PaginationCookie
        x-nullable: true
      protectedSourcesSummary:
        description: |-
          Specifies the list of Protection Sources which are protected under the
          given policy. This is only populated if the policy is of type kRPO.
        type: array
        items:
          $ref: '#/definitions/ProtectedSourceSummary'
        x-go-name: ProtectedSourcesSummary
        x-nullable: true
      protectionJobsSummary:
        description: |-
          Specifies the list of Protection Jobs associated with the given
          Protection Policy. This is only populated if the type of the
          Protection Policy is kRegular.
        type: array
        items:
          $ref: '#/definitions/ProtectionJobSummaryForPolicies'
        x-go-name: ProtectionJobsSummary
        x-nullable: true
      protectionPolicy:
        description: Specifies the Protection Policy for which the summary is requested.
        x-nullable: true
        $ref: '#/definitions/ProtectionPolicy'
      protectionRunsSummary:
        description: Specifies the aggregated summary of the Protection Runs.
        x-nullable: true
        $ref: '#/definitions/ProtectionRunsSummary'
    x-go-package: cohesity/iris/server/data/public
  ProtectionRunErrors:
    type: object
    title: ProtectionRunErrors defines the struct of errors returned for the task.
    properties:
      errors:
        description: |-
          Specifies the list of errors encountered by a task during a protection
          run.
        type: array
        items:
          $ref: '#/definitions/RequestError'
        x-go-name: Errors
        x-nullable: true
      fileNames:
        description: |-
          Specifies the list of filenames with errors encountered by a task during a
          protection run.
        type: array
        items:
          type: string
        x-go-name: FileNames
        x-nullable: true
      paginationCookie:
        description: Specifies the cookie for next set of results.
        type: string
        x-go-name: PaginationCookie
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionRunInstance:
    description: |-
      Specifies the status of one Job Run.
      A Job Run can have one Backup Run and zero or more Copy Runs.
    type: object
    title: Protection Job Run Instance.
    properties:
      backupRun:
        description: |-
          Specifies details about the Backup task.
          A Backup task captures the original backup snapshots.
        x-nullable: true
        $ref: '#/definitions/BackupRun'
      copyRun:
        description: |-
          Array of Copy Run Tasks.

          Specifies details about the Copy tasks of this Job Run.
          A Copy task copies the captured snapshots to an external target
          or a Remote Cohesity Cluster.
        type: array
        items:
          $ref: '#/definitions/CopyRun'
        x-go-name: CopyRuns
        x-nullable: true
      jobId:
        description: Specifies the id of the Protection Job that was run.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobName:
        description: Specifies the name of the Protection Job name that was run.
        type: string
        x-go-name: JobName
        x-nullable: true
      jobUid:
        description: Specifies the globally unique id of the Protection Job that was
          run.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      protectionShellInfo:
        description: |-
          Specifies the shell information about the protection run. This
          will only be populated if OnlyReturnShellInfo is sent as true.
        x-nullable: true
        $ref: '#/definitions/ProtectionShellInfo'
      viewBoxId:
        description: |-
          Specifies the Storage Domain (View Box) to store the backed up data.
          Specify the id of the Storage Domain (View Box).
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionRunResponse:
    description: |-
      Specifies the information about the Protection Runs across all snapshot
      target locations.
    type: object
    properties:
      archivalRuns:
        description: Specifies the list of archival job information.
        type: array
        items:
          $ref: '#/definitions/LatestProtectionJobRunInfo'
        x-go-name: ArchivalRuns
        x-nullable: true
      backupRuns:
        description: Specifies the list of local backup job information.
        type: array
        items:
          $ref: '#/definitions/LatestProtectionJobRunInfo'
        x-go-name: BackupRuns
        x-nullable: true
      replicationRuns:
        description: Specifies the list of replication job information.
        type: array
        items:
          $ref: '#/definitions/LatestProtectionJobRunInfo'
        x-go-name: ReplicationRuns
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionRunsStats:
    description: Specifies the Protection Runs statistics response.
    type: object
    title: Protection Runs Statistics.
    properties:
      numArchivalRuns:
        description: Specifies the count of archival Runs.
        type: integer
        format: int64
        x-go-name: NumArchivalRuns
        x-nullable: true
      numBackupRuns:
        description: Specifies the count of backup Runs.
        type: integer
        format: int64
        x-go-name: NumBackupRuns
        x-nullable: true
      numReplicationRuns:
        description: Specifies the count of replication Runs.
        type: integer
        format: int64
        x-go-name: NumReplicationRuns
        x-nullable: true
  ProtectionRunsSummary:
    description: |-
      ProtectionRunsSummary is the summary of the all the Protection Runs for the
      Protection Jobs using the Specified Protection Policy.
    type: object
    properties:
      numberOfArchivalRuns:
        description: |-
          Specifies the total number of Archival Runs using the current
          Protection Policy.
        type: integer
        format: int64
        x-go-name: NumberOfArchivalRuns
        x-nullable: true
      numberOfProtectionRuns:
        description: |-
          Specifies the total number of Protection Runs by the given Protection
          Policy.
        type: integer
        format: int64
        x-go-name: NumberOfProtectionRuns
        x-nullable: true
      numberOfReplicationRuns:
        description: |-
          Specifies the total number of Replication Runs using the current
          Protection Policy.
        type: integer
        format: int64
        x-go-name: NumberOfReplicationRuns
        x-nullable: true
      numberOfSuccessfulArchivalRuns:
        description: |-
          Specifies the number of total successful Archival Runs using the
          current Protection Policy.
        type: integer
        format: int64
        x-go-name: NumberOfSuccessfulArchivalRuns
        x-nullable: true
      numberOfSuccessfulProtectionRuns:
        description: |-
          Specifies the number of successful Protection Runs using the current
          Protection Policy.
        type: integer
        format: int64
        x-go-name: NumberOfSuccessfulProtectionRuns
        x-nullable: true
      numberOfSuccessfulReplicationRuns:
        description: |-
          Specifies the number of total successful Replication Runs using the
          current Protection Policy.
        type: integer
        format: int64
        x-go-name: NumberOfSuccessfulReplicationRuns
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionShellInfo:
    type: object
    title: ProtectionShellInfo specifies the shell information about a protection
      run.
    properties:
      endTimeUsecs:
        description: |-
          Specifies the end time of the Protection Run. The end time
          is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: |-
          Specifies if an error occurred (if any) while running this task.
          This field is populated when the status is equal to 'kFailure'.
        type: string
        x-go-name: Error
        x-nullable: true
      jobRunId:
        description: |-
          Specifies the id of the Job Run that ran the backup task and
          the copy tasks.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      runType:
        description: |-
          Specifies the type of backup such as 'kRegular', 'kFull', 'kLog' or
          'kSystem'.
          'kRegular' indicates a incremental (CBT) backup. Incremental backups
          utilizing CBT (if supported) are captured of the target protection objects.
          The first run of a kRegular schedule captures all the blocks.
          'kFull' indicates a full (no CBT) backup. A complete backup
          (all blocks) of the target protection objects are always captured and
          Change Block Tracking (CBT) is not utilized.
          'kLog' indicates a Database Log backup. Capture the database
          transaction logs to allow rolling back to a specific point in time.
          'kSystem' indicates a system backup. System backups are used to do
          bare metal recovery of the system to a specific point in time.
        type: string
        enum:
        - kRegular
        - kFull
        - kLog
        - kSystem
        x-go-name: RunType
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time of the Protection Run. The start time
          is specified as a Unix epoch Timestamp (in microseconds).
          This time is when the task is queued to an internal queue where tasks
          are waiting to run.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      status:
        description: |-
          Specifies the status of Backup task such as 'kRunning', 'kSuccess',
          'kFailure' etc.
          'kAccepted' indicates the task is queued to run but not yet running.
          'kRunning' indicates the task is running.
          'kCanceling' indicates a request to cancel the task has occurred but
          the task is not yet canceled.
          'kCanceled' indicates the task has been canceled.
          'kSuccess' indicates the task was successful.
          'kFailure' indicates the task failed.
          'kWarning' indicates the task has finished with warning.
          'kOnHold' indicates the task is kept onHold.
          'kMissed' indicates the task is missed.
        type: string
        enum:
        - kAccepted
        - kRunning
        - kCanceling
        - kCanceled
        - kSuccess
        - kFailure
        - kWarning
        - kOnHold
        - kMissed
        x-go-name: Status
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSource:
    description: |-
      Specifies a generic structure that represents a node
      in the Protection Source tree. Node details will depend on the
      environment of the Protection Source.
    type: object
    title: Protection Source.
    properties:
      acropolisProtectionSource:
        description: |-
          Specifies details about an Acropolis Protection Source
          when the environment is set to 'kAcropolis'.
        allOf:
        - $ref: '#/definitions/AcropolisProtectionSource'
        x-nullable: true
      adProtectionSource:
        description: |-
          Specifies details about an AD Protection Source
          when the environment is set to 'kAD'.
        allOf:
        - $ref: '#/definitions/AdProtectionSource'
        x-nullable: true
      awsProtectionSource:
        description: |-
          Specifies details about an AWS Protection Source
          when the environment is set to 'kAWS'.
        allOf:
        - $ref: '#/definitions/AwsProtectionSource'
        x-nullable: true
      azureProtectionSource:
        description: |-
          Specifies details about an Azure Protection Source
          when the environment is set to 'kAzure'.
        allOf:
        - $ref: '#/definitions/AzureProtectionSource'
        x-nullable: true
      cassandraProtectionSource:
        description: |-
          Specifies details about a Cassandra Protection Source
          when the environment is set to 'kCassandra'.
        allOf:
        - $ref: '#/definitions/CassandraProtectionSource'
        x-nullable: true
      couchbaseProtectionSource:
        description: |-
          Specifies details about a Couchbase Protection Source
          when the environment is set to 'kCouchbase'.
        allOf:
        - $ref: '#/definitions/CouchbaseProtectionSource'
        x-nullable: true
      elastifileProtectionSource:
        description: |-
          Specifies details about a Elastifile Protection Source
          when the environment is set to 'kElastifile'.
        allOf:
        - $ref: '#/definitions/ElastifileProtectionSource'
        x-nullable: true
      environment:
        description: |-
          Specifies the environment (such as 'kVMware' or 'kSQL') where the
          Protection Source exists. Depending on the environment, one of the
          following Protection Sources are initialized.

          NOTE: kPuppeteer refers to Cohesity's Remote Adapter.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      exchangeProtectionSource:
        description: |-
          Specifies details about an Exchange Protection Source
          when the environment is set to 'kExchange'.
        allOf:
        - $ref: '#/definitions/ExchangeProtectionSource'
        x-nullable: true
      flashBladeProtectionSource:
        description: |-
          Specifies details about a Pure Storage FlashBlade Protection Source
          when the environment is set to 'kFlashBlade'.
        allOf:
        - $ref: '#/definitions/FlashBladeProtectionSource'
        x-nullable: true
      gcpProtectionSource:
        description: |-
          Specifies details about an GCP Protection Source
          when the environment is set to 'kGCP'.
        allOf:
        - $ref: '#/definitions/GcpProtectionSource'
        x-nullable: true
      gpfsProtectionSource:
        description: |-
          Specifies details about an GPFS Protection Source
          when the environment is set to 'kGPFS'.
        allOf:
        - $ref: '#/definitions/GpfsProtectionSource'
        x-nullable: true
      hbaseProtectionSource:
        description: |-
          Specifies details about a HBase Protection Source
          when the environment is set to 'kHBase'.
        allOf:
        - $ref: '#/definitions/HBaseProtectionSource'
        x-nullable: true
      hdfsProtectionSource:
        description: |-
          Specifies details about a Hdfs Protection Source
          when the environment is set to 'kHdfs'.
        allOf:
        - $ref: '#/definitions/HdfsProtectionSource'
        x-nullable: true
      hiveProtectionSource:
        description: |-
          Specifies details about a Hive Protection Source
          when the environment is set to 'kHive'.
        allOf:
        - $ref: '#/definitions/HiveProtectionSource'
        x-nullable: true
      hyperFlexProtectionSource:
        description: |-
          Specifies details about a HyperFlex Storage Snapshot source
          when the environment is set to 'kHyperFlex'
        allOf:
        - $ref: '#/definitions/HyperFlexProtectionSource'
        x-nullable: true
      hypervProtectionSource:
        description: |-
          Specifies details about a HyperV Protection Source
          when the environment is set to 'kHyperV'.
        allOf:
        - $ref: '#/definitions/HypervProtectionSource'
        x-nullable: true
      id:
        description: Specifies an id of the Protection Source.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      isilonProtectionSource:
        description: |-
          Specifies details about an Isilon OneFs Protection Source
          when the environment is set to 'kIsilon'.
        allOf:
        - $ref: '#/definitions/IsilonProtectionSource'
        x-nullable: true
      kubernetesProtectionSource:
        description: |-
          Specifies details about a Kubernetes Protection Source
          when the environment is set to 'kKubernetes'.
        allOf:
        - $ref: '#/definitions/KubernetesProtectionSource'
        x-nullable: true
      kvmProtectionSource:
        description: |-
          Specifies details about a KVM Protection Source
          when the environment is set to 'kKVM'.
        allOf:
        - $ref: '#/definitions/KvmProtectionSource'
        x-nullable: true
      mongodbProtectionSource:
        description: |-
          Specifies details about a MongoDB Protection Source
          when the environment is set to 'kMongoDB'.
        allOf:
        - $ref: '#/definitions/MongoDBProtectionSource'
        x-nullable: true
      name:
        description: Specifies a name of the Protection Source.
        type: string
        x-go-name: Name
        x-nullable: true
      nasProtectionSource:
        description: |-
          Specifies details about a Generic NAS Protection Source
          when the environment is set to 'kGenericNas'.
        allOf:
        - $ref: '#/definitions/NasProtectionSource'
        x-nullable: true
      netappProtectionSource:
        description: |-
          Specifies details about a NetApp Protection Source
          when the environment is set to 'kNetapp'.
        allOf:
        - $ref: '#/definitions/NetappProtectionSource'
        x-nullable: true
      nimbleProtectionSource:
        description: |-
          Specifies details about a SAN Protection Source
          when the environment is set to 'kNimble'.
        allOf:
        - $ref: '#/definitions/NimbleProtectionSource'
        x-nullable: true
      office365ProtectionSource:
        description: |-
          Specifies details about an Office 365 Protection Source
          when the environment is set to 'kO365'.
        allOf:
        - $ref: '#/definitions/Office365ProtectionSource'
        x-nullable: true
      oracleProtectionSource:
        description: |-
          Specifies details about an Oracle Protection Source
          when the environment is set to 'kOracle'.
        allOf:
        - $ref: '#/definitions/OracleProtectionSource'
        x-nullable: true
      parentId:
        description: Specifies an id of the parent of the Protection Source.
        type: integer
        format: int64
        x-go-name: ParentId
        x-nullable: true
      physicalProtectionSource:
        description: |-
          Specifies details about a Physical Protection Source
          when the environment is set to 'kPhysical'.
        allOf:
        - $ref: '#/definitions/PhysicalProtectionSource'
        x-nullable: true
      pureProtectionSource:
        description: |-
          Specifies details about a Pure Protection Source
          when the environment is set to 'kPure'.
        allOf:
        - $ref: '#/definitions/PureProtectionSource'
        x-nullable: true
      sqlProtectionSource:
        description: |-
          Specifies details about a SQL Protection Source
          when the environment is set to 'kSQL'.
        allOf:
        - $ref: '#/definitions/SqlProtectionSource'
        x-nullable: true
      viewProtectionSource:
        description: |-
          Specifies details about a View Protection Source
          when the environment is set to 'kView'.
        allOf:
        - $ref: '#/definitions/ViewProtectionSource'
        x-nullable: true
      vmWareProtectionSource:
        description: |-
          Specifies details about a VMware Protection Source
          when the environment is set to 'kVMware'.
        allOf:
        - $ref: '#/definitions/VMwareProtectionSource'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourceAndApplicationRestoreObjects:
    description: |-
      Specifies the details about the protection source and snapshot from where
      the application objects must be restored. It also provides information about
      the application objects which have to be restored and target host to which
      the application objects must be restored.
    type: object
    title: Protection source and Application restore objects.
    required:
    - hostingProtectionSource
    properties:
      applicationRestoreObjects:
        description: |-
          Specifies the Application Server objects whose data should be restored
          and the restore parameters for each of them.
        type: array
        items:
          $ref: '#/definitions/ApplicationRestoreObject'
        x-go-name: ApplicationRestoreObjects
        x-nullable: true
      hostingProtectionSource:
        description: |-
          Specifies the restore information for the Protection Source object that
          registered and hosts the Application Servers. This provides the
          snapshot details from which the applications should be restored.
        x-nullable: true
        $ref: '#/definitions/RestoreObjectDetails'
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourceNode:
    description: |-
      Many different node types are supported such as
      'kComputeResource' and 'kResourcePool'.
    type: object
    title: Node in a Protection Sources Tree.
    properties:
      applicationNodes:
        description: |-
          Array of Child Subtrees.

          Specifies the child subtree used to store additional application-level
          Objects.
          Different environments use the subtree to store application-level
          information. For example for SQL Server, this subtree stores the
          SQL Server instances running on a VM.
        type: array
        items:
          description: |-
            Many different node types are supported such as
            'kComputeResource' and 'kResourcePool'.
          type: object
          title: Node in a Protection Sources Tree. (ProtectionSourceNode)
        x-go-name: ApplicationNodes
        x-nullable: true
      entityPaginationParameters:
        description: |-
          Specifies the cursor based pagination parameters for Protection Source to
          fetch the next set of sources within a level. This parameter will only be
          present at the parent entity.
        x-nullable: true
        $ref: '#/definitions/PaginationParameters'
      entityPermissionInfo:
        description: Specifies permission information for the entities.
        x-nullable: true
        $ref: '#/definitions/EntityPermissionInformation'
      logicalSize:
        description: |-
          Specifies the logical size of the data in bytes for the Object
          on this node.
          Presence of this field indicates this node is a leaf node.
        type: integer
        format: int64
        x-go-name: LogicalSize
        x-nullable: true
      nodes:
        description: |-
          Array of Child Nodes.

          Specifies children of the current node in the Protection Sources hierarchy.
          When representing Objects in memory, the entire Object subtree
          hierarchy is represented.
          You can use this subtree to navigate down the Object hierarchy.
        type: array
        items:
          description: |-
            Many different node types are supported such as
            'kComputeResource' and 'kResourcePool'.
          type: object
          title: Node in a Protection Sources Tree. (ProtectionSourceNode)
        x-go-name: Nodes
        x-nullable: true
      protectedSourcesSummary:
        description: |-
          Array of Protected Objects.

          Specifies aggregated information about all the
          child Objects of this node that are currently protected by
          a Protection Job.
          There is one entry for each environment that is being backed up.
          The aggregated information for the Object hierarchy's environment will
          be available at the 0th index of the vector.
        type: array
        items:
          $ref: '#/definitions/AggregatedSubtreeInfo'
        x-go-name: ProtectedSourcesSummary
        x-nullable: true
      protectionSource:
        description: Specifies the Protection Source for the current node.
        allOf:
        - $ref: '#/definitions/ProtectionSource'
        x-nullable: true
      registrationInfo:
        description: |-
          Specifies registration information for a root node in a Protection
          Sources tree. A root node represents a registered Source on the
          Cohesity Cluster, such as a vCenter Server.
        allOf:
        - $ref: '#/definitions/RegisteredSourceInfo'
        x-nullable: true
      unprotectedSourcesSummary:
        description: |-
          Array of Unprotected Sources.

          Specifies aggregated information about all the
          child Objects of this node that are not protected by any Protection Jobs.
          The aggregated information for the Objects hierarchy's environment
          will be available at the 0th index of the vector.
          NOTE: This list includes Objects that were protected at some point in the
          past but are no longer actively protected.
          Snapshots containing these Objects may even exist on the Cohesity Cluster
          and be available to recover from.
        type: array
        items:
          $ref: '#/definitions/AggregatedSubtreeInfo'
        x-go-name: UnprotectedSourcesSummary
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourceResponse:
    description: |-
      Specifies the information about the individual object from search api
      response.
    type: object
    properties:
      jobs:
        description: Specifies the list of Protection Jobs that protect the object.
        type: array
        items:
          $ref: '#/definitions/ProtectionJobSummary'
        x-go-name: Jobs
        x-nullable: true
      logicalSizeInBytes:
        description: Specifies the logical size of Protection Source in bytes.
        type: integer
        format: int64
        x-go-name: LogicalSizeInBytes
        x-nullable: true
      parentSource:
        description: Specifies the information about the parent of the source object.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      protectionSourceUidList:
        description: Specifies the list of universal ids of the Protection Source.
        type: array
        items:
          $ref: '#/definitions/ProtectionSourceUid'
        x-go-name: ProtectionSourceUidList
        x-nullable: true
      source:
        description: Specifies the information about the Protection Source.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      uuid:
        description: Specifies the unique id of the Protection Source.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourceSnapshotInformation:
    description: |-
      Specifies details about a Snapshot that backups up a leaf
      Protection Source Object.
    type: object
    title: Protection Source Snapshot.
    properties:
      copyTasks:
        description: |-
          Array of Snapshot Copy Tasks.

          Specifies a list of copy tasks (such as replication and
          archival tasks).
        type: array
        items:
          $ref: '#/definitions/SnapshotCopyTask'
        x-go-name: CopyTasks
        x-nullable: true
      jobId:
        description: Specifies the id of the Protection Job.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobName:
        description: Specifies the name of the Protection Job.
        type: string
        x-go-name: JobName
        x-nullable: true
      jobRunId:
        description: Specifies the id of the Job Run.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      jobRunStartTimeUsecs:
        description: |-
          Specifies the start time of the Job which this object is part of.
          The time is specified in Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: JobRunStartTimeUsecs
        x-nullable: true
      lastRunEndTimeUsecs:
        description: |-
          Specifies the end time of the last Run of this object's snapshot.
          The time is specified in Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: LastRunEndTimeUsecs
        x-nullable: true
      lastRunStartTimeUsecs:
        description: |-
          Specifies the start time of the last Run of this object's snapshot.
          The time is specified in Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: LastRunStartTimeUsecs
        x-nullable: true
      message:
        description: |-
          Specifies warning or error information when the Job Run is not
          successful.
        type: string
        x-go-name: Message
        x-nullable: true
      numBytesRead:
        description: Specifies the total number of bytes read.
        type: integer
        format: int64
        x-go-name: NumBytesRead
        x-nullable: true
      numLogicalBytesProtected:
        description: |-
          Specifies the total number of logical bytes that are protected. The
          logical size is when the data is fully hydrated or expanded.
        type: integer
        format: int64
        x-go-name: NumLogicalBytesProtected
        x-nullable: true
      paginationCookie:
        description: |-
          Specifies an opaque string to pass into the next request to get
          the next set of Snapshots for pagination purposes. If null, this
          is the last set of Snapshots or the number of Snapshots returned
          is equal to or less than the specified pageCount.
        type: integer
        format: uint64
        x-go-name: PaginationCookie
        x-nullable: true
      runStatus:
        description: |-
          Specifies the type of the Job Run.
          'kSuccess' indicates that the Job Run was successful.
          'kRunning' indicates that the Job Run is currently running.
          'kWarning' indicates that the Job Run was successful but warnings were
          issued.
          'kCancelled' indicates that the Job Run was canceled.
          'kError' indicates the Job Run encountered an error and did not run to
          completion.
        type: string
        enum:
        - kSuccess
        - kRunning
        - kWarning
        - kCancelled
        - kError
        x-go-name: RunStatus
        x-nullable: true
      runType:
        description: |-
          Specifies the status of the Job Run.
          'kRegular' indicates an incremental (CBT) backup. Incremental backups
          utilizing CBT (if supported) are captured of the target protection
          objects.
          The first run of a kRegular schedule captures all the blocks.
          'kFull' indicates a full (no CBT) backup. A complete backup
          (all blocks) of the target protection objects are always captured and
          Change Block Tracking (CBT) is not utilized.
          'kLog' indicates a Database Log backup. Capture the database
          transaction logs to allow rolling back to a specific point in time.
          'kSystem' indicates system volume backup. It produces an image
          for bare metal recovery.
        type: string
        enum:
        - kRegular
        - kFull
        - kLog
        - kSystem
        x-go-name: ScheduleType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourceTreeInfo:
    description: |-
      Specifies the registration and protection information of a registered
      Protection Source Tree on the Cohesity Cluster.

      Many different Protection Source trees are supported such as
      'kVMware', 'kAcropolis', 'kPhysical' etc.,
    type: object
    title: Registration and Protection Information.
    properties:
      applications:
        description: |-
          Array of applications hierarchy registered on this node.

          Specifies the application type and the list of instances of the
          application objects. For example for SQL Server, this list provides the
          SQL Server instances running on a VM or a Physical Server.
        type: array
        items:
          $ref: '#/definitions/ApplicationInfo'
        x-go-name: Applications
        x-nullable: true
      entityPermissionInfo:
        description: |-
          Specifies permission information for the protection source for the root
          node of protection source tree.
        x-nullable: true
        $ref: '#/definitions/EntityPermissionInformation'
      logicalSizeBytes:
        description: Specifies the logical size of the Protection Source in bytes.
        type: integer
        format: int64
        x-go-name: LogicalSizeBytes
        x-nullable: true
      registrationInfo:
        description: |-
          Specifies registration information for a root node in a Protection
          Sources tree. A root node represents a registered Source on the
          Cohesity Cluster, such as a vCenter Server.
        allOf:
        - $ref: '#/definitions/RegisteredSourceInfo'
        x-nullable: true
      rootNode:
        description: |-
          Specifies the Protection Source for the root node of the Protection
          Source tree.
        allOf:
        - $ref: '#/definitions/ProtectionSource'
        x-nullable: true
      stats:
        description: Specifies the stats of protection for a Protection Source Tree.
        allOf:
        - $ref: '#/definitions/ProtectionSummary'
        x-nullable: true
      statsByEnv:
        description: |-
          Specifies the breakdown of the stats of protection by environment.
          overrideDescription: true
        type: array
        items:
          $ref: '#/definitions/ProtectionSummaryByEnv'
        x-go-name: StatsByEnv
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourceUid:
    description: Specifies universal id of the Protection source specific to a cluster.
    type: object
    title: Preotection Source UID.
    properties:
      clusterId:
        description: Specifies the id of the cluster on which object is present.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: Specifies the incarnation id of the cluster on which object is
          present.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      parentSourceId:
        description: Specifies parent source id of an object.
        type: integer
        format: int64
        x-go-name: ParentSourceId
        x-nullable: true
      sourceId:
        description: Specifies source id of an object.
        type: integer
        format: int64
        x-go-name: SourceId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourcesJobRunsReportElement:
    description: Specifies a Protection Source and the Snapshots that back it up.
    type: object
    title: Protection Source and Snapshots.
    properties:
      protectionSource:
        description: Specifies the leaf Protection Source Object such as a VM.
        allOf:
        - $ref: '#/definitions/ProtectionSource'
        x-nullable: true
      snapshotsInfo:
        description: |-
          Array of Snapshots

          Specifies the Snapshots that contain backups of the Protection Source
          Object.
        type: array
        items:
          $ref: '#/definitions/ProtectionSourceSnapshotInformation'
        x-go-name: SnapshotsInfo
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourcesJobsSummaryReportResponseWrapper:
    type: object
    title: Protection Sources Jobs Summary Report Response Wrapper.
    properties:
      protectionSourcesJobsSummary:
        description: |-
          Specifies the list of Snapshot summary statistics
          that match the filter criteria.
        type: array
        items:
          $ref: '#/definitions/ProtectionSourcesSummaryStats'
        x-go-name: ProtectionSourcesSummary
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSourcesSummaryStats:
    description: |-
      Specifies Job Run (Snapshot) summary statistics about the specified
      leaf Protection Source Object (such as a VM).
    type: object
    title: Protection Sources Summary Statistics.
    properties:
      firstFailedRunTimeUsecs:
        description: |-
          Specifies the start time of the first failed Job Run protecting this
          Protection Source Object.
          The time is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: FirstFailedRunTimeUsecs
        x-nullable: true
      firstSuccessfulRunTimeUsecs:
        description: |-
          Specifies the start time of the first successful Job Run protecting this
          Protection Source Object.
          The time is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: FirstSuccessfulRunTimeUsecs
        x-nullable: true
      lastFailedRunTimeUsecs:
        description: |-
          Specifies the start time of the last failed Job Run protecting this
          Protection Source Object.
          The time is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: LastFailedRunTimeUsecs
        x-nullable: true
      lastRunEndTimeUsecs:
        description: |-
          Specifies the end time of the last Job Run protecting this
          Protection Source Object.
          The time is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: LastRunEndTimeUsecs
        x-nullable: true
      lastRunErrorMsg:
        description: |-
          Specifies the error message associated with last run, if the last run
          has failed.
        type: string
        x-go-name: LastRunErrorMsg
        x-nullable: true
      lastRunStartTimeUsecs:
        description: |-
          Specifies the start time of the last Job Run protecting this
          Protection Source Object.
          The time is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: LastRunStartTimeUsecs
        x-nullable: true
      lastRunStatus:
        description: |-
          Specifies the Job Run status of the last Job Run protecting
          this Protection Source Object.
          'kSuccess' indicates that the Job Run was successful.
          'kRunning' indicates that the Job Run is currently running.
          'kWarning' indicates that the Job Run was successful but warnings were
          issued.
          'kCancelled' indicates that the Job Run was canceled.
          'kError' indicates the Job Run encountered an error and did not run to
          completion.
        type: string
        enum:
        - kSuccess
        - kRunning
        - kWarning
        - kCancelled
        - kError
        x-go-name: LastRunStatus
        x-nullable: true
      lastRunType:
        description: |-
          Specifies the Job Run type of the last Job Run protecting
          this Protection Source Object.
          'kRegular' indicates an incremental (CBT) backup. Incremental backups
          utilizing CBT (if supported) are captured of the target protection
          objects.
          The first run of a kRegular schedule captures all the blocks.
          'kFull' indicates a full (no CBT) backup. A complete backup
          (all blocks) of the target protection objects are always captured and
          Change Block Tracking (CBT) is not utilized.
          'kLog' indicates a Database Log backup. Capture the database
          transaction logs to allow rolling back to a specific point in time.
          'kSystem' indicates system volume backup. It produces an image
          for bare metal recovery.
        type: string
        enum:
        - kRegular
        - kFull
        - kLog
        - kSystem
        x-go-name: LastRunType
        x-nullable: true
      lastSuccessfulRunTimeUsecs:
        description: |-
          Specifies the start time of the last successful Job Run protecting this
          Protection Source Object.
          The time is specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: LastSuccessfulRunTimeUsecs
        x-nullable: true
      numDataReadBytes:
        description: |-
          Specifies the total number of bytes read while protecting this
          Protection Source Object.
        type: integer
        format: int64
        x-go-name: NumDataReadBytes
        x-nullable: true
      numErrors:
        description: |-
          Specifies the total number of errors reported during Job Runs
          of this Protection Source Object.
        type: integer
        format: int32
        x-go-name: NumErrors
        x-nullable: true
      numLogicalBytesProtected:
        description: |-
          Specifies the total logical bytes protected for this
          Protection Source Object.
          The logical size is when the data is fully hydrated or expanded.
        type: integer
        format: int64
        x-go-name: NumLogicalBytesProtected
        x-nullable: true
      numSnapshots:
        description: |-
          Specifies the total number of Snapshots that are backing up this
          Protection Source Object.
        type: integer
        format: int32
        x-go-name: NumSnapshots
        x-nullable: true
      numSuccessRuns:
        description: |-
          Specifies the total number of successful Job Runs protecting this
          Protection Source Object.
        type: integer
        format: int32
        x-go-name: NumSuccessRuns
        x-nullable: true
      numWarnings:
        description: |-
          Specifies the total number of warnings reported during Job Runs
          of this Protection Source Object.
        type: integer
        format: int32
        x-go-name: NumWarnings
        x-nullable: true
      protectionSource:
        description: |-
          Specifies the leaf Protection Source Object (such as VM).
          Snapshot summary statistics are reported for this Protection Source
          Object.
        allOf:
        - $ref: '#/definitions/ProtectionSource'
        x-nullable: true
      registeredSource:
        description: |-
          Specifies the name of the Registered Source that is the top level
          parent of the specified Protection Source Object.
        type: string
        x-go-name: RegisteredSourceName
        x-nullable: true
      tenants:
        description: |-
          Specifies basic information about tenants having access to the protection
          job.
        type: array
        items:
          $ref: '#/definitions/TenantInfo'
        x-go-name: Tenants
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionStats:
    description: Protection Statistics.
    type: object
    title: Protection Statistics.
    properties:
      numFailed:
        description: Number of Failed Objects.
        type: integer
        format: int32
        x-go-name: NumFailed
        x-nullable: true
      numObjects:
        description: Number of Objects.
        type: integer
        format: int32
        x-go-name: NumObjects
        x-nullable: true
      sizeBytes:
        description: Size in Bytes.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSummary:
    description: |-
      Specifies the number of protected and unprotected
      objects, and their sizes information of the given entity.
    type: object
    title: Protection Summary.
    properties:
      protectedCount:
        description: |-
          Specifies the number of objects that are protected under the given
          entity.
        type: integer
        format: int64
        x-go-name: ProtectedCount
        x-nullable: true
      protectedSize:
        description: Specifies the total size of the protected objects under the given
          entity.
        type: integer
        format: int64
        x-go-name: ProtectedSize
        x-nullable: true
      unprotectedCount:
        description: |-
          Specifies the number of objects that are not protected under the given
          entity.
        type: integer
        format: int64
        x-go-name: UnprotectedCount
        x-nullable: true
      unprotectedSize:
        description: |-
          Specifies the total size of the unprotected objects under the given
          entity.
        type: integer
        format: int64
        x-go-name: UnprotectedSize
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionSummaryByEnv:
    description: |-
      ProtectionSummaryByEnv specifies the number of protected and unprotected
      objects that is break down by environment.
    type: object
    title: Protection Summary By Environment.
    properties:
      environment:
        description: |-
          Specifies the type of environment of the source object like kSQL etc.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      protectedCount:
        description: |-
          Specifies the number of objects that are protected under the given
          entity.
        type: integer
        format: int64
        x-go-name: ProtectedCount
        x-nullable: true
      protectedSize:
        description: Specifies the total size of the protected objects under the given
          entity.
        type: integer
        format: int64
        x-go-name: ProtectedSize
        x-nullable: true
      unprotectedCount:
        description: |-
          Specifies the number of objects that are not protected under the given
          entity.
        type: integer
        format: int64
        x-go-name: UnprotectedCount
        x-nullable: true
      unprotectedSize:
        description: |-
          Specifies the total size of the unprotected objects under the given
          entity.
        type: integer
        format: int64
        x-go-name: UnprotectedSize
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ProtectionTile:
    description: Protection information and statistics.
    type: object
    title: Protection Tile.
    properties:
      lastDayArchival:
        description: Statistics related to archival for last 24 hours.
        x-nullable: true
        $ref: '#/definitions/ProtectionStats'
      lastDayBackup:
        description: Statistics related to Back for last 24 hours.
        x-nullable: true
        $ref: '#/definitions/ProtectionStats'
      lastDayReplicationIn:
        description: Statistics related to incoming replication for last 24 hours.
        x-nullable: true
        $ref: '#/definitions/ProtectionStats'
      lastDayReplicationOut:
        description: Statistics related to outgoing replication for last 24 hours.
        x-nullable: true
        $ref: '#/definitions/ProtectionStats'
    x-go-package: cohesity/iris/server/data/public
  ProtectionTrend:
    description: Specifies details of a protected object with it's protection trends.
    type: object
    title: Protection Trend.
    properties:
      cancelled:
        description: Specifies number of cancelled runs across trends.
        type: integer
        format: int64
        x-go-name: Cancelled
        x-nullable: true
      environment:
        description: |-
          Specifies environment.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      failed:
        description: Specifies number of failed runs across trends.
        type: integer
        format: int64
        x-go-name: Failed
        x-nullable: true
      id:
        description: Specifies protected object's Id.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies protected object's name.
        type: string
        x-go-name: Name
        x-nullable: true
      parentSourceId:
        description: Specifies protected object's parent id.
        type: integer
        format: int64
        x-go-name: ParentSourceId
        x-nullable: true
      parentSourceName:
        description: Specifies protected object's parent name.
        type: string
        x-go-name: ParentName
        x-nullable: true
      running:
        description: Specifies number of in-progress runs across trends.
        type: integer
        format: int64
        x-go-name: Running
        x-nullable: true
      successful:
        description: Specifies number of successful runs across trends.
        type: integer
        format: int64
        x-go-name: Successful
        x-nullable: true
      total:
        description: Specifies total number of runs across trends.
        type: integer
        format: int64
        x-go-name: Total
        x-nullable: true
      trends:
        description: Aggregated protection runs information by days/weeks.
        type: array
        items:
          $ref: '#/definitions/TrendingData'
        x-go-name: Trends
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PublicFolder:
    description: Specifies the O365 PublicFolder details.
    type: object
    title: O365 PublicFolder.
    properties:
      folderId:
        description: Specifies the unique ID of the folder.
        type: string
        x-go-name: FolderId
        x-nullable: true
      publicFolderItemIdList:
        description: |-
          Specifies the PublicFolder items within the folder to be restored incase
          the user wishes not to restore the entire folder.
        type: array
        items:
          type: string
        x-go-name: PublicFolderItemIdList
        x-nullable: true
      restoreEntireFolder:
        description: Specifies whether the entire folder is to be restored.
        type: boolean
        x-go-name: RestoreEntireFolder
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  PublicFoldersBackupEnvParams:
    description: |-
      Message to capture any additional backup params for Public Folders within
      Office365 environment.
    type: object
    title: O365 PublicFolders Backup Environment Parameters.
    properties:
      filteringPolicy:
        description: |-
          The filtering policy describes which paths within a Public Folder should
          be excluded within the backup. If this is not specified, then the entire
          Public Folders will be backed up.
        x-nullable: true
        $ref: '#/definitions/FilteringPolicyProto'
    x-go-package: magneto/base/env_params.pb
  PublicFoldersRestoreParameters:
    description: |-
      Specifies information needed for recovering O365 Public Folders in
      O365Publicfolders environment.
    type: object
    title: O365 Public Folders Restore Parameters.
    properties:
      rootPublicFolderList:
        description: Specifies the list of Public Folders to be restored.
        type: array
        items:
          $ref: '#/definitions/RootPublicFolder'
        x-go-name: RootPublicFolderList
        x-nullable: true
      targetFolderPath:
        description: Specifies the target folder path to restore the Public Folders.
        type: string
        x-go-name: TargetFolderPath
        x-nullable: true
      targetRootPublicFolder:
        description: |-
          Specifies the destination Public Folder where the Public Folders specified
          within RootPublicFolders will be restored with their appropriate paths.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
    x-go-package: cohesity/iris/server/data/public
  PureProtectionSource:
    description: Specifies a Protection Source in a Pure environment.
    type: object
    title: Pure Protection Source.
    properties:
      name:
        description: Specifies a unique name of the Protection Source
        type: string
        x-go-name: Name
        x-nullable: true
      storageArray:
        description: |-
          Specifies a SAN Storage Array information. This is set only when
          the type is kStorageArray.
        x-nullable: true
        $ref: '#/definitions/SanStorageArray'
      type:
        description: |-
          Specifies the type of managed Object in a SAN/Pure Protection
          Source like a kStorageArray or kVolume.
          Examples of SAN Objects include 'kStorageArray' and 'kVolume'.
          'kStorageArray' indicates that entire SAN storage array is being
          protected.
          'kVolume' indicates that volume within the array is being protected.
        type: string
        enum:
        - kStorageArray
        - kVolume
        x-go-name: Type
        x-nullable: true
      volume:
        description: |-
          Specifies a SAN Volume information within a storage array.
          This is set only when the type is kVolume.
        x-nullable: true
        $ref: '#/definitions/SanVolume'
    x-go-package: cohesity/iris/server/data/public
  QStarServerCredentials:
    description: |-
      Specifies the server credentials to connect to a QStar service
      to manage the media Vault.
    type: object
    title: QStar Server Credentials.
    properties:
      host:
        description: |-
          Specifies the IP address or DNS name of the server where QStar
          service is running.
        type: string
        x-go-name: Host
        x-nullable: true
      integralVolumeNames:
        description: |-
          Array of Integral Volume Names.

          Specifies a list of existing Integral Volume names available on the
          QStar server for storing objects.
        type: array
        items:
          type: string
        x-go-name: IntegralVolumeNames
        x-nullable: true
      password:
        description: Specifies the password used to access the QStar host.
        type: string
        x-go-name: Password
        x-nullable: true
      port:
        description: Specifies the listening port where QStar WEB API service is running.
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
      shareType:
        description: |-
          Specifies the sharing protocol type used by QStar to mount
          the integral volume.
          See the Cohesity online help for the recommended protocol
          for your environment.
        type: string
        x-go-name: ShareType
        x-nullable: true
      useHttps:
        description: |-
          Specifies whether to use http or https to connect to the service.
          If true, a secure connection (https) is used.
        type: boolean
        x-go-name: UseHttps
        x-nullable: true
      username:
        description: Specifies the account name used to access the QStar host.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  QoS:
    description: Specifies the Quality of Service (QoS) Policy for the View.
    type: object
    title: QoS.
    properties:
      principalId:
        description: Specifies the name of the QoS Policy used for the View.
        type: integer
        format: int64
        x-go-name: PrincipalId
        x-nullable: true
      principalName:
        description: |-
          Specifies the name of the QoS Policy used for the View such as
          'TestAndDev High', 'Backup Target SSD', 'Backup Target High'
          'TestAndDev Low' and 'Backup Target Low'. For a complete list
          and descriptions, see the 'Create or Edit Views' topic in the
          documentation. If not specified, the default is 'Backup Target Low'.
        type: string
        x-go-name: PrincipalName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  QoSPolicy:
    description: Specifies the Quality of Service (QoS) Policy details.
    type: object
    title: QoSPolicy.
    properties:
      alwaysUseSsd:
        description: Specifies whether to always write to SSD even if SeqWriteSsdPct
          is 0.
        type: boolean
        x-go-name: AlwaysUseSsd
        x-nullable: true
      id:
        description: Specifies Id of the QoS Policy.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      minRequests:
        description: |-
          Specifies minimum number of requests,  corresponding to this Policy,
          executed in the QoS queue.
        type: integer
        format: int32
        x-go-name: MinRequests
        x-nullable: true
      name:
        description: Specifies Name of the Qos Policy.
        type: string
        x-go-name: Name
        x-nullable: true
      priority:
        description: |-
          Specifies Priority of the Qos Policy.
          Priority of QoS Policy as defined in cluster config proto.
        type: string
        enum:
        - kLow
        - kHigh
        x-go-name: Priority
        x-nullable: true
      randomWriteHydraPct:
        description: |-
          Specifies percentage of a random write request belonging to this Policy
          that hits hydra.
        type: integer
        format: int32
        x-go-name: RandomWriteHydraPct
        x-nullable: true
      randomWriteSsdPct:
        description: |-
          Specifies percentage of a random write request belonging to this Policy
          that hits SSD.
        type: integer
        format: int32
        x-go-name: RandomWriteSsdPct
        x-nullable: true
      seqWriteHydraPct:
        description: |-
          Specifies percentage of a sequential write request belonging to this
          Policy that hits hydra.
        type: integer
        format: int32
        x-go-name: SeqWriteHydraPct
        x-nullable: true
      seqWriteSsdPct:
        description: |-
          Specifies percentage of a sequential write request belonging to this
          Policy that hits SSD.
        type: integer
        format: int32
        x-go-name: SeqWriteSsdPct
        x-nullable: true
      weight:
        description: Specifies Weight of the QoS Policy used in QoS queue.
        type: integer
        format: int32
        x-go-name: Weight
        x-nullable: true
      workLoadType:
        description: Specifies Workload type attribute associated with this Policy.
        type: string
        x-go-name: WorkloadType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  QuotaAndUsageInView:
    description: Specifies the usage and quota information for a specific view.
    type: object
    title: Quota And Usage In View.
    properties:
      quota:
        description: User quota policy applied to this user.
        x-nullable: true
        $ref: '#/definitions/QuotaPolicy'
      usageBytes:
        description: Usage in bytes of this user in this view.
        type: integer
        format: int64
        x-go-name: UsageBytes
        x-nullable: true
      viewId:
        description: The usage and quota policy information of this user for this
          view.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
      viewName:
        description: View name.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  QuotaPolicy:
    description: |-
      Specifies a quota limit that can be optionally applied to Views and
      View Boxes.
      At the View level, this quota defines a logical limit for usage on the View.
      At the View Box level, this quota defines a physical limit or
      a default logical View limit.
      If a physical quota is specified for View Box, this quota defines a physical
      limit for the usage on the View Box.
      If a default logical View quota is specified for View Box, this limit
      is inherited by all the Views in that View Box.
      However, this inherited quota can be overwritten at the View level.
      A new write is not allowed if the resource will exceed the specified quota.
      However, it takes time for the Cohesity Cluster to calculate
      the usage across Nodes, so the limit may be exceeded by a small amount.
      In addition, if the limit is increased or data is removed,
      there may be a delay before the Cohesity Cluster allows more data
      to be written to the resource, as the Cluster calculates the usage
      across Nodes.
    type: object
    title: Quota Policy
    properties:
      alertLimitBytes:
        description: |-
          Specifies if an alert should be triggered when the usage of this
          resource exceeds this quota limit.
          This limit is optional and is specified in bytes.
          If no value is specified, there is no limit.
        type: integer
        format: int64
        x-go-name: AlertLimitBytes
        x-nullable: true
      alertThresholdPercentage:
        description: |-
          Supported only for user quota policy. Specifies when the usage goes above
          an alert threshold percentage which is:
          HardLimitBytes * AlertThresholdPercentage, eg: 80% of HardLimitBytes
          Can only be set if HardLimitBytes is set.
          Cannot be set if AlertLimitBytes is already set.
        type: integer
        format: int64
        x-go-name: AlertThresholdPercentage
        x-nullable: true
      hardLimitBytes:
        description: |-
          Specifies an optional quota limit on the usage allowed for this
          resource. This limit is specified in bytes. If no value is specified,
          there is no limit.
        type: integer
        format: int64
        x-go-name: HardLimitBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RdsParams:
    description: Specifies rds params for the restore operation.
    type: object
    title: RDS parameters.
    required:
    - dbInstanceId
    properties:
      availabilityZoneId:
        description: Entity representing the availability zone to use while restoring
          the DB.
        type: integer
        format: int64
        x-go-name: AvailabilityZoneId
        x-nullable: true
      dbInstanceId:
        description: |-
          The DB instance identifier to use for the restored DB. This field is
          required.
        type: string
        x-go-name: DbInstanceId
        x-nullable: true
      dbOptionGroupId:
        description: Entity representing the RDS option group to use while restoring
          the DB.
        type: integer
        format: int64
        x-go-name: DbOptionGroupId
        x-nullable: true
      dbParameterGroupId:
        description: Entity representing the RDS parameter group to use while restoring
          the DB.
        type: integer
        format: int64
        x-go-name: DbParameterGroupId
        x-nullable: true
      dbPort:
        description: Port to use for the DB in the restored RDS instance.
        type: integer
        format: int32
        x-go-name: DbPort
        x-nullable: true
      enableAutoMinorVersionUpgrade:
        description: Whether to enable auto minor version upgrade in the restored
          DB.
        type: boolean
        x-go-name: EnableAutoMinorVersionUpgrade
        x-nullable: true
      enableCopyTagsToSnapshots:
        description: Whether to enable copying of tags to snapshots of the DB.
        type: boolean
        x-go-name: EnableCopyTagsToSnapshots
        x-nullable: true
      enableDbAuthentication:
        description: Whether to enable IAM authentication for the DB.
        type: boolean
        x-go-name: EnableDbAuthentication
        x-nullable: true
      enablePublicAccessibility:
        description: Whether this DB will be publicly accessible or not.
        type: boolean
        x-go-name: EnablePublicAccessibility
        x-nullable: true
      isMultiAzDeployment:
        description: Whether this is a multi-az deployment or not.
        type: boolean
        x-go-name: IsMultiAzDeployment
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RecoverDisksTaskStateProto:
    type: object
    title: Persistent state for a "recover disks" restore task.
    properties:
      recoverVirtualDiskInfo:
        description: Captures the details of the recover virtual disk info.
        x-nullable: true
        $ref: '#/definitions/RecoverVirtualDiskInfoProto'
      recoverVirtualDiskParams:
        description: Captures the original parameters from Iris.
        x-nullable: true
        $ref: '#/definitions/RecoverVirtualDiskParams'
    x-go-package: magneto/master/base/master.pb
  RecoverTaskRequest:
    description: |-
      Create a Restore Task Request for recovering VMs or mounting volumes to
      mount points.
    type: object
    title: Create Restore Task Request.
    required:
    - name
    - type
    properties:
      PublicFoldersParameters:
        description: |-
          Specifies additional parameters for 'kRecoverO365PublicFolders' restore
          objects.
        x-nullable: true
        $ref: '#/definitions/PublicFoldersRestoreParameters'
      acropolisParameters:
        description: Specifies additional parameters for 'kAcropolis' restore objects.
        x-nullable: true
        $ref: '#/definitions/AcropolisRestoreParameters'
      continueOnError:
        description: |-
          Specifies if the Restore Task should continue when some operations on some
          objects fail. If true, the Cohesity Cluster ignores intermittent
          errors and restores as many objects as possible.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      deployVmsToCloud:
        description: Specifies parameters to deploy VMs to cloud.
        x-nullable: true
        $ref: '#/definitions/DeployVmsToCloud'
      glacierRetrievalType:
        description: |-
          Specifies the way data needs to be retrieved from the external target.
          This information will be filled in by Iris and Magneto will pass it along
          to the Icebox as it is to support bulk retrieval from Glacier.
          Specifies the type of Restore Task.

          'kStandard' specifies retrievals that allow to access any of your archives
          within several hours. Standard retrievals typically complete within 3–5
          hours. This is the default option for retrieval requests that do not specify
          the retrieval option.
          'kBulk' specifies retrievals that are Glacier’s lowest-cost retrieval
          option, which can be used to retrieve large amounts, even petabytes, of data
          inexpensively in a day. Bulk retrieval typically complete within 5–12 hours.
          'kExpedited' specifies retrievals that allows to quickly access your data
          when occasional urgent requests for a subset of archives are required. For
          all but the largest archives (250 MB+), data accessed using Expedited
          retrievals are typically made available within 1–5 minutes.
        type: string
        enum:
        - kStandard
        - kBulk
        - kExpedited
        x-go-name: GlacierRetrievalType
        x-nullable: true
      hypervParameters:
        description: Specifies additional parameters for 'kHyperV' restore objects.
        x-nullable: true
        $ref: '#/definitions/HypervRestoreParameters'
      kubernetesParameters:
        description: Specifies additional parameters for 'kKubernetes' restore objects.
        x-nullable: true
        $ref: '#/definitions/KubernetesRestoreParameters'
      mountParameters:
        description: Specifies parameters required for mounting volumes.
        x-nullable: true
        $ref: '#/definitions/MountVolumesParameters'
      name:
        description: |-
          Specifies the name of the Restore Task. This field must be set and
          must be a unique name.
        type: string
        x-go-name: Name
        x-nullable: true
      newParentId:
        description: |-
          Specify a new registered parent Protection Source. If specified
          the selected objects are cloned or recovered to this new Protection
          Source. If not specified, objects are cloned or recovered
          to the original Protection Source that was managing them.
        type: integer
        format: int64
        x-go-name: NewParentId
        x-nullable: true
      objects:
        description: |-
          Array of Objects.

          Specifies a list of Protection Source objects or Protection Job objects
          (with specified Protection Source objects).
        type: array
        items:
          $ref: '#/definitions/RestoreObjectDetails'
        x-go-name: Objects
        x-nullable: true
      oneDriveParameters:
        description: Specifies additional parameters for 'kRecoverO365Drive' restore
          objects.
        x-nullable: true
        $ref: '#/definitions/OneDriveRestoreParameters'
      outlookParameters:
        description: Specifies additional parameters for 'kRecoverEmails' restore
          objects.
        x-nullable: true
        $ref: '#/definitions/OutlookRestoreParameters'
      restoreViewParameters:
        description: Specifies settings for restoring view.
        title: Restore View.
        x-nullable: true
        $ref: '#/definitions/UpdateViewParam'
      sharePointParameters:
        description: Specifies additional parameters for 'kRecoverSites' restore objects.
        x-nullable: true
        $ref: '#/definitions/SharePointRestoreParameters'
      type:
        description: |-
          Specifies the type of Restore Task such as 'kRecoverVMs' or
          'kMountVolumes'.
          'kRecoverVMs' specifies a Restore Task that recovers VMs.
          'kMountVolumes' specifies a Restore Task that mounts volumes to mount
          points.
          'kRecoverNamespaces' specifies a Restore Task that recovers Kubernetes
          namespaces.
          'kMountFileVolume' specifies a Restore Task that mounts a file volume.
        type: string
        enum:
        - kRecoverVMs
        - kMountVolumes
        - kRecoverNamespaces
        - kMountFileVolume
        x-go-name: Type
        x-nullable: true
      viewName:
        description: |-
          Specifie target view into which the objects are to be cloned when doing
          recovery for NAS.
        type: string
        x-go-name: ViewName
        x-nullable: true
      virtualDiskRestoreParameters:
        description: Specifies parameters for restoring virtual disks from VM.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskRestoreParameters'
      vlanParameters:
        description: Specifies VLAN parameters for the restore operation.
        x-nullable: true
        $ref: '#/definitions/VlanParameters'
      vmwareParameters:
        description: Specifies additional parameters for 'kVmware' restore objects.
        x-nullable: true
        $ref: '#/definitions/VmwareRestoreParameters'
    x-go-package: cohesity/iris/server/data/public
  RecoverVirtualDiskInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined.

      RecoverVirtualDiskInfoProto extension                     Location
      =============================================================================
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about recover virtual disks task for
      any of the environments we support. Environment specific virtual disk infos
      are defined as extensions to this proto.
    properties:
      cleanupError:
        description: |-
          If an error is encountered while cleaning up state, then it will be
          captured as part of this.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      dataMigrationError:
        description: |-
          If an error was encountered while migrating the disks it will be captured
          here.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      error:
        description: |-
          If recovering of disks failed, this field may contain the cause
          of the failure.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      finished:
        description: This will be set to true if the task is complete on the slave.
        type: boolean
        x-go-name: Finished
        x-nullable: true
      instantRecoveryFinished:
        description: |-
          This will be set to true once the instant recovery of the virtual disk is
          complete.
        type: boolean
        x-go-name: InstantRecoveryFinished
        x-nullable: true
      migrateTaskMoref:
        description: The task moref of the migrate job.
        x-nullable: true
        $ref: '#/definitions/MORef'
      restoreDisksTaskInfoProto:
        description: |-
          The environment specific extensions of this proto store the detailed
          status information about the task.
        title: |-
          The state of the task that sets up and tears down the restore disks that
          are needed during the mount/teardown operation
        x-nullable: true
        $ref: '#/definitions/SetupRestoreDiskTaskInfoProto'
      slaveTaskStartTimeUsecs:
        description: This is the timestamp at which the slave task started.
        type: integer
        format: int64
        x-go-name: SlaveTaskStartTimeUsecs
        x-nullable: true
      taskState:
        description: The state of the task.
        type: integer
        format: int32
        x-go-name: TaskState
        x-nullable: true
      type:
        description: The type of environment this recover virtual disk info pertains
          to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RecoverVirtualDiskParams:
    type: object
    title: Contains information needed when recovering virtual disks.
    properties:
      powerOffVmBeforeRecovery:
        description: Whether to power-off the VM before recovering virtual disks.
        type: boolean
        x-go-name: PowerOffVmBeforeRecovery
        x-nullable: true
      powerOnVmAfterRecovery:
        description: Whether to power-on the VM after recovering virtual disks.
        type: boolean
        x-go-name: PowerOnVmAfterRecovery
        x-nullable: true
      targetEntity:
        description: Target entity to which the disks should be attached.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      virtualDiskMappings:
        type: array
        items:
          $ref: '#/definitions/RecoverVirtualDiskParams_VirtualDiskMapping'
        x-go-name: VirtualDiskMappings
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RecoverVirtualDiskParams_VirtualDiskMapping:
    type: object
    title: Represents a single source/destination pair for the block-based restore.
    properties:
      diskToOverwrite:
        description: |-
          If the user is overwriting a destination disk, then this will capture
          the target disk info.
          NOTE: If this is specified, then power_off_vm_before_recovery must be
          true.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskId'
      srcDisk:
        description: The source disk information.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskId'
      targetLocation:
        description: |-
          This contains the target location information, for e.g. a datastore in
          VMware environment.
          NOTE: If disk_to_overwrite is specified then the target location is
          automatically deduced, if not this must be specified.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RecoverVolumesParams:
    type: object
    title: Contains information for recovering volumes in the Physical environment.
    properties:
      forceUnmountVolume:
        description: Whether volume would be dismounted first during LockVolume failure
        type: boolean
        x-go-name: ForceUnmountVolume
        x-nullable: true
      mappingVec:
        description: Contains the volume mapping data that defines the restore task.
        type: array
        items:
          $ref: '#/definitions/RecoverVolumesParams_Mapping'
        x-go-name: MappingVec
        x-nullable: true
      targetEntity:
        description: Target entity where the volumes are being mounted.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RecoverVolumesParams_Mapping:
    type: object
    title: Represents a single source/destination pair for the block-based restore.
    properties:
      dstGuid:
        description: The destination, pertains to the newly rebuilt system.
        type: string
        x-go-name: DstGuid
        x-nullable: true
      srcGuid:
        description: The source, pertains to the original backup.
        type: string
        x-go-name: SrcGuid
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RecoverVolumesTaskStateProto:
    type: object
    title: Persistent state for a "recover volumes" restore task.
    properties:
      params:
        description: Captures the original parameters from Iris.
        x-nullable: true
        $ref: '#/definitions/RecoverVolumesParams'
      taskResultVec:
        description: |-
          Contains high-level per-volume information. This data is here because
          Iris cannot see into protobuf extensions yet needs to display per-subtask
          progress.
        type: array
        items:
          $ref: '#/definitions/RecoverVolumesTaskStateProto_TaskResult'
        x-go-name: TaskResultVec
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  RecoverVolumesTaskStateProto_TaskResult:
    type: object
    title: Contains high-level per-volume information.
    properties:
      dstGuid:
        description: Volume GUID for the Target Entity (phy host).
        type: string
        x-go-name: DstGuid
        x-nullable: true
      error:
        description: Contains details when the associated subtask fails.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      progressMonitorTaskPath:
        description: The path relative to the root path of the restore task progress
          monitor.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  RecoveriesTile:
    description: Recoveries information.
    type: object
    title: Recoveries Tile.
    properties:
      lastMonthNumRecoveries:
        description: Number of Recoveries in the last 30 days.
        type: integer
        format: int32
        x-go-name: LastMonthNumRecoveries
        x-nullable: true
      lastMonthRecoveriesByType:
        description: Recoveries by Type in the last month.
        type: array
        items:
          $ref: '#/definitions/RestoreCountByObjectType'
        x-go-name: LastMonthRecoveriesByType
        x-nullable: true
      lastMonthRecoverySizeBytes:
        description: Bytes recovered in the last 30 days.
        type: integer
        format: int64
        x-go-name: LastMonthRecoverySizeBytes
        x-nullable: true
      recoveryNumRunning:
        description: Number of recoveries that are currently running.
        type: integer
        format: int32
        x-go-name: RecoveryNumRunning
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RecoveryTaskInfo:
    description: Parameters for a recovery op.
    type: object
    title: Recovery Task Information.
    properties:
      name:
        description: Name of the recovery task.
        type: string
        x-go-name: Name
        x-nullable: true
      taskId:
        description: Id of the recovery task.
        type: string
        x-go-name: TaskId
        x-nullable: true
      type:
        description: |-
          Denotes if the recovery task has an archival target.
          This param is used to reflect if the recovery op has an archival
          target to work with.
          'local' indicates no archival target.
          'archive' indicates that objects restored using an archival target.
        type: string
        enum:
        - local
        - archive
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ReducerInfo:
    type: object
    title: Information about a reducer.
    properties:
      code:
        description: The code of the reducer in the specified language.
        type: string
        x-go-name: Code
        x-nullable: true
      id:
        description: |-
          Reduced ID generated by system. Absent when user is creating a new
          reducer. Mandatory for all other use cases.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      isSystemDefined:
        description: Whether the mapper is system defined.
        type: boolean
        x-go-name: IsSystemDefined
        x-nullable: true
      jarName:
        description: |-
          User can write their own mapper/reducer or upload jar files containing
          mappers and reducers. If this reducer was part of a jar file, then this
          field will have the JAR name.
        type: string
        x-go-name: JarName
        x-nullable: true
      jarPath:
        description: |-
          path of JAR in which this reducer was found. This is applicable only when
          this reducer was uploaded via JAR.
        type: string
        x-go-name: JarPath
        x-nullable: true
      language:
        description: Programming language used by the reducer.
        type: integer
        format: int32
        x-go-name: Language
        x-nullable: true
      name:
        description: Name of the reducer.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  ReducersWrapper:
    description: ReducersWrapper is the struct to define the list of reducers.
    type: object
    title: Reducers Wrapper.
    properties:
      reducers:
        description: Reducers specifies the list of available reducers in analytics
          workbench.
        type: array
        items:
          $ref: '#/definitions/ReducerInfo'
        x-go-name: Reducers
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RegisterApplicationServersParameters:
    description: |-
      Specifies the parameters required to register Application Servers
      running in a Protection Source.
    type: object
    title: Register Application Servers Parameters.
    properties:
      applications:
        description: |-
          Specifies the types of applications such as 'kSQL', 'kExchange', 'kAD'
          running on the Protection Source.
          overrideDescription: true
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: array
        items:
          type: string
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kAzureNative
          - kKubernetes
          - kElastifile
          - kAD
          - kRDSSnapshotManager
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
        x-go-name: Applications
        x-nullable: true
      hasPersistentAgent:
        description: |-
          Set this to true if a persistent agent is running on the host. If this is
          specified, then credentials would not be used to log into the host
          environment. This mechanism may be used in environments such as VMware
          to get around UAC permission issues by running the agent as a service
          with the right credentials. If this field is not specified, credentials
          must be specified.
        type: boolean
        x-go-name: HasPersistentAgent
        x-nullable: true
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      protectionSourceId:
        description: |-
          Specifies the Id of the Protection Source that contains one or more
          Application Servers running on it.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RegisterProtectionSourceParameters:
    description: Specifies the parameters required to register a Protection Source.
    type: object
    title: Register Protection Source Parameters.
    properties:
      acropolisType:
        description: |-
          Specifies the entity type if the environment is kAcropolis.
          overrideDescription: true
        type: string
        enum:
        - kStandaloneCluster
        x-go-name: AcropolisType
        x-nullable: true
      agentEndpoint:
        description: Specifies the agent endpoint if it is different from the source
          endpoint.
        type: string
        x-go-name: AgentEndpoint
        x-nullable: true
      awsCredentials:
        description: Specifies credentials needed to authenticate with AWS Cloud Platform.
        title: AWS Source Credentials.
        x-nullable: true
        $ref: '#/definitions/AwsCredentials'
      awsFleetParams:
        description: |-
          Specifies information related to AWS fleets launched for various purposes.
          This will only be set for kIAMUser entity.
        x-nullable: true
        $ref: '#/definitions/AwsFleetParams'
      azureCredentials:
        description: Specifies credentials needed to authenticate with Azure Cloud
          Platform.
        title: Azure Source Credentials.
        x-nullable: true
        $ref: '#/definitions/AzureCredentials'
      blacklistedIpAddresses:
        description: |-
          Specifies the list of IP Addresses on the registered source to be
          blacklisted for doing any type of IO operations.
        type: array
        items:
          type: string
        x-go-name: BlacklistedIpAddresses
        x-nullable: true
      clusterNetworkInfo:
        description: |-
          Specifies information related to cluster. This is only valid for CE
          clusters. This is only populated for kIAMUser entity.
        x-nullable: true
        $ref: '#/definitions/FleetNetworkParams'
      endpoint:
        description: |-
          Specifies the network endpoint of the Protection Source where it is
          reachable. It could be an URL or hostname or an IP address of the
          Protection Source.
        type: string
        x-go-name: Endpoint
        x-nullable: true
      environment:
        description: |-
          Specifies the environment such as 'kPhysical' or 'kVMware' of the
          Protection Source.
          overrideDescription: true
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      exchangeDagProtectionPreference:
        description: |-
          Specifies information about the preference order while choosing
          between which database copy of the exchange database which is part of
          DAG should be protected.
        x-nullable: true
        $ref: '#/definitions/ExchangeDAGProtectionPreference'
      forceRegister:
        description: |-
          ForceRegister is applicable to Physical Environment. By default, the agent
          running on a physical host will fail the registration, if it is already
          registered as part of another cluster. By setting this option to true,
          agent can be forced to register with the current cluster. This is a hidden
          parameter and should not be documented externally.
        type: boolean
        x-go-name: ForceRegister
        x-nullable: true
      gcpCredentials:
        description: Specifies credentials needed to authenticate with Google Cloud
          Platform.
        title: GCP Source Credentials.
        x-nullable: true
        $ref: '#/definitions/GcpCredentials'
      hostType:
        description: |-
          Specifies the optional OS type of the Protection Source (such as kWindows
          or kLinux).
          overrideDescription: true
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      hyperVType:
        description: |-
          Specifies the entity type if the environment is kHyperV.
          overrideDescription: true
        type: string
        enum:
        - kSCVMMServer
        - kStandaloneHost
        - kStandaloneCluster
        x-go-name: HyperVType
        x-nullable: true
      kubernetesCredentials:
        description: Specifies the credentials needed to authenticate a Kubernetes
          cluster.
        title: Kubernetes Source Credentials.
        x-nullable: true
        $ref: '#/definitions/KubernetesCredentials'
      kubernetesType:
        description: |-
          Specifies the entity type if the environment is kKubernetes.
          overrideDescription: true
        type: string
        enum:
        - kCluster
        x-go-name: KubernetesType
        x-nullable: true
      kvmType:
        description: |-
          Specifies the entity type if the environment is kKVM.
          overrideDescription: true
        type: string
        enum:
        - kOVirtManager
        x-go-name: KvmType
        x-nullable: true
      nasMountCredentials:
        description: |-
          Specifies the server credentials to connect to a NetApp server.
          This field is required for mounting SMB volumes on NetApp servers.
        title: NAS Server Credentials.
        allOf:
        - $ref: '#/definitions/NasMountCredentialParams'
        x-nullable: true
      netappType:
        description: |-
          Specifies the entity type such as 'kCluster,' if the environment is
          kNetapp.
        type: string
        enum:
        - kCluster
        - kVserver
        x-go-name: NetappType
        x-nullable: true
      nimbleType:
        description: |-
          Specifies the entity type such as 'kStorageArray' if the environment is
          kNimble.
          overrideDescription: true
        type: string
        enum:
        - kStorageArray
        x-go-name: NimbleType
        x-nullable: true
      office365CredentialsList:
        description: |-
          Office365 Source Credentials.

          Specifies credentials needed to authenticate & authorize user for
          Office365 using MS Graph APIs.
        type: array
        items:
          $ref: '#/definitions/Office365Credentials'
        x-go-name: Office365CredentialsList
        x-nullable: true
      office365Region:
        description: Specifies the region for Office365.
        type: string
        x-go-name: Office365Region
        x-nullable: true
      office365Type:
        description: |-
          Specifies the entity type such as 'kDomain', 'kOutlook', 'kMailbox', if the
          environment is kO365.
        type: string
        enum:
        - kDomain
        x-go-name: Office365Type
        x-nullable: true
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      physicalType:
        description: |-
          Specifies the entity type such as 'kPhysicalHost' if the environment is
          kPhysical.
          overrideDescription: true
        type: string
        enum:
        - kHost
        x-go-name: PhysicalType
        x-nullable: true
      pureType:
        description: |-
          Specifies the entity type such as 'kStorageArray' if the environment is
          kPure.
          overrideDescription: true
        type: string
        enum:
        - kStorageArray
        x-go-name: PureType
        x-nullable: true
      reRegister:
        description: |-
          ReRegister is applicable to Physical Environment. By default, the
          agent running on a physical host will fail the registration, if it is
          already registered with the cluster. By setting this option to true, agent
          can be re-registered with the current cluster.
        type: boolean
        x-go-name: ReRegister
        x-nullable: true
      sourceSideDedupEnabled:
        description: |-
          This controls whether to use source side dedup on the source or not.
          This is only applicable to sources which support source side dedup
          (e.g., Linux physical servers).
        type: boolean
        x-go-name: SourceSideDedupEnabled
        x-nullable: true
      sslVerification:
        description: |-
          SSL verification parameter is applicable to VMware environment. It can be
          populated with the server's CA certificate or certificate chain and
          vCenter's certificate will be validated against this.
        x-nullable: true
        $ref: '#/definitions/SslVerification'
      subnets:
        description: |-
          Specifies the list of subnet IP addresses and CIDR prefix for enabeling
          network data transfer. Currently, only Subnet IP and NetbaskBits are valid
          input fields. All other fields provided as input will be ignored.
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: Subnets
        x-nullable: true
      throttlingPolicy:
        description: Specifies the throttling policy that should be applied to this
          Source.
        allOf:
        - $ref: '#/definitions/ThrottlingPolicyParameters'
        x-nullable: true
      throttlingPolicyOverrides:
        description: |-
          Array of Throttling Policy Overrides for Datastores.

          Specifies a list of Throttling Policy for datastores that override the
          common throttling policy specified for the registered Protection Source.
          For datastores not in this list, common policy will still apply.
        type: array
        items:
          $ref: '#/definitions/ThrottlingPolicyOverride'
        x-go-name: ThrottlingPolicyOverrides
        x-nullable: true
      useOAuthForExchangeOnline:
        description: |-
          Specifies whether OAuth should be used for authentication in case of
          Exchange Online.
        type: boolean
        x-go-name: UseOAuthForExchangeOnline
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
      vlanParams:
        description: |-
          Specifies the VLAN parameters to be used while taking the backup of this
          entity and is the preferred selection for restoring the same.
          For restores, the VLAN parameters specifed here can be overridden.
          Currently, this is only applicable for Physical hosts running Oracle.
        x-nullable: true
        $ref: '#/definitions/VlanParameters'
      vmwareType:
        description: |-
          Specifies the entity type such as 'kVCenter' if the environment is
          kKMware.
          overrideDescription: true
        type: string
        enum:
        - kVCenter
        - kStandaloneHost
        - kvCloudDirector
        x-go-name: VMwareType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RegisterRemoteCluster:
    description: |-
      Specifies the settings required for registering a remote Cluster
      on this local Cluster.
    type: object
    title: Register Remote Cluster.
    properties:
      allEndpointsReachable:
        description: |-
          Specifies whether any endpoint (such as a Node) on the remote Cluster
          is reachable from this local Cluster.
          If true, a service running on the local Cluster can communicate
          directly with any of its peers running on the remote Cluster, without
          using a proxy.
        type: boolean
        x-go-name: AllEndpointsReachable
        x-nullable: true
      autoRegisterTarget:
        description: |-
          Specifies whether the remote cluster needs to be kept in sync.
          This will be set to true by default.
        type: boolean
        x-go-name: AutoRegisterTarget
        x-nullable: true
      autoRegistration:
        description: |-
          Specifies whether the remote registration has happened automatically
          (due to registration on the other site).
          Can't think of other states (other than manually & automatically) so this
          isn't an enum.
          For a manual registration, this field will not be set.
        type: boolean
        x-go-name: AutoRegistration
        x-nullable: true
      bandwidthLimit:
        description: |-
          Specifies settings for limiting the data transfer rate between
          the local and remote Clusters.
        title: Bandwidth Limit.
        x-nullable: true
        $ref: '#/definitions/BandwidthLimit'
      clusterId:
        description: Specifies the unique id of the remote Cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: |-
          Specifies the unique incarnation id of the remote Cluster. This
          id is determined dynamically by contacting the remote Cluster.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      compressionEnabled:
        description: |-
          Specifies whether to compress the outbound data when
          transferring the replication data over the network to the remote Cluster.
        type: boolean
        x-go-name: CompressionEnabled
        x-nullable: true
      description:
        description: Specifies any additional information if needed.
        type: string
        x-go-name: Description
        x-nullable: true
      encryptionKey:
        description: |-
          Specifies the encryption key used for encrypting the replication data
          from a local Cluster to a remote Cluster.
          If a key is not specified, replication traffic encryption is disabled.
          When Snapshots are replicated from a local Cluster to a remote Cluster,
          the encryption key specified on the local Cluster must be the same
          as the key specified on the remote Cluster.
        type: string
        x-go-name: EncryptionKey
        x-nullable: true
      name:
        description: |-
          Specifies the name of the remote cluster. This field is determined
          dynamically by contacting the remote cluster.
        type: string
        x-go-name: Name
        x-nullable: true
      networkInterface:
        description: |-
          Specifies the name of the network interfaces to use for communicating with
          the remote Cluster.
        type: string
        x-go-name: NetworkInterface
        x-nullable: true
      password:
        description: |-
          Specifies the password for Cohesity user to use when
          connecting to the remote Cluster.
        type: string
        x-go-name: Password
        x-nullable: true
      purposeRemoteAccess:
        description: Whether the remote cluster will be used for remote access for
          SPOG.
        type: boolean
        x-go-name: PurposeRemoteAccess
        x-nullable: true
      purposeReplication:
        description: Whether the remote cluster will be used for replication.
        type: boolean
        x-go-name: PurposeReplication
        x-nullable: true
      remoteAccessCredentials:
        description: |-
          Optional field for the user credentials to connect to Iris for remote
          access for SPOG. If this is not specified, then credentials specified
          for replication set up will be used for remote access for SPOG.
          Allowing a different user credentials to be set up for SPOG permits
          having different roles for remote access for SPOG and replication set
          up.
        x-nullable: true
        $ref: '#/definitions/AccessTokenCredential'
      remoteIps:
        description: |-
          Array of Remote Node IP Addresses.

          Specifies the IP addresses of the Nodes on the remote Cluster to
          connect with. These IP addresses can also be VIPS.
          Specifying hostnames is not supported.
        type: array
        items:
          type: string
        x-go-name: RemoteIps
        x-nullable: true
      remoteIrisPorts:
        description: |-
          Array of Ports.

          Specifies the ports to use when connecting to the Nodes of the
          remote Cluster.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: RemoteIrisPorts
        x-nullable: true
      userName:
        description: |-
          Specifies the Cohesity user name used to connect to the
          remote Cluster.
        type: string
        x-go-name: UserName
        x-nullable: true
      validateOnly:
        description: Whether to only validate the credentials without saving the information.
        type: boolean
        x-go-name: ValidateOnly
        x-nullable: true
      viewBoxPairInfo:
        description: |-
          Array of Storage Domain (View Box) Pairs.

          Specifies pairings between Storage Domains (View Boxes) on the local Cluster
          with Storage Domains (View Boxes) on a remote Cluster that are used in
          replication.
        type: array
        items:
          $ref: '#/definitions/ViewBoxPairInfo'
        x-go-name: ViewBoxPairInfoList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RegisteredAppInfo:
    type: object
    properties:
      authenticationErrorMessage:
        description: |-
          Specifies an authentication error message. This indicates the given
          credentials are rejected and the registration of the application is not
          successful.
        type: string
        x-go-name: AuthenticationErrorMessage
        x-nullable: true
      authenticationStatus:
        description: |-
          Specifies the status of authenticating to the Protection Source
          when registering this application with Cohesity Cluster. If the status is
          'kFinished' and there is no error, registration is successful.
          Specifies the status of the authentication during the registration of a
          Protection Source.
          'kPending' indicates the authentication is in progress.
          'kScheduled' indicates the authentication is scheduled.
          'kFinished' indicates the authentication is completed.
          'kRefreshInProgress' indicates the refresh is in progress.
        type: string
        enum:
        - kPending
        - kScheduled
        - kFinished
        - kRefreshInProgress
        x-go-name: AuthenticationStatus
        x-nullable: true
      environment:
        description: |-
          Specifies the application environment.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      hostSettingsCheckResults:
        description: |-
          Specifies the list of check results internally performed to verify status of
          various services such as 'AgnetRunning', 'SQLWriterRunning' etc.
        type: array
        items:
          $ref: '#/definitions/HostSettingsCheckResult'
        x-go-name: HostSettingsCheckResults
        x-nullable: true
      refreshErrorMessage:
        description: |-
          Specifies a message if there was any error encountered during the last
          rebuild of the application tree. If there was no error during the
          last rebuild, this field is reset.
        type: string
        x-go-name: RefreshErrorMessage
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RegisteredApplicationServer:
    description: |-
      Specifies an Application Server and the Protection Source that registered
      the Application Server.
    type: object
    title: Registered Application Server.
    properties:
      applicationServer:
        description: |-
          Specifies the child subtree used to store additional application-level
          Objects.
          Different environments use the subtree to store application-level
          information. For example for SQL Server, this subtree stores the
          SQL Server instances running on a VM.
        title: Application Server and the subtrees below them.
        allOf:
        - $ref: '#/definitions/ProtectionSourceNode'
        x-nullable: true
      registeredProtectionSource:
        description: |-
          Specifies the Protection Source like a VM or Physical Server that
          registered the Application Server.
        allOf:
        - $ref: '#/definitions/ProtectionSource'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RegisteredSourceInfo:
    description: Specifies information about a registered Source.
    type: object
    title: Registered Source Info.
    properties:
      accessInfo:
        description: |-
          Specifies the parameters required to establish a connection
          with a particular environment.
        x-nullable: true
        $ref: '#/definitions/ConnectorParameters'
      authenticationErrorMessage:
        description: |-
          Specifies an authentication error message. This indicates the given
          credentials are rejected and the registration of the source is not
          successful.
        type: string
        x-go-name: AuthenticationErrorMessage
        x-nullable: true
      authenticationStatus:
        description: |-
          Specifies the status of the authenticating to the Protection Source
          when registering it with Cohesity Cluster. If the status is 'kFinished'
          and there is no error, registration is successful.
          Specifies the status of the authentication during the registration of a
          Protection Source.
          'kPending' indicates the authentication is in progress.
          'kScheduled' indicates the authentication is scheduled.
          'kFinished' indicates the authentication is completed.
          'kRefreshInProgress' indicates the refresh is in progress.
        type: string
        enum:
        - kPending
        - kScheduled
        - kFinished
        - kRefreshInProgress
        x-go-name: AuthenticationStatus
        x-nullable: true
      blacklistedIpAddresses:
        description: |-
          Specifies the list of IP Addresses on the registered source to be
          blacklisted for doing any type of IO operations.
        type: array
        items:
          type: string
        x-go-name: BlacklistedIpAddresses
        x-nullable: true
      cassandraParams:
        description: |-
          Contains all the additional params specified by the user while registering
          the Cassandra source.
        x-nullable: true
        $ref: '#/definitions/CassandraConnectParams'
      couchbaseParams:
        description: |-
          Contains all the additional params specified by the user while registering
          the Couchbase source.
        x-nullable: true
        $ref: '#/definitions/CouchbaseConnectParams'
      environments:
        description: |-
          Specifies a list of applications environment that are registered
          with this Protection Source such as 'kSQL'.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: array
        items:
          type: string
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kAzureNative
          - kKubernetes
          - kElastifile
          - kAD
          - kRDSSnapshotManager
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
        x-go-name: Environments
        x-nullable: true
      hbaseParams:
        description: |-
          Contains all the additional params specified by the user while registering
          the HBase source.
        x-nullable: true
        $ref: '#/definitions/HBaseConnectParams'
      hdfsParams:
        description: |-
          Contains all the additional params specified by the user while registering
          the Hdfs source.
        x-nullable: true
        $ref: '#/definitions/HdfsConnectParams'
      hiveParams:
        description: |-
          Contains all the additional params specified by the user while registering
          the Hive source.
        x-nullable: true
        $ref: '#/definitions/HiveConnectParams'
      isDbAuthenticated:
        description: |-
          Specifies if application entity dbAuthenticated or not.
          ex: oracle database.
        type: boolean
        x-go-name: IsDbAuthenticated
        x-nullable: true
      minimumFreeSpaceGB:
        description: |-
          Specifies the minimum free space in GiB of the space expected to be
          available on the datastore where the virtual disks of the VM being backed
          up. If the amount of free space(in GiB) is lower than the value given by
          this field, backup will be aborted. Note that this field is applicable
          only to 'kVMware' type of environments.
        type: integer
        format: int64
        x-go-name: MinimumFreeSpaceGB
        x-nullable: true
      mongodbParams:
        description: |-
          Contains all the additional params specified by the user while registering
          the MongoDB source.
        x-nullable: true
        $ref: '#/definitions/MongoDBConnectParams'
      nasMountCredentials:
        description: |-
          Specifies the credentials required to mount directories on the NetApp
          server if given.
        title: NAS Server Credentials.
        allOf:
        - $ref: '#/definitions/NasMountCredentialParams'
        x-nullable: true
      office365CredentialsList:
        description: |-
          Office365 Source Credentials.

          Specifies credentials needed to authenticate & authorize user for
          Office365.
        type: array
        items:
          $ref: '#/definitions/Office365Credentials'
        x-go-name: Office365CredentialsList
        x-nullable: true
      office365Region:
        description: Specifies the region for Office365.
        type: string
        x-go-name: Office365Region
        x-nullable: true
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      refreshErrorMessage:
        description: |-
          Specifies a message if there was any error encountered during the last
          rebuild of the Protection Source tree. If there was no error during the
          last rebuild, this field is reset.
        type: string
        x-go-name: RefreshErrorMessage
        x-nullable: true
      refreshTimeUsecs:
        description: |-
          Specifies the Unix epoch time (in microseconds) when the Protection
          Source tree was most recently fetched and built.
        type: integer
        format: int64
        x-go-name: RefreshTimeUsecs
        x-nullable: true
      registeredAppsInfo:
        description: |-
          Specifies information of the applications registered on this protection
          source.
        type: array
        items:
          $ref: '#/definitions/RegisteredAppInfo'
        x-go-name: RegisteredAppsInfo
        x-nullable: true
      registrationTimeUsecs:
        description: |-
          Specifies the Unix epoch time (in microseconds) when the Protection
          Source was registered.
        type: integer
        format: int64
        x-go-name: RegistrationTimeUsecs
        x-nullable: true
      subnets:
        description: |-
          Specifies the list of subnets added during creation or updation of vmare
          source. Currently, this field will only be populated in case of VMware
          registration.
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: Subnets
        x-nullable: true
      throttlingPolicy:
        description: |-
          Specifies the throttling policy that should be applied to all datastores
          under this registered Protection Source.
        x-nullable: true
        $ref: '#/definitions/ThrottlingPolicyParameters'
      throttlingPolicyOverrides:
        description: |-
          Array of Throttling Policy Overrides for Datastores.

          Specifies a list of Throttling Policy for datastores that override the
          common throttling policy specified for the registered Protection Source.
          For datastores not in this list, common policy will still apply.
        type: array
        items:
          $ref: '#/definitions/ThrottlingPolicyOverride'
        x-go-name: ThrottlingPolicyOverrides
        x-nullable: true
      useOAuthForExchangeOnline:
        description: |-
          Specifies whether OAuth should be used for authentication in case of
          Exchange Online.
        type: boolean
        x-go-name: UseOAuthForExchangeOnline
        x-nullable: true
      useVmBiosUuid:
        description: |-
          Specifies if registered vCenter is using BIOS UUID to track virtual
          machines.
        type: boolean
        x-go-name: UseVmBiosUuid
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
      vlanParams:
        description: |-
          Specifies the VLAN parameters to be used for performing the backup/restore
          of this entity.
        x-nullable: true
        $ref: '#/definitions/VlanParameters'
      warningMessages:
        description: |-
          Specifies a list of warnings encountered during registration.
          Though the registration may succeed, warning messages imply the
          host environment requires some cleanup or fixing.
        type: array
        items:
          type: string
        x-go-name: WarningMessages
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteCluster:
    description: |-
      Specifies information about a remote Cluster that has been registered
      for replication.
    type: object
    title: Remote Cluster.
    properties:
      allEndpointsReachable:
        description: |-
          Specifies whether any endpoint (such as a Node) on the remote Cluster
          is reachable from this local Cluster.
          If true, a service running on the local Cluster can communicate
          directly with any of its peers running on the remote Cluster, without
          using a proxy.
        type: boolean
        x-go-name: AllEndpointsReachable
        x-nullable: true
      autoRegisterTarget:
        description: |-
          Specifies whether the remote cluster needs to be kept in sync.
          This will be set to true by default.
        type: boolean
        x-go-name: AutoRegisterTarget
        x-nullable: true
      autoRegistration:
        description: |-
          Specifies whether the remote registration has happened automatically
          (due to registration on the other site).
          Can't think of other states (other than manually & automatically) so this
          isn't an enum.
          For a manual registration, this field will not be set.
        type: boolean
        x-go-name: AutoRegistration
        x-nullable: true
      bandwidthLimit:
        description: |-
          Specifies settings for limiting the data transfer rate between
          the local and remote Clusters.
        title: Bandwidth Limit.
        x-nullable: true
        $ref: '#/definitions/BandwidthLimit'
      clusterId:
        description: Specifies the unique id of the remote Cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: |-
          Specifies the unique incarnation id of the remote Cluster. This
          id is determined dynamically by contacting the remote Cluster.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      compressionEnabled:
        description: |-
          Specifies whether to compress the outbound data when
          transferring the replication data over the network to the remote Cluster.
        type: boolean
        x-go-name: CompressionEnabled
        x-nullable: true
      description:
        description: Specifies any additional information if needed.
        type: string
        x-go-name: Description
        x-nullable: true
      encryptionKey:
        description: |-
          Specifies the encryption key used for encrypting the replication data
          from a local Cluster to a remote Cluster.
          If a key is not specified, replication traffic encryption is disabled.
          When Snapshots are replicated from a local Cluster to a remote Cluster,
          the encryption key specified on the local Cluster must be the same
          as the key specified on the remote Cluster.
        type: string
        x-go-name: EncryptionKey
        x-nullable: true
      localIps:
        description: |-
          Array of Local IP Addresses.

          Specifies the IP addresses of the interfaces in the local Cluster
          which will be used for communicating with the remote Cluster.
        type: array
        items:
          type: string
        x-go-name: LocalIps
        x-nullable: true
      name:
        description: |-
          Specifies the name of the remote cluster. This field is determined
          dynamically by contacting the remote cluster.
        type: string
        x-go-name: Name
        x-nullable: true
      networkInterface:
        description: |-
          Specifies the name of the network interfaces to use for communicating with
          the remote Cluster.
        type: string
        x-go-name: NetworkInterface
        x-nullable: true
      purposeRemoteAccess:
        description: Whether the remote cluster will be used for remote access for
          SPOG.
        type: boolean
        x-go-name: PurposeRemoteAccess
        x-nullable: true
      purposeReplication:
        description: Whether the remote cluster will be used for replication.
        type: boolean
        x-go-name: PurposeReplication
        x-nullable: true
      remoteAccessCredentials:
        description: |-
          Optional field for the user credentials to connect to Iris for remote
          access for SPOG. If this is not specified, then credentials specified
          for replication set up will be used for remote access for SPOG.
          Allowing a different user credentials to be set up for SPOG permits
          having different roles for remote access for SPOG and replication set
          up.
        x-nullable: true
        $ref: '#/definitions/AccessTokenCredential'
      remoteIps:
        description: |-
          Array of Remote Node IP Addresses.

          Specifies the IP addresses of the Nodes on the remote Cluster to
          connect with. These IP addresses can also be VIPS.
          Specifying hostnames is not supported.
        type: array
        items:
          type: string
        x-go-name: RemoteIps
        x-nullable: true
      tenantId:
        description: |-
          Specifies the tenant Id of the organization that created this remote
          cluster configuration.
        type: string
        x-go-name: TenantId
        x-nullable: true
      userName:
        description: |-
          Specifies the Cohesity user name used to connect to the
          remote Cluster.
        type: string
        x-go-name: UserName
        x-nullable: true
      viewBoxPairInfo:
        description: |-
          Array of Storage Domain (View Box) Pairs.

          Specifies pairings between Storage Domains (View Boxes) on the local Cluster
          with Storage Domains (View Boxes) on a remote Cluster that are used in
          replication.
        type: array
        items:
          $ref: '#/definitions/ViewBoxPairInfo'
        x-go-name: ViewBoxPairInfoList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteHost:
    description: Specifies the settings required to connect to a remote host.
    type: object
    title: Remote Host.
    properties:
      address:
        description: |-
          Specifies the address (IP, hostname or FQDN) of the remote host
          that will run the script.
        type: string
        x-go-name: Address
        x-nullable: true
      type:
        description: |-
          Specifies the OS type of the remote host that will run the script.
          Currently only 'kLinux' is supported.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteHostConnectorParams:
    type: object
    title: Contains parameters to connect to a remote host.
    properties:
      credentials:
        description: |-
          Credentials that will be used to login to the remote host. For env of
          type kLinux, it is expected that user has setup the password-less access
          to the remote host. So only username field MUST be specified.
        x-nullable: true
        $ref: '#/definitions/Credentials'
      hostAddress:
        description: |-
          Address (i.e., IP, hostname or FQDN) of the host to connect to. Magneto
          will connect using ssh or equivalent to the host.
        type: string
        x-go-name: HostAddress
        x-nullable: true
      hostType:
        description: Type of host to connect to.
        type: integer
        format: int32
        x-go-name: HostType
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RemoteJobScript:
    description: |-
      Provides details about the Remote Adapter associated with a
      'kPuppeteer' Protection Job.
    type: object
    title: Remote Adapter.
    properties:
      fullBackupScript:
        description: |-
          Specifies the script that should run for the Full (no CBT) backup schedule
          of a Remote Adapter 'kPuppeteer' Job.
          This field is mandatory if the Policy associated with this Job
          has a Full (no CBT) backup schedule and this is Remote Adapter
          'kPuppeteer' Job.
        title: Full (No CBT) Script.
        allOf:
        - $ref: '#/definitions/RemoteScriptPathAndParams'
        x-nullable: true
      incrementalBackupScript:
        description: |-
          Specifies the script that should run for the CBT-based backup
          schedule of a Remote Adapter 'kPuppeteer' Job. A CBT-based backup
          schedule is utilizing Change Block Tracking when capturing Snapshots.
          This field is mandatory if the Policy associated with this Job
          has a CBT-based backup schedule and this is Remote Adapter
          'kPuppeteer' Job.
        title: CBT-based Script.
        allOf:
        - $ref: '#/definitions/RemoteScriptPathAndParams'
        x-nullable: true
      logBackupScript:
        description: |-
          Specifies the script that should run for the Log backup schedule
          of a Remote Adapter 'kPuppeteer' Job.
          This field is mandatory if the Policy associated with this Job
          has a Log backup schedule and this is Remote Adapter
          'kPuppeteer' Job.
        title: Log Script.
        allOf:
        - $ref: '#/definitions/RemoteScriptPathAndParams'
        x-nullable: true
      remoteHost:
        description: |-
          Specifies the remote host where the remote scripts are executed.
          This field must be set for Remote Adapter Jobs.
        allOf:
        - $ref: '#/definitions/RemoteHost'
        x-nullable: true
      username:
        description: |-
          Specifies the username that will be used to login to the remote host.
          For host type 'kLinux', it is expected that user has setup the
          password-less access. So only username field is required.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteProtectionJobInformation:
    description: |-
      Specifies details about the original Protection Job and its
      Snapshots, that were archived to a remote Vault.
    type: object
    title: Remote Protection Job Information.
    properties:
      clusterName:
        description: |-
          Specifies the name of the original Cluster that archived the data to the
          Vault.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      environment:
        description: |-
          Specifies the environment type (such as kVMware or kSQL)
          of the original archived Protection Job.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      jobName:
        description: Specifies the name of the Protection Job on the original Cluster.
        type: string
        x-go-name: JobName
        x-nullable: true
      jobUid:
        description: |-
          Specifies the globally unique id of the original Protection Job
          that archived the data to the Vault. This id is assigned by the
          original Cluster that archived the data.
        title: Protection Job Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteProtectionJobRunInformation:
    description: Specifies details about a Protection Job Runs (Snapshots).
    type: object
    title: Remote Protection Job Run Information.
    properties:
      clusterName:
        description: |-
          Specifies the name of the original Cluster that archived the data to the
          Vault.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      environment:
        description: |-
          Specifies the environment type (such as kVMware or kSQL)
          of the original archived Protection Job.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      jobName:
        description: Specifies the name of the Protection Job on the original Cluster.
        type: string
        x-go-name: JobName
        x-nullable: true
      jobUid:
        description: |-
          Specifies the globally unique id of the original Protection Job
          that archived the data to the Vault. This id is assigned by the
          original Cluster that archived the data.
        title: Protection Job Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      protectionJobRuns:
        description: |-
          Array of Protection Job Run Details.

          Specifies the list of Protection Job Runs (Snapshot) details for
          a Protection Job archived to a Vault.
        type: array
        items:
          $ref: '#/definitions/RemoteProtectionJobRunInstance'
        x-go-name: ProtectionJobRuns
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteProtectionJobRunInstance:
    description: |-
      Specifies details about one Job Run (Snapshot) archived to a remote Vault
      that was captured by a Protection Job.
    type: object
    title: Remote Protection Job Run Instance.
    properties:
      archiveTaskUid:
        description: |-
          Specifies the globally unique id of the archival task that archived
          the Snapshot to the Vault.
        title: Archive Task Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      archiveVersion:
        description: Specifies the version of the archive.
        type: integer
        format: int32
        x-go-name: ArchiveVersion
        x-nullable: true
      expiryTimeUsecs:
        description: |-
          Specifies the time when the archive expires.
          This time is recorded as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: ExpiryTimeUsecs
        x-nullable: true
      indexSizeBytes:
        description: Specifies the size of the index for the archive.
        type: integer
        format: int64
        x-go-name: IndexSizeBytes
        x-nullable: true
      jobRunId:
        description: Specifies the instance id of the Job Run task capturing the Snapshot.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      metadataComplete:
        description: Specifies whether a full set of metadata is available now.
        type: boolean
        x-go-name: MetadataComplete
        x-nullable: true
      snapshotTimeUsecs:
        description: |-
          Specify the time the Snapshot was captured as a Unix epoch Timestamp (in
          microseconds).
        type: integer
        format: int64
        x-go-name: SnapshotTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteRestoreIndexingStatus:
    description: Specifies the status of an indexing task.
    type: object
    title: Status of Indexing Task.
    properties:
      endTimeUsecs:
        description: |-
          Specifies the end time of the time range that is being indexed.
          The indexing task is creating an index of the Job Runs that occurred
          between the startTimeUsecs and this endTimeUsecs.
          This field is recorded as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: Specifies the error message if the indexing Job/task fails.
        type: string
        x-go-name: Error
        x-nullable: true
      indexingTaskEndTimeUsecs:
        description: |-
          Specifies when the indexing task completed. This time is recorded
          as a Unix epoch Timestamp (in microseconds).
          This field is not set if the indexing task is still in progress.
        type: integer
        format: int64
        x-go-name: IndexingTaskEndTimeUsecs
        x-nullable: true
      indexingTaskStartTimeUsecs:
        description: |-
          Specifies when the indexing task started. This time is recorded
          as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: IndexingTaskStartTimeUsecs
        x-nullable: true
      indexingTaskStatus:
        description: |-
          Specifies the status of the indexing Job/task.
          'kJobRunning' indicates that the Job/task is currently running.
          'kJobFinished' indicates that the Job/task completed and finished.
          'kJobFailed' indicates that the Job/task failed and did not complete.
          'kJobCanceled' indicates that the Job/task was canceled.
          'kJobPaused' indicates the Job/task is paused.
        type: string
        enum:
        - kJobRunning
        - kJobFinished
        - kJobFailed
        - kJobCanceled
        - kJobPaused
        x-go-name: IndexingTaskStatus
        x-nullable: true
      indexingTaskUid:
        description: Specifies the unique id of the indexing task assigned by this
          Cluster.
        title: Indexing Task Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      latestExpiryTimeUsecs:
        description: |-
          For all the Snapshots retrieved by this Job, specifies the latest time
          when a Snapshot expires.
        type: integer
        format: int64
        x-go-name: LatestExpiryTimeUsecs
        x-nullable: true
      progressMonitorTask:
        description: |-
          Specifies the path to progress monitor task to track the progress
          of building the index.
        type: string
        x-go-name: ProgressMonitorTask
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time of the time range that is being indexed.
          The indexing task is creating an index of the Job Runs that occurred
          between this startTimeUsecs and the endTimeUsecs.
          This field is recorded as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteRestoreSnapshotStatus:
    description: Specifies the status of a restore Snapshot task.
    type: object
    title: Status of Restore Snapshot Task.
    properties:
      archiveTaskUid:
        description: |-
          Specifies the globally unique id of the archival task that archived
          the Snapshots to the remote Vault.
        title: Archive Task Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      error:
        description: Specifies the error message if the indexing task fails.
        type: string
        x-go-name: Error
        x-nullable: true
      expiryTimeUsecs:
        description: |-
          Specifies the time when the Snapshot expires on the remote Vault.
          This field is recorded as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: ExpiryTimeUsecs
        x-nullable: true
      jobRunId:
        description: Specifies the id of the Job Run that originally captured the
          Snapshot.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      progressMonitorTask:
        description: |-
          Specifies the path to the progress monitor task that tracks the progress
          of building the index.
        type: string
        x-go-name: ProgressMonitorTask
        x-nullable: true
      snapshotTaskStatus:
        description: |-
          Specifies the status of the indexing task.
          'kJobRunning' indicates that the Job/task is currently running.
          'kJobFinished' indicates that the Job/task completed and finished.
          'kJobFailed' indicates that the Job/task failed and did not complete.
          'kJobCanceled' indicates that the Job/task was canceled.
          'kJobPaused' indicates the Job/task is paused.
        type: string
        enum:
        - kJobRunning
        - kJobFinished
        - kJobFailed
        - kJobCanceled
        - kJobPaused
        x-go-name: SnapshotTaskStatus
        x-nullable: true
      snapshotTaskUid:
        description: Specifies the globally unique id of the task capturing the Snapshot.
        title: Snapshot Task Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      snapshotTimeUsecs:
        description: |-
          Specify the time the Snapshot was captured.
          This time is recorded as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: SnapshotTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteScriptPathAndParams:
    description: |-
      Specifies the path to the remote script and any parameters
      expected by the remote script.
    type: object
    title: Remote Script.
    properties:
      continueOnError:
        description: |-
          Specifies if the script needs to continue even if there is an occurence of
          an error. If this flag is set to true, then backup job will start even if
          the pre backup script fails. Applicable only for pre backup scripts.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      isActive:
        description: |-
          Specifies if the script is active. If set to false, this script will not
          be executed even if it is part of the backup job.
        type: boolean
        x-go-name: IsActive
        x-nullable: true
      scriptParams:
        description: |-
          Specifies the parameters and values to pass into the remote script.
          For example if the script expects values for the 'database' and
          'user' parameters, specify the parameters and values using
          the following string: "database=myDatabase user=me".
        type: string
        x-go-name: ScriptParams
        x-nullable: true
      scriptPath:
        description: Specifies the path to the script on the remote host.
        type: string
        x-go-name: ScriptPath
        x-nullable: true
      timeoutSecs:
        description: |-
          Specifies the timeout of the script in seconds. The script will be killed
          if it exceeds this value. If the value of the field is '-1' then timeout
          is not set for the script.
        type: integer
        format: int32
        x-go-name: TimeoutSecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteScriptProto:
    description: |-
      Message to encapsulate the information of script that can be executed either
      before or after the backup is taken.
    type: object
    properties:
      remoteHostParams:
        description: |-
          Connector params for the remote host where script is located and is
          executed.
        x-nullable: true
        $ref: '#/definitions/RemoteHostConnectorParams'
      script:
        description: Contains script path and its optional params.
        x-nullable: true
        $ref: '#/definitions/ScriptPathAndParams'
      status:
        description: Execution status of the script.
        x-nullable: true
        $ref: '#/definitions/ScriptExecutionStatus'
    x-go-package: magneto/base/magneto.pb
  RemoteVaultRestoreTaskStatus:
    description: Specifies the status of a remote Vault restore task.
    type: object
    title: Remote Vault Restore Task Status.
    properties:
      currentIndexingStatus:
        description: |-
          Specifies the status of an indexing task that builds an index from
          the Protection Job metadata retrieved from the remote Vault.
          The index contains information about Job Runs (Snapshots)
          for a Protection Job and is required to restore Snapshots to this
          local Cluster.
        title: Status of Indexing Restore Task.
        allOf:
        - $ref: '#/definitions/RemoteRestoreIndexingStatus'
        x-nullable: true
      currentSnapshotStatus:
        description: |-
          Specifies the status of the Snapshot restore task.
          The Snapshot restore task restores the specified archived Snapshots from
          a remote Vault to this Cluster.
        title: Status of Snapshot Restore Task.
        allOf:
        - $ref: '#/definitions/RemoteRestoreSnapshotStatus'
        x-nullable: true
      localProtectionJobUid:
        description: |-
          Specifies the globally unique id of the new inactive Protection Job
          created on the local Cluster as part of the restoration of archived
          data.
        title: Local Protection Job Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      parentJobUid:
        description: |-
          Specifies the unique id of the parent Job/task that spawned the
          indexing and Snapshot restore tasks.
        title: Parent Job Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      remoteProtectionJobInformation:
        description: |-
          Specifies the details about the original Protection Job that archived data
          to the remote Vault (External Target).
        title: Remote Protection Job Information.
        x-nullable: true
        $ref: '#/definitions/RemoteProtectionJobInformation'
      searchJobUid:
        description: Specifies the unique id of the search Job that searched the remote
          Vault.
        title: Search Job Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteVaultSearchJobInformation:
    description: Specifies information about a search of a remote Vault.
    type: object
    title: Remote Vault Search Information.
    properties:
      clusterCount:
        description: |-
          Specifies number of Clusters that have archived to the remote Vault
          and match the search criteria for this job, up to this point
          in the search.
          If the search is complete, the total number of Clusters that have
          archived to the remote Vault and that match the search criteria
          for this search Job, are reported.
          If the search is not complete, a partial number is reported.
        type: integer
        format: int32
        x-go-name: ClusterCount
        x-nullable: true
      endTimeUsecs:
        description: |-
          Specifies the end time of the search as a Unix epoch
          Timestamp (in microseconds) if the search Job has completed.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: Specifies the error message reported when a search fails.
        type: string
        x-go-name: Error
        x-nullable: true
      jobCount:
        description: |-
          Specifies number of Protection Jobs that have archived to the remote Vault
          and match the search criteria for this search Job, up to this point
          in the search.
          If the search is complete, the total number of Protection Jobs that have
          archived to the remote Vault and that match the search criteria
          for this search Job, are reported.
          If the search is not complete, a partial number is reported.
        type: integer
        format: int32
        x-go-name: JobCount
        x-nullable: true
      name:
        description: Specifies the name of the search Job.
        type: string
        x-go-name: Name
        x-nullable: true
      searchJobStatus:
        description: |-
          Specifies the status of the search.
          'kJobRunning' indicates that the Job/task is currently running.
          'kJobFinished' indicates that the Job/task completed and finished.
          'kJobFailed' indicates that the Job/task failed and did not complete.
          'kJobCanceled' indicates that the Job/task was canceled.
          'kJobPaused' indicates the Job/task is paused.
        type: string
        enum:
        - kJobRunning
        - kJobFinished
        - kJobFailed
        - kJobCanceled
        - kJobPaused
        x-go-name: SearchJobStatus
        x-nullable: true
      searchJobUid:
        description: Specifies the unique id assigned to the search Job by the Cluster.
        title: Search Job Uid.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time of the search as a Unix epoch
          Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      vaultId:
        description: Specifies the id of the remote Vault (External Target) that was
          searched.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
      vaultName:
        description: Specifies the name of the remote Vault (External Target) that
          was searched.
        type: string
        x-go-name: VaultName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RemoteVaultSearchJobResults:
    description: |-
      Specifies detailed information about Job Runs of Protection Jobs found
      by a search Job when searching a remote Vault for archived data.
    type: object
    title: Remote Vault Search Job Result.
    properties:
      clusterCount:
        description: |-
          Specifies number of Clusters that have archived to the remote Vault
          that match the criteria specified in the search Job,
          up to this point in the search.
          If the search is complete, the total number of Clusters that have
          archived to the remote Vault and that match the search criteria
          for the search Job, are reported.
          If the search was not complete, a partial number is reported.
        type: integer
        format: int32
        x-go-name: ClusterCount
        x-nullable: true
      clusterMatchString:
        description: |-
          Specifies the value of the clusterMatchSting if it was set in the
          original search Job.
        type: string
        x-go-name: ClusterMatchString
        x-nullable: true
      cookie:
        description: |-
          Specifies an opaque string to pass to the next request to get the
          next set of search results. This is provided to support pagination.
          If null, this is the last set of search results.
        type: string
        x-go-name: Cookie
        x-nullable: true
      endTimeUsecs:
        description: |-
          Specifies the value of endTimeUsecs if it was set in the original
          search Job. End time is recorded as a Unix epoch Timestamp
          (in microseconds).
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: Specifies the error message if the search fails.
        type: string
        x-go-name: Error
        x-nullable: true
      jobCount:
        description: |-
          Specifies number of Protection Jobs that have archived to the remote Vault
          that match the criteria specified in the search Job.
          If the search is complete, the total number of Protection Jobs that have
          archived to the remote Vault and match the search criteria
          for the search Job, are reported.
          If the search is not complete, a partial number is reported.
        type: integer
        format: int32
        x-go-name: JobCount
        x-nullable: true
      jobMatchString:
        description: |-
          Specifies the value of the jobMatchSting if it was set in the
          original search Job.
        type: string
        x-go-name: JobMatchString
        x-nullable: true
      protectionJobs:
        description: |-
          Array of Protection Jobs.

          Specifies a list of Protection Jobs that have archived data to a
          remote Vault and that also match the filter criteria.
        type: array
        items:
          $ref: '#/definitions/RemoteProtectionJobRunInformation'
        x-go-name: ProtectionJobs
        x-nullable: true
      searchJobStatus:
        description: |-
          Specifies the status of the search Job.
          'kJobRunning' indicates that the Job/task is currently running.
          'kJobFinished' indicates that the Job/task completed and finished.
          'kJobFailed' indicates that the Job/task failed and did not complete.
          'kJobCanceled' indicates that the Job/task was canceled.
          'kJobPaused' indicates the Job/task is paused.
        type: string
        enum:
        - kJobRunning
        - kJobFinished
        - kJobFailed
        - kJobCanceled
        - kJobPaused
        x-go-name: SearchJobStatus
        x-nullable: true
      searchJobUid:
        description: Specifies the unique id of the search Job assigned by the Cluster.
        title: Search Job Id.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the value of startTimeUsecs if it was set in the original
          search Job. Start time is recorded as a Unix epoch Timestamp
          (in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      vaultId:
        description: Specifies the id of the remote Vault that was searched.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
      vaultName:
        description: Specifies the name of the remote Vault that was searched.
        type: string
        x-go-name: VaultName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RenameObjectParamProto:
    description: |-
      Message to specify the prefix/suffix added to rename an object. At least one
      of prefix or suffix must be specified. Please note that both prefix and
      suffix can be specified.
    type: object
    properties:
      prefix:
        description: Prefix to be added to a name.
        type: string
        x-go-name: Prefix
        x-nullable: true
      suffix:
        description: Suffix to be added to a name.
        type: string
        x-go-name: Suffix
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RenameViewParam:
    description: Specifies the rename parameters for the view.
    type: object
    title: Rename View Parameters.
    required:
    - newViewName
    properties:
      newViewName:
        description: Specifies the new name of the View.
        type: string
        x-go-name: NewViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ReplicaInfo:
    description: Specifies the Replication information about a snapshot.
    type: object
    title: Replica Info.
    properties:
      expiryTimeUsecs:
        description: Specifies the expiration time of the snapshot within the target
          location.
        type: integer
        format: int64
        x-go-name: ExpiryTimeUsecs
        x-nullable: true
      snapshotTargetSettings:
        description: Specifies the snapshot target settings for the given snapshot.
        x-nullable: true
        $ref: '#/definitions/SnapshotTargetSettings'
      uid:
        description: |-
          Specifies a global Protection Job id that is unique across Cohesity
          Clusters.
        x-nullable: true
        $ref: '#/definitions/UniversalId'
    x-go-package: cohesity/iris/server/data/public
  ReplicateSnapshotsToAWSParams:
    description: |-
      Params required to replicate snapshots to another AWS source. This is
      populated for AWS snapshot manager replication.
    type: object
    properties:
      region:
        description: Name of the AWS region in which to replicate the snapshots.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/cloud_deploy.pb
  ReplicateSnapshotsToAzureParams:
    description: This is populated for Azure snapshot manager replication.
    type: object
    title: Params required to replicate snapshots to another Azure's storage container.
    properties:
      resourceGroup:
        description: Resource group to filter regions in UX.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      storageAccount:
        description: |-
          Name of the storage account that will contain the storage container within
          which we will create the blob/snapshot.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      storageContainer:
        description: Name of the storage container within the above storage account.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      storageResourceGroup:
        description: |-
          Name of the Azure resource group that has the storage account mentioned
          below.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/cloud_deploy.pb
  ReplicationEncryptionKeyReponse:
    description: |-
      Specifies the encryption key that is used for encrypting replication data
      from this Cluster to a remote Cluster.
    type: object
    title: Replication Encryption Key.
    properties:
      encryptionKey:
        description: Specifies a replication encryption key.
        type: string
        x-go-name: EncryptionKey
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ReplicationTarget:
    description: |-
      Message that specifies the details about a remote cluster where backup
      snapshots may be replicated to.
    type: object
    properties:
      clusterId:
        description: The id of the remote cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterName:
        description: The name of the remote cluster.
        type: string
        x-go-name: ClusterName
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  ReplicationTargetSettings:
    description: |-
      Specifies settings about the Remote Cohesity Cluster where Snapshots
      are copied to.
    type: object
    title: Replication Target.
    properties:
      clusterId:
        description: Specifies the id of the Remote Cluster.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterName:
        description: Specifies the name of the Remote Cluster.
        type: string
        x-go-name: ClusterName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RequestError:
    description: Details about the Error.
    type: object
    title: Error
    properties:
      errorCode:
        description: Operation response error code.
        type: integer
        format: int64
        x-go-name: ErrorCode
        x-nullable: true
      message:
        description: Description of the error.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ResetS3SecretKeyParameters:
    description: |-
      Specifies the parameters required to reset the S3 secret access key for
      the specified Cohesity user.
    type: object
    title: Reset S3 Secret Access Key.
    properties:
      domain:
        description: |-
          Specifies the fully qualified domain name (FQDN) of an Active Directory
          or LOCAL for the default LOCAL domain on the Cohesity Cluster.
          If not specified, it is assumed to be LOCAL.
        type: string
        x-go-name: Domain
        x-nullable: true
      tenantId:
        description: Specifies the tenant for which the users are to be deleted.
        type: string
        x-go-name: TenantId
        x-nullable: true
      username:
        description: Specifies the Cohesity user.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoreADAppObjectParams:
    type: object
    title: The application object restore params for AD objects (AD Domain Controller).
    properties:
      adRestoreStatusVec:
        description: Status of the AD object/attribute restore operation.
        type: array
        items:
          $ref: '#/definitions/ADRestoreStatus'
        x-go-name: AdRestoreStatusVec
        x-nullable: true
      adUpdateOptions:
        description: |-
          This option will only be set for child tasks (Restore AD objects and
          Restore AD object attributes).
        x-nullable: true
        $ref: '#/definitions/ADUpdateRestoreTaskOptions'
      credentials:
        description: |-
          Credentials used to execute AD powershell cmdlet for AD search and
          restore. The specified credentials must have required permissions
          to AD objects in specified OU.
        x-nullable: true
        $ref: '#/definitions/Credentials'
      ldapPort:
        description: |-
          The ldap port on which the AD domain controller's NTDS database will be
          mounted.
        type: integer
        format: int32
        x-go-name: LdapPort
        x-nullable: true
      numFailed:
        description: |-
          Number of AD objects whose restore failed. Includes both AD object and
          attribute restored.
        type: integer
        format: int32
        x-go-name: NumFailed
        x-nullable: true
      numRunning:
        description: |-
          Number of AD objects whose restores are currently running. Includes both
          AD object and attribute recoveries.
        type: integer
        format: int32
        x-go-name: NumRunning
        x-nullable: true
      numSuccessfull:
        description: |-
          Number of AD objects restored successfully. Includes both AD object and
          attribute restored.
        type: integer
        format: int32
        x-go-name: NumSuccessfull
        x-nullable: true
      shouldMountAndRestore:
        description: |-
          The following field is set if user wants to mount AD, restore AD objects
          and destory AD mount in single task.
        type: boolean
        x-go-name: ShouldMountAndRestore
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreAcropolisVMParam:
    type: object
    title: Message to capture the info of a particular Acropolis VM being restored.
    properties:
      baseCbtSnapshotInfoProto:
        description: |-
          If specified, this field defines the info of the snapshot that is known
          to be present on both Acropolis and Cohesity cluster. We can compute the
          changed blocks between the snapshot to be restored and this reference
          snapshot and thus push only changed blocks to the Acropolis cluster for
          fast/incremental recovery.
          If this field is not specified, Cohesity cluster will push all the VM
          snapshot data back to the Acropolis cluster.
        x-nullable: true
        $ref: '#/definitions/SnapshotInfoProto'
      networkConfig:
        x-nullable: true
        $ref: '#/definitions/RestoreAcropolisVMParam_NetworkConfigInfo'
    x-go-package: magneto/base/magneto.pb
  RestoreAcropolisVMParam_NetworkConfigInfo:
    description: |-
      Proto to define the network configuration to be applied to the restored
      VM.
    type: object
    properties:
      networkStateChange:
        description: Network state to be applied to the restored VM.
        type: integer
        format: int32
        x-go-name: NetworkStateChange
        x-nullable: true
      nicVec:
        description: |-
          This field is applicable only if the network_state_change is set to
          'kAttachNewNetwork'.
        type: array
        items:
          $ref: '#/definitions/RestoreAcropolisVMParam_NetworkConfigInfo_NICSpec'
        x-go-name: NicVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreAcropolisVMParam_NetworkConfigInfo_NICSpec:
    type: object
    title: Proto to specify the NIC configuration.
    properties:
      ipAddress:
        description: IP address to assign to the NIC.
        type: string
        x-go-name: IpAddress
        x-nullable: true
      networkUuid:
        description: The UUID of the network to which the NIC is to be attached.
        type: string
        x-go-name: NetworkUuid
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreAcropolisVMsParams:
    type: object
    title: This message defines the Acropolis specific VMs restore params.
    properties:
      powerStateConfig:
        description: |-
          Semantics for kRecoverVMs task: By default, VMs are restored in their
          original power state.

          This proto can be used to override the default behavior for the restore
          task.
        title: The power state configuration to be applied to the restored VM.
        x-nullable: true
        $ref: '#/definitions/PowerStateConfigProto'
      renameRestoredObjectParam:
        description: |-
          By default, VMs are restored with their original name. This field can
          be used to specify the transformation ( i.e prefix/suffix) to be applied
          to the source VM name to derive the new name of the restored VM.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
      restoredObjectsNetworkConfig:
        description: |-
          Semantics for kRecoverVMs task: By default, if the VMs are being restored
          to their original location, then original network configuration will be
          preserved. If objects are being restored to different location (i.e.,
          different parent source), then network will be detached.

          Below field can be used to override the default network configuration of
          the restored VMs.

          If user want to keep the original network setting for kRecoverVMs task,
          then this proto should not be set.
        title: The network configuration to be applied to the restored VMs.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectNetworkConfigProto'
      storageContainer:
        description: |-
          A storage container where the VM's files should be restored to. This
          field is optional if the VM is being restored to its original parent
          source. If not specified, the VM's files will be restored to their
          original storage container(s). This field is mandatory if the VMs are
          being restored to a different parent source.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      uuidConfig:
        description: |-
          Semantics for kRecoverVMs task: By default, recovered VMs have new UUIDs
          for them.

          This proto can be used to override the default behavior for the restore
          task.
        title: UUID config to use for restored VM.
        x-nullable: true
        $ref: '#/definitions/UuidConfigProto'
    x-go-package: magneto/base/magneto.pb
  RestoreAppObject:
    description: |-
      Message that captures information about an application object being
      restored.
    type: object
    properties:
      additionalParams:
        description: Any additional parameters associated with a restore task.
        x-nullable: true
        $ref: '#/definitions/RestoreTaskAdditionalParams'
      appEntity:
        description: |-
          The application entity to restore (for example, kSQL, kOracle). If this is
          not set, all the apps in the owning entity will be restored.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      displayName:
        description: |-
          The proper display name of this object in the UI, if app_entity is not
          empty. For example, for SQL databases the name should also include the
          instance name.
        type: string
        x-go-name: DisplayName
        x-nullable: true
      restoreParams:
        description: The restore params for the RestoreAppObject.
        x-nullable: true
        $ref: '#/definitions/RestoreAppObjectParams'
    x-go-package: magneto/base/magneto.pb
  RestoreAppObjectParams:
    type: object
    title: Message for application object restore params.
    properties:
      adRestoreParams:
        description: |-
          The AD specific application object restore params. Only applicable if the
          RestoreAppObject.app_entity is of type kAD.
        x-nullable: true
        $ref: '#/definitions/RestoreADAppObjectParams'
      cloneTaskId:
        description: Id of finished clone task which has to be refreshed with different
          data.
        type: integer
        format: int64
        x-go-name: CloneTaskId
        x-nullable: true
      exchangeRestoreParams:
        description: |-
          The Exchange specific application object restore params. Only applicable
          if the RestoreAppObject.app_entity is of type kExchange.
        x-nullable: true
        $ref: '#/definitions/RestoreExchangeParams'
      oracleRestoreParams:
        description: 'Note: Only one of sql_restore_params and oracle_restore_params
          can be set.'
        title: |-
          The Oracle specific application object restore params. Only applicable if
          the RestoreAppObject.app_entity is of type kOracle.
        x-nullable: true
        $ref: '#/definitions/RestoreOracleAppObjectParams'
      sqlRestoreParams:
        description: |-
          The SQL specific application object restore params. Only applicable
          if the RestoreAppObject.app_entity is of type kSQL.
        x-nullable: true
        $ref: '#/definitions/RestoreSqlAppObjectParams'
      targetHost:
        description: |-
          The target host if the application is to be restored to a different
          host. If this is empty, then we are restoring to the original host, which
          is the owner entity.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      targetHostParentSource:
        description: |-
          The registered source managing the target host. If this is empty, then the
          target host has the same parent source as the owner entity.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoreAppParams:
    description: |-
      This message captures all the necessary arguments specified by the user to
      restore an application.
    type: object
    properties:
      credentials:
        description: |-
          For a local restore operation, credentials are optional. If not specified,
          the restore operation will use the credentials that were used to register
          the application's owner entity.

          For a remote restore operation from a replicated target, credentials
          must be specified.
        title: Credentials that will be used to log into the application environment.
        x-nullable: true
        $ref: '#/definitions/Credentials'
      ownerRestoreInfo:
        description: The restore information about the application's owner.
        x-nullable: true
        $ref: '#/definitions/AppOwnerRestoreInfo'
      restoreAppObjectVec:
        description: |-
          The application level objects that needs to be restored. If this vector is
          populated with exactly one object without its 'app_entity', all the
          application objects of the owner will be restored. If multiple objects
          are being restored, the 'app_entity' field must be specified for all of
          them.
        type: array
        items:
          $ref: '#/definitions/RestoreAppObject'
        x-go-name: RestoreAppObjectVec
        x-nullable: true
      type:
        description: The application environment.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreAppTaskStateProto:
    type: object
    properties:
      appRestoreProgressMonitorSubtaskPath:
        description: |-
          The Pulse task path to the application restore task sub tree. If the
          application restore has to wait on other tasks (for example, a SQL db
          restore may wait for a tail log backup or a VM restore), then this
          would represent a sub-tree of 'progress_monitor_task_path' in
          PerformRestoreTaskStateProto.
        type: string
        x-go-name: AppRestoreProgressMonitorSubtaskPath
        x-nullable: true
      childRestoreAppParamsVec:
        description: |-
          This has list of the restore app params for all the child restore tasks.
          This is populated iff the 'is_parent_task' is set to true.
        type: array
        items:
          $ref: '#/definitions/RestoreAppParams'
        x-go-name: ChildRestoreAppParamsVec
        x-nullable: true
      lastFinishedLogBackupStartTimeUsecs:
        description: |-
          The start time of the last finished log backup run. For SQL application,
          this is set iff we need to take a tail log backup.
        type: integer
        format: int64
        x-go-name: LastFinishedLogBackupStartTimeUsecs
        x-nullable: true
      restoreAppParams:
        description: Information about the application restore task.
        x-nullable: true
        $ref: '#/definitions/RestoreAppParams'
    x-go-package: magneto/master/base/master.pb
  RestoreCountByObjectType:
    description: Number of restore operations by object type.
    type: object
    title: Restore Count by Object Type.
    properties:
      objectCount:
        description: Specifies the number of restores of the object type.
        type: integer
        format: int32
        x-go-name: Count
        x-nullable: true
      objectType:
        description: Specifies the type of the restored object.
        type: string
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoreEnvStats:
    description: Specifies the aggregated statistics for restores of a specific environment
      type.
    type: object
    properties:
      environment:
        description: Specifies the environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kVCD
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kAD
        - kAWSSnapshotManager
        x-go-name: Environment
        x-nullable: true
      objectCount:
        type: integer
        format: int64
        x-go-name: ObjectCount
        x-nullable: true
      totalBytes:
        type: integer
        format: int64
        x-go-name: TotalBytes
        x-nullable: true
  RestoreExchangeParams:
    type: object
    title: Params specific to restoring an Exchange application.
    properties:
      databaseOptions:
        description: Only applicable when ExchangeRestoreType.Type=kDatabase.
        x-nullable: true
        $ref: '#/definitions/RestoreExchangeParams_DatabaseOptions'
      type:
        description: Restore type.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      viewOptions:
        description: Only applicable when ExchangeRestoreType.Type=kView.
        x-nullable: true
        $ref: '#/definitions/RestoreExchangeParams_ViewOptions'
    x-go-package: magneto/base/magneto.pb
  RestoreExchangeParams_DatabaseOptions:
    type: object
    properties:
      entityId:
        description: The windows machine to which the database will be restored.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreExchangeParams_ViewOptions:
    type: object
    properties:
      mountPoint:
        description: The path to access the SMB share.
        type: string
        x-go-name: MountPoint
        x-nullable: true
      viewName:
        description: View to which the files of an Exchange database have to be cloned.
        type: string
        x-go-name: ViewName
        x-nullable: true
      whitelistRestoreViewForAll:
        description: |-
          If set to true then when restore view is cloned then white-list all
          IPs not just the agent IP.
        type: boolean
        x-go-name: WhitelistRestoreViewForAll
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreFileCopyStats:
    description: |-
      This message captures the progress information regarding restore of
      file/directory.
    type: object
    properties:
      estimationSkipped:
        description: |-
          This will be set to true if the estimation step was skipped.
          NOTE: If estimation is skipped, then progress info will not be available.
        type: boolean
        x-go-name: EstimationSkipped
        x-nullable: true
      numBytesCopied:
        description: Number of bytes copied so far.
        type: integer
        format: int64
        x-go-name: NumBytesCopied
        x-nullable: true
      numDirectoriesCopied:
        description: |-
          Number of directories copied so far.
          NOTE: This just means the creation of directory (not the contents of the
          directory).
        type: integer
        format: int32
        x-go-name: NumDirectoriesCopied
        x-nullable: true
      numFilesCopied:
        description: Number of files copied so far.
        type: integer
        format: int32
        x-go-name: NumFilesCopied
        x-nullable: true
      totalBytesToCopy:
        description: Total number of bytes to copy.
        type: integer
        format: int64
        x-go-name: TotalBytesToCopy
        x-nullable: true
      totalDirectoriesToCopy:
        description: |-
          Total number of directories to copy.
          NOTE: This just means the creation of directory (not the contents of the
          directory).
        type: integer
        format: int32
        x-go-name: TotalDirectoriesToCopy
        x-nullable: true
      totalFilesToCopy:
        description: Total number of files to copy.
        type: integer
        format: int32
        x-go-name: TotalFilesToCopy
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreFileResultInfo:
    description: |-
      This message captures result of restore of individual file or directory
      as initiated from magneto.
      Note, it is expected that the agents go through the "estimation" phase
      first for the entire batch of restore requests and then start copying.
      These state transitions are reflected in the "status" field here.
    type: object
    properties:
      copyStats:
        description: |-
          This captures the copy stats for this file and is present when the status
          is kInProgress.
        x-nullable: true
        $ref: '#/definitions/RestoreFileCopyStats'
      destinationDir:
        description: |-
          This is set to the destination directory where the file/directory was
          copied.
        type: string
        x-go-name: DestinationDir
        x-nullable: true
      error:
        description: This is set if there is any error during the restore.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      restoredFileInfo:
        description: |-
          Information of the file being restored.
          Note, the agent does not need to populate this.
        x-nullable: true
        $ref: '#/definitions/RestoredFileInfo'
      status:
        description: Status of the restore.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreFilesInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined.

      RestoreFilesInfoProto extension                  Location               Extn
      =============================================================================
      vmware::RestoreFilesInfo::vmware_restore_files_info
      vmware/vmware.proto     100
      AgentRestoreFilesInfo::agent_restore_files_info  base/agent.proto        101
      file::RestoreFilesInfo::restore_files_info
      file/file.proto         102
      hyperv::RestoreFilesInfo::hyperv_restore_files_info
      hyperv/hyperv.proto     103
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about restore file tasks for any of
      the environments we support. Environment specific restore infos are defined
      as extensions to this proto.
    properties:
      downloadFilesPath:
        description: |-
          The path that the user should use to download files through the UI. If
          only a single file needs to be downloaded, this will be the path to that
          file. If a directory or multiple files & directories need to be
          downloaded, this will be the path to the .zip file to download. Only
          applicable to a download files task.
        type: string
        x-go-name: DownloadFilesPath
        x-nullable: true
      error:
        description: |-
          If the restore files failed, this field may contain the cause of the
          failure.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      proxyEntityConnectorParams:
        description: Contains the connector params of the proxy server if one was
          specified.
        x-nullable: true
        $ref: '#/definitions/ConnectorParams'
      restoreFilesResultVec:
        description: Contains the result information of the restored files.
        type: array
        items:
          $ref: '#/definitions/RestoreFileResultInfo'
        x-go-name: RestoreFilesResultVec
        x-nullable: true
      slaveTaskStartTimeUsecs:
        description: This is the timestamp at which the slave task started.
        type: integer
        format: int64
        x-go-name: SlaveTaskStartTimeUsecs
        x-nullable: true
      targetType:
        description: |-
          Specifies the target type for the task. The field is only valid if the
          task has got a permit.
        type: integer
        format: int32
        x-go-name: TargetType
        x-nullable: true
      teardownError:
        description: |-
          If an error was encountered during teardown of the setup (for ex:
          unmounting the datastore from the host), then this field will contain
          the cause of the failure.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      type:
        description: The type of environment this restore files info pertains to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreFilesParams:
    description: |-
      This message captures all the necessary arguments specified by the user to
      restore files to the source.
    type: object
    properties:
      blacklistedIpAddrs:
        description: A list of target IP addresses that should not be used.
        type: array
        items:
          type: string
        x-go-name: BlacklistedIpAddrs
        x-nullable: true
      directoryNameSecurityStyleMap:
        description: |-
          Directory name security style map contains mapping of the directory name
          to security style it supports.  This is needed to restore the same
          permission for the given directory for Qtrees.
        type: array
        items:
          $ref: '#/definitions/RestoreFilesParams_DirectoryNameSecurityStyleMapEntry'
        x-go-name: DirectoryNameSecurityStyleMap
        x-nullable: true
      isArchiveFlr:
        description: Whether this is a file restore operation from an archive.
        type: boolean
        x-go-name: IsArchiveFlr
        x-nullable: true
      isFileVolumeRestore:
        description: Whether this is a file based volume restore.
        type: boolean
        x-go-name: IsFileVolumeRestore
        x-nullable: true
      isMountBasedFlr:
        description: Whether this is a mount based file restore operation
        type: boolean
        x-go-name: IsMountBasedFlr
        x-nullable: true
      mountDisksOnVm:
        description: |-
          Whether this will attach disks or mount disks on the VM side OR use
          Storage Proxy RPCs to stream data.
        type: boolean
        x-go-name: MountDisksOnVm
        x-nullable: true
      nasBackupParams:
        description: |-
          Used to determining filtering_policy for NAS Migration uptier operation.
          Currently this is set only if this is NAS Migration uptier operation.
        x-nullable: true
        $ref: '#/definitions/NasBackupParams'
      nasProtocolTypeVec:
        description: |-
          The NAS protocol type(s) of this restore task. Currently we only support a
          single restore type. This field is only populated for NAS restore tasks.
        type: array
        items:
          type: integer
          format: int32
        x-go-name: NasProtocolTypeVec
        x-nullable: true
      physicalFlrParallelRestore:
        description: |-
          If enabled, magneto physical file restore will be enabled via job
          framework
        type: boolean
        x-go-name: PhysicalFlrParallelRestore
        x-nullable: true
      proxyEntity:
        description: |-
          If the proxy entity is specified, then the virtual disks are attached to
          the proxy server and the file copy will be initiated through this server.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      proxyEntityParentSource:
        description: |-
          If the proxy entity above is specified, then it's parent entity must be
          specified as well.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restoreFilesPreferences:
        description: Preferences for the restore files operation.
        x-nullable: true
        $ref: '#/definitions/RestoreFilesPreferences'
      restoreMethod:
        description: Determines the type of method to be used to perform FLR.
        type: integer
        format: int32
        x-go-name: RestoreMethod
        x-nullable: true
      restoredFileInfoVec:
        description: Information regarding files and directories.
        type: array
        items:
          $ref: '#/definitions/RestoredFileInfo'
        x-go-name: RestoredFileInfoVec
        x-nullable: true
      targetEntity:
        description: Target entity where the files are being restored to.
        title: |-
          The following fields only need to be set if restoring to a target location
          (i.e., not downloading the files directly).
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      targetEntityCredentials:
        description: |-
          Credentials to access the target entity such as a VM. In case of physical
          server, the copy process will be launched as this user.
          NOTE: If proxy entity is specified, then this credentials will be used for
          running operations on proxy server as well.
        x-nullable: true
        $ref: '#/definitions/Credentials'
      targetEntityParentSource:
        description: |-
          The registered source (i.e vCenter or ESXi host in VMware environment)
          under which the target entity is present.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      targetHostEntity:
        description: |-
          Host entity where the target entity resides. This is only populated for
          Netapp environments right now if target_entity_parent_source is a
          cluster. For example, the host of a target Netapp volume will be the
          vserver it belongs to.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      targetHostType:
        description: |-
          The host environment type. This is set in VMware environment to
          indicate the OS type of the target entity.
          NOTE: This is expected to be set since magneto does not know the host type
          for VMware entities.
        type: integer
        format: int32
        x-go-name: TargetHostType
        x-nullable: true
      uptierParams:
        description: Set if this is NAS Migration uptier operation.
        x-nullable: true
        $ref: '#/definitions/FileUptieringParams'
      useExistingAgent:
        description: |-
          Whether this will use an existing agent on the target VM to do the
          restore.
          This field is deprecated. restore_method should be used for populating
          use of existing agent.
        type: boolean
        x-go-name: UseExistingAgent
        x-nullable: true
      vpcConnectorEntity:
        description: Entity of the VPC connector, required in case of GCP FLR.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoreFilesParams_DirectoryNameSecurityStyleMapEntry:
    type: object
    properties:
      key:
        type: string
        x-go-name: Key
        x-nullable: true
      value:
        type: string
        x-go-name: Value
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreFilesPreferences:
    description: |-
      This message captures preferences from the user while restoring the files
      on the target.
    type: object
    properties:
      alternateRestoreBaseDirectory:
        description: |-
          This must be set to a directory path if restore_to_original_paths is
          false. All the files and directories restored will be restored under this
          location.
        type: string
        x-go-name: AlternateRestoreBaseDirectory
        x-nullable: true
      continueOnError:
        description: Whether to continue with the copy in case of encountering an
          error.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      encryptionEnabled:
        description: Whether to enable encryption for NFS and SMB restores.
        type: boolean
        x-go-name: EncryptionEnabled
        x-nullable: true
      generateSshKeys:
        description: |-
          In case of GCP Linux restores, whether to generate ssh keys to connect to
          the customer's instance.
        type: boolean
        x-go-name: GenerateSshKeys
        x-nullable: true
      overrideOriginals:
        description: |-
          This is relevant only if restore_to_original_paths is true. If this is
          true, then already existing files will be overridden, otherwise new files
          will be skipped.
        type: boolean
        x-go-name: OverrideOriginals
        x-nullable: true
      preserveAcls:
        description: Whether to preserve the ACLs of the original file.
        type: boolean
        x-go-name: PreserveAcls
        x-nullable: true
      preserveAttributes:
        description: Whether to preserve the original attributes.
        type: boolean
        x-go-name: PreserveAttributes
        x-nullable: true
      preserveTimestamps:
        description: Whether to preserve the original time stamps.
        type: boolean
        x-go-name: PreserveTimestamps
        x-nullable: true
      restoreToOriginalPaths:
        description: If this is true, then files will be restored to original paths.
        type: boolean
        x-go-name: RestoreToOriginalPaths
        x-nullable: true
      skipEstimation:
        description: Whether to skip the estimation step.
        type: boolean
        x-go-name: SkipEstimation
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreFilesTaskRequest:
    description: |-
      Specifies information about a Restore Task that recovers files and
      folders.
    type: object
    title: Restore Task.
    properties:
      continueOnError:
        description: |-
          Specifies if the Restore Task should continue even if the copy operation
          of some files and folders fails. If true, the Cohesity Cluster
          ignores intermittent errors and recovers as many files and folders
          as possible.
          If false, the Restore Task stops recovering when a copy operation fails.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      fileRecoveryMethod:
        description: |-
          Specifies the type of method to be used to perform file recovery.
          'kAutoDeploy' indicates that file restore operation wiil be performed using
          an ephemeral agent.
          'kUseExistingAgent' indicates that file restore operation wiil be performed
          using an persistent agent.
          'kUseHypervisorAPIs' indicates that file restore operation wiil be performed
          using an hypervisor API's.
        type: string
        enum:
        - kAutoDeploy
        - kUseExistingAgent
        - kUseHypervisorAPIs
        x-go-name: FileRecoveryMethod
        x-nullable: true
      filenames:
        description: |-
          Array of Files or Folders.

          Specifies the files and folders to recover from the snapshot.
        type: array
        items:
          type: string
        x-go-name: Filenames
        x-nullable: true
      isFileBasedVolumeRestore:
        description: Specifies whether this is a file based volume restore.
        type: boolean
        x-go-name: IsFileBasedVolumeRestore
        x-nullable: true
      mountDisksOnVm:
        description: |-
          Sepcifies whether this will attach disks or mount disks on the VM side
          OR use Storage Proxy RPCs to stream data
        type: boolean
        x-go-name: MountDisksOnVm
        x-nullable: true
      name:
        description: |-
          Specifies the name of the Restore Task. This field must be set and
          must be a unique name.
        type: string
        x-go-name: Name
        x-nullable: true
      newBaseDirectory:
        description: |-
          Specifies an optional root folder where to recover the selected
          files and folders.
          By default, files and folders are restored to their original path.
        type: string
        x-go-name: NewBaseDirectory
        x-nullable: true
      overwrite:
        description: |-
          If true, any existing files and folders on the operating system
          are overwritten by the recovered files or folders. This is the default.
          If false, existing files and folders are not overwritten.
        type: boolean
        x-go-name: Overwrite
        x-nullable: true
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      preserveAttributes:
        description: |-
          If true, the Restore Tasks preserves the original file and
          folder attributes. This is the default.
        type: boolean
        x-go-name: PreserveAttributes
        x-nullable: true
      restoredFileInfoList:
        description: Specifies information regarding files and directories.
        type: array
        items:
          $ref: '#/definitions/RestoredFileInfoList'
        x-go-name: RestoredFileInfoList
        x-nullable: true
      sourceObjectInfo:
        description: |-
          Specifies information about the source object (such as a VM)
          that contains the files and folders to recover.
          In addition, it contains information about the Protection Job and Job
          Run that captured the snapshot to recover from.
          To specify a particular snapshot, you must specify a
          jobRunId and a startTimeUsecs.
          If jobRunId and startTimeUsecs are not specified,
          the last Job Run of the specified Job is used.
        title: Restore Object.
        allOf:
        - $ref: '#/definitions/RestoreObjectDetails'
        x-nullable: true
      targetHostType:
        description: |-
          Specifies the target host types to be restored.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: TargetHostType
        x-nullable: true
      targetParentSourceId:
        description: |-
          Specifies the registered source (such as a vCenter Server)
          that contains the target protection source (such as a VM)
          where the files and folders are recovered to.
          This field is not required for a Physical Server.
        type: integer
        format: int64
        x-go-name: TargetParentSourceId
        x-nullable: true
      targetSourceId:
        description: |-
          Specifies the id of the target protection source (such as a VM)
          where the files and folders are recovered to.
        type: integer
        format: int64
        x-go-name: TargetSourceId
        x-nullable: true
      useExistingAgent:
        description: |-
          Specifies whether this will use an existing agent on the target vm
          to do restore. Following field is deprecated and shall not be used.
          Please refer to the FileRecoveryMethod field for more information.
        type: boolean
        x-go-name: UseExistingAgent
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoreFilesTaskStateProto:
    type: object
    title: Persistent state for a "restore files" task.
    properties:
      restoreFilesInfo:
        description: |-
          Contains information about this restore files task that is populated by
          the slave.
        x-nullable: true
        $ref: '#/definitions/RestoreFilesInfoProto'
      restoreParams:
        description: |-
          This captures all the necessary information required to perform restore
          to source task.
        x-nullable: true
        $ref: '#/definitions/RestoreFilesParams'
    x-go-package: magneto/master/base/master.pb
  RestoreHyperVVMParams:
    type: object
    title: This message defines the HyperV specific VMs restore params.
    properties:
      copyRecovery:
        description: Whether to perform copy recovery.
        type: boolean
        x-go-name: CopyRecovery
        x-nullable: true
      datastoreEntity:
        description: |-
          A datastore entity where the object's files should be restored to. This
          field is optional if object is being restored to its original parent
          source. If not specified, the object's files will be restored to their
          original datastore locations. This field is mandatory if object is being
          restored to a different resource entity or to a different parent source.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      powerStateConfig:
        description: |-
          Semantics for kRecoverVMs task: By default, VMs are restored in their
          original power state.

          This proto can be used to override the default behavior for the restore
          task.
        title: The power state configuration to be applied to the restored VM.
        x-nullable: true
        $ref: '#/definitions/PowerStateConfigProto'
      renameRestoredObjectParam:
        description: |-
          By default, VMs are restored with their original name. This field can
          be used to specify the transformation ( i.e prefix/suffix) to be applied
          to the source VM name to derive the new name of the restored VM.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
      resourceEntity:
        description: |-
          This field is optional for a kRecoverVMs task if the VMs are being
          restored to its original parent source. If not specified, restored VMs
          will be attached to its original host. This field is mandatory if the
          VMs are being restored to a different parent source.
        title: The resource (HyperV host) to which the restored VM will be attached.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restoredObjectsNetworkConfig:
        description: |-
          Semantics for kRecoverVMs task: By default, if the VMs are being restored
          to their original location, then original network configuration will be
          preserved. If objects are being restored to different location (i.e.,
          different parent source), then network will be detached.

          Below field can be used to override the default network configuration of
          the restored VMs.

          If user want to keep the original network setting for kRecoverVMs task,
          then this proto should not be set.
        title: The network configuration to be applied to the restored VMs.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectNetworkConfigProto'
      uuidConfig:
        description: |-
          Semantics for kRecoverVMs task: By default, recovered VMs have new UUIDs
          for them.

          This proto can be used to override the default behavior for the restore
          task.
        title: UUID config to use for restored VM.
        x-nullable: true
        $ref: '#/definitions/UuidConfigProto'
    x-go-package: magneto/base/magneto.pb
  RestoreInfo:
    description: Specifies the info regarding a full SQL snapshot.
    type: object
    title: Full Snapshot Information.
    properties:
      archivalTarget:
        description: Specifies the info related to the archival target.
        x-nullable: true
        $ref: '#/definitions/ArchivalExternalTarget'
      attemptNumber:
        description: Specifies the attempt number.
        type: integer
        format: int32
        x-go-name: AttemptNumber
        x-nullable: true
      cloudDeployTarget:
        description: Specifies the info related to the cloud deploy target.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTargetDetails'
      jobRunId:
        description: Specifies the id of the job run.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      jobUid:
        description: Specifies the universal id for the job.
        x-nullable: true
        $ref: '#/definitions/UniversalId'
      parentSource:
        description: Specifies the parent source related information.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      restoreTimeUsecs:
        description: |-
          This field specifies the time in to which the object needs to be restored.
          This filed is only applicable when object is being backeup using CDP
          feature.
        type: integer
        format: int64
        x-go-name: RestoreTimeUsecs
        x-nullable: true
      snapshotRelativeDirPath:
        description: Specifies the relative path of the snapshot directory.
        type: string
        x-go-name: SnapshotRelativeDirPath
        x-nullable: true
      source:
        description: Specifies the info related to the entity.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      startTimeUsecs:
        description: |-
          Specifies the start time specified as a Unix epoch Timestamp
          (in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      viewName:
        description: Specifies the name of the view.
        type: string
        x-go-name: ViewName
        x-nullable: true
      vmHadIndependentDisks:
        description: Specifies if the VM had independent disks.
        type: boolean
        x-go-name: VmHadIndependentDisks
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoreInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined. The
      extension applies to both RestoreInfoProto as well as RestoreEntity.

      RestoreInfoProto extension                     Location            Extension
      =============================================================================
      vmware::RestoreInfo::vmware_restore_info     vmware/vmware.proto       100
      sql::RestoreInfo::sql_restore_info           sql/sql.proto             101
      pure::RestoreInfo::pure_restore_info         pure/pure.proto           102
      azure::RestoreInfo::azure_restore_info       azure/azure.proto         103
      file::RestoreInfo::file_restore_info         file/file.proto           104
      hyperv::RestoreInfo::hyperv_restore_info     hyperv/hyperv.proto       105
      acropolis::RestoreInfo::acropolis_restore_info
      acropolis/acropolis.proto 106
      kvm::RestoreInfo::kvm_restore_info           kvm/kvm.proto             107
      aws::RestoreInfo::aws_restore_info           aws/aws.proto             108
      physical::RestoreInfo::physical_restore_info physical.proto            109
      oracle::RestoreInfo::oracle_restore_info     oracle/oracle.proto       110
      outlook::RestoreInfo::outlook_restore_info   outlook/outlook.proto     111
      gcp::RestoreInfo::gcp_restore_info           gcp/gcp.proto             112
      ad::RestoreInfo::ad_restore_info             ad/ad.proto               113
      kubernetes::RestoreInfo::kubernetes_restore_info
      kubernetes/kubernetes.proto
      114
      one_drive::RestoreInfo::one_drive_restore_info
      ms_graph/graph.proto      115
      cdp::RestoreInfo::cdp_restore_info           cdp.proto                 116
      exchange::RestoreInfo::exchange_restore_info exchange/exchange.proto   117
      imanis::RestoreInfo::nosql_recovery_info     imanis/nosql.proto        118
      o365::RestoreInfo::o365_restore_info
      o365/o365.proto           119
      o365::RestoreInfo::o365_one_drive_restore_info
      o365/o365.proto           120
      o365::PublicFolderRestoreInfoProto::public_folder_restore_info
      o365/o365.proto           121
      =============================================================================

      RestoreInfoProto.RestoreEntity extension       Location            Extension
      =============================================================================
      vmware::RestoreEntityInfo::vmware_restore_entity_info
      vmware/vmware.proto        100
      azure::RestoreEntityInfo::azure_restore_entity_info
      azure/azure.proto          101
      hyperv::RestoreEntityInfo::hyperv_restore_entity_info
      hyperv/hyperv.proto        102
      acropolis::RestoreEntityInfo::acropolis_restore_entity_info
      acropolis/acropolis.proto  103
      kvm::RestoreEntityInfo::kvm_restore_entity_info
      kvm/kvm.proto              104
      aws::RestoreEntityInfo::aws_restore_entity_info
      aws/aws.proto              105
      outlook::RestoreEntityInfo::outlook_restore_entity_info
      outlook/outlook.proto      106
      gcp::RestoreEntityInfo::gcp_restore_entity_info
      gcp/gcp.proto              107
      kubernetes::RestoreEntityInfo::kubernetes_restore_entity_info
      kuebrnetes/kubernetes.proto
      108
      one_drive::RestoreEntityInfo::one_drive_restore_entity_info
      ms_graph/graph.proto       109
      imanis::RestoreEntityInfo::nosql_restore_entity_info
      imanis/nosql.proto         110
      site::RestoreEntityInfo::site_restore_entity_info
      ms_graph/graph.proto       111
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about restore tasks for any of the
      environments we support. Environment specific restore infos are defined as
      extensions to this proto.
    properties:
      postScriptStatus:
        description: Captures the execution status of post script.
        x-nullable: true
        $ref: '#/definitions/ScriptExecutionStatus'
      preScriptStatus:
        description: Captures the execution status of pre script.
        x-nullable: true
        $ref: '#/definitions/ScriptExecutionStatus'
      restoreEntityVec:
        description: Contains the file paths and the information of the restored entities.
        type: array
        items:
          $ref: '#/definitions/RestoreInfoProto_RestoreEntity'
        x-go-name: RestoreEntityVec
        x-nullable: true
      targetType:
        description: |-
          Specifies the target type for the task. The field is only valid if the
          task has got a permit.
        type: integer
        format: int32
        x-go-name: TargetType
        x-nullable: true
      type:
        description: The type of environment this restore info pertains to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreInfoProto_RestoreEntity:
    type: object
    properties:
      entity:
        description: The entity that was restored.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      error:
        description: |-
          If the restore of the 'entity' failed, this field may contain the cause
          of the failure.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      progressMonitorTaskPath:
        description: |-
          The path relative to the root path of the restore task progress monitor
          of the progress monitor for this entity.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
      publicStatus:
        description: Iris-facing task state. This field is stamped during the export.
        type: integer
        format: int32
        x-go-name: PublicStatus
        x-nullable: true
      relativeRestorePaths:
        description: |-
          All the paths that the entity's files were restored to. Each path is
          relative to the destination view.
        type: array
        items:
          type: string
        x-go-name: RelativeRestorePaths
        x-nullable: true
      resourcePoolEntity:
        description: |-
          Even though, this field is redundant for kCloneVMs task, we will set
          this field for sake of consistency.

          Please note that this field may not be set if the restore of this entity
          fails.
        title: |-
          This represents a cluster or a HyperV host in HyperV environments, and a
          resource pool in VMware environments.
          For a restore task of type kCloneVMs, all entities are attached to the
          same resource entity. So this field seems redundant for kCloneVMs task.
          However, for a restore task of type kRecoverVMs, an entity can be
          restored back to its original resource entity in which case value of
          this field can be different for different entities.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restoredEntity:
        description: |-
          Note: For a recovery task in the VMware environment, once the VM is
          created, it is storage vMotioned to its primary datastore. If storage
          vMotion fails, Magneto marks the recovery task as failed. However, this
          field will still be set for the recovered VM. It can be used later to
          clean up the VM from primary environment (i.e, vCenter)
        title: Proto of the entity created by the restore operation.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      status:
        description: The restore status of the entity.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
      warnings:
        description: Optional warnings if any.
        type: array
        items:
          $ref: '#/definitions/ErrorProto'
        x-go-name: Warnings
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreKVMVMsParams:
    type: object
    title: This message defines the KVM specific VMs restore params.
    properties:
      clusterEntity:
        description: |-
          This field is optional for a kRecoverVMs task if the VMs are being
          restored to its original parent source. If not specified, restored VMs
          will be attached to its original host. This field is mandatory if the
          VMs are being restored to a different parent source.
        title: The resource (KVMH host) to which the restored VM will be attached.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      datacenterEntity:
        description: |-
          A datacenter where the VM's files should be restored to. This
          field is optional if VM is being restored to its original parent
          source. If not specified, the VM's files will be restored to their
          original datacenter locations. This field is mandatory if VM is being
          restored to a different datacenter entity or to a different parent source.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      powerStateConfig:
        description: |-
          Semantics for kRecoverVMs task: By default, VMs are restored in their
          original power state.

          This proto can be used to override the default behavior for the restore
          task.
        title: The power state configuration to be applied to the restored VM.
        x-nullable: true
        $ref: '#/definitions/PowerStateConfigProto'
      renameRestoredObjectParam:
        description: |-
          By default, VMs are restored with their original name. This field can
          be used to specify the transformation ( i.e prefix/suffix) to be applied
          to the source VM name to derive the new name of the restored VM.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
      restoredObjectsNetworkConfig:
        description: |-
          Semantics for kRecoverVMs task: By default, if the VMs are being restored
          to their original location, then original network configuration will be
          preserved. If objects are being restored to different location (i.e.,
          different parent source), then network will be detached.

          Below field can be used to override the default network configuration of
          the restored VMs.

          If user want to keep the original network setting for kRecoverVMs task,
          then this proto should not be set.
        title: The network configuration to be applied to the restored VMs.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectNetworkConfigProto'
      storagedomainEntity:
        description: |-
          A storagedomain where the VM's disk should be restored to. This
          field is optional if VM is being restored to its original parent
          source. If not specified, the VM's disk will be restored to their
          original storagedomain. This field is mandatory if VM is being
          restored to a different resource entity or to a different parent source.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoreKubernetesNamespacesParams:
    type: object
    title: This message defines the Kubernetes specific namespace restore params.
    properties:
      backupJobName:
        description: Backup job that needs to be used for recovering the namespace.
        type: string
        x-go-name: BackupJobName
        x-nullable: true
      clusterEntity:
        description: |-
          This field is optional for a kRecoverNamespaces task if the namespace is
          being restored to its original parent source. If not specified, restored
          namespace will be attached to its original cluster. This field is
          mandatory if the namespace is being restored to a different parent source.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      managementNamespace:
        description: Namespace in which restore job will be created in K8s cluster.
        type: string
        x-go-name: ManagementNamespace
        x-nullable: true
      renameRestoredObjectParam:
        description: |-
          By default, namespaces are restored with their original name. This field
          can be used to specify the transformation ( i.e prefix/suffix) to be
          applied to the source namespace to derive the new name of the restored
          namespace.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
    x-go-package: magneto/base/magneto.pb
  RestoreO365PublicFoldersParams:
    type: object
    title: This message defines the O365 Public Folders specific restore params.
    properties:
      rootPublicFolderVec:
        description: |-
          In a RestoreJob , user will provide the list of Root Public Folders to be
          restored. Provision is there for restoring full and partial Public Folder
          recovery.
        type: array
        items:
          $ref: '#/definitions/RestoreO365PublicFoldersParams_RootPublicFolder'
        x-go-name: RootPublicFolderVec
        x-nullable: true
      targetFolderPath:
        type: string
        x-go-name: TargetFolderPath
        x-nullable: true
      targetRootPublicFolder:
        description: |-
          All RootPublicFolders listed in the root_public_folder_vec will be
          restored to this traget RootPublicFolder with appropriate names.

          Let's say root_public_folder_vec is A and B; target_root_public_folder is
          C. The final folder-hierarchy after restore job is finished will look
          like this
          C/{target_folder_path}/A/{whatever is there in Public Folder A}
          B/{whatever is inside Public Folder B}
        title: This is the target Public Folder.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoreO365PublicFoldersParams_PublicFolder:
    description: Proto to capture the restore details of a Public Folder
    type: object
    properties:
      absoluteFolderPath:
        description: The absolute path of the folder.
        type: string
        x-go-name: AbsoluteFolderPath
        x-nullable: true
      folderId:
        description: The Unique ID of the folder.
        type: string
        x-go-name: FolderId
        x-nullable: true
      isEntireFolderRequired:
        description: Specify if the entire Public Folder is to be restored.
        type: boolean
        x-go-name: IsEntireFolderRequired
        x-nullable: true
      itemIdVec:
        description: |-
          If is_entire_folder_required is set to false, users will then specify
          which particular items are to be restored.
        type: array
        items:
          type: string
        x-go-name: ItemIdVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreO365PublicFoldersParams_RootPublicFolder:
    type: object
    properties:
      folderVec:
        description: |-
          If is_entire_folder_required is set to false,
          user will then specify which particular sub-folders are to be restored.
        type: array
        items:
          $ref: '#/definitions/RestoreO365PublicFoldersParams_PublicFolder'
        x-go-name: FolderVec
        x-nullable: true
      isEntireRootFolderRequired:
        description: |-
          Specify if the entire Root Public Folder including the sub-folders is to
          be restored.
        type: boolean
        x-go-name: IsEntireRootFolderRequired
        x-nullable: true
      object:
        description: This will store the details of the Root Public Folder to be restored.
        x-nullable: true
        $ref: '#/definitions/RestoreObject'
    x-go-package: magneto/base/magneto.pb
  RestoreObject:
    type: object
    title: Captures information about an object being restored.
    properties:
      archivalTarget:
        description: |-
          This field must be set if the object is to be restored/retrieved from an
          archive.
        x-nullable: true
        $ref: '#/definitions/ArchivalTarget'
      attemptNum:
        description: The attempt number of the job run to restore from.
        type: integer
        format: int32
        x-go-name: AttemptNum
        x-nullable: true
      cloudDeployTarget:
        description: |-
          This field must be set if the restore type is kDeployVMs and the object is
          to be deployed to cloud using a previously converted image.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTarget'
      cloudReplicationTarget:
        description: |-
          This field must be set if the restore type is kReplicateSnapshots and the
          snapshots need to be repliated accross regions in the Cloud.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTarget'
      entity:
        description: |-
          The entity to restore. If this is not specified, all entities from job id
          will be restored (from the latest snapshot). If specified, this can only
          have leaf-level entities.
          Notes:
          This must be specified for RestoreFiles task.
          Disable object rewriting in the outgoing API path. This is needed to
          preserve the content of objects().entity() as it must reflect the
          Entity object as it was at the point the restore task was submitted.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      jobId:
        description: |-
          The job id from which to restore. This is used while communicating with
          yoda.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobInstanceId:
        description: |-
          Id identifying a specific run to restore from. If this is not specified,
          and we need to restore from a run, the latest run is used.
          NOTE: This must be specified for RestoreFiles, RecoverDisks and
          GetVirtualDisks APIs.
        type: integer
        format: int64
        x-go-name: JobInstanceId
        x-nullable: true
      jobUid:
        description: The universal id of the job from which to restore.
        x-nullable: true
        $ref: '#/definitions/UniversalIdProto'
      nosqlRecoverParams:
        description: This field contains params specific to the restore of a nosql
          entity.
        x-nullable: true
        $ref: '#/definitions/NoSqlRecoverParams'
      parentSource:
        description: The registered source that was managing the entity being restored.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      pointInTimeRestoreTimeUsecs:
        description: |-
          The time to which the object needs to be restored. If this is not set,
          then the object will be restored to the full/incremental snapshot. This
          is applicable only if the object is protected using CDP.
        type: integer
        format: int64
        x-go-name: PointInTimeRestoreTimeUsecs
        x-nullable: true
      restoreAcropolisVmParam:
        description: This field contains params specific to the restore of an Acropolis
          VM.
        x-nullable: true
        $ref: '#/definitions/RestoreAcropolisVMParam'
      snapshotRelativeDirPath:
        description: The relative path to the directory containing the entity's snapshot.
        type: string
        x-go-name: SnapshotRelativeDirPath
        x-nullable: true
      startTimeUsecs:
        description: |-
          The start time of the specific job run. Iff 'job_instance_id' is set,
          this field must be set. In-memory indices on the Magneto master are
          laid-out by the start time of the job, and this is how the master pulls
          up a specific run.
          NOTE: This must be specified for RestoreFiles, RecoverDisks and
          GetVirtualDisks APIs
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      viewName:
        description: The name of the view where the object's snapshot is located.
        type: string
        x-go-name: ViewName
        x-nullable: true
      vmHadIndependentDisks:
        description: |-
          This is applicable only to VMs and is set to true when the VM being
          recovered or cloned contained independent disks when it was backed up.
        type: boolean
        x-go-name: VmHadIndependentDisks
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreObjectDetails:
    description: |-
      Specifies an object to recover or clone or an object to restore files
      and folders from.
      A VM object can be recovered or cloned. A View object can be cloned.
      To specify a particular snapshot, you must specify a jobRunId and
      a startTimeUsecs.
      If jobRunId and startTimeUsecs are not specified, the last Job Run of the
      specified Job is used.
    type: object
    title: Restore Object.
    properties:
      archivalTarget:
        description: |-
          Specifies settings about the Archival Target (such as Tape or AWS).
          This field must be set if the object
          is being recovered or cloned from an archive or if files
          or folders are being restored from an archive.
        title: Archival Target.
        allOf:
        - $ref: '#/definitions/ArchivalExternalTarget'
        x-nullable: true
      cloudDeployTarget:
        description: |-
          Specifies settings about the Cloud Deploy target.
          This field must be set if the restore type is kDeployVMs and the object is
          to be deployed to cloud using a previously converted image.
        title: CloudDeploy Target.
        allOf:
        - $ref: '#/definitions/CloudDeployTargetDetails'
        x-nullable: true
      environment:
        description: |-
          Specifies the type of the Protection Source.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      jobId:
        description: |-
          Protection Job Id.

          Specifies id of the Protection Job that backed up the objects
          to be restored.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobRunId:
        description: Specifies the id of the Job Run that captured the snapshot.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      jobUid:
        description: |-
          Specifies the universal id of the Protection Job that backed up
          the objects to recover or clone or the objects that contain the
          files or folders to recover.
        title: Universal Id.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      protectionSourceId:
        description: |-
          Specifies the id of the leaf object to recover, clone or recover
          files/folders from.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
      sourceName:
        description: Specifies the name of the Protection Source.
        type: string
        x-go-name: SourceName
        x-nullable: true
      startedTimeUsecs:
        description: |-
          Specifies the time when the Job Run starts capturing a snapshot.
          Specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: StartedTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoreObjectParams:
    type: object
    title: The parameters that control the various options to restore a RestoreObject.
    properties:
      action:
        description: The action to perform.
        type: integer
        format: int32
        x-go-name: Action
        x-nullable: true
      datastoreEntity:
        description: |-
          A datastore entity where the object's files should be restored to. This
          field is optional if object is being restored to its original parent
          source. If not specified, the object's files will be restored to their
          original datastore locations. This field is mandatory if object is being
          restored to a different resource pool or to a different parent source.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      powerStateConfig:
        description: |-
          Semantics for kCloneVMs task: By default, objects are restored in the
          powered off state.

          Semantics for kRecoverVMs task: By default, objects are restored in the
          powered on state.

          This proto can be used to override the default behavior for kCloneVMs or
          kRecoverVMs task.
        title: The power state configuration to be applied to the restored object.
        x-nullable: true
        $ref: '#/definitions/PowerStateConfigProto'
      renameRestoredObjectParam:
        description: |-
          By default, objects are restored with their original name. This field can
          be used to specify the transformation ( i.e prefix/suffix) to be applied
          to the source object name to derive the new name of the restored object.
        x-nullable: true
        $ref: '#/definitions/RenameObjectParamProto'
      resourcePoolEntity:
        description: |-
          This field is optional for a kRecoverVMs task if the objects are being
          restored to its original parent source. If not specified, restored objects
          will be attached to its original resource entity. This field is mandatory
          if objects are being restored to a different parent source.
        title: |-
          The resource pool entity where the restored objects will be attached. This
          field is mandatory for a kCloneVMs task.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restoreParentSource:
        description: |-
          An optional registered parent source to which objects are to be restored.
          If not specified, objects are restored back to the original source that
          was managing the objects.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restoredObjectsNetworkConfig:
        description: |-
          Semantics for kCloneVMs task: By default, if objects are being restored to
          their original location, then network will be disabled. If objects are
          being restored to a different location (i.e., either to different resource
          pool or to different parent source), then network will be detached.

          Semantics for kRecoverVMs task: By default, if objects are being restored
          to their original location, then original network configuration will be
          preserved. If objects are being restored to different location, (i.e.,
          either to different resource pool or to different parent source), then
          network will be detached.

          Below field can be used to override the default network configuration of
          the restored objects.

          If user want to keep the original network setting for kRecoverVMs task,
          then this proto should not be set.
        title: The network configuration to be applied to the restored object.
        x-nullable: true
        $ref: '#/definitions/RestoredObjectNetworkConfigProto'
      viewName:
        description: Target view into which the objects are to be cloned.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreObjectState:
    description: Specifies the state of an individual object in a Restore Task.
    type: object
    title: Restore Object State.
    properties:
      error:
        description: Specifies if an error occurred during the restore operation.
        x-nullable: true
        $ref: '#/definitions/RequestError'
      objectStatus:
        description: |-
          Specifies the status of an object during a Restore Task.
          'kFilesCloned' indicates that the cloning has completed.
          'kFetchedEntityInfo' indicates that information about the object was
          fetched from the primary source.
          'kVMCreated' indicates that the new VM was created.
          'kRelocationStarted' indicates that restoring to a different
          resource pool has started.
          'kFinished' indicates that the Restore Task has finished.
          Whether it was successful or not is indicated by the error code that
          that is stored with the Restore Task.
          'kAborted' indicates that the Restore Task was aborted before
          trying to restore this object. This can happen if the
          Restore Task encounters a global error.
          For example during a 'kCloneVMs' Restore Task, the datastore
          could not be mounted. The entire Restore Task is aborted
          before trying to create VMs on the primary source.
          'kDataCopyStarted' indicates that the disk copy is started.
          'kInProgress' captures a generic in-progress state and can be used by restore
          operations that don't track individual states.
        type: string
        enum:
        - kFilesCloned
        - kFetchedEntityInfo
        - kVMCreated
        - kRelocationStarted
        - kFinished
        - kAborted
        - kDataCopyStarted
        - kInProgress
        x-go-name: ObjectStatus
        x-nullable: true
      resourcePoolId:
        description: |-
          Specifies the id of the Resource Pool that the restored
          object is attached to.
          For a 'kRecoverVMs' Restore Task, an object can be recovered
          back to its original resource pool. This means while recovering a
          set of objects, this field can reference different resource pools.
          For a 'kCloneVMs' Restore Task, all objects are attached to the
          same resource pool. However, this field will still be
          populated.
          NOTE: This field may not be populated if the restore of the object
          fails.
        type: integer
        format: int64
        x-go-name: ResourcePoolId
        x-nullable: true
      restoredObjectId:
        description: |-
          Specifies the Id of the recovered or cloned object.
          NOTE: For a Restore Task that is recovering or cloning an object
          in the VMware environment, after the VM is created it is storage
          vMotioned to its primary datastore. If storage
          vMotion fails, the Cohesity Cluster marks the recovery task as failed.
          However, this field is still populated with the id of the
          recovered VM. This id can be used later to
          clean up the VM from primary environment (i.e, the vCenter Server).
        type: integer
        format: int64
        x-go-name: RestoredObjectId
        x-nullable: true
      sourceObjectId:
        description: |-
          Specifies the Protection Source id of the object to be recovered or
          cloned.
        type: integer
        format: int64
        x-go-name: SourceObjectId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoreOneDriveParams:
    type: object
    title: This message defines the OneDrive specific restore params.
    properties:
      driveOwnerVec:
        description: The list of users/groups whose drives are being restored.
        type: array
        items:
          $ref: '#/definitions/RestoreOneDriveParams_DriveOwner'
        x-go-name: DriveOwnerVec
        x-nullable: true
      restoreToOriginal:
        description: Whether or not all drive items are restored to original location.
        type: boolean
        x-go-name: RestoreToOriginal
        x-nullable: true
      targetDriveId:
        description: The id of the drive in which items will be restored.
        type: string
        x-go-name: TargetDriveId
        x-nullable: true
      targetFolderPath:
        description: |-
          All drives part of various users listed in drive_owner_vec will be
          restored to the drive belonging to target_user having id target_drive_id.
          Let's say drive_owner_vec is A and B; drive_vec of A and B is 111 and 222
          respectively; target_user is C; target_drive_id is 333. The final
          folder-hierarchy after restore job is finished will look like this :
          C:333: {target_folder_path}/|
          |A/111/{whatever is there in restore_item_vec
          of 111} |B/222/{whatever is there in
          restore_item_vec of 222}
        type: string
        x-go-name: TargetFolderPath
        x-nullable: true
      targetUser:
        description: This is the user in whose drive the items will be restored.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoreOneDriveParams_DriveItem:
    description: This will be set in case of partial drive recovery.
    type: object
    title: Defining DriveItem proto-message.
    properties:
      driveItemPath:
        description: The path of the drive item relative to root.
        type: string
        x-go-name: DriveItemPath
        x-nullable: true
      id:
        description: The unique identifier of the item within the Drive.
        type: string
        x-go-name: Id
        x-nullable: true
      isFileItem:
        description: Specify if the item is a file or not.
        type: boolean
        x-go-name: IsFileItem
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreOneDriveParams_DriveOwner:
    type: object
    properties:
      driveVec:
        description: The list of drives that are being restored.
        type: array
        items:
          $ref: '#/definitions/RestoreOneDriveParams_DriveOwner_Drive'
        x-go-name: DriveVec
        x-nullable: true
      object:
        description: This will store the details of the user whose drive is to be
          restored.
        x-nullable: true
        $ref: '#/definitions/RestoreObject'
    x-go-package: magneto/base/magneto.pb
  RestoreOneDriveParams_DriveOwner_Drive:
    type: object
    properties:
      isEntireDriveRequired:
        description: |-
          Specify if the entire drive is to be restored.
          This field should be false if restore_item_vec size > 0.
        type: boolean
        x-go-name: IsEntireDriveRequired
        x-nullable: true
      restoreDriveId:
        description: Id of the drive whose items are being restored.
        type: string
        x-go-name: RestoreDriveId
        x-nullable: true
      restoreItemVec:
        description: List of drive paths that need to be restored.
        type: array
        items:
          $ref: '#/definitions/RestoreOneDriveParams_DriveItem'
        x-go-name: RestoreItemVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreOracleAppObjectParams:
    type: object
    title: The application object restore params for Oracle objects (Oracle databases).
    properties:
      alternateLocationParams:
        x-nullable: true
        $ref: '#/definitions/RestoreOracleAppObjectParams_AlternateLocationParams'
      noOpenMode:
        description: If set to true, the recovered database will not be opened.
        type: boolean
        x-go-name: NoOpenMode
        x-nullable: true
      oracleCloneAppViewParamsVec:
        description: |-
          Following field contains information related to view expose workflow. Ex
          mountpoint identifier specified by User from UI.
        type: array
        items:
          $ref: '#/definitions/CloneAppViewParams'
        x-go-name: OracleCloneAppViewParamsVec
        x-nullable: true
      oracleTargetParams:
        description: |-
          Contains information regarding oracle sources, channel information and
          host nomination details.
        x-nullable: true
        $ref: '#/definitions/OracleSourceParams'
      parallelOpEnabled:
        description: If set to true, parallel backups/restores/clones are enabled
          on same host.
        type: boolean
        x-go-name: ParallelOpEnabled
        x-nullable: true
      restoreTimeSecs:
        description: |-
          The time to which the Oracle database needs to be restored. This allows
          for granular recovery of Oracle databases. If this is not set, the Oracle
          database will be recovered to the full/incremental snapshot (specified in
          the owner's restore object in AppOwnerRestoreInfo). This is only
          applicable if restoring to the original Oracle instance.
        type: integer
        format: int64
        x-go-name: RestoreTimeSecs
        x-nullable: true
      shellEnvironmentVec:
        type: array
        items:
          $ref: '#/definitions/RestoreOracleAppObjectParams_KeyValuePair'
        x-go-name: ShellEnvironmentVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreOracleAppObjectParams_AlternateLocationParams:
    description: |-
      For restoring to alternate location this message can not be empty and all
      the fields inside the message also can not be empty.
    type: object
    properties:
      baseDir:
        description: |-
          Base directory of Oracle at destination.
          Example : /u01/app/oracle
        type: string
        x-go-name: BaseDir
        x-nullable: true
      databaseFileDestination:
        description: Location to put the database files(datafiles, logfiles etc.).
        type: string
        x-go-name: DatabaseFileDestination
        x-nullable: true
      homeDir:
        description: |-
          Home directory of Oracle at destination.
          Example : /u01/app/oracle/product/11.2.0.3/db_1
        type: string
        x-go-name: HomeDir
        x-nullable: true
      newDatabaseName:
        description: The name of the Oracle database that we restore to.
        type: string
        x-go-name: NewDatabaseName
        x-nullable: true
      newSidDeprecated:
        description: |-
          Deprecated field
          SID of new Oracle database.
        type: string
        x-go-name: NewSidDeprecated
        x-nullable: true
      oracleDbConfig:
        description: Alternate DB config override.
        x-nullable: true
        $ref: '#/definitions/OracleDBConfig'
    x-go-package: magneto/base/magneto.pb
  RestoreOracleAppObjectParams_KeyValuePair:
    description: This defines the restore Shell environment.
    type: object
    title: A table of key-value pair representing Shell variables and their values.
    properties:
      xKey:
        description: Name of the key.
        type: string
        x-go-name: XKey
        x-nullable: true
      xValue:
        description: Value of the key.
        type: string
        x-go-name: XValue
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreOutlookParams:
    type: object
    title: This message defines the Outlook specific restore params.
    properties:
      mailboxVec:
        description: |-
          In a RestoreJob , user will provide the list of mailboxes
          to be restored. Provision is there for restoring full AND
          partial mailbox recovery.
        type: array
        items:
          $ref: '#/definitions/RestoreOutlookParams_Mailbox'
        x-go-name: MailboxVec
        x-nullable: true
      targetFolderPath:
        type: string
        x-go-name: TargetFolderPath
        x-nullable: true
      targetMailbox:
        description: |-
          This is the destination mailbox.
          All mailboxes listed in the mailbox_vec will be restored to this mailbox
          with appropriate names.
          Let's say mailbox_vec is A and B; target_mailbox is C.
          The final folder-hierarchy after restore job is finished will look like
          this :
          C : {target_folder_path}/|
          |A/{whatever is there in mailbox A}
          |B/{whatever is inside B mailbox B}
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoreOutlookParams_Folder:
    description: This will be set in case of partial mailbox recovery.
    type: object
    title: Defining Folder proto-message.
    properties:
      folderId:
        description: The Unique ID of the folder.
        type: string
        x-go-name: FolderId
        x-nullable: true
      folderKey:
        description: The Unique key of the folder.
        type: integer
        format: int64
        x-go-name: FolderKey
        x-nullable: true
      isEntireFolderRequired:
        description: Specify if the entire folder is to be restored.
        type: boolean
        x-go-name: IsEntireFolderRequired
        x-nullable: true
      itemIdVec:
        description: |-
          If is_entire_folder_required is set to false,
          user will then specify which particular items
          are to be restored.
        type: array
        items:
          type: string
        x-go-name: ItemIdVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreOutlookParams_Mailbox:
    type: object
    properties:
      folderVec:
        description: |-
          If is_entire_mailbox_required is set to false,
          user will then specify which particular folders are to be restored.
        type: array
        items:
          $ref: '#/definitions/RestoreOutlookParams_Folder'
        x-go-name: FolderVec
        x-nullable: true
      isEntireMailboxRequired:
        description: Specify if the entire mailbox is to be restored.
        type: boolean
        x-go-name: IsEntireMailboxRequired
        x-nullable: true
      object:
        description: |-
          This will store the details of the mailbox
          to be restored.
        x-nullable: true
        $ref: '#/definitions/RestoreObject'
    x-go-package: magneto/base/magneto.pb
  RestorePointsForTimeRange:
    description: Specifies the info returned by Magneto RestorePointsForTimeRange
      API.
    type: object
    title: Restore Points for Time Range.
    properties:
      fullSnapshotInfo:
        description: Specifies the info related to the recovery object.
        type: array
        items:
          $ref: '#/definitions/FullSnapshotInfo'
        x-go-name: FullSnapshotInfo
        x-nullable: true
      timeRanges:
        description: Specifies the time ranges of the restore object between full
          snapshots.
        type: array
        items:
          $ref: '#/definitions/TimeRangeSettings'
        x-go-name: TimeRanges
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestorePointsForTimeRangeParam:
    description: Specifies the request parameters to restore points for time range
      API.
    type: object
    title: Restore Points for Time Range Parameters.
    required:
    - jobUids
    properties:
      endTimeUsecs:
        description: |-
          Specifies the end time specified as a Unix epoch Timestamp
          (in microseconds).
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      environment:
        description: |-
          Specifies the protection source environment type.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      jobUids:
        description: Specifies the jobs for which to get the full snapshot information.
        type: array
        items:
          $ref: '#/definitions/UniversalId'
        x-go-name: JobUids
        x-nullable: true
      protectionSourceId:
        description: Specifies the id of the Protection Source which is to be restored.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time specified as a Unix epoch Timestamp
          (in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoreSiteParams:
    type: object
    title: This message defines the OneDrive specific restore params.
    properties:
      restoreToOriginal:
        description: Whether or not all sites are restored to original location.
        type: boolean
        x-go-name: RestoreToOriginal
        x-nullable: true
      siteOwnerVec:
        description: The list of sites whose drives are being restored.
        type: array
        items:
          $ref: '#/definitions/RestoreSiteParams_SiteOwner'
        x-go-name: SiteOwnerVec
        x-nullable: true
      targetDocLibName:
        description: |-
          Incase of alternate restore of granular items within document
          repositiories of sites to another site, a doc lib name has to be specified
          by the caller.
          NOTE: It can be safely assumed that this field will only be present in
          case of granular items restore only.
        type: string
        x-go-name: TargetDocLibName
        x-nullable: true
      targetDocLibPrefix:
        description: |-
          If alternate site is provided, customer may want to provide a custom
          prefix to document libraries that we create. In any case we would also
          have to distinguish the newly created document library as the alternate
          site provided by the customer may as well turn out to be the original
          backup site.
        type: string
        x-go-name: TargetDocLibPrefix
        x-nullable: true
      targetSite:
        description: This is the site in whose drive the items will be restored.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoreSiteParams_DriveItem:
    description: This will be set in case of partial drive recovery.
    type: object
    title: Defining DriveItem proto-message.
    properties:
      driveItemPath:
        description: The path of the drive item relative to root.
        type: string
        x-go-name: DriveItemPath
        x-nullable: true
      id:
        description: The unique identifier of the item within the Drive.
        type: string
        x-go-name: Id
        x-nullable: true
      isFileItem:
        description: Specify if the item is a file or not.
        type: boolean
        x-go-name: IsFileItem
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreSiteParams_SiteOwner:
    type: object
    properties:
      driveVec:
        description: The list of drives that are being restored.
        type: array
        items:
          $ref: '#/definitions/RestoreSiteParams_SiteOwner_Drive'
        x-go-name: DriveVec
        x-nullable: true
      object:
        description: This will store the details of the user whose drives is to be
          restored.
        x-nullable: true
        $ref: '#/definitions/RestoreObject'
    x-go-package: magneto/base/magneto.pb
  RestoreSiteParams_SiteOwner_Drive:
    type: object
    properties:
      isEntireDriveRequired:
        description: |-
          Specify if the entire drive is to be restored.
          This field should be false if restore_item_vec size > 0.
        type: boolean
        x-go-name: IsEntireDriveRequired
        x-nullable: true
      restoreDriveId:
        description: Id of the drive whose items are being restored.
        type: string
        x-go-name: RestoreDriveId
        x-nullable: true
      restoreDriveName:
        description: |-
          Specifies the name of the drive whos items are being restored.
          NOTE: For restore either the drive Id or the name must be populated.
        type: string
        x-go-name: RestoreDriveName
        x-nullable: true
      restorePathVec:
        description: List of drive paths that need to be restored.
        type: array
        items:
          $ref: '#/definitions/RestoreSiteParams_DriveItem'
        x-go-name: RestorePathVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreSourceSummaryByObjectTypeElement:
    description: |-
      RestoreSourceSummaryByObjectTypeElement represents a recover/clone summary
      for a single object type.
    type: object
    title: Restore Source Summary By Object Type Element.
    required:
    - name
    properties:
      datastoreId:
        description: |-
          Specifies the datastore where the object's files are recovered to.
          This field is populated when objects are recovered to a different
          resource pool or to a different parent source.
          This field is not populated when objects are recovered to their
          original datastore locations in the original parent source.
        type: integer
        format: int64
        x-go-name: DatastoreId
        x-nullable: true
      fileRestoreInfo:
        description: Specifies a list of restore information of files.
        type: array
        items:
          $ref: '#/definitions/FileRestoreInfo'
        x-go-name: FileRestoreInfo
        x-nullable: true
      name:
        description: |-
          Specifies the name of the Restore Task. This field must be set and
          must be a unique name.
        type: string
        x-go-name: Name
        x-nullable: true
      objects:
        description: |-
          Array of Objects.

          Specifies a list of Protection Source objects or Protection Job objects
          (with specified Protection Source objects).
        type: array
        items:
          $ref: '#/definitions/RestoreObjectDetails'
        x-go-name: Objects
        x-nullable: true
      protectionSourceName:
        description: The protection source name.
        type: string
        x-go-name: ProtectionSourceName
        x-nullable: true
      startTimeUsecs:
        description: |-
          Specifies the start time of the Restore Task as a Unix epoch
          Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      type:
        description: |-
          Specify the object type to filter with.
          Specifies the type of Restore Task.

          'kRecoverVMs' specifies a Restore Task that recovers VMs.
          'kCloneVMs' specifies a Restore Task that clones VMs.
          'kCloneView' specifies a Restore Task that clones a View.
          'kMountVolumes' specifies a Restore Task that mounts volumes.
          'kRestoreFiles' specifies a Restore Task that recovers files and folders.
          'kRecoverApp' specifies a Restore Task that recovers app.
          'kCloneApp' specifies a Restore Task that clone app.
          'kRecoverSanVolume' specifies a Restore Task that recovers SAN volumes.
          'kConvertAndDeployVMs' specifies a Restore Task that converts and deploy VMs to a target environment.
          'kMountFileVolume' specifies a Restore Task that mounts a file volume.
          'kSystem' specifies a Restore Task that recovers a system.
          'kRecoverVolumes' specifies a Restore Task that recovers volumes via the physical agent.
          'kDeployVolumes' specifies a Restore Task that deploys volumes to a target environment.
          'kDownloadFiles' specifies a Restore Task that downloads the requested files and folders in zip format.
          'kRecoverEmails' specifies a Restore Task that recovers the mailbox/email items.
          'kRecoverDisks' specifies a Restore Task that recovers the virtual disks.
          'kRecoverNamespaces' specifies a Restore Task that recovers Kubernetes namespaces.
          'kCloneVMsToView' specifies a Restore Task that clones VMs into a View.
        type: string
        enum:
        - kRecoverVMs
        - kCloneVMs
        - kCloneView
        - kMountVolumes
        - kRestoreFiles
        - kRecoverApp
        - kCloneApp
        - kRecoverSanVolume
        - kConvertAndDeployVMs
        - kMountFileVolume
        - kSystem
        - kRecoverVolumes
        - kDeployVMs
        - kDownloadFiles
        - kRecoverEmails
        - kRecoverDisks
        - kRecoverNamespaces
        - kCloneVMsToView
        x-go-name: Type
        x-nullable: true
      username:
        description: Specifies the Cohesity user who requested this Restore Task.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoreSqlAppObjectParams:
    type: object
    title: The application object restore params for SQL objects (SQL databases).
    properties:
      captureTailLogs:
        description: |-
          Set to true if tail logs are to be captured before the restore
          operation. This is only applicable if we are restoring the SQL database
          to its original source, and the database is not being renamed.
        type: boolean
        x-go-name: CaptureTailLogs
        x-nullable: true
      continueAfterError:
        description: Whether restore should continue after encountering a page checksum
          error.
        type: boolean
        x-go-name: ContinueAfterError
        x-nullable: true
      dataFileDestination:
        description: |-
          Which directory to put the database data files. Missing directory will be
          automatically created. Cannot be empty if not restoring to the original
          SQL instance.
        type: string
        x-go-name: DataFileDestination
        x-nullable: true
      dbRestoreOverwritePolicy:
        description: Policy to overwrite an existing DB during a restore operation.
        type: integer
        format: int32
        x-go-name: DbRestoreOverwritePolicy
        x-nullable: true
      enableChecksum:
        description: Whether restore checksums are enabled.
        type: boolean
        x-go-name: EnableChecksum
        x-nullable: true
      instanceName:
        description: |-
          The name of the SQL instance that we restore database to. If target_host
          is not empty, this also cannot be empty.
        type: string
        x-go-name: InstanceName
        x-nullable: true
      isAutoSyncEnabled:
        description: |-
          The following field is set if auto_sync for multi-stage SQL restore
          task is enabled. This field is valid only if is_multi_state_restore
          is set to true.
        type: boolean
        x-go-name: IsAutoSyncEnabled
        x-nullable: true
      isMultiStageRestore:
        description: |-
          The following field is set if we are creating a multi-stage SQL restore
          task needed for features such as Hot-Standby.
        type: boolean
        x-go-name: IsMultiStageRestore
        x-nullable: true
      keepCdc:
        description: Set to true to keep cdc on restored database.
        type: boolean
        x-go-name: KeepCdc
        x-nullable: true
      logFileDestination:
        description: |-
          Which directory to put the database log files. Missing directory will be
          automatically created. Cannot be empty if not restoring to the original
          SQL instance.
        type: string
        x-go-name: LogFileDestination
        x-nullable: true
      multiStageRestoreOptions:
        description: |-
          Note that this field is set internally by Magneto, and should not be set
          by Iris.
        title: |-
          The following field is set if this is a sub task for a multi-stage SQL
          restore task. It captures the options specified for this sub-task.
        x-nullable: true
        $ref: '#/definitions/SqlUpdateRestoreTaskOptions'
      newDatabaseName:
        description: |-
          The new name of the database, if it is going to be renamed. app_entity in
          RestoreAppObject has to be non-empty for the renaming, otherwise it does
          not make sense to rename all databases in the owner.
        type: string
        x-go-name: NewDatabaseName
        x-nullable: true
      restoreTimeSecs:
        description: |-
          The time to which the SQL database needs to be restored. This allows for
          granular recovery of SQL databases. If this is not set, the SQL database
          will be recovered to the full/incremental snapshot (specified in the
          owner's restore object in AppOwnerRestoreInfo).
        type: integer
        format: int64
        x-go-name: RestoreTimeSecs
        x-nullable: true
      resumeRestore:
        description: |-
          Resume restore if sql instance/database exist in restore/recovering state.
          The database might be in restore/recovering state if previous restore
          failed or previous  restore was attempted  with norecovery option.
        type: boolean
        x-go-name: ResumeRestore
        x-nullable: true
      secondaryDataFileDestination:
        description: |-
          Which directory to put the secondary data files of the database. Secondary
          data files are optional and are user defined. The recommended file name
          extension for these is ".ndf".

          If this option is specified, the directory will be automatically created
          if its missing.
        type: string
        x-go-name: SecondaryDataFileDestination
        x-nullable: true
      secondaryDataFileDestinationVec:
        description: |-
          Specify the secondary data files and corresponding direcories of the DB.
          Secondary data files are optional and are user defined. The recommended
          file extension for secondary files is ".ndf".

          If this option is specified and the destination folders do not exist they
          will be automatically created.
        type: array
        items:
          $ref: '#/definitions/FilesToDirectoryMapping'
        x-go-name: SecondaryDataFileDestinationVec
        x-nullable: true
      withClause:
        description: |-
          'with_clause' contains 'with clause' to be used in native sql restore
          command. This is only applicable for db restore of native sql backup. Here
          user can specify multiple restore options. Example: "WITH BUFFERCOUNT =
          575, MAXTRANSFERSIZE = 2097152". If this is not specified, we use the
          value specified in magneto_sql_native_restore_with_clause gflag.
        type: string
        x-go-name: WithClause
        x-nullable: true
      withNoRecovery:
        description: |-
          Set to true if we want to recover the database in "NO_RECOVERY" mode
          which does not bring it online after restore.
        type: boolean
        x-go-name: WithNoRecovery
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoreStats:
    description: Specifies the restore statistics details.
    type: object
    title: Restore Statistics.
    properties:
      numClonedObjects:
        description: Specifies the count of cloned objects in the given time frame.
        type: integer
        format: int64
        x-go-name: NumClonedObjects
        x-nullable: true
      numRecoveredObjects:
        description: Specifies the count of recovered objects in the given time frame.
        type: integer
        format: int64
        x-go-name: NumRecoveredObjects
        x-nullable: true
      statsByEnvironment:
        description: Specifies the stats of recovery jobs aggregated by the environment
          type.
        type: array
        items:
          $ref: '#/definitions/RestoreEnvStats'
        x-go-name: StatsByEnvironment
  RestoreTask:
    description: Specifies information about a Restore Task.
    type: object
    title: Restore Task.
    required:
    - name
    properties:
      acropolisParameters:
        description: Specifies parameters for 'kAcropolis' restore task.
        x-nullable: true
        $ref: '#/definitions/AcropolisRestoreParameters'
      applicationParameters:
        description: Specifies parameters for restore task of application server object.
        x-nullable: true
        $ref: '#/definitions/ApplicationRestoreParameters'
      archiveTaskUid:
        description: |-
          Specifies the uid of the Restore Task that retrieves objects from
          an archive. This field is only populated when objects
          must be retrieved from an archive before being restored.
          This field is deprecated.
          deprecated:true
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      archiveTaskUids:
        description: |-
          Specifies the uids of the Restore Task that retrieves objects from
          an archive. This field is only populated when objects
          must be retrieved from an archive before being restored.
          overrideDescription:true
        type: array
        items:
          $ref: '#/definitions/UniversalId'
        x-go-name: ArchiveTaskUids
        x-nullable: true
      canTearDown:
        description: |-
          Specifies whether it is possible to tear down the objects created by the
          recovery.
        type: boolean
        x-go-name: CanTearDown
        x-nullable: true
      cloneViewParameters:
        description: Specifies the View settings used when cloning a View.
        allOf:
        - $ref: '#/definitions/UpdateViewParam'
        x-nullable: true
      continueOnError:
        description: |-
          Specifies if the Restore Task should continue when some operations on some
          objects fail. If true, the Cohesity Cluster ignores intermittent
          errors and restores as many objects as possible.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      datastoreId:
        description: |-
          Specifies the datastore where the object's files are recovered to.
          This field is populated when objects are recovered to a different
          resource pool or to a different parent source.
          This field is not populated when objects are recovered to their
          original datastore locations in the original parent source.
        type: integer
        format: int64
        x-go-name: DatastoreId
        x-nullable: true
      deployVmsToCloud:
        description: Specifies parameters to deploy VMs to cloud.
        x-nullable: true
        $ref: '#/definitions/DeployVmsToCloud'
      endTimeUsecs:
        description: |-
          Specifies the end time of the Restore Task as a Unix epoch
          Timestamp (in microseconds). This field is only populated if the
          Restore Task completes.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: |-
          Specifies the error reported by the Restore Task (if any) after the
          Task has finished.
        title: Restore Task Error.
        allOf:
        - $ref: '#/definitions/RequestError'
        x-nullable: true
      fullViewName:
        description: Specifies the full name of a View.
        type: string
        x-go-name: FullViewName
        x-nullable: true
      hypervParameters:
        description: Specifies additional parameters for 'kHyperV' restore objects.
        x-nullable: true
        $ref: '#/definitions/HypervRestoreParameters'
      id:
        description: |-
          Specifies the id of the Restore Task assigned by
          Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      mountVolumesState:
        description: |-
          Specifies the states of mounting all the volumes onto a mount target
          for a 'kRecoverVMs' Restore Task.
        x-nullable: true
        $ref: '#/definitions/MountVolumesState'
      name:
        description: |-
          Specifies the name of the Restore Task. This field must be set and
          must be a unique name.
        type: string
        x-go-name: Name
        x-nullable: true
      newParentId:
        description: |-
          Specify a new registered parent Protection Source. If specified
          the selected objects are cloned or recovered to this new Protection
          Source. If not specified, objects are cloned or recovered
          to the original Protection Source that was managing them.
        type: integer
        format: int64
        x-go-name: NewParentId
        x-nullable: true
      objects:
        description: |-
          Array of Objects.

          Specifies a list of Protection Source objects or Protection Job objects
          (with specified Protection Source objects).
        type: array
        items:
          $ref: '#/definitions/RestoreObjectDetails'
        x-go-name: Objects
        x-nullable: true
      oneDriveParameters:
        description: Specifies additional parameters for 'kRecoverO365Drive' restore
          task.
        x-nullable: true
        $ref: '#/definitions/OneDriveRestoreParameters'
      outlookParameters:
        description: Specifies parameters for 'kRecoverEmails' restore task.
        x-nullable: true
        $ref: '#/definitions/OutlookRestoreParameters'
      publicFoldersParameters:
        description: |-
          Specifies additional parameters for 'kRecoverO365PublicFolders' restore
          task.
        x-nullable: true
        $ref: '#/definitions/PublicFoldersRestoreParameters'
      restoreObjectState:
        description: |-
          Array of Object States.

          Specifies the states of all the objects for the 'kRecoverVMs' and
          'kCloneVMs' Restore Tasks.
        type: array
        items:
          $ref: '#/definitions/RestoreObjectState'
        x-go-name: RestoreObjectState
        x-nullable: true
      sharePointParameters:
        description: Specifies additional parameters for 'kRecoverSites' restore task.
        x-nullable: true
        $ref: '#/definitions/SharePointRestoreParameters'
      startTimeUsecs:
        description: |-
          Specifies the start time for the Restore Task as a Unix epoch
          Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      status:
        description: |-
          Specifies the overall status of the Restore Task.
          'kReadyToSchedule' indicates the Restore Task is waiting to be scheduled.
          'kProgressMonitorCreated' indicates the progress monitor for the
          Restore Task has been created.
          'kRetrievedFromArchive' indicates that the objects to restore have been
          retrieved from the specified archive. A Task will only ever transition to
          this state if a retrieval is necessary.
          'kAdmitted' indicates the task has been admitted. After a task has been
          admitted, its status does not move back to 'kReadyToSchedule' state
          even if it is rescheduled.
          'kInProgress' indicates that the Restore Task is in progress.
          'kFinishingProgressMonitor' indicates that the Restore Task is
          finishing its progress monitoring.
          'kFinished' indicates that the Restore Task has finished.
          The status indicating success or failure is found in the error code that
          is stored with the Restore Task.
          'kInternalViewCreated' indicates that internal view for the task
          has been created.
          'kZipFileRequested' indicates that request has been sent to create zip
          files for the files to be downloaded. This state is only going to be
          present for kDownloadFiles Task.
          'kCancelled' indicates that task or jb has been cancelled.
        type: string
        enum:
        - kReadyToSchedule
        - kProgressMonitorCreated
        - kRetrievedFromArchive
        - kAdmitted
        - kInProgress
        - kFinishingProgressMonitor
        - kFinished
        - kInternalViewCreated
        - kZipFileRequested
        - kCancelled
        x-go-name: Status
        x-nullable: true
      targetViewCreated:
        description: |-
          Is true if a new View was created by a 'kCloneVMs' Restore Task.
          This field is only set for a 'kCloneVMs' Restore Task.
        type: boolean
        x-go-name: TargetViewCreated
        x-nullable: true
      tearDownErrorMessage:
        description: Specifies the error message about the tear down operation if
          it fails.
        type: string
        x-go-name: TearDownErrorMessage
        x-nullable: true
      tearDownStatus:
        description: |-
          Specifies the status of the tear down operation. This is only set when the
          field 'CanTearDown' is set to true.
          'kReadyToSchedule' indicates that the task is waiting to be scheduled.
          'kAdmitted' indicates that the task has been admitted.
          'kFinished' indicates that the task is finished with or without error.
        type: string
        enum:
        - kReadyToSchedule
        - kAdmitted
        - kFinished
        x-go-name: TearDownStatus
        x-nullable: true
      type:
        description: |-
          Specifies the type of Restore Task.

          'kRecoverVMs' specifies a Restore Task that recovers VMs.
          'kCloneVMs' specifies a Restore Task that clones VMs.
          'kCloneView' specifies a Restore Task that clones a View.
          'kMountVolumes' specifies a Restore Task that mounts volumes.
          'kRestoreFiles' specifies a Restore Task that recovers files and folders.
          'kRecoverApp' specifies a Restore Task that recovers app.
          'kCloneApp' specifies a Restore Task that clone app.
          'kRecoverSanVolume' specifies a Restore Task that recovers SAN volumes.
          'kConvertAndDeployVMs' specifies a Restore Task that converts and deploy VMs to a target environment.
          'kMountFileVolume' specifies a Restore Task that mounts a file volume.
          'kSystem' specifies a Restore Task that recovers a system.
          'kRecoverVolumes' specifies a Restore Task that recovers volumes via the physical agent.
          'kDeployVolumes' specifies a Restore Task that deploys volumes to a target environment.
          'kDownloadFiles' specifies a Restore Task that downloads the requested files and folders in zip format.
          'kRecoverEmails' specifies a Restore Task that recovers the mailbox/email items.
          'kRecoverDisks' specifies a Restore Task that recovers the virtual disks.
          'kRecoverNamespaces' specifies a Restore Task that recovers Kubernetes namespaces.
          'kCloneVMsToView' specifies a Restore Task that clones VMs into a View.
        type: string
        enum:
        - kRecoverVMs
        - kCloneVMs
        - kCloneView
        - kMountVolumes
        - kRestoreFiles
        - kRecoverApp
        - kCloneApp
        - kRecoverSanVolume
        - kConvertAndDeployVMs
        - kMountFileVolume
        - kSystem
        - kRecoverVolumes
        - kDeployVMs
        - kDownloadFiles
        - kRecoverEmails
        - kRecoverDisks
        - kRecoverNamespaces
        - kCloneVMsToView
        x-go-name: Type
        x-nullable: true
      username:
        description: Specifies the Cohesity user who requested this Restore Task.
        type: string
        x-go-name: Username
        x-nullable: true
      viewBoxId:
        description: Specifies the id of the Domain (View Box) where the View is stored.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      virtualDiskRestoreState:
        description: Specifies the state of recovering all the specifies virtual disks
          of a vm.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskRecoverTaskState'
      vlanParameters:
        description: Specifies VLAN parameters for the restore operation.
        x-nullable: true
        $ref: '#/definitions/VlanParameters'
      vmwareParameters:
        description: Specifies additional parameters for 'kVmware' restore objects.
        x-nullable: true
        $ref: '#/definitions/VmwareRestoreParameters'
    x-go-package: cohesity/iris/server/data/public
  RestoreTaskAdditionalParams:
    description: |-
      Message to encapsulate the additional parameters associated with a restore
      task.
    type: object
    properties:
      postScript:
        description: Post-script that must be executed after finishing the restore.
        x-nullable: true
        $ref: '#/definitions/RemoteScriptProto'
      preScript:
        description: Pre-script that must be executed before starting the restore.
        x-nullable: true
        $ref: '#/definitions/RemoteScriptProto'
    x-go-package: magneto/base/magneto.pb
  RestoreTaskStateBaseProto:
    type: object
    properties:
      cancellationRequested:
        description: Whether this task has a pending cancellation request.
        type: boolean
        x-go-name: CancellationRequested
        x-nullable: true
      endTimeUsecs:
        description: |-
          If the restore task has finished, this field contains the end time for the
          task.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: |-
          The error encountered by task (if any). Only valid if the task has
          finished.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      name:
        description: The name of the restore task.
        type: string
        x-go-name: Name
        x-nullable: true
      parentSourceConnectionParams:
        description: A way to connect to the parent source.
        x-nullable: true
        $ref: '#/definitions/ConnectorParams'
      publicStatus:
        description: Iris-facing task state. This field is stamped during the export.
        type: integer
        format: int32
        x-go-name: PublicStatus
        x-nullable: true
      refreshStatus:
        description: Status of the refresh task.
        type: integer
        format: int32
        x-go-name: RefreshStatus
        x-nullable: true
      restoreVlanParams:
        description: |-
          This contains restore vlan params if it was specified as part of the
          restore task.
        x-nullable: true
        $ref: '#/definitions/VlanParams'
      scheduledConstituentId:
        description: |-
          Constituent id (and the gandalf session id) where this task has been
          scheduled. If -1, the task is not running at any slave. It's possible
          that the task was previously scheduled, but is now being re-scheduled.
        type: integer
        format: int64
        x-go-name: ScheduledConstituentId
        x-nullable: true
      scheduledGandalfSessionId:
        type: integer
        format: int64
        x-go-name: ScheduledGandalfSessionId
        x-nullable: true
      startTimeUsecs:
        description: The start time for this restore task.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      status:
        description: Status of the restore task.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
      taskId:
        description: A globally unique id for this task.
        type: integer
        format: int64
        x-go-name: TaskId
        x-nullable: true
      totalLogicalSizeBytes:
        description: |-
          Logical size of this restore task. This is the amount of data that needs
          to be transferred to restore the entity.
        type: integer
        format: int64
        x-go-name: TotalLogicalSizeBytes
        x-nullable: true
      totalPhysicalSizeBytes:
        description: |-
          Physical size of this restore task. This is the amount of data that was
          actually transferred to restore the entity.
        type: integer
        format: int64
        x-go-name: TotalPhysicalSizeBytes
        x-nullable: true
      type:
        description: The type of restore being performed.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      user:
        description: The user who requested this restore task.
        type: string
        x-go-name: User
        x-nullable: true
      userInfo:
        description: Specifies information about the user who made the request.
        x-nullable: true
        $ref: '#/definitions/UserInformation'
      userMessages:
        description: |-
          Messages displayed to the user for this task (if any).
          Only valid if the status of the task is kFinished. This is used for
          informing the user with additional details when there is not an error.
        type: array
        items:
          type: string
        x-go-name: UserMessages
        x-nullable: true
      warnings:
        description: The warnings encountered by this task (if any) during its execution.
        type: array
        items:
          $ref: '#/definitions/ErrorProto'
        x-go-name: Warnings
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  RestoreTaskWrapper:
    type: object
    title: RestoreTaskWrapper defines the struct for a restore operation.
    properties:
      restoreTask:
        description: |-
          RestoreTask is the struct for RestoreWrapperProto used by magneto. It
          wraps either a Restore/Clone task, or a Destroy clone task.
        x-nullable: true
        $ref: '#/definitions/RestoreWrapperProto'
    x-go-package: cohesity/iris/server/data/public
  RestoreVMwareVMParams:
    type: object
    title: This message defines the VMware specific VMs restore params.
    properties:
      catalogUuid:
        description: |-
          Specifies the name of the catalog for vapp template recovery.
          This is applicable for recovery to a VCD.
        type: string
        x-go-name: CatalogUuid
        x-nullable: true
      copyRecovery:
        description: Whether to perform copy recovery instead of instant recovery.
        type: boolean
        x-go-name: CopyRecovery
        x-nullable: true
      datastoreEntityVec:
        description: Datastore entities if the restore is to alternate location.
        type: array
        items:
          $ref: '#/definitions/EntityProto'
        x-go-name: DatastoreEntityVec
        x-nullable: true
      preserveCustomAttributesDuringClone:
        description: Whether to preserve custom attributes for the clone op.
        type: boolean
        x-go-name: PreserveCustomAttributesDuringClone
        x-nullable: true
      preserveTagsDuringClone:
        description: Whether to preserve tags for the clone op.
        type: boolean
        x-go-name: PreserveTagsDuringClone
        x-nullable: true
      resourcePoolEntity:
        description: Resource pool entity if the restore is to alternate location.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      storageProfileName:
        description: |-
          This is only populated for VCD restore to alternate location. It contains
          the name of the destination storage profile.
        type: string
        x-go-name: StorageProfileName
        x-nullable: true
      storageProfileVcdUuid:
        description: |-
          This is only populated for VCD restore to alternate location. It contains
          the vcd uuid of the destination storage profile.
        type: string
        x-go-name: StorageProfileVcdUuid
        x-nullable: true
      targetDatastoreFolder:
        description: |-
          Folder where the restore datastore should be created. This is applicable
          only when the VMs are being cloned.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      targetVmFolder:
        description: |-
          Folder where the VMs should be created. This is applicable only when the
          VMs are being restored to an alternate location or if clone is being
          performed.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoreWrapperProto:
    description: |-
      If this message is a checkpoint record in WAL-logging or if this message is
      used to send restore task info back to the user, it will contain the info of
      the restore job/task and the list of all destroy tasks (only when the record
      is for a restore task of type clone) associated with it. If this message is
      delta record, it will contain the state mutation for one of individual
      restore job, restore task and individual destroy task.
    type: object
    title: |-
      A wrapper proto to put together all the restore-related protos. This will be
      used for WAL-logging, and to send restore-related information back to the
      user.
    properties:
      destroyClonedTaskStateVec:
        description: |-
          For a restore task of type 'Clone', this field contains the info of the
          destroy task(s).
        type: array
        items:
          $ref: '#/definitions/DestroyClonedTaskStateProto'
        x-go-name: DestroyClonedTaskStateVec
        x-nullable: true
      ownerRestoreWrapperProto:
        description: |-
          Note that this field is only populated for Iris in response to
          'GetRestoreTasksArg' RPC.
        title: |-
          For an application restore task, this field contains the info of the
          application owner's restore task if any. For example, a SQL restore
          operation may also restore its owner VM, and this field will contain
          the VM's restore task.
        x-nullable: true
        $ref: '#/definitions/RestoreWrapperProto'
      performRefreshTaskStateVec:
        description: Contains information of the refresh tasks for a clone
        type: array
        items:
          $ref: '#/definitions/PerformRestoreTaskStateProto'
        x-go-name: PerformRefreshTaskStateVec
        x-nullable: true
      performRestoreJobState:
        description: |-
          Contains the information about a restore job. When the info of the
          restore job is send to the Iris, we will transform this proto to the
          above 'perform_restore_task_state' so that Iris has to deal with only one
          kind of restore proto.
        x-nullable: true
        $ref: '#/definitions/PerformRestoreJobStateProto'
      performRestoreTaskState:
        description: Contains information about a restore task.
        x-nullable: true
        $ref: '#/definitions/PerformRestoreTaskStateProto'
      restoreSubTaskWrapperProtoVec:
        description: |-
          If this restore has sub tasks, the following field will get populated
          with the wrapper proto of all of its sub-tasks.

          Note that this field is only populated for Iris in response to
          'GetRestoreTasksArg' RPC. It is not persisted in Magneto's WAL.

          List of environments that use this field:
          kSQL : Used for multi-stage SQL restore that supports a hot-standy.
        type: array
        items:
          description: |-
            If this message is a checkpoint record in WAL-logging or if this message is
            used to send restore task info back to the user, it will contain the info of
            the restore job/task and the list of all destroy tasks (only when the record
            is for a restore task of type clone) associated with it. If this message is
            delta record, it will contain the state mutation for one of individual
            restore job, restore task and individual destroy task.
          type: object
          title: |-
            A wrapper proto to put together all the restore-related protos. This will be
            used for WAL-logging, and to send restore-related information back to the
            user. (RestoreWrapperProto)
        x-go-name: RestoreSubTaskWrapperProtoVec
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  RestoredFileInfo:
    type: object
    title: This message has information on file/directory being restored.
    properties:
      absolutePath:
        description: |-
          Full path of the file being restored: the actual file path without the
          disk. E.g.:
          \Program Files\App\file.txt
        type: string
        x-go-name: AbsolutePath
        x-nullable: true
      attachedDiskId:
        description: Disk information of where the source file is currently located.
        type: integer
        format: int32
        x-go-name: AttachedDiskId
        x-nullable: true
      diskPartitionId:
        description: Disk partition to which the file belongs to.
        type: integer
        format: int32
        x-go-name: DiskPartitionId
        x-nullable: true
      fsUuid:
        description: File system UUID on which file resides.
        type: string
        x-go-name: FsUuid
        x-nullable: true
      isDirectory:
        description: Whether the path points to a directory.
        type: boolean
        x-go-name: IsDirectory
        x-nullable: true
      isNonSimpleLdmVol:
        description: |-
          This will be set to true for recovery workflows for non-simple volumes
          on Windows Dynamic Disks. In that case, we will use VolumeInfo instead of
          some of the details captured here (e.g. virtual_disk_file) for determining
          disk and volume related details.
        type: boolean
        x-go-name: IsNonSimpleLdmVol
        x-nullable: true
      restoreBaseDirectory:
        description: |-
          This must be set to a directory path if restore_to_original_paths is
          false and restore task has multiple files which are not desired to be
          restore to one common location. If this filed is populated,
          'absolute_path' will be restored under this location. If this field is not
          populated all files in restore task will be restored to location specified
          in RestoreFilesPreferences.
        type: string
        x-go-name: RestoreBaseDirectory
        x-nullable: true
      restoreMountPoint:
        description: |-
          Mount point of the volume on which the file to be restored is located.
          E.g.:
          c:\temp\vhd_mount_1234
        type: string
        x-go-name: RestoreMountPoint
        x-nullable: true
      sizeBytes:
        description: Size of the file in bytes. Required in FLR in GCP using Cloud
          Functions.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
      virtualDiskFile:
        description: Virtual disk file to which this file belongs to.
        type: string
        x-go-name: VirtualDiskFile
        x-nullable: true
      volumeId:
        description: Id of the volume.
        type: string
        x-go-name: VolumeId
        x-nullable: true
      volumePath:
        description: |-
          Original volume name (or drive letter). This is used while performing the
          copy to the original paths.
          E.g.:
          c:
        type: string
        x-go-name: VolumePath
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  RestoredFileInfoList:
    type: object
    title: Specifies information on file/directory being restored.
    properties:
      isDirectory:
        description: Specifies whether the path points to directory.
        type: boolean
        x-go-name: IsDirectory
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RestoredObjectNetworkConfigProto:
    type: object
    properties:
      detachNetwork:
        description: |-
          If this is set to true, then the network will be detached from the
          recovered or cloned VMs.
          NOTE: If this is set to true, then all the following fields will be
          ignored.
        type: boolean
        x-go-name: DetachNetwork
        x-nullable: true
      disableNetwork:
        description: |-
          This can be set to true to indicate that the attached network should be
          left in disabled state.
        type: boolean
        x-go-name: DisableNetwork
        x-nullable: true
      mappings:
        description: The network mappings to be applied to the target object.
        type: array
        items:
          $ref: '#/definitions/NetworkMappingProto'
        x-go-name: Mappings
        x-nullable: true
      networkEntity:
        description: |-
          The network entity (i.e, either a standard switch port group or a
          distributed port group in a VMware env) that will attached to the restored
          object.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      preserveMacAddressOnNewNetwork:
        description: |-
          If this is true and we are attaching to a new network entity, then the
          VM's MAC address will be preserved on the new network.
        type: boolean
        x-go-name: PreserveMacAddressOnNewNetwork
        x-nullable: true
      vnicEntity:
        description: The VNicProfile that will be attached to the restored object.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  RestoredObjectVCDConfigProto:
    type: object
    properties:
      isVapp:
        description: Whether the restored object is a VApp.
        type: boolean
        x-go-name: IsVapp
        x-nullable: true
      isVappTemplate:
        description: Whether the restored object is a VApp template.
        type: boolean
        x-go-name: IsVappTemplate
        x-nullable: true
      restoredVappInfo:
        description: |-
          Entity info enabled only when is_vapp is true. This proto will contain
          the original vApp that is protected.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      restoredVappTemplateInfo:
        description: |-
          Entity info enabled only when is_vapp_template is true. This proto will
          contain the original vApp template that is protected.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      vappEntity:
        description: |-
          Entity info of the vApp to be used to import the VMs into while performing
          recovery of VMs into exisintg vApps.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      vcenterConnectorParams:
        description: |-
          Connector params associated with the vcenter which will be captured for
          vCD environment.
        x-nullable: true
        $ref: '#/definitions/ConnectorParams'
      vdcEntity:
        description: Entity info of the Virtual Datacenter used while composing a
          new vApp.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/master/base/master.pb
  RetentionPolicyProto:
    description: Message that specifies the retention policy for backup snapshots.
    type: object
    title: Retention Policy Proto.
    properties:
      numDaysToKeep:
        description: The number of days to keep the snapshots for a backup run.
        type: integer
        format: int64
        x-go-name: NumDaysToKeep
        x-nullable: true
      numSecsToKeep:
        description: The number of seconds to keep the snapshots for a backup run.
        type: integer
        format: int32
        x-go-name: NumSecsToKeep
        x-nullable: true
      wormRetention:
        description: |-
          If the WORM lock is enabled on this policy, details of WORM policy.
          Absence of this field indicates WORM is not enabled on this policy.
          Also, presence of this field doesn't necessarily imply WORM protection.
          This is because the field could be present but the retention could
          have expired.
          If the policy has WORM enabled, We do not propagate it to attached
          backup jobs and further down the hierarchy here. Instead, any update on
          the backup run performs WORM checks based on the currently attached
          policy. Backup runs, when finished, inherit the WORM property from the
          corresponding attached policy at the completion time.
        x-nullable: true
        $ref: '#/definitions/WormRetentionProto'
    x-go-package: magneto/base/policy.pb
  RetrieveArchiveInfo:
    description: |-
      Proto to describe information about the retrieval of an archive task as
      provided by Icebox.
    type: object
    properties:
      avgLogicalTransferRateBps:
        description: Average logical bytes transfer rate in bytes per second as seen
          by Icebox.
        type: integer
        format: int64
        x-go-name: AvgLogicalTransferRateBps
        x-nullable: true
      bytesTransferred:
        description: Number of physical bytes transferred for this retrieval task
          so far.
        type: integer
        format: int64
        x-go-name: BytesTransferred
        x-nullable: true
      endTimeUsecs:
        description: |-
          Time when this retrieval task ended at Icebox side. If not set, then the
          retrieval has not ended yet.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      error:
        description: |-
          If the retrieval task has completed, the following indicates whether there
          was an error in its completion.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      logicalBytesTransferred:
        description: Number of logical bytes transferred so far.
        type: integer
        format: int64
        x-go-name: LogicalBytesTransferred
        x-nullable: true
      logicalSizeBytes:
        description: Total logical size of the retrieval task.
        type: integer
        format: int64
        x-go-name: LogicalSizeBytes
        x-nullable: true
      progressMonitorTaskPath:
        description: The root path of the progress monitor for this task.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
      retrievedEntityVec:
        description: Contains info about all retrieved entities.
        type: array
        items:
          $ref: '#/definitions/RetrieveArchiveInfo_RetrievedEntity'
        x-go-name: RetrievedEntityVec
        x-nullable: true
      startTimeUsecs:
        description: |-
          Time when this retrieval task was started by Icebox. If not set, then
          retrieval has not been started yet.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      stubViewName:
        description: |-
          The stub view that Icebox created. Stub view can be used for selectively
          restoring or accessing files from an archive location.
        type: string
        x-go-name: StubViewName
        x-nullable: true
      stubViewRelativeDirName:
        description: Relative directory inside the stub view that corresponds with
          the archive.
        type: string
        x-go-name: StubViewRelativeDirName
        x-nullable: true
      targetViewName:
        description: |-
          The name of the target view where Icebox has retrieved and staged the
          requested entities.
        type: string
        x-go-name: TargetViewName
        x-nullable: true
      userActionRequiredMsg:
        description: |-
          Message to display in the UI if any manual intervention is needed to make
          forward progress for the retrieve from archive task. This message is
          mainly relevant for tape based retrieve from archive tasks where a backup
          admin might be asked to load new media when the tape library does not have
          the relevant media to retrieve the archive from.
        type: string
        x-go-name: UserActionRequiredMsg
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  RetrieveArchiveInfo_RetrievedEntity:
    description: |-
      Proto to define the info about the entity that was retrieved from an
      archive.
    type: object
    properties:
      bytesTransferred:
        description: Number of physical bytes transferred over wire for this entity.
        type: integer
        format: int64
        x-go-name: BytesTransferred
        x-nullable: true
      endTimestampUsecs:
        description: Time in microseconds when retrieve of this entity finished or
          failed.
        type: integer
        format: int64
        x-go-name: EndTimestampUsecs
        x-nullable: true
      entity:
        description: The entity that was retrieved.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      error:
        description: |-
          If the retrieve of the 'entity' failed, this field may contain the cause
          of the failure.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      logicalBytesTransferred:
        description: Number of logical bytes transferred so far.
        type: integer
        format: int64
        x-go-name: LogicalBytesTransferred
        x-nullable: true
      logicalSizeBytes:
        description: Total logical size of this entity.
        type: integer
        format: int64
        x-go-name: LogicalSizeBytes
        x-nullable: true
      progressMonitorTaskPath:
        description: |-
          The path relative to the root path of the retrieval task progress
          monitor of this entity progress monitor.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
      relativeSnapshotDir:
        description: |-
          The path relative to the root of the file system where the snapshot of
          this entity was retrieved/copied to.
        type: string
        x-go-name: RelativeSnapshotDir
        x-nullable: true
      startTimestampUsecs:
        description: Time in microseconds when retrieve of this entity started.
        type: integer
        format: int64
        x-go-name: StartTimestampUsecs
        x-nullable: true
      status:
        description: The retrieval status of this entity.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  RetrieveArchiveTaskStateProto:
    description: |-
      Persistent state of a retrieve of an archive task. Only one of either
      entity_vec or download_files_info needs to be specified in this proto, where
      entity_vec is for retrieving the whole objects from the archive, and
      download_files_info is for only downloading the specified files from the
      archive.
    type: object
    properties:
      archivalTarget:
        description: Target from which to retrieve the archive.
        x-nullable: true
        $ref: '#/definitions/ArchivalTarget'
      archiveTaskUid:
        description: The uid of the archive to be retrieved.
        x-nullable: true
        $ref: '#/definitions/UniversalIdProto'
      backupRunStartTimeUsecs:
        description: |-
          The start time of the backup run whose corresponding archive is being
          retrieved. This field is just used for logging purposes.
        type: integer
        format: int64
        x-go-name: BackupRunStartTimeUsecs
        x-nullable: true
      cancellationRequested:
        description: Whether this retrieval task has a pending cancellation request.
        type: boolean
        x-go-name: CancellationRequested
        x-nullable: true
      downloadFilesInfo:
        x-nullable: true
        $ref: '#/definitions/RetrieveArchiveTaskStateProto_DownloadFilesInfo'
      endTimeUsecs:
        description: |-
          If the retrieval task has finished, this field contains the end time for
          the task.
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      entityVec:
        description: |-
          Information on the exact set of objects to retrieve from archive. Even if
          the user wanted to retrieve all objects from the archive, this field will
          contain all individual leaf-level objects.
        type: array
        items:
          $ref: '#/definitions/EntityProto'
        x-go-name: EntityVec
        x-nullable: true
      error:
        description: |-
          The error encountered by task (if any). Only valid if the task has
          finished.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      fullViewName_DEPRECATED:
        description: |-
          The full view name (external). This is composed of a Cohesity specific
          prefix and the user provided view name.
        type: string
        x-go-name: FullViewName_DEPRECATED
        x-nullable: true
      jobUid:
        description: The uid of the job to which the archive to be retrieved belongs
          to.
        x-nullable: true
        $ref: '#/definitions/UniversalIdProto'
      name:
        description: The name of the retrieval task.
        type: string
        x-go-name: Name
        x-nullable: true
      progressMonitorTaskPath:
        description: The path of the progress monitor for this task.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
      restoreArchiveFilesInfo:
        description: |-
          Information of the files to restore from archive to source.
          Only one of download_files_info or restore_archive_files_info has
          to be populated to trigger download files or restore files from archive
          correspondingly.
        x-nullable: true
        $ref: '#/definitions/RetrieveArchiveTaskStateProto_DownloadFilesInfo'
      restoreTaskId:
        description: |-
          For retrieve tasks created after the 2.8 release, this will contain the id
          of the restore task that created this retrieve task.
        type: integer
        format: int64
        x-go-name: RestoreTaskId
        x-nullable: true
      retrievalInfo:
        description: |-
          Information about the retrieval task. This proto is created by the master
          and info in the proto is periodically updated by querying Icebox.
        x-nullable: true
        $ref: '#/definitions/RetrieveArchiveInfo'
      startTimeUsecs:
        description: The start time for this retrieval task.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
      status:
        description: The status of this task.
        type: integer
        format: int32
        x-go-name: Status
        x-nullable: true
      taskUid:
        description: The globally unique id for this retrieval of an archive task.
        x-nullable: true
        $ref: '#/definitions/UniversalIdProto'
      user:
        description: The user who requested this retrieval task.
        type: string
        x-go-name: User
        x-nullable: true
      vaultRestoreParams:
        description: Params to be passed to Icebox while restoring data from an archive.
        x-nullable: true
        $ref: '#/definitions/VaultParams_RestoreParams'
      viewBoxId:
        description: The view box id to which 'view_name' belongs to.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName_DEPRECATED:
        description: |-
          The view name as provided by the user for this retrieval task. Retrieved
          snapshots of the entities will be placed in this view.
        type: string
        x-go-name: ViewName_DEPRECATED
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  RetrieveArchiveTaskStateProto_DownloadFilesInfo:
    description: |-
      Information required for Icebox when downloading files from an archived
      entity. This proto is specifically just for the current temporary solution
      for downloading a single from an archive, where we let icebox download the
      file for us. In the future once the new Yoda APIs for downloading files
      from archive stub views are ready, we will just discard this proto and
      make field 20 reserved.
    type: object
    properties:
      filePathVec:
        description: |-
          The file paths to be retrieved from the archive.
          For example, if the file paths are /foo/bar and /foo2/bar
          and target_dir_path is "downloaded_files". The retrieved files will have
          the full path structure maintained in target_dir_path such as
          downloaded_files/foo/bar and /downloaded_files/foo2/bar.
        type: array
        items:
          type: string
        x-go-name: FilePathVec
        x-nullable: true
      magnetoInstanceId:
        description: Instance from which the requested files will be restored.
        x-nullable: true
        $ref: '#/definitions/MagnetoInstanceId'
      objectId:
        description: Object from which the requested files will be restored.
        x-nullable: true
        $ref: '#/definitions/MagnetoObjectId'
      skipRestoreInStubView:
        description: |-
          Ask Icebox to only create the stub view and skip restoring files in
          the stub view.
        type: boolean
        x-go-name: SkipRestoreInStubView
        x-nullable: true
      targetDirPath:
        description: Path to the directory under which the downloaded files will be
          placed.
        type: string
        x-go-name: TargetDirPath
        x-nullable: true
      targetViewName:
        description: Target view name where the downloaded files will be placed.
        type: string
        x-go-name: TargetViewName
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  Role:
    description: |-
      Specifies information about role such as the category, privileges,
      description, etc. A role can be a default system role
      or a custom role. Custom roles are user-defined roles that are created
      using the Cohesity Dashboard, the REST API or the CLI.
      System roles are provided by default on the Cohesity Cluster.
    type: object
    title: Role Information.
    properties:
      createdTimeMsecs:
        description: Specifies the epoch time in milliseconds when the role was created.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      description:
        description: Specifies a description about the role.
        type: string
        x-go-name: Description
        x-nullable: true
      isCustomRole:
        description: |-
          Specifies if the role is a user-defined custom role.
          If true, the role is a user-defined custom role that was created using
          the REST API, the Cohesity Dashboard or the CLI.
          If false, the role is a default system role that was created
          during Cluster creation.
        type: boolean
        x-go-name: IsCustomRole
        x-nullable: true
      label:
        description: |-
          Specifies the label for the role as displayed on the Cohesity
          Dashboard such as 'Viewer'.
        type: string
        x-go-name: Label
        x-nullable: true
      lastUpdatedTimeMsecs:
        description: Specifies the epoch time in milliseconds when the role was last
          modified.
        type: integer
        format: int64
        x-go-name: LastUpdatedTimeMsecs
        x-nullable: true
      name:
        description: |-
          Specifies the internal Cluster name for the role such as COHESITY_VIEWER.
          For custom roles, the name and the label are the same.
          For default system roles, the name and label are different.
        type: string
        x-go-name: Name
        x-nullable: true
      privileges:
        description: |-
          Array of Privileges.

          Specifies the privileges assigned to the role. When a user or
          group is assigned this role, these privileges
          define the operations the user or group can perform on the
          Cohesity Cluster.
        type: array
        items:
          type: string
        x-go-name: Privileges
        x-nullable: true
      tenantId:
        description: Specifies unique id of the tenant owning the role.
        type: string
        x-go-name: TenantId
        x-nullable: true
      tenantIds:
        description: Specifies id of tenants using this role.
        type: array
        items:
          type: string
        x-go-name: TenantIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RoleCreateParameters:
    description: |-
      Specifies the parameters required to create a new custom role such
      as the name, description and the privileges to assign to the role.
    type: object
    title: Role Create.
    properties:
      description:
        description: Specifies a description about the role.
        type: string
        x-go-name: Description
        x-nullable: true
      name:
        description: Specifies the name of the custom role.
        type: string
        x-go-name: Name
        x-nullable: true
      privileges:
        description: |-
          Array of Privileges.

          Specifies the list of privileges to assign to the role.
        type: array
        items:
          type: string
        x-go-name: Privileges
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RoleDeleteParameters:
    description: Specifies the parameters required for deleting one or more roles.
    type: object
    title: Delete Role.
    required:
    - names
    properties:
      names:
        description: |-
          Array of Role Names.

          Specifies the list of roles to delete which are specified by role names.
        type: array
        items:
          type: string
        x-go-name: Names
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RoleUpdateParameters:
    description: Specifies parameters required to update a role.
    type: object
    title: Role Update.
    properties:
      description:
        description: Specifies a description about the role.
        type: string
        x-go-name: Description
        x-nullable: true
      privileges:
        description: |-
          Array of Privileges.

          Specifies the list of privileges to assign to the role.
        type: array
        items:
          type: string
        x-go-name: Privileges
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RootPublicFolder:
    description: |-
      Specifies the RootPublicFolder with restore details to support full or
      partial recovery.
    type: object
    title: O365 RootPublicFolder.
    properties:
      publicFolderList:
        description: |-
          Specifies the list of Public Folders to be restored incase user wishes not
          to restore entire RootPublicFolder.
        type: array
        items:
          $ref: '#/definitions/PublicFolder'
        x-go-name: PublicFolderList
        x-nullable: true
      restoreEntireRootPublicFolder:
        description: Specifies whether the entire RootPublicFolder is to be restored.
        type: boolean
        x-go-name: RestoreEntireRootPublicFolder
        x-nullable: true
      rootPublicFolderObject:
        description: Specifies the details of the RootPublicFolder object.
        x-nullable: true
        $ref: '#/definitions/RestoreObjectDetails'
    x-go-package: cohesity/iris/server/data/public
  Route:
    description: Specifies the settings of a Static Route.
    type: object
    title: Route.
    properties:
      description:
        description: Specifies a description of the Static Route.
        type: string
        x-go-name: Description
        x-nullable: true
      destNetwork:
        description: |-
          Destination network.

          Specifies the destination network of the Static Route.
          overrideDescription: true
        type: string
        x-go-name: DestNetwork
        x-nullable: true
      ifName:
        description: |-
          Specifies the network interfaces name to use for communicating with the
          destination network.
        type: string
        x-go-name: IfName
        x-nullable: true
      ifaceGroupName:
        description: |-
          Specifies the network interfaces group or interface group with vlan id to
          use for communicating with the destination network.
        type: string
        x-go-name: IfaceGroupName
        x-nullable: true
      nextHop:
        description: Specifies the next hop to the destination network.
        type: string
        x-go-name: NextHop
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RpoPolicySettings:
    description: |-
      Specifies all the additional settings that are applicable only
      to an RPO policy. This can include storage domain, settings of different
      environments, etc.
    type: object
    title: RPO Policy.
    properties:
      alertingConfig:
        description: |-
          Alerting configuration can be used to specify optional details for the
          alerts triggered by this policy.
        x-nullable: true
        $ref: '#/definitions/AlertingConfig'
      alertingPolicy:
        description: |-
          Array of Job Events.

          During Job Runs, the following Job Events are generated:
          1) Job succeeds 2) Job fails
          3) Job violates the SLA
          These Job Events can cause Alerts to be generated.
          'kSuccess' means the Protection Job succeeded.
          'kFailure' means the Protection Job failed.
          'kSlaViolation' means the Protection Job took longer than the time period
          specified in the SLA.
        type: array
        items:
          type: string
          enum:
          - kSuccess
          - kFailure
          - kSlaViolation
        x-go-name: AlertingPolicy
        x-nullable: true
      environmentTypeJobParams:
        description: |-
          Specifies the policy level additional environment specific backup params.
          If this is not specified, default actions will be taken,  for example for
          NAS environments, all objects within the source will be backed up.
        x-nullable: true
        $ref: '#/definitions/EnvironmentTypeJobParameters'
      indexingPolicy:
        description: Specifies the indexing policy for objects backed up by this policy.
        x-nullable: true
        $ref: '#/definitions/IndexingPolicy'
      qosType:
        description: |-
          Specifies the QoS policy type to use.
          'kBackupHDD' indicates the Cohesity Cluster writes data directly to
          the HDD tier for this Protection Job. This is the recommended setting.
          'kBackupSSD' indicates the Cohesity Cluster writes data directly to
          the SSD tier for this Protection Job. Only specify this policy if
          you need fast ingest speed for a small number of Protection Jobs.
        type: string
        enum:
        - kBackupHDD
        - kBackupSSD
        x-go-name: QosType
        x-nullable: true
      storageDomainId:
        description: Specifies the Storage Domain to which data will be written.
        type: integer
        format: int64
        x-go-name: StorageDomainId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RpoSchedule:
    description: Specifies an RPO Schedule.
    type: object
    title: RPO Schedule.
    properties:
      intervalUnit:
        description: |-
          Specifies an RPO policy interval unit which will be used along with the
          multiplier to calculate the interval for the RPO policy execution.
          this can be kHours, kDays, KWeeks, kMonths
          RPOIntervalUnit.

          Specifies an RPO Schedule interval unit.
          kMinutes specifies that the rpo interval unit is hours.
          kHours specifies that the rpo interval unit is hours.
          kDays specifies that the rpo interval unit is days.
          kWeeks specifies that the rpo interval unit is weeks.
          kMonths specifies that the rpo interval unit is months.
        type: string
        enum:
        - kMinutes
        - kHours
        - kDays
        - kWeeks
        - kMonths
        x-go-name: IntervalUnit
        x-nullable: true
      multiplier:
        description: |-
          Specifies the multiplier value to be used with the  RPO interval unit
          value.
        type: integer
        format: int64
        x-go-name: Multiplier
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RunDiagnosticsMessage:
    description: Specifies the status of an Run Diagnostics request.
    type: object
    title: Status of Run Diagnostics Request.
    properties:
      message:
        description: |-
          Specifies the status message returned after initiating a run
          diagnostics request.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RunJobSnapshotTarget:
    description: |-
      Specifies settings for a Copy Task when a Protection is run. It
      gives the target location for the Snapshot and its retention.
    type: object
    title: Copy Task Job Run Parameters.
    properties:
      archivalTarget:
        description: |-
          Specifies the Archival External Target for storing a copied Snapshot.
          If the type is not 'kLocal', either a replicationTarget,
          archivalExternalTarget or cloudReplicationTarget must be specified.
        x-nullable: true
        $ref: '#/definitions/ArchivalExternalTarget'
      cloudReplicationTarget:
        description: |-
          Specifies the cloud replication target for storing a copied Snapshot.
          If the type is not 'kLocal', either a replicationTarget,
          archivalExternalTarget or cloudReplicationTarget must be specified.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTargetDetails'
      daysToKeep:
        description: Specifies the number of days to retain copied Snapshots on the
          target.
        type: integer
        format: int64
        x-go-name: DaysToKeep
        x-nullable: true
      holdForLegalPurpose:
        description: |-
          Specifies optionally whether to retain the snapshot for legal purpose.
          If set to true, the run cannot be deleted until the retention period.
          Note that using this option may cause the Cluster to run out of space.
          If set to false explicitly, the hold is removed, and the run will expire
          as specified in the policy of the Protection Job.
          If this field is not specified, there is no change to the hold of the run.
          This field can be set only by a User having Data Security Role.
        type: boolean
        x-go-name: HoldForLegalPurpose
        x-nullable: true
      replicationTarget:
        description: |-
          Specifies the replication target (Remote Cluster) for storing a copied
          Snapshot.
          If the type is not 'kLocal', either a replicationTarget,
          archivalExternalTarget or cloudReplicationTarget must be specified.
        x-nullable: true
        $ref: '#/definitions/ReplicationTargetSettings'
      type:
        description: |-
          Specifies the type of a Snapshot target such as 'kLocal', 'kRemote' or
          'kArchival'.
          'kLocal' means the Snapshot is stored on a local Cohesity Cluster.
          'kRemote' means the Snapshot is stored on a Remote Cohesity Cluster.
          (It was copied to the Remote Cohesity Cluster using replication.)
          'kArchival' means the Snapshot is stored on a Archival External Target
          (such as Tape or AWS).
          'kCloudDeploy' means the Snapshot is stored on a Cloud platform.
        type: string
        enum:
        - kLocal
        - kRemote
        - kArchival
        - kCloudDeploy
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RunMapReduceInstanceResult:
    type: object
    title: Result of RunMapReduceInstance call.
    properties:
      error:
        description: Status code of http rpc.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      mapReduceInstanceId:
        description: Return the ID of instance.
        type: integer
        format: int64
        x-go-name: MapReduceInstanceId
        x-nullable: true
    x-go-package: yoda/base/analytics.pb
  RunMapReduceParams:
    description: RunMapReduceParams specifies the input params to run a map reduce
      instance.
    type: object
    title: Get Run Map Reduce App Parameters.
    properties:
      appId:
        description: ApplicationId is the Id of the map reduce application to run.
        type: integer
        format: int64
        x-go-name: ApplicationId
        x-nullable: true
      inputParams:
        description: |-
          InputParams specifies optional list of key=value input params specified
          for running the map reduce instance.
        type: array
        items:
          $ref: '#/definitions/MapReduceInstance_InputParam'
        x-go-name: InputParams
        x-nullable: true
      mrInput:
        description: |-
          InputSpecification specifies the input information to run the specific map
          reduce instance.
        x-nullable: true
        $ref: '#/definitions/InputSpec'
      mrOutput:
        description: |-
          OutputSpecification specifies the output information to run the specific
          map reduce instance.
        x-nullable: true
        $ref: '#/definitions/OutputSpec'
    x-go-package: cohesity/iris/server/data/public
  RunNowParameters:
    description: |-
      Specifies the parameters of a Run Now operation. A Run Now operation
      will try to backup the a source and/or its databases instantly.
    type: object
    title: RunNowParameters.
    properties:
      databaseIds:
        description: Specifies the ids of the DB's to perform run now on.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: DatabaseIds
        x-nullable: true
      physicalParams:
        description: Specifies optional physical parameters for a specific source
          id.
        x-nullable: true
        $ref: '#/definitions/RunNowPhysicalParameters'
      sourceId:
        description: |-
          Specifies the source id of the Databases to perform the Run Now
          operation on.
        type: integer
        format: int64
        x-go-name: SourceId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RunNowPhysicalParameters:
    description: Specifies optional physical parameters for a specific source id.
    type: object
    title: RunNowPhysicalParameters.
    properties:
      metadataFilePath:
        description: |-
          Specifies metadata file path during run-now requests for physical file
          based backups for some specific host entity. If specified, it will
          override any default metadata/directive file path set at the job level
          for the host. Also note that if the job default does not specify a
          metadata/directive file path for the host, then specifying this field
          for that host during run-now request will be rejected.
        type: string
        x-go-name: MetadataFilePath
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RunProtectionJobParam:
    description: Specify the parameters to run a protection job.
    type: object
    title: Protection Run Parameters.
    properties:
      copyRunTargets:
        description: |-
          Optional parameter to be set if you want specific replication or archival
          associated with the policy to run.
        type: array
        items:
          $ref: '#/definitions/RunJobSnapshotTarget'
        x-go-name: CopyRunTargets
        x-nullable: true
      runNowParameters:
        description: Optional parameters of a Run Now operation.
        type: array
        items:
          $ref: '#/definitions/RunNowParameters'
        x-go-name: RunNowParameters
        x-nullable: true
      runType:
        description: |-
          Specifies the type of backup. If not specified, 'kRegular' is assumed.
          'kRegular' indicates a incremental (CBT) backup. Incremental backups
          utilizing CBT (if supported) are captured of the target protection objects.
          The first run of a kRegular schedule captures all the blocks.
          'kFull' indicates a full (no CBT) backup. A complete backup
          (all blocks) of the target protection objects are always captured and
          Change Block Tracking (CBT) is not utilized.
          'kLog' indicates a Database Log backup. Capture the database
          transaction logs to allow rolling back to a specific point in time.
          'kSystem' indicates a system backup. System backups are used to do
          bare metal recovery of the system to a specific point in time.
        type: string
        enum:
        - kRegular
        - kFull
        - kLog
        - kSystem
        x-go-name: RunType
        x-nullable: true
      sourceIds:
        description: |-
          Optional parameter if you want to back up only a subset of sources that
          are protected by the job in this run. If a Run Now operation is to be
          performed then the source ids should only be provided in the
          runNowParameters along with the database Ids.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: SourceIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  RunUid:
    description: Specifies the universal id of the latest successful Protection Job
      Run.
    type: object
    title: Run UID.
    properties:
      jobUid:
        description: Specifies the universal id of the Protection Job.
        x-nullable: true
        $ref: '#/definitions/UniversalId'
      startTimeUsecs:
        description: Specifies the start time of the Protection Job Run.
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SQLServerInstanceVersion:
    description: Specifies the Server Instance Version.
    type: object
    title: SQL Server Instance Version.
    properties:
      build:
        description: Specifies the build.
        type: integer
        format: int32
        x-go-name: Build
        x-nullable: true
      majorVersion:
        description: Specifies the major version.
        type: integer
        format: int32
        x-go-name: MajorVersion
        x-nullable: true
      minorVersion:
        description: Specifies the minor version.
        type: integer
        format: int32
        x-go-name: MinorVersion
        x-nullable: true
      revision:
        description: Specifies the revision.
        type: integer
        format: int32
        x-go-name: Revision
        x-nullable: true
      versionString:
        description: Specifies the version string.
        type: string
        x-go-name: VersionString
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SalesforceAccountInfo:
    description: Salesforce Account Information of a Helios user.
    type: object
    title: Salesforce Account Information.
    properties:
      accountId:
        description: Specifies the Account Id assigned by Salesforce.
        type: string
        x-go-name: AccountId
        x-nullable: true
      userId:
        description: Specifies the User Id assigned by Salesforce.
        type: string
        x-go-name: UserId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Sample:
    description: Specifies a sample of data collected at a timestamp.
    type: object
    title: Sample.
    properties:
      floatValue:
        description: |-
          Specifies the value of the data sample if the type is float64.
          This field is nil if the type of the data is not a float value.
        type: number
        format: double
        x-go-name: FloatValue
        x-nullable: true
      timestampMsecs:
        description: Specifies the timestamp when the data sample occured.
        type: integer
        format: int64
        x-go-name: TimestampMsecs
        x-nullable: true
      value:
        description: |-
          Specifies the value of the data sample if the type is int64.
          This field is nil if the type of the data is not an int value.
        type: integer
        format: int64
        x-go-name: Value
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SanEnvJobParameters:
    description: |-
      Specifies job parameters applicable for all SAN Environment types
      Protection Sources in a Protection Job.
    type: object
    title: SAN Environment Job Parameters.
    properties:
      maxSnapshotsOnPrimary:
        description: |-
          Specifies how many recent snapshots of each backed up entity to retain on
          the primary environment. If not specified, then snapshots will not be
          be deleted from the primary environment.
        type: integer
        format: int64
        x-go-name: MaxSnapshotsOnPrimary
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SanStorageArray:
    description: Specifies a SAN Storage Array.
    type: object
    title: SAN Storage Array.
    properties:
      id:
        description: |-
          Specifies a unique id of a SAN Storage Array.
          The id is unique across Cohesity Clusters.
        type: string
        x-go-name: Id
        x-nullable: true
      ports:
        description: Specifies the SAN ports of the SAN Storage Array.
        type: array
        items:
          $ref: '#/definitions/IscsiSanPort'
        x-go-name: Ports
        x-nullable: true
      revision:
        description: Specifies the revision of the SAN Storage Array.
        type: string
        x-go-name: Revision
        x-nullable: true
      version:
        description: Specifies the version of the SAN Storage Array.
        type: string
        x-go-name: Version
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SanVolume:
    description: Specifies a SAN Volume in a SAN Storage Array.
    type: object
    title: SAN Volume.
    properties:
      createdTime:
        description: Specifies the created time (e.g., "2015-07-21T17:59:41Z") of
          the volume.
        type: string
        x-go-name: CreatedTime
        x-nullable: true
      parentVolume:
        description: |-
          Specifies the name of the source volume, if this volume was
          copied or cloned from it.
        type: string
        x-go-name: ParentVolume
        x-nullable: true
      serialNumber:
        description: Specifies the serial number of the volume.
        type: string
        x-go-name: SerialNumber
        x-nullable: true
      sizeBytes:
        description: Specifies the provisioned size in bytes of the volume.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
      usedBytes:
        description: Specifies the total space actually used by the volume.
        type: integer
        format: int64
        x-go-name: UsedBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SchedulerProto:
    description: Specifies the scheduler structure which holds the various schedule
      jobs.
    type: object
    title: Scheduler Proto.
    properties:
      schedulerJobs:
        description: The array of the various scheduler jobs.
        type: array
        items:
          $ref: '#/definitions/SchedulerProto_SchedulerJob'
        x-go-name: SchedulerJobs
        x-nullable: true
    x-go-package: iris/base/scheduler.pb
  SchedulerProto_SchedulerJob:
    description: Specifies the structure of the scheduler job along with its attributes.
    type: object
    title: Scheduler Job.
    properties:
      enableRecurringEmail:
        description: The boolean which specifies if this job is to be scheduled or
          not.
        type: boolean
        x-go-name: EnableRecurringEmail
        x-nullable: true
      id:
        description: The unique id for the scheduled job assigned by the cluster.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: The name of the scheduled job given by the user.
        type: string
        x-go-name: Name
        x-nullable: true
      scheduleJobParameters:
        x-nullable: true
        $ref: '#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters'
      schedules:
        description: The frequency of schedule execution.
        type: array
        items:
          $ref: '#/definitions/SchedulerProto_SchedulerJob_Schedule'
        x-go-name: Schedules
        x-nullable: true
      tenantId:
        description: Specifies id of tenant who created the scheduler job.
        type: string
        x-go-name: TenantId
        x-nullable: true
      type:
        description: |-
          Specifies the type of the job.
          The enum which defines the Job type of the job.
        type: string
        enum:
        - kSchedulerJobReport
        x-go-name: Type
        x-nullable: true
    x-go-package: iris/base/scheduler.pb
  SchedulerProto_SchedulerJob_Schedule:
    description: A message which specifies the schedule of execution of the job.
    type: object
    title: Schedule.
    properties:
      day:
        description: The day of the week when schedule should be executed (0-6).
        type: integer
        format: int32
        x-go-name: Day
        x-nullable: true
      hour:
        description: The hour of the day when schedule should be executed (0-23).
        type: integer
        format: int32
        x-go-name: Hour
        x-nullable: true
      timezone:
        description: The timezone for the execution of the schedule.
        type: string
        x-go-name: Timezone
        x-nullable: true
    x-go-package: iris/base/scheduler.pb
  SchedulerProto_SchedulerJob_ScheduleJobParameters:
    type: object
    title: Specifies the Scheduled Job parameters.
    properties:
      reportJobParameter:
        x-nullable: true
        $ref: '#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter'
    x-go-package: iris/base/scheduler.pb
  SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter:
    type: object
    title: Specifies the Report Job Parameters structure.
    properties:
      receiverEmails:
        description: Specifies the list of receiver email addresses.
        type: array
        items:
          type: string
        x-go-name: ReceiverEmails
        x-nullable: true
      reports:
        description: The list of reports to be sent in the mail.
        type: array
        items:
          $ref: '#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report'
        x-go-name: Reports
        x-nullable: true
    x-go-package: iris/base/scheduler.pb
  SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report:
    type: object
    title: Specifies the type and parameters of a report.
    properties:
      name:
        description: Specifies the report name.
        type: string
        x-go-name: Name
        x-nullable: true
      outputFormat:
        description: Specifies the output format of the report.
        type: string
        x-go-name: OutputFormat
        x-nullable: true
      parameters:
        x-nullable: true
        $ref: '#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report_Parameters'
      subjectLine:
        description: Specifies the subject line for report.
        type: string
        x-go-name: SubjectLine
        x-nullable: true
      type:
        description: Specifies the report type.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: iris/base/scheduler.pb
  SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter_Report_Parameters:
    type: object
    title: Specifies the report parameters.
    properties:
      allUnderHierarchy:
        description: |-
          Specifies if subtenants of the given tenants should be
          considered for report generation.
        type: boolean
        x-go-name: AllUnderHierarchy
        x-nullable: true
      compactVersion:
        description: Specifies the Cohesity Agent software version.
        type: string
        x-go-name: CompactVersion
        x-nullable: true
      consecutiveFailures:
        description: Specifies the number of consecutive failures.
        type: integer
        format: int32
        x-go-name: ConsecutiveFailures
        x-nullable: true
      environment:
        description: Specifies the Environment for the entity being protected.
        type: string
        x-go-name: Environment
        x-nullable: true
      groupBy:
        description: Specifies if the report should be grouped by any field.
        type: integer
        format: int32
        x-go-name: GroupBy
        x-nullable: true
      healthStatus:
        description: Specifies the Cohesity Agent health status.
        type: array
        items:
          type: string
        x-go-name: HealthStatus
        x-nullable: true
      hostOsType:
        description: Specifies the OS type on which Cohesity Agent is installed.
        type: array
        items:
          type: string
        x-go-name: HostOsType
        x-nullable: true
      jobId:
        description: Specifies the id of the job for which to get the report data.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobName:
        description: Specifies the name of the job for which to get the report data.
        type: string
        x-go-name: JobName
        x-nullable: true
      lastNDays:
        description: |-
          Specifies the number of days from current date for which the
          report data is to be fetched.
        type: integer
        format: int32
        x-go-name: LastNDays
        x-nullable: true
      objectIds:
        description: Specifies the object ids for which to get the report data.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ObjectIds
        x-nullable: true
      objectType:
        description: Specifies the object type for which to get the report data.
        type: string
        x-go-name: ObjectType
        x-nullable: true
      registeredSourceId:
        description: |-
          Specifies the registered source for which
          to get the report data.
        type: integer
        format: int64
        x-go-name: RegisteredSourceId
        x-nullable: true
      registeredSourceIds:
        description: |-
          Specifies the registered sources for which
          to get the report data.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: RegisteredSourceIds
        x-nullable: true
      rollup:
        description: |-
          Specifies the rollup(day/week/month) for protected object trends
          report.
        type: string
        x-go-name: Rollup
        x-nullable: true
      runStatus:
        description: Specifies the run status for which to get the report data.
        type: array
        items:
          type: string
        x-go-name: RunStatus
        x-nullable: true
      sid:
        description: Specifies the sid of the user.
        type: string
        x-go-name: Sid
        x-nullable: true
      tenantIdVec:
        description: Specifies tenant ids for which report needs to be generated.
        type: array
        items:
          type: string
        x-go-name: TenantIdVec
        x-nullable: true
      timezone:
        description: Specifies the timezone.
        type: string
        x-go-name: Timezone
        x-nullable: true
      unixUid:
        description: Specifies the unix uid of the user.
        type: integer
        format: uint32
        x-go-name: UnixUid
        x-nullable: true
      vaultIds:
        description: Specifies the vault ids for which to get the report data.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: VaultIds
        x-nullable: true
      viewBoxId:
        description: Specifies the view box for which to get the report data.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName:
        description: Specifies the view name for which the report is required.
        type: string
        x-go-name: ViewName
        x-nullable: true
      viewboxIds:
        description: Specifies the viewbox ids to filter by.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewboxIds
        x-nullable: true
      vmName:
        description: Specifies the VM name for which to get the report data.
        type: string
        x-go-name: VmName
        x-nullable: true
    x-go-package: iris/base/scheduler.pb
  SchedulingPolicy:
    description: Specifies settings that define a backup schedule for a Protection
      Job.
    type: object
    title: Scheduling Policy.
    properties:
      continuousSchedule:
        description: |-
          Specifies the time interval between two Job Runs of a continuous backup
          schedule and any blackout periods when new Job Runs should NOT be started.
          Set if periodicity is kContinuous.
        allOf:
        - $ref: '#/definitions/ContinuousSchedule'
        x-nullable: true
      dailySchedule:
        description: |-
          Specifies a daily or weekly backup schedule.
          Set if periodicity is kDaily.
        allOf:
        - $ref: '#/definitions/DailySchedule'
        x-nullable: true
      monthlySchedule:
        description: |-
          Specifies a monthly backup schedule.
          Set if periodicity is kMonthly.
        allOf:
        - $ref: '#/definitions/MonthlySchedule'
        x-nullable: true
      periodicity:
        description: |-
          Specifies how often to start new Job Runs of a Protection Job.
          'kDaily' means new Job Runs start daily.
          'kMonthly' means new Job Runs start monthly.
          'kContinuous' means new Job Runs repetitively start at the
          beginning of the specified time interval (in hours or minutes).
          'kContinuousRPO' means this is an RPO schedule.
        type: string
        enum:
        - kContinuous
        - kDaily
        - kMonthly
        - kContinuousRPO
        x-go-name: Periodicity
        x-nullable: true
      rpoSchedule:
        description: |-
          Specifies an RPO backup schedule.
          Set if periodicity is kContinuousRPO.
        allOf:
        - $ref: '#/definitions/RpoSchedule'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SchedulingPolicyProto:
    type: object
    title: Message that specifies the scheduling policy for a backup job.
    properties:
      continuousSchedule:
        description: Set if periodicity is kContinuous.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicyProto_ContinuousSchedule'
      dailySchedule:
        description: Set if periodicity is kDaily.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicyProto_DailySchedule'
      monthlySchedule:
        description: Set if periodicity is kMonthly.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicyProto_MonthlySchedule'
      periodicity:
        description: Determines how often the job should be run.
        type: integer
        format: int32
        x-go-name: Periodicity
        x-nullable: true
      rpoSchedule:
        description: Set if periodicity is kContinuousRPO.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicyProto_RPOSchedule'
    x-go-package: magneto/base/policy.pb
  SchedulingPolicyProto_ContinuousSchedule:
    type: object
    properties:
      backupIntervalMins:
        description: |-
          If this field is set, backups will be performed periodically every
          'interval_mins' number of minutes. NOTE: This is the interval between
          the start time of two successive backups.
        type: integer
        format: int64
        x-go-name: BackupIntervalMins
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  SchedulingPolicyProto_DailySchedule:
    description: |-
      Sample protos:
      Every n days (n >= 1)
      Ex: For every 2 days, { frequency : 2 }
      Weekly schedule (Few selected weekdays)
      Ex: For every Monday, Tuesday { days : {kMonday, kTuesday} }
      NOTE: Only one of the 'days' and 'frequency' should be populated.
    type: object
    title: The daily schedule encompasses below 2 types of schedules.
    properties:
      days:
        description: |-
          The list of weekdays for scheduling a backup. This is populated only for
          selected weekday schedules.
        type: array
        items:
          type: integer
          format: int32
        x-go-name: Days
        x-nullable: true
      frequency:
        description: This is set only for every-n-day schedules.
        type: integer
        format: int64
        x-go-name: Frequency
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  SchedulingPolicyProto_MonthlySchedule:
    type: object
    properties:
      count:
        description: |-
          Count of the day on which to perform the backup (look above for a more
          detailed description).
        type: integer
        format: int32
        x-go-name: Count
        x-nullable: true
      day:
        description: The day of the month the backup is to be performed.
        type: integer
        format: int32
        x-go-name: Day
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  SchedulingPolicyProto_RPOSchedule:
    type: object
    properties:
      rpoIntervalMins:
        description: |-
          If this field is set, then at any point, a recovery point should be
          available not older than the given interval mins.
        type: integer
        format: int64
        x-go-name: RpoIntervalMins
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  SchemaInfo:
    description: |-
      Specifies the metric data point where public data metric name as key and the
      schema defined metric name as a value.
    type: object
    title: Schema Info.
    properties:
      entityId:
        description: Specifies the id of the entity represented as a string.
        type: string
        x-go-name: EntityId
        x-nullable: true
      key:
        description: Specifies the key which is public facing name for metric name.
        type: string
        x-go-name: Key
        x-nullable: true
      metricName:
        description: Specifies the Apollo schema metric name.
        type: string
        x-go-name: MetricName
        x-nullable: true
      schemaName:
        description: Specifies the name of entity schema such as 'ApolloViewBoxStats'.
        type: string
        x-go-name: SchemaName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ScriptExecutionStatus:
    type: object
    title: Message to encapsulate the status of a script.
    properties:
      error:
        description: Error that occurred during execution.
        x-nullable: true
        $ref: '#/definitions/ErrorProto'
      executing:
        description: |-
          Indicates if a script is executing. This is particularly useful when
          there is a cancellation request and Magneto crashes at that point before
          cleaning up the running script.
        type: boolean
        x-go-name: Executing
        x-nullable: true
      exitCode:
        description: Exit code of the script.
        type: integer
        format: int32
        x-go-name: ExitCode
        x-nullable: true
      state:
        description: Execution state of the script.
        type: integer
        format: int32
        x-go-name: State
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  ScriptPathAndParams:
    description: |-
      A message to encapsulate pre or post script associated with a backup job
      policy.
    type: object
    properties:
      continueOnError:
        description: |-
          Applicable only for pre backup scripts. If this flag is set to true, then
          backup job will start even if the pre backup script fails.
        type: boolean
        x-go-name: ContinueOnError
        x-nullable: true
      isActive:
        description: |-
          Indicates if the script is active. If 'is_active' is set to false, this
          script will not be executed even if it is part of the backup job.
        type: boolean
        x-go-name: IsActive
        x-nullable: true
      scriptParams:
        description: |-
          Custom parameters that users want to pass to the script. For example,
          if user wants to pass following params:
          1. foo=bar
          2. v=10.
          User can construct the param string as "far=bar v=10".
        type: string
        x-go-name: ScriptParams
        x-nullable: true
      scriptPath:
        description: |-
          For backup jobs of type 'kPuppeteer', 'script_path' is full path of
          location of the script within the host.
          For Pre/Post scripts of agent-based backup jobs, 'script_path' is just
          name of the script, not full path.
        type: string
        x-go-name: ScriptPath
        x-nullable: true
      timeoutSecs:
        description: |-
          Timeout of the script. The script will be killed if it exceeds this value.
          '-1' indicates that the timeout is not set for the script.
        type: integer
        format: int32
        x-go-name: TimeoutSecs
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  SearchProductionAdObjectsRequest:
    description: Specifies the request to search AD objects from Production AD.
    type: object
    title: Search production AD objects request.
    properties:
      distinguishedNames:
        description: Specifies the list of the distinguished names of the AD objects.
        type: array
        items:
          type: string
        x-go-name: DistinguishedNames
        x-nullable: true
      objectGuids:
        description: Specifies the list of the guids of the AD objects.
        type: array
        items:
          type: string
        x-go-name: ObjectGuids
        x-nullable: true
      protectionSourceId:
        description: |-
          ProtectionSourceId is the Id of the Domain Controller host on which we want
          to search for AD objects.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
      samAccountNames:
        description: Specifies the list of the sam account names of the AD objects.
        type: array
        items:
          type: string
        x-go-name: SamAccountNames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SendSnmpTestTrapResult:
    description: |-
      Specifies the result returned after a successful request to send
      SNMP Test Trap.
    type: object
    title: Send SNMP Test Trap.
    properties:
      message:
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ServiceGflags:
    description: Specifies the gflags for a service.
    type: object
    title: Service Gflags.
    properties:
      gflags:
        description: Specifies a list of gflags for this service.
        type: array
        items:
          $ref: '#/definitions/Gflag'
        x-go-name: Gflags
        x-nullable: true
      serviceName:
        description: |-
          Specifies the name of the service.
          'kApollo' is a service for reclaiming freed disk sectors on Nodes in the
          SnapFS distributed file system.
          'kBridge' is a service for managing the SnapFS distributed file system.
          'kGenie' is a service that is responsible for monitoring hardware health
          on the Cluster.
          'kGenieGofer' is a service that links the Genie service to other services
          on the Cluster.
          'kMagneto' is the data protection service of the Cohesity Data Platform.
          'kIris' is the service which serves REST API calls to the UI, CLI, and any
          scripts written by customers.
          'kIrisProxy' is a service that links the Iris service to other services
          on the Cluster.
          'kScribe' is the service responsible for storing filesystem metadata.
          'kStats' is the service that is responsible for retrieving and aggregating
          disk metrics across the Cluster.
          'kYoda' is an elastic search indexing service.
          'kAlerts' is a publisher and subscribing service for alerts.
          'kKeychain' is a service for managing disk encryption keys.
          'kLogWatcher' is a service that scans the log directory and reduces
          the number of logs if required.
          'kStatsCollector' is a service that periodically logs system stats.
          'kGandalf' is a distributed lock service and coordination manager.
          'kNexus' indicates the Nexus service. This is the service that is
          responsible for creation of Clusters and configuration of Nodes and
          networking.
          'kNexusProxy' is a service that links the Nexus service to other services
          on the Cluster.
          'kStorageProxy' is a service for accessing data on external entities.
          'kTricorder' is a diagnostic health testing service for Clusters.
          'kRtClient' is a reverse tunneling client service.
          'kVaultProxy' is a service for managing external targets that Clusters
          can be backed up to.
          'kSmbProxy' is an SMB protocol service.
          'kBridgeProxy' is the service that links the Bridge service to other
          services on the Cluster.
          'kLibrarian' is an elastic search indexing service.
          'kGroot' is a service for managing replication of SQL databases across
          multiple nodes in a Cluster.
          'kEagleAgent' is a service that is responsible for retrieving information
          on Cluster health.
          'kAthena' is a service for running distributed containerized applications
          on the Cohesity Data Platform.
          'kBifrostBroker' is a service for communicating with the Cohesity proxies
          for multitenancy.
          'kSmb2Proxy' is a new SMB protocol service.
          'kOs' can be specified in order to do a full reboot.
          'kAtom' is a service for receiving data for the Continuous Data Protection.
        type: string
        enum:
        - kApollo
        - kBridge
        - kGenie
        - kGenieGofer
        - kMagneto
        - kIris
        - kIrisProxy
        - kScribe
        - kStats
        - kYoda
        - kAlerts
        - kKeychain
        - kLogWatcher
        - kStatsCollecter
        - kGandalf
        - kNexus
        - kNexusProxy
        - kStorageProxy
        - kTricorder
        - kRtClient
        - kVaultProxy
        - kSmbProxy
        - kBridgeProxy
        - kLibrarian
        - kGroot
        - kEagleAgent
        - kAthena
        - kBifrostBroker
        - kSmb2Proxy
        - kOs
        - kAtom
        x-go-name: ServiceName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ServiceProcessEntry:
    description: |-
      Specifies the name of a Service running on the Cluster as well as a list
      of process IDs associated with that service.
    type: object
    title: Service Process Entry.
    properties:
      processIds:
        description: Specifies the list of process IDs associated with the Service.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProcessIds
        x-nullable: true
      serviceName:
        description: |-
          Specifies the name of the Service.
          'kApollo' is a service for reclaiming freed disk sectors on Nodes in the
          SnapFS distributed file system.
          'kBridge' is a service for managing the SnapFS distributed file system.
          'kGenie' is a service that is responsible for monitoring hardware health
          on the Cluster.
          'kGenieGofer' is a service that links the Genie service to other services
          on the Cluster.
          'kMagneto' is the data protection service of the Cohesity Data Platform.
          'kIris' is the service which serves REST API calls to the UI, CLI, and any
          scripts written by customers.
          'kIrisProxy' is a service that links the Iris service to other services
          on the Cluster.
          'kScribe' is the service responsible for storing filesystem metadata.
          'kStats' is the service that is responsible for retrieving and aggregating
          disk metrics across the Cluster.
          'kYoda' is an elastic search indexing service.
          'kAlerts' is a publisher and subscribing service for alerts.
          'kKeychain' is a service for managing disk encryption keys.
          'kLogWatcher' is a service that scans the log directory and reduces
          the number of logs if required.
          'kStatsCollector' is a service that periodically logs system stats.
          'kGandalf' is a distributed lock service and coordination manager.
          'kNexus' indicates the Nexus service. This is the service that is
          responsible for creation of Clusters and configuration of Nodes and
          networking.
          'kNexusProxy' is a service that links the Nexus service to other services
          on the Cluster.
          'kStorageProxy' is a service for accessing data on external entities.
          'kTricorder' is a diagnostic health testing service for Clusters.
          'kRtClient' is a reverse tunneling client service.
          'kVaultProxy' is a service for managing external targets that Clusters
          can be backed up to.
          'kSmbProxy' is an SMB protocol service.
          'kBridgeProxy' is the service that links the Bridge service to other
          services on the Cluster.
          'kLibrarian' is an elastic search indexing service.
          'kGroot' is a service for managing replication of SQL databases across
          multiple nodes in a Cluster.
          'kEagleAgent' is a service that is responsible for retrieving information
          on Cluster health.
          'kAthena' is a service for running distributed containerized applications
          on the Cohesity Data Platform.
          'kBifrostBroker' is a service for communicating with the Cohesity proxies
          for multitenancy.
          'kSmb2Proxy' is a new SMB protocol service.
          'kOs' can be specified in order to do a full reboot.
          'kAtom' is a service for receiving data for the Continuous Data Protection.
        type: string
        enum:
        - kApollo
        - kBridge
        - kGenie
        - kGenieGofer
        - kMagneto
        - kIris
        - kIrisProxy
        - kScribe
        - kStats
        - kYoda
        - kAlerts
        - kKeychain
        - kLogWatcher
        - kStatsCollecter
        - kGandalf
        - kNexus
        - kNexusProxy
        - kStorageProxy
        - kTricorder
        - kRtClient
        - kVaultProxy
        - kSmbProxy
        - kBridgeProxy
        - kLibrarian
        - kGroot
        - kEagleAgent
        - kAthena
        - kBifrostBroker
        - kSmb2Proxy
        - kOs
        - kAtom
        x-go-name: ServiceName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ServiceStateResult:
    description: |-
      Specifies the result of querying the state of a specific service on
      the Cluster.
    type: object
    title: Service State Result.
    properties:
      service:
        description: |-
          Specifies the name of the service.
          'kApollo' is a service for reclaiming freed disk sectors on Nodes in the
          SnapFS distributed file system.
          'kBridge' is a service for managing the SnapFS distributed file system.
          'kGenie' is a service that is responsible for monitoring hardware health
          on the Cluster.
          'kGenieGofer' is a service that links the Genie service to other services
          on the Cluster.
          'kMagneto' is the data protection service of the Cohesity Data Platform.
          'kIris' is the service which serves REST API calls to the UI, CLI, and any
          scripts written by customers.
          'kIrisProxy' is a service that links the Iris service to other services
          on the Cluster.
          'kScribe' is the service responsible for storing filesystem metadata.
          'kStats' is the service that is responsible for retrieving and aggregating
          disk metrics across the Cluster.
          'kYoda' is an elastic search indexing service.
          'kAlerts' is a publisher and subscribing service for alerts.
          'kKeychain' is a service for managing disk encryption keys.
          'kLogWatcher' is a service that scans the log directory and reduces
          the number of logs if required.
          'kStatsCollector' is a service that periodically logs system stats.
          'kGandalf' is a distributed lock service and coordination manager.
          'kNexus' indicates the Nexus service. This is the service that is
          responsible for creation of Clusters and configuration of Nodes and
          networking.
          'kNexusProxy' is a service that links the Nexus service to other services
          on the Cluster.
          'kStorageProxy' is a service for accessing data on external entities.
          'kTricorder' is a diagnostic health testing service for Clusters.
          'kRtClient' is a reverse tunneling client service.
          'kVaultProxy' is a service for managing external targets that Clusters
          can be backed up to.
          'kSmbProxy' is an SMB protocol service.
          'kBridgeProxy' is the service that links the Bridge service to other
          services on the Cluster.
          'kLibrarian' is an elastic search indexing service.
          'kGroot' is a service for managing replication of SQL databases across
          multiple nodes in a Cluster.
          'kEagleAgent' is a service that is responsible for retrieving information
          on Cluster health.
          'kAthena' is a service for running distributed containerized applications
          on the Cohesity Data Platform.
          'kBifrostBroker' is a service for communicating with the Cohesity proxies
          for multitenancy.
          'kSmb2Proxy' is a new SMB protocol service.
          'kOs' can be specified in order to do a full reboot.
          'kAtom' is a service for receiving data for the Continuous Data Protection.
        type: string
        enum:
        - kApollo
        - kBridge
        - kGenie
        - kGenieGofer
        - kMagneto
        - kIris
        - kIrisProxy
        - kScribe
        - kStats
        - kYoda
        - kAlerts
        - kKeychain
        - kLogWatcher
        - kStatsCollecter
        - kGandalf
        - kNexus
        - kNexusProxy
        - kStorageProxy
        - kTricorder
        - kRtClient
        - kVaultProxy
        - kSmbProxy
        - kBridgeProxy
        - kLibrarian
        - kGroot
        - kEagleAgent
        - kAthena
        - kBifrostBroker
        - kSmb2Proxy
        - kOs
        - kAtom
        x-go-name: Service
        x-nullable: true
      state:
        description: |-
          Specifies the state of the service.
          'kServiceStopped' indicates that the service has been stopped.
          'kServiceRunning' indicates that the service is currently running.
          'kServiceRestarting' indicates that the service is in the queue to be
          restarted.
        type: string
        enum:
        - kServiceStopped
        - kServiceRunning
        - kServiceRestarting
        x-go-name: State
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SetupRestoreDiskTaskInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined.

      SetupRestoreDiskTaskInfoProto
      extension, extension_number
      Location
      =============================================================================
      vmware::SetupRestoreDiskTaskInfo
      vmware_setup_restore_disk_task_info, 100
      connectors/vmware/vmware_setup_restore_disks.proto.proto

      AgentSetupRestoreDiskTaskInfo
      agent_setup_restore_disk_task_info, 101
      base/agent.proto

      app_file::SetupRestoreTaskInfo
      app_file_setup_restore_task_info, 102
      connectors/app_file/app_file_setup_restore.proto

      hyperv::SetupRestoreDiskTaskInfo
      hyperv_setup_restore_disk_task_info, 103
      connectors/hyperv/hyperv_setup_restore_disks.proto
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about the task that sets up and
      tears down restore disks in environments such as VMware, Physical, and
      HyperV. Environment specific information is defined as extensions to this
      proto.
    properties:
      entity:
        description: The entity on which disks will be setup.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      progressMonitorRootTaskPath:
        description: The path to the progress monitor root task if any.
        type: string
        x-go-name: ProgressMonitorRootTaskPath
        x-nullable: true
      rootEntity:
        description: The root entity that the entity was running under.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
      sourceViewName:
        description: The source view which contains the backups for the 'entity'.
        type: string
        x-go-name: SourceViewName
        x-nullable: true
      taskId:
        description: The id of the associated task.
        type: integer
        format: int64
        x-go-name: TaskId
        x-nullable: true
      viewBoxId:
        description: The view box id containing the backups for the 'entity'.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewName:
        description: Destination view into which the files will be cloned.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  Share:
    description: |-
      Specifies the share details when request is made for list of shares
      filtered by ShareName parameter.
    type: object
    title: Share.
    properties:
      allSmbMountPaths:
        description: |-
          Array of SMB Paths.

          Specifies the possible paths that can be used to mount this Share
          as a SMB share. If Active Directory has multiple account names;
          each machine account has its own path.
        type: array
        items:
          type: string
        x-go-name: AllSmbMountPaths
        x-nullable: true
      enableSmbEncryption:
        description: |-
          Specifies the SMB encryption for the View Alias. If set, it enables the
          SMB encryption for the View Alias. Encryption is supported only by SMB 3.x
          dialects. Dialects that do not support would still access data in
          unencrypted format.
        type: boolean
        x-go-name: EnableSmbEncryption
        x-nullable: true
      enableSmbViewDiscovery:
        description: If set, it enables discovery of view alias for SMB.
        type: boolean
        x-go-name: EnableSmbViewDiscovery
        x-nullable: true
      enforceSmbEncryption:
        description: |-
          Specifies the SMB encryption for all the sessions for the View Alias.
          If set, encryption is enforced for all the sessions for the View Alias.
          When enabled all future and existing unencrypted sessions are disallowed.
        type: boolean
        x-go-name: EnforceSmbEncryption
        x-nullable: true
      nfsMountPath:
        description: Specifies the path for mounting this Share as an NFS share.
        type: string
        x-go-name: NfsMountPath
        x-nullable: true
      path:
        description: Specifies the path information for this share.
        type: string
        x-go-name: Path
        x-nullable: true
      s3AccessPath:
        description: Specifies the path to access this View as an S3 share.
        type: string
        x-go-name: S3AccessPath
        x-nullable: true
      shareName:
        description: The name of the share.
        type: string
        x-go-name: ShareName
        x-nullable: true
      sharePermissions:
        description: Specifies a list of share level permissions.
        type: array
        items:
          $ref: '#/definitions/SmbPermission'
        x-go-name: SharePermissions
        x-nullable: true
      smbMountPath:
        description: Specifies the main path for mounting this Share as an SMB share.
        type: string
        x-go-name: SmbMountPath
        x-nullable: true
      subnetWhitelist:
        description: |-
          Specifies a list of Subnets with IP addresses that have permissions to
          access the View Alias. (Overrides the Subnets specified at the global
          Cohesity Cluster level and View level.)
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: SubnetWhitelist
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewName:
        description: Specifies the view name this share belongs to.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SharePointRestoreParameters:
    description: Specifies information needed for recovering SharePoint Site and items.
    type: object
    title: SharePoint Restore Parameters.
    properties:
      restoreToOriginalSite:
        description: Specifies whether the objects are to be restored to the original
          drive.
        type: boolean
        x-go-name: RestoreToOriginalSite
        x-nullable: true
      siteOwnerList:
        description: |-
          Specifies the list of SharePoint Sites whose Document Repositories are
          being restored.
        type: array
        items:
          $ref: '#/definitions/SiteOwner'
        x-go-name: SiteOwnerList
        x-nullable: true
      targetDocumentLibraryName:
        description: Specifies the target document library name within the alternate
          site.
        type: string
        x-go-name: TargetDocumentLibraryName
        x-nullable: true
      targetDocumentLibraryPrefix:
        description: |-
          Specifies a custom prefix for the document libraries when being restored
          to the original or an alternate site.
        type: string
        x-go-name: TargetDocumentLibraryPrefix
        x-nullable: true
      targetSite:
        description: |-
          Specifies the target site where the recovery of the entire Site or the
          Site items is to be done.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
    x-go-package: cohesity/iris/server/data/public
  SharepPointSiteBackupEnvParams:
    description: |-
      Message to capture any additional backup params for SharePoint within the
      Office365 environment.
    type: object
    properties:
      docLibFilteringPolicy:
        description: |-
          The filtering policy describes which objects within a source should be
          excluded within the backup. If this is not specified, then all of the
          objects within the source will be backed up.
          NOTE: This filtering policy assumes the paths within a site. The first
          token will specify a doc library name.
        x-nullable: true
        $ref: '#/definitions/FilteringPolicyProto'
    x-go-package: magneto/base/env_params.pb
  SharepointDocumentMetadata:
    description: Specifies the metadata for the Sharepoint Site document.
    type: object
    title: Sharepoint Site document metadata.
    properties:
      documentType:
        description: |-
          Specifies the type of site document(file/folder).
          Specifies the Sharepoint document type.

          'kFile' specifies a file.
          'kFolder' specifies a folder.
        type: string
        enum:
        - kFile
        - kFolder
        x-go-name: DocumentType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ShowSystemLedInfoParameters:
    description: |-
      Specifies the local or remote node for which system LED details
      are requested.
    type: object
    title: Show system LED Info Parameters.
    properties:
      nodeIp:
        description: |-
          Optional field.
          If Node IP is not specified, LED info for the current node is displayed.
        type: string
        x-go-name: NodeIp
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ShowSystemLedInfoResult:
    description: |-
      Specifies the result returned after a successful request to show system
      LED details.
    type: object
    title: Show System LED Info Result.
    properties:
      ledInfo:
        type: string
        x-go-name: LedInfo
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SiteDriveInfo:
    description: Specifies the Site's Document Library drive info.
    type: object
    title: Site Drive Info.
    properties:
      driveId:
        description: Specifies the Id of the Drive.
        type: string
        x-go-name: DriveId
        x-nullable: true
      driveItemList:
        description: Specifies the Drive items such as files/folders.
        type: array
        items:
          $ref: '#/definitions/SiteDriveItem'
        x-go-name: DriveItemList
        x-nullable: true
      driveName:
        description: |-
          Specifies the drive name for the document repsitory. Incase of drive Id
          not present, this field must be populated to trigger restore.
        type: string
        x-go-name: DriveName
        x-nullable: true
      restoreEntireDrive:
        description: |-
          Specifies whether entire drive is to be restored. This should be set to
          false if specific drive items are to be restored within 'DriveItemList'.
        type: boolean
        x-go-name: RestoreEntireDrive
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SiteDriveItem:
    description: Specifies details about a Site's Drive item.
    type: object
    title: Site Drive Item.
    properties:
      isFileItem:
        description: Specifies whether the current item is a file or not.
        type: boolean
        x-go-name: IsFileItem
        x-nullable: true
      itemId:
        description: Specifies the Id of the Drive item.
        type: string
        x-go-name: ItemId
        x-nullable: true
      itemPath:
        description: Specifies the path of the Drive item within the drive.
        type: string
        x-go-name: ItemPath
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SiteOwner:
    description: Specifies the details about a SharePoint Site owner.
    type: object
    title: Site Owner.
    properties:
      driveInfoList:
        description: Specifies the Document Libraries within a Site which are to be
          restored.
        type: array
        items:
          $ref: '#/definitions/SiteDriveInfo'
        x-go-name: DriveInfoList
        x-nullable: true
      siteDetailObject:
        description: Specifies the details about the SharePoint Site to which drives
          belong.
        x-nullable: true
        $ref: '#/definitions/RestoreObjectDetails'
    x-go-package: cohesity/iris/server/data/public
  SmbActiveFileOpensResponse:
    description: Query response to SMB active file opens.
    type: object
    title: SMB Active File Open Response.
    properties:
      activeFilePaths:
        description: Specifies the active opens for an SMB file in a view.
        type: array
        items:
          $ref: '#/definitions/SmbActiveFilePath'
        x-go-name: ActiveFilePaths
        x-nullable: true
      cookie:
        description: |-
          Specifies an opaque string to pass to get the next set of active opens.
          If null is returned, this response is the last set of active opens.
        type: string
        x-go-name: Cookie
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SmbActiveFilePath:
    description: Specifies a file path in an SMB view that has active sessions and
      opens.
    type: object
    title: Active SMB file path.
    properties:
      activeSessions:
        description: Specifies the sessions where the file is open.
        type: array
        items:
          $ref: '#/definitions/SmbActiveSession'
        x-go-name: ActiveSessions
        x-nullable: true
      filePath:
        description: Specifies the filepath in the view.
        type: string
        x-go-name: FilePath
        x-nullable: true
      viewId:
        description: |-
          Specifies the id of the View assigned by the Cohesity Cluster.
          Either viewName or viewId must be specified.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
      viewName:
        description: Specifies the name of the View.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SmbActiveOpen:
    description: Specifies an active open of an SMB file, its access and sharing information.
    type: object
    title: SMB Active Open File.
    properties:
      accessInfoList:
        description: |-
          Specifies the access information.
          'kFileReadData' indicates the right to read data from the file or named
          pipe.
          'kFileWriteData' indicates the right to write data into the file or named
          pipe beyond the end of the file.
          'kFileAppendData' indicates the right to append data into the file or named
          pipe.
          'kFileReadEa' indicates the right to read the extended attributes of the
          file or named pipe.
          'kFileWriteEa' indicates the right to write or change the extended
          attributes to the file or named pipe.
          'kFileExecute' indicates the right to delete entries within a directory.
          'kFileDeleteChild' indicates the right to execute the file.
          'kFileReadAttributes' indicates the right to read the attributes of the
          file.
          'kFileWriteAttributes' indicates the right to change the attributes of the
          file.
          'kDelete' indicates the right to delete the file.
          'kReadControl' indicates the right to read the security descriptor for the
          file or named pipe.
          'kWriteDac' indicates the right to change the discretionary access control
          list (DACL) in the security descriptor for the file or named pipe. For
          the DACL data structure, see ACL in [MS-DTYP].
          'kWriteOwner' indicates the right to change the owner in the security
          descriptor for the file or named pipe.
          'kSynchronize' is used only by SMB2 clients.
          'kAccessSystemSecurity' indicates the right to read or change the system
          access control list (SACL) in the security descriptor for the file or
          named pipe. For the SACL data structure, see ACL in [MS-DTYP].<42>
          'kMaximumAllowed' indicates that the client is requesting an open to the
          file with the highest level of access the client has on this file.
          If no access is granted for the client on this file, the server MUST
          fail the open with STATUS_ACCESS_DENIED.
          'kGenericAll' indicates a request for all the access flags that are
          previously listed except kMaximumAllowed and kAccessSystemSecurity.
          'kGenericExecute' indicates a request for the following combination of
          access flags listed above:
          kFileReadAttributes| kFileExecute| kSynchronize| kReadControl.
          'kGenericWrite' indicates a request for the following combination of
          access flags listed above:
          kFileWriteData| kFileAppendData| kFileWriteAttributes| kFileWriteEa|
          kSynchronize| kReadControl.
          'kGenericRead' indicates a request for the following combination of
          access flags listed above:
          kFileReadData| kFileReadAttributes| kFileReadEa| kSynchronize|
          kReadControl.
        type: array
        items:
          type: string
          enum:
          - kFileReadData
          - kFileWriteData
          - kFileAppendData
          - kFileReadEa
          - kFileWriteEa
          - kFileExecute
          - kFileDeleteChild
          - kFileReadAttributes
          - kFileWriteAttributes
          - kDelete
          - kReadControl
          - kWriteDac
          - kWriteOwner
          - kSynchronize
          - kAccessSystemSecurity
          - kMaximumAllowed
          - kGenericAll
          - kGenericExecute
          - kGenericWrite
          - kGenericRead
        x-go-name: AccessInfoList
        x-nullable: true
      openId:
        description: Specifies the id of the active open.
        type: integer
        format: int64
        x-go-name: OpenId
        x-nullable: true
      othersCanDelete:
        description: Specifies whether others are allowed to delete.
        type: boolean
        x-go-name: OthersCanDelete
        x-nullable: true
      othersCanRead:
        description: Specifies whether others are allowed to read.
        type: boolean
        x-go-name: OthersCanRead
        x-nullable: true
      othersCanWrite:
        description: Specifies whether others are allowed to write.
        type: boolean
        x-go-name: OthersCanWrite
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SmbActiveSession:
    description: Specifies an active session and its opens.
    type: object
    title: SMB Active Session.
    properties:
      activeOpens:
        description: Specifies the list of active opens of the file in this session.
        type: array
        items:
          $ref: '#/definitions/SmbActiveOpen'
        x-go-name: ActiveOpens
        x-nullable: true
      clientIp:
        description: Specifies the IP address from which the file is still open.
        type: string
        x-go-name: ClientIp
        x-nullable: true
      domain:
        description: Specifies the domain of the user.
        type: string
        x-go-name: Domain
        x-nullable: true
      serverIp:
        description: Specifies the IP address of the server where the file exists.
        type: string
        x-go-name: ServerIp
        x-nullable: true
      sessionId:
        description: Specifies the id of the session.
        type: integer
        format: int64
        x-go-name: SessionId
        x-nullable: true
      username:
        description: Specifies the username who keeps the file open.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SmbConnection:
    type: object
    properties:
      clientIp:
        description: Specifies the Client IP address of the connection.
        type: string
        x-go-name: ClientIp
        x-nullable: true
      domainName:
        description: Domain name of the corresponding user.
        type: string
        x-go-name: DomainName
        x-nullable: true
      nodeIp:
        description: Specifies a Node IP address where the connection request is received.
        type: string
        x-go-name: NodeIp
        x-nullable: true
      path:
        description: Mount path.
        type: string
        x-go-name: Path
        x-nullable: true
      serverIp:
        description: |-
          Specifies the Server IP address of the connection.
          This could be a VIP, VLAN IP, or node IP on the Cluster.
        type: string
        x-go-name: ServerIp
        x-nullable: true
      sessionId:
        description: Session id.
        type: integer
        format: int64
        x-go-name: SessionId
        x-nullable: true
      sids:
        description: List of SIDs in the SMB session token.
        type: array
        items:
          type: string
        x-go-name: Sids
        x-nullable: true
      userName:
        description: User name used to login for this session.
        type: string
        x-go-name: UserName
        x-nullable: true
      viewId:
        description: Specifies the id of the view.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
      viewName:
        description: Specifies the name of the view.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SmbPermission:
    description: Specifies information about a single SMB permission.
    type: object
    title: SMB Permission.
    properties:
      access:
        description: |-
          Specifies the read/write access to the SMB share.
          'kReadyOnly' indicates read only access to the SMB share.
          'kReadWrite' indicates read and write access to the SMB share.
          'kFullControl' indicates full administrative control of the SMB share.
          'kSpecialAccess' indicates custom permissions to the SMB share using
          access masks structures.
          'kSuperUser' indicates root permissions ignoring all SMB ACLs.
        type: string
        enum:
        - kReadOnly
        - kReadWrite
        - kModify
        - kFullControl
        - kSpecialAccess
        - kSuperUser
        x-go-name: Access
        x-nullable: true
      mode:
        description: |-
          Specifies how the permission should be applied to folders and/or files.
          'kFolderSubFoldersAndFiles' indicates that permissions are applied to a Folder
          and it's sub folders and files.
          'kFolderAndSubFolders' indicates that permissions are applied to a Folder and it's sub folders.
          'kFolderAndSubFiles' indicates that permissions are applied to a Folder and it's sub files.
          'kFolderOnly' indicates that permsission are applied to folder only.
          'kSubFoldersAndFilesOnly' indicates that permissions are applied to sub folders and files only.
          'kSubFoldersOnly' indicates that permissiona are applied to sub folders only.
          'kFilesOnly' indicates that permissions are applied to files only.
        type: string
        enum:
        - kFolderSubFoldersAndFiles
        - kFolderAndSubFolders
        - kFolderAndFiles
        - kFolderOnly
        - kSubFoldersAndFilesOnly
        - kSubFoldersOnly
        - kFilesOnly
        x-go-name: Mode
        x-nullable: true
      sid:
        description: Specifies the security identifier (SID) of the principal.
        type: string
        x-go-name: Sid
        x-nullable: true
      specialAccessMask:
        description: |-
          Specifies custom access permissions.
          When the access mask from the Access Control Entry (ACE) cannot be mapped
          to one of the enums in 'access', this field is populated
          with the custom mask derived from the ACE and 'access' is set
          to kSpecialAccess.
          This is a placeholder for storing an unmapped access permission and should
          not be set when creating and editing a View.
        type: integer
        format: uint32
        x-go-name: SpecialAccessMask
        x-nullable: true
      specialType:
        description: |-
          Specifies a custom type.
          When the type from the Access Control Entry (ACE) cannot be mapped
          to one of the enums in 'type', this field is populated with the custom
          type derived from the ACE and 'type' is set to kSpecialType.
          This is a placeholder for storing an unmapped type and should
          not be set when creating and editing a View.
        type: integer
        format: int32
        x-go-name: SpecialType
        x-nullable: true
      type:
        description: |-
          Specifies the type of permission.
          'kAllow' indicates access is allowed.
          'kDeny' indicates access is denied.
          'kSpecialType' indicates a type defined in the Access Control Entry (ACE)
          does not map to 'kAllow' or 'kDeny'.
        type: string
        enum:
        - kAllow
        - kDeny
        - kSpecialType
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SmbPermissionsInfo:
    description: Specifies information about SMB permissions.
    type: object
    title: SMB Permissions Information.
    properties:
      ownerSid:
        description: Specifies the security identifier (SID) of the owner of the SMB
          share.
        type: string
        x-go-name: OwnerSid
        x-nullable: true
      permissions:
        description: |-
          Array of SMB Permissions.

          Specifies a list of SMB permissions.
        type: array
        items:
          $ref: '#/definitions/SmbPermission'
        x-go-name: Permissions
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SmbPrincipal:
    type: object
    title: Specifies struct with SMB principal details.
    properties:
      domain:
        description: Specifies domain name of the principal.
        type: string
        x-go-name: Domain
        x-nullable: true
      name:
        description: Specifies name of the SMB principal which may be a group or user.
        type: string
        x-go-name: Name
        x-nullable: true
      sid:
        description: |-
          Specifies unique Security ID (SID) of the principal that look similar to
          windows domain SID.
        type: string
        x-go-name: Sid
        x-nullable: true
      type:
        description: Specifies the type. This can be a user or a group.
        type: string
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SnapshotArchivalCopyPolicy:
    description: |-
      Specifies settings for copying Snapshots External Targets (such as AWS or
      Tape). This also specifies the retention policy that should be applied to
      Snapshots after they have been copied to the specified target.
    type: object
    title: Snapshot Copy Archival Policy.
    properties:
      Id:
        description: |-
          Specified the Id for a snapshot copy policy. This is generated when the
          policy is created.
        type: string
        x-nullable: true
      copyPartial:
        description: |-
          Specifies if Snapshots are copied from the first completely successful
          Job Run or the first partially successful Job Run occurring at the start
          of the replication schedule.
          If true, Snapshots are copied from the first Job Run occurring at the start
          of the replication schedule, even if first Job Run was not completely
          successful i.e. Snapshots were not captured for all Objects in the Job.
          If false, Snapshots are copied from the first Job Run occurring at the
          start of the replication schedule that was completely successful i.e.
          Snapshots for all the Objects in the Job were successfully captured.
        type: boolean
        x-go-name: CopyPartial
        x-nullable: true
      daysToKeep:
        description: Specifies the number of days to retain copied Snapshots on the
          target.
        type: integer
        format: int64
        x-go-name: DaysToKeep
        x-nullable: true
      multiplier:
        description: |-
          Specifies a factor to multiply the periodicity by, to determine the copy
          schedule.
          For example if set to 2 and the periodicity is hourly, then Snapshots
          from the first eligible Job Run for every 2 hour period is copied.
        type: integer
        format: int32
        x-go-name: Multiplier
        x-nullable: true
      periodicity:
        description: |-
          Specifies the frequency that Snapshots should be copied to the
          specified target. Used in combination with multiplier.
          'kEvery' means that the Snapshot copy occurs after the number of
          Job Runs equals the number specified in the multiplier.
          'kHour' means that the Snapshot copy occurs hourly at the frequency
          set in the multiplier, for example if multiplier is 2, the copy occurs
          every 2 hours.
          'kDay' means that the Snapshot copy occurs daily at the frequency
          set in the multiplier.
          'kWeek' means that the Snapshot copy occurs weekly at the frequency
          set in the multiplier.
          'kMonth' means that the Snapshot copy occurs monthly at the frequency
          set in the multiplier.
          'kYear' means that the Snapshot copy occurs yearly at the frequency
          set in the multiplier.
        type: string
        enum:
        - kEvery
        - kHour
        - kDay
        - kWeek
        - kMonth
        - kYear
        x-go-name: Periodicity
        x-nullable: true
      target:
        description: Specifies the archival target to copy the Snapshots to.
        allOf:
        - $ref: '#/definitions/ArchivalExternalTarget'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SnapshotAttempt:
    description: Specifies information about a single snapshot.
    type: object
    title: Snapshot Attempt.
    properties:
      attemptNumber:
        description: |-
          Specifies the number of the attempts made by the Job Run
          to capture a snapshot of the object. For example, if an snapshot
          is successfully captured after three attempts, this field equals 3.
        type: integer
        format: int64
        x-go-name: AttemptNumber
        x-nullable: true
      jobRunId:
        description: Specifies the id of the Job Run that captured the snapshot.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      startedTimeUsecs:
        description: |-
          Specifies the time when the Job Run starts capturing a snapshot.
          Specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: StartedTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SnapshotCloudCopyPolicy:
    description: |-
      Specifies settings for copying Snapshots to Cloud. This also specifies
      the retention policy that should be applied to Snapshots after they have
      been copied to Cloud.
    type: object
    title: Cloud Deploy Policy.
    properties:
      Id:
        description: |-
          Specified the Id for a snapshot copy policy. This is generated when the
          policy is created.
        type: string
        x-nullable: true
      copyPartial:
        description: |-
          Specifies if Snapshots are copied from the first completely successful
          Job Run or the first partially successful Job Run occurring at the start
          of the replication schedule.
          If true, Snapshots are copied from the first Job Run occurring at the start
          of the replication schedule, even if first Job Run was not completely
          successful i.e. Snapshots were not captured for all Objects in the Job.
          If false, Snapshots are copied from the first Job Run occurring at the
          start of the replication schedule that was completely successful i.e.
          Snapshots for all the Objects in the Job were successfully captured.
        type: boolean
        x-go-name: CopyPartial
        x-nullable: true
      daysToKeep:
        description: Specifies the number of days to retain copied Snapshots on the
          target.
        type: integer
        format: int64
        x-go-name: DaysToKeep
        x-nullable: true
      multiplier:
        description: |-
          Specifies a factor to multiply the periodicity by, to determine the copy
          schedule.
          For example if set to 2 and the periodicity is hourly, then Snapshots
          from the first eligible Job Run for every 2 hour period is copied.
        type: integer
        format: int32
        x-go-name: Multiplier
        x-nullable: true
      periodicity:
        description: |-
          Specifies the frequency that Snapshots should be copied to the
          specified target. Used in combination with multiplier.
          'kEvery' means that the Snapshot copy occurs after the number of
          Job Runs equals the number specified in the multiplier.
          'kHour' means that the Snapshot copy occurs hourly at the frequency
          set in the multiplier, for example if multiplier is 2, the copy occurs
          every 2 hours.
          'kDay' means that the Snapshot copy occurs daily at the frequency
          set in the multiplier.
          'kWeek' means that the Snapshot copy occurs weekly at the frequency
          set in the multiplier.
          'kMonth' means that the Snapshot copy occurs monthly at the frequency
          set in the multiplier.
          'kYear' means that the Snapshot copy occurs yearly at the frequency
          set in the multiplier.
        type: string
        enum:
        - kEvery
        - kHour
        - kDay
        - kWeek
        - kMonth
        - kYear
        x-go-name: Periodicity
        x-nullable: true
      target:
        description: |-
          Specifies the details about CloudDeploy target where backup snapshots
          may be converted and stored.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTargetDetails'
    x-go-package: cohesity/iris/server/data/public
  SnapshotCopyTask:
    description: |-
      Specifies information about copy tasks such as replication and archival
      tasks.
    type: object
    title: Snapshot Copy Task.
    properties:
      copyStatus:
        description: Specifies the status of the copy task.
        type: string
        x-go-name: CopyStatus
        x-nullable: true
      expiryTimeUsecs:
        description: Specifies when the Snapshot expires on the target.
        type: integer
        format: int64
        x-go-name: ExpiryTimeUsecs
        x-nullable: true
      message:
        description: |-
          Specifies warning or error information when the copy task is not
          successful.
        type: string
        x-go-name: Message
        x-nullable: true
      snapshotTarget:
        description: Specifies the target location where the Snapshot was copied to.
        x-nullable: true
        $ref: '#/definitions/SnapshotTargetSettings'
    x-go-package: cohesity/iris/server/data/public
  SnapshotInfo:
    description: |-
      Specifies details about the snapshot task created to backup or copy one
      source object like a VM.
    type: object
    title: Snapshot Information.
    properties:
      environment:
        description: |-
          Specifies the environment type (such as kVMware or kSQL) that
          contains the source to backup.
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kKubernetes
        - kElastifile
        - kAD
        - kRDSSnapshotManager
        - kCassandra
        - kMongoDB
        - kCouchbase
        - kHdfs
        - kHive
        - kHBase
        x-go-name: Environment
        x-nullable: true
      relativeSnapshotDirectory:
        description: |-
          Specifies the relative directory path from root path where the snapshot
          is stored.
        type: string
        x-go-name: RelativeSnapshotDirectory
        x-nullable: true
      rootPath:
        description: |-
          Specifies the root path where the snapshot is stored, using the following
          format: "/ViewBox/ViewName/fs".
        type: string
        x-go-name: RootPath
        x-nullable: true
      sourceSnapshotCreateTimeUsecs:
        description: |-
          Specifies the snapshot create time of the already created snapshot on the
          source
        type: integer
        format: int64
        x-go-name: SourceSnapshotCreateTimeUsecs
        x-nullable: true
      sourceSnapshotName:
        description: |-
          Specifies the name of the snapshot backed up in a Netapp Data-Protect
          Volume where we use already created snapshot on the source
        type: string
        x-go-name: SourceSnapshotName
        x-nullable: true
      viewName:
        description: |-
          Specifies the name of the View that is cloned.
          NOTE: This field is only populated for View cloning.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SnapshotInfoProto:
    description: |-
      Each available extension is listed below along with the location of the
      proto file (relative to magneto/connectors) where it is defined. The only
      exception is view.proto and physical.proto which reside in magneto/base.

      SnapshotInfoProto extension                     Location              Extn
      =============================================================================
      vmware::SnapshotInfo::vmware_snapshot_info     vmware/vmware.proto       100
      sql::SnapshotInfo::sql_snapshot_info           sql/sql.proto             101
      view::SnapshotInfo::view_snapshot_info         base/view.proto           102
      physical::SnapshotInfo::physical_snapshot_info base/physical.proto       103
      san::SnapshotInfo::san_snapshot_info           san/san.proto             104
      file::SnapshotInfo::file_snapshot_info         file/file.proto           105
      hyperv::SnapshotInfo::hyperv_snapshot_info     hyperv/hyperv.proto       106
      acropolis::SnapshotInfo::
      acropolis_snapshot_info                        acropolis/acropolis.proto 107
      kvm::SnapshotInfo::kvm_snapshot_info           kvm/kvm.proto             108
      app_file::SnapshotInfo::app_file_snapshot_info app_file/app_file.proto   109
      oracle::SnapshotInfo::oracle_snapshot_info     oracle/oracle.proto       110
      aws::SnapshotInfo::aws_snapshot_info           aws/aws.proto             111
      outlook::SnapshotInfo::outlook_snapshot_info   outlook/outlook.proto     112
      azure::SnapshotInfo::azure_snapshot_info       azure/azure.proto         113
      gcp::SnapshotInfo::gcp_snapshot_info           gcp/gcp.proto             114
      ad::SnapshotInfo::ad_snapshot_info             ad/ad.proto               115
      MSGraph::SnapshotInfo::one_drive_snapshot_info ms_graph/graph.proto      116
      kubernetes::SnapshotInfo:: kubernetes_snapshot_info
      kubernetes/kubernetes.proto
      117
      aws::RDSSnapshotInfo::rds_snapshot_info        aws/aws.proto             118
      o365::SnapshotInfo::o365_snapshot_info         o365/o365.proto           119
      exchange::SnapshotInfo::exchange_snapshot_info exchange/exchange.proto   120
      o365::SharepointSnapshotInfo::sharepoint_snapshot_info
      o365/o365.proto           121
      MSGraph::SharepointListSnapshotInfo::sharepoint_list_snapshot_info
      ms_graph/graph.proto      122
      cdp::SnapshotInfo::cdp_snapshot_info           base/cdp.proto            123
      imanis::SnapshotInfo::nosql_snapshot_info      imanis/nosql.proto        124
      o365::PublicFolderSnapshotInfo::public_folder_snapshot_info
      o365/o365.proto           125
      =============================================================================
    type: object
    title: |-
      Message that encapsulates information about snapshots for any of the
      environments we support. Environment specific snapshot infos are defined as
      extensions to this proto.
    properties:
      errorRocksdbName:
        description: |-
          The name of the rocksdb directory for errors seen during this backup,
          stored in 'config' directory of the current view.
        type: string
        x-go-name: ErrorRocksdbName
        x-nullable: true
      fileWalkDone:
        description: |-
          This field is only applicable for NAS and file backup jobs. It indicates
          whether the file walk portion of the backup has completed.
        type: boolean
        x-go-name: FileWalkDone
        x-nullable: true
      numAppInstances:
        description: |-
          Number of application instances backed up by this task. For example, if
          the environment type is kSQL, this number is for the SQL server instances.
        type: integer
        format: int32
        x-go-name: NumAppInstances
        x-nullable: true
      numAppObjects:
        description: |-
          Number of application objects in total backed up by this task. For
          example, if the environment type is kSQL, this number is for all of the
          SQL server databases
        type: integer
        format: int32
        x-go-name: NumAppObjects
        x-nullable: true
      postBackupScriptStatus:
        description: Captures the execution status of post backup script.
        x-nullable: true
        $ref: '#/definitions/ScriptExecutionStatus'
      preBackupScriptStatus:
        description: Captures the execution status of pre backup script.
        x-nullable: true
        $ref: '#/definitions/ScriptExecutionStatus'
      relativeSnapshotDir:
        description: |-
          This is the path relative to 'root_path' under which the snapshot lives.
          This does not begin with a '/' and is of the form foo/bar/baz.
        type: string
        x-go-name: RelativeSnapshotDir
        x-nullable: true
      rootPath:
        description: |-
          The root path under which the snapshot is stored. This is of the form
          "/ViewBox/ViewName/fs".
        type: string
        x-go-name: RootPath
        x-nullable: true
      scribeTableColumn:
        description: |-
          If this backup task stores any auxiliary state in Scribe table, this field
          will be populated with the column key in that table where such state is
          stored. Data stored in the column is extension of SnapshotScribeInfoProto
          message.
        type: string
        x-go-name: ScribeTableColumn
        x-nullable: true
      scribeTableRow:
        description: |-
          If this backup task stores any auxiliary state in Scribe table, this field
          will be populated with the row key in that table where such state is
          stored.
        type: string
        x-go-name: ScribeTableRow
        x-nullable: true
      slaveTaskStartTimeUsecs:
        description: This is the timestamp at which the slave task started.
        type: integer
        format: int64
        x-go-name: SlaveTaskStartTimeUsecs
        x-nullable: true
      snapshotType:
        description: Captures the snapshot type for some objects such as VM.
        x-nullable: true
        $ref: '#/definitions/ObjectSnapshotType'
      sourceSnapshotCreateTimeUsecs:
        description: The source snapshot create time.
        type: integer
        format: int64
        x-go-name: SourceSnapshotCreateTimeUsecs
        x-nullable: true
      sourceSnapshotName:
        description: |-
          This filed is only applicable for NAS when we do backup from
          Readonly/DataProtect volume where we use already created snapshot on the
          source.
        type: string
        x-go-name: SourceSnapshotName
        x-nullable: true
      storageSnapshotProvider:
        description: Specifies the parameters required for Storage Snapshot provider.
        x-nullable: true
        $ref: '#/definitions/StorageSnapshotProviderParams'
      targetType:
        description: |-
          Specifies the target type for the task. The field is only valid if the
          task has got a permit.
        type: integer
        format: int32
        x-go-name: TargetType
        x-nullable: true
      totalBytesReadFromSource:
        description: |-
          Contains the information regarding number of bytes that are read from the
          source (such as VM) so far.
        type: integer
        format: int64
        x-go-name: TotalBytesReadFromSource
        x-nullable: true
      totalBytesToReadFromSource:
        description: |-
          Contains the total number of bytes that will be read from the source
          (such as VM) for this snapshot.
        type: integer
        format: int64
        x-go-name: TotalBytesToReadFromSource
        x-nullable: true
      totalChangedEntityCount:
        description: |-
          The total number of file and directory entities that have changed since
          last backup. Only applicable to file based backups.
        type: integer
        format: int64
        x-go-name: TotalChangedEntityCount
        x-nullable: true
      totalEntityCount:
        description: |-
          The total number of file and directory entities visited in this
          backup. Only applicable to file based backups.
        type: integer
        format: int64
        x-go-name: TotalEntityCount
        x-nullable: true
      totalLogicalBackupSizeBytes:
        description: |-
          Logical size of the source whose snapshot is being taken. This is the
          amount of data we would have read from the source had this been a full
          backup.
        type: integer
        format: int64
        x-go-name: TotalLogicalBackupSizeBytes
        x-nullable: true
      totalPrimaryPhysicalSizeBytes:
        description: |-
          Contains the information regarding number of bytes that the source (such
          as VM) has taken up on the primary storage.
        type: integer
        format: int64
        x-go-name: TotalPrimaryPhysicalSizeBytes
        x-nullable: true
      type:
        description: The type of environment this snapshot info pertains to.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
      viewCaseInsensitivityAltered:
        description: |-
          Whether during the backup, the backup view's case insensitivity property
          has been altered. If so, Madrox needs to take corresponding actions during
          replication.
        type: boolean
        x-go-name: ViewCaseInsensitivityAltered
        x-nullable: true
      viewName:
        description: |-
          The view name under which the snapshot was created.
          NOTE: This is populated only for View, Puppeteer, NAS and Oracle backup.
        type: string
        x-go-name: ViewName
        x-nullable: true
      viewNameToGc:
        description: |-
          The view name under which the snapshot of the migrated data was created.
          NOTE: This is populated only for data migration tasks.
        type: string
        x-go-name: ViewNameToGc
        x-nullable: true
      warnings:
        description: Warnings if any. These warnings will be propogated to the UI
          by master.
        type: array
        items:
          $ref: '#/definitions/ErrorProto'
        x-go-name: Warnings
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  SnapshotLabel:
    description: |-
      Specifies the snapshot label for incremental and full backup
      of Secondary Netapp volumes (Data-Protect Volumes).
    type: object
    properties:
      fullLabel:
        description: Specifies the full snapshot label value
        type: string
        x-go-name: FullLabel
        x-nullable: true
      incrementalLabel:
        description: Specifies the incremental snapshot label value
        type: string
        x-go-name: IncrementalLabel
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SnapshotManagerParams:
    type: object
    title: Proto to encapsulate additional params for snapshot manager jobs.
    properties:
      awsSnapshotManagerParams:
        x-nullable: true
        $ref: '#/definitions/AWSSnapshotManagerParams'
    x-go-package: magneto/base/env_params.pb
  SnapshotReplicationCopyPolicy:
    description: |-
      Specifies settings for copying Snapshots to Remote Clusters. This also
      specifies the retention policy that should be applied to Snapshots after
      they have been copied to the specified target.
    type: object
    title: Snapshot Copy Replication Policy.
    properties:
      Id:
        description: |-
          Specified the Id for a snapshot copy policy. This is generated when the
          policy is created.
        type: string
        x-nullable: true
      cloudTarget:
        description: Specifies the cloud replication target to copy the Snapshots
          to.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTargetDetails'
      copyPartial:
        description: |-
          Specifies if Snapshots are copied from the first completely successful
          Job Run or the first partially successful Job Run occurring at the start
          of the replication schedule.
          If true, Snapshots are copied from the first Job Run occurring at the start
          of the replication schedule, even if first Job Run was not completely
          successful i.e. Snapshots were not captured for all Objects in the Job.
          If false, Snapshots are copied from the first Job Run occurring at the
          start of the replication schedule that was completely successful i.e.
          Snapshots for all the Objects in the Job were successfully captured.
        type: boolean
        x-go-name: CopyPartial
        x-nullable: true
      daysToKeep:
        description: Specifies the number of days to retain copied Snapshots on the
          target.
        type: integer
        format: int64
        x-go-name: DaysToKeep
        x-nullable: true
      multiplier:
        description: |-
          Specifies a factor to multiply the periodicity by, to determine the copy
          schedule.
          For example if set to 2 and the periodicity is hourly, then Snapshots
          from the first eligible Job Run for every 2 hour period is copied.
        type: integer
        format: int32
        x-go-name: Multiplier
        x-nullable: true
      periodicity:
        description: |-
          Specifies the frequency that Snapshots should be copied to the
          specified target. Used in combination with multiplier.
          'kEvery' means that the Snapshot copy occurs after the number of
          Job Runs equals the number specified in the multiplier.
          'kHour' means that the Snapshot copy occurs hourly at the frequency
          set in the multiplier, for example if multiplier is 2, the copy occurs
          every 2 hours.
          'kDay' means that the Snapshot copy occurs daily at the frequency
          set in the multiplier.
          'kWeek' means that the Snapshot copy occurs weekly at the frequency
          set in the multiplier.
          'kMonth' means that the Snapshot copy occurs monthly at the frequency
          set in the multiplier.
          'kYear' means that the Snapshot copy occurs yearly at the frequency
          set in the multiplier.
        type: string
        enum:
        - kEvery
        - kHour
        - kDay
        - kWeek
        - kMonth
        - kYear
        x-go-name: Periodicity
        x-nullable: true
      target:
        description: Specifies the replication target to copy the Snapshots to.
        allOf:
        - $ref: '#/definitions/ReplicationTargetSettings'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SnapshotTarget:
    description: |-
      Message that specifies details about a target (such as a replication or
      archival target) where a backup snapshot may be copied to.
    type: object
    properties:
      archivalTarget:
        description: The archival target for the backup snapshot.
        x-nullable: true
        $ref: '#/definitions/ArchivalTarget'
      cloudDeployTarget:
        description: |-
          The cloud deploy target for the backup snapshot. This will be populated
          for both kCloudDeploy and kCloudReplication tasks.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTarget'
      replicationTarget:
        description: The remote replication target for the backup snapshot.
        x-nullable: true
        $ref: '#/definitions/ReplicationTarget'
      type:
        description: The type of snapshot target this proto represents.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  SnapshotTargetPolicyProto:
    description: |-
      Message that specifies the policy for copying backup snapshots to a target.
      This message also specifies the retention policy that should be applied to
      the snapshots after they have been copied to the specified target.
    type: object
    title: Snapshot Target Policy Proto.
    properties:
      copyPartiallySuccessfulRun:
        description: |-
          If this is false, then only snapshots from the first completely successful
          run in the given time granularity will be considered for being copied. If
          this is true, then snapshots from the first partially successful run will
          also be eligible to be copied.
        type: boolean
        x-go-name: CopyPartiallySuccessfulRun
        x-nullable: true
      granularityBucket:
        description: |-
          Specifies the frequency at which the backup job's snapshots should be
          copied to the specified target.
        x-nullable: true
        $ref: '#/definitions/GranularityBucket'
      id:
        description: |-
          This id uniquely identifies this entry in the ProtectionPolicyProto.

          If this message is from global policy, this id is generated by Helios.
          Otherwise, it is generated by Iris. Magneto uses this for merging linked
          policies with its parent global policy.
        type: string
        x-go-name: Id
        x-nullable: true
      numDaysToKeep:
        description: |-
          Specifies how to determine the expiration time for snapshots copied due to
          this policy. The snapshots will be marked as expiring (i.e., eligible to
          be garbage collected) in 'num_days_to_keep' days from when the snapshots
          were created.
        type: integer
        format: int64
        x-go-name: NumDaysToKeep
        x-nullable: true
      retentionPolicy:
        description: |-
          The retention that applies to the snapshots on the target (after they have
          been copied there).
        x-nullable: true
        $ref: '#/definitions/RetentionPolicyProto'
      snapshotTarget:
        description: The target where the backup snapshots should be copied to.
        x-nullable: true
        $ref: '#/definitions/SnapshotTarget'
    x-go-package: magneto/base/policy.pb
  SnapshotTargetSettings:
    description: |-
      Specifies settings about a target where a copied Snapshot is stored.
      A target can be a Remote Cluster or an Archival External Target such as
      AWS or Tape.
    type: object
    title: Snapshot Target.
    properties:
      archivalTarget:
        description: |-
          Specifies the Archival External Target for storing a copied Snapshot.
          If the type is not 'kLocal', either a replicationTarget,
          archivalExternalTarget or cloudReplicationTarget must be specified.
        x-nullable: true
        $ref: '#/definitions/ArchivalExternalTarget'
      cloudReplicationTarget:
        description: |-
          Specifies the cloud replication target for storing a copied Snapshot.
          If the type is not 'kLocal', either a replicationTarget,
          archivalExternalTarget or cloudReplicationTarget must be specified.
        x-nullable: true
        $ref: '#/definitions/CloudDeployTargetDetails'
      replicationTarget:
        description: |-
          Specifies the replication target (Remote Cluster) for storing a copied
          Snapshot.
          If the type is not 'kLocal', either a replicationTarget,
          archivalExternalTarget or cloudReplicationTarget must be specified.
        x-nullable: true
        $ref: '#/definitions/ReplicationTargetSettings'
      type:
        description: |-
          Specifies the type of a Snapshot target such as 'kLocal', 'kRemote' or
          'kArchival'.
          'kLocal' means the Snapshot is stored on a local Cohesity Cluster.
          'kRemote' means the Snapshot is stored on a Remote Cohesity Cluster.
          (It was copied to the Remote Cohesity Cluster using replication.)
          'kArchival' means the Snapshot is stored on a Archival External Target
          (such as Tape or AWS).
          'kCloudDeploy' means the Snapshot is stored on a Cloud platform.
        type: string
        enum:
        - kLocal
        - kRemote
        - kArchival
        - kCloudDeploy
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SnapshotVersion:
    description: Specifies information about snapshots of a backup object.
    type: object
    title: Snapshot Version.
    properties:
      attemptNumber:
        description: |-
          Specifies the number of the attempts made by the Job Run
          to capture a snapshot of the object. For example, if an snapshot
          is successfully captured after three attempts, this field equals 3.
        type: integer
        format: int64
        x-go-name: AttemptNumber
        x-nullable: true
      deltaSizeBytes:
        description: |-
          Specifies the size of the data captured from the source object.
          For a full backup (where Change Block Tracking is not utilized)
          this field is equal to logicalSizeBytes. For an incremental backup
          (where Change Block Tracking is utilized), this field specifies
          the size of the data that has changed since the last backup.
        type: integer
        format: int64
        x-go-name: DeltaSizeBytes
        x-nullable: true
      indexingStatus:
        description: |-
          Specifies the indexing status of the snapshot.
          Specifies the indexing status of the snapshot.
          'kStarted' indicates that indexing has started.
          'kDone' indicates that indexing has been completed according to the type
          of object.
          'kNoIndex' indicates that the snapshot cannot be indexed. This is the case
          during archival restore.
          'kIceboxRestoreStarted' indicates that indexing is started from an
          archive.
          'kIceboxRestoreError' indicates that an error occurred during restore
          from archiveand there is no index present.
          'kSkipped' indicates that indexing is skipped due to indexing backlog.
        type: string
        enum:
        - kStarted
        - kDone
        - kNoIndex
        - kIceboxRestoreStarted
        - kIceboxRestoreError
        - kSkipped
        x-go-name: IndexingStatus
        x-nullable: true
      isAppConsistent:
        description: |-
          Specifies if an app-consistent snapshot was captured. For example,
          was the VM was quiesced before the snapshot was captured.
        type: boolean
        x-go-name: IsAppConsistent
        x-nullable: true
      isFullBackup:
        description: |-
          Specifies if the snapshot is a full backup. For example, all blocks
          of the VM is captured and Change Block Tracking is not utilized.
        type: boolean
        x-go-name: IsFullBackup
        x-nullable: true
      jobRunId:
        description: Specifies the id of the Job Run that captured the snapshot.
        type: integer
        format: int64
        x-go-name: JobRunId
        x-nullable: true
      localMountPath:
        description: |-
          Specifies the local path relative to the View, without the
          ViewBox/View prefix.
        type: string
        x-go-name: LocalMountPath
        x-nullable: true
      logicalSizeBytes:
        description: |-
          Specifies the size of the snapshot if the data
          is fully hydrated or expanded and not reduced
          by change-block tracking, compression and deduplication.
          For example if a VMDK of size 100GB is created with thin provisioning
          and the disk size to store the VMDK is 20GB.
          The logical size of this object is 100GB and the physical size is 20GB.
        type: integer
        format: int64
        x-go-name: LogicalSizeBytes
        x-nullable: true
      physicalSizeBytes:
        description: |-
          Specifies the amount of data actually used on the disk to store this
          object after being reduced by change-block tracking, compression and
          deduplication.
        type: integer
        format: int64
        x-go-name: PhysicalSizeBytes
        x-nullable: true
      primaryPhysicalSizeBytes:
        description: |-
          Specifies the total amount of disk space used to store this
          object on the primary storage. For example the
          total amount of disk space used to store the VM files
          (such as the VMDK files) on the primary datastore.
        type: integer
        format: int64
        x-go-name: PrimaryPhysicalSizeBytes
        x-nullable: true
      replicaInfoList:
        description: Specifies the list of replication information about the current
          snapshot.
        type: array
        items:
          $ref: '#/definitions/ReplicaInfo'
        x-go-name: ReplicaInfoList
        x-nullable: true
      startedTimeUsecs:
        description: |-
          Specifies the time when the Job Run starts capturing a snapshot.
          Specified as a Unix epoch Timestamp (in microseconds).
        type: integer
        format: int64
        x-go-name: StartedTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SourceAppParams:
    description: |-
      This message contains params specific to application running on the source
      such as a VM or a physical host.
    type: object
    properties:
      isVssCopyOnly:
        description: If the backup is a VSS full backup with the copy-only option
          specified.
        type: boolean
        x-go-name: IsVssCopyOnly
        x-nullable: true
      msExchangeParams:
        description: MS Exchange params.
        x-nullable: true
        $ref: '#/definitions/MSExchangeParams'
    x-go-package: magneto/base/env_params.pb
  SourceBackupStatus:
    description: Specifies the source object to protect and the current backup status.
    type: object
    title: Source Object Backup Status.
    properties:
      appsBackupStatus:
        description: Specifies the backup status at app/DB level.
        type: array
        items:
          $ref: '#/definitions/AppEntityBackupStatusInfo'
        x-go-name: AppsBackupStatus
        x-nullable: true
      currentSnapshotInfo:
        description: |-
          Specifies details about the snapshot captured to backup the
          source object (such as a VM).
        x-nullable: true
        $ref: '#/definitions/SnapshotInfo'
      error:
        description: |-
          Specifies if an error occurred (if any) while running this task.
          This field is populated when the status is equal to 'kFailure'.
        type: string
        x-go-name: Error
        x-nullable: true
      isFullBackup:
        description: |-
          Specifies whether this is a 'kFull' or 'kRegular' backup of the Run.
          This may be true even if the scheduled backup type is 'kRegular'.
          This will happen when this run corresponds to the first backup run of
          the Job or if no previous snapshot information is found.
        type: boolean
        x-go-name: IsFullBackup
        x-nullable: true
      numRestarts:
        description: |-
          Specifies the number of times the task was restarted because of the
          changes on the backup source host.
        type: integer
        format: int32
        x-go-name: NumRestarts
        x-nullable: true
      parentSourceId:
        description: |-
          Specifies the id of the registered Protection Source that is the
          parent of the Objects that are protected by this Job Run.
        type: integer
        format: int64
        x-go-name: ParentSourceId
        x-nullable: true
      progressMonitorTaskPath:
        description: |-
          Specifies the yoda progress monitor task path which is used to get pulse
          information about the source that is being backed up.
        type: string
        x-go-name: ProgressMonitorTaskPath
        x-nullable: true
      quiesced:
        description: |-
          Specifies if app-consistent snapshot was captured. This field is set to
          true, if an app-consistent snapshot was taken by
          quiescing applications and the file system before taking a backup.
        type: boolean
        x-go-name: Quiesced
        x-nullable: true
      slaViolated:
        description: |-
          Specifies if the SLA was violated for the Job Run. This field is set
          to true, if time to complete the Job Run is longer than the SLA
          specified. This field is populated when the status is
          set to 'kSuccess' or 'kFailure'.
        type: boolean
        x-go-name: SlaViolated
        x-nullable: true
      source:
        description: Specifies the source object to protect.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      stats:
        description: Specifies the stats of the Backup Run task for the Protection
          Source.
        x-nullable: true
        $ref: '#/definitions/BackupSourceStats'
      status:
        description: |-
          Specifies the status of the source object being protected.
          'kAccepted' indicates the task is queued to run but not yet running.
          'kRunning' indicates the task is running.
          'kCanceling' indicates a request to cancel the task has occurred but
          the task is not yet canceled.
          'kCanceled' indicates the task has been canceled.
          'kSuccess' indicates the task was successful.
          'kFailure' indicates the task failed.
          'kWarning' indicates the task has finished with warning.
          'kOnHold' indicates the task is kept onHold.
          'kMissed' indicates the task is missed.
        type: string
        enum:
        - kAccepted
        - kRunning
        - kCanceling
        - kCanceled
        - kSuccess
        - kFailure
        - kWarning
        - kOnHold
        - kMissed
        x-go-name: Status
        x-nullable: true
      warnings:
        description: |-
          Array of Warnings.

          Specifies the warnings that occurred (if any) while running this task.
        type: array
        items:
          type: string
        x-go-name: Warnings
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SourceFilters:
    description: |-
      For SQL, this filters will be applicable only for auto protect sources and
      can be used at the host, instance level.
    type: object
    title: Message to capture filters to include/exclude entities from the backup.
    properties:
      excludeSourceFilterVec:
        description: |-
          This contains the list of exclude filters to be applied on the entities in
          the backup source.
        type: array
        items:
          $ref: '#/definitions/SourceFilters_SourceFilter'
        x-go-name: ExcludeSourceFilterVec
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  SourceFilters_SourceFilter:
    description: |-
      Plain text filter: { source_filter: "TestDatabase", is_regex: false}.
      Wildcard filter: { source_filter: "Test?Database*", is_regex: false}.
      Regex filter: { source_filter: "^Test.*Database$", is_regex: true}.
    type: object
    title: |-
      Message to capture a source filter. Listed below the supported filter
      types with examples.
    properties:
      isRegex:
        description: |-
          If true, this implies 'source_filter' is a regex filter. If false, it
          will be treated as wildcard/plain text filter.
        type: boolean
        x-go-name: IsRegex
        x-nullable: true
      sourceFilter:
        description: This contains the filter string.
        type: string
        x-go-name: SourceFilter
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  SourceForPrincipalParam:
    description: |-
      Set Access Permissions for a Principal.
      For the specified principal, grant access permissions to the
      the specified Protection Sources and View names.
    type: object
    title: Source for Principal Parameters.
    properties:
      protectionSourceIds:
        description: |-
          Array of Protection Source Ids.

          For the specified principal, grant access permissions to the
          Protection Sources listed in this array.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionSourceIds
        x-nullable: true
      sid:
        description: Specifies the SID of the principal to grant access permissions
          to.
        type: string
        x-go-name: Sid
        x-nullable: true
      viewNames:
        description: |-
          Array of View names.

          For the specified principal, grant access permissions to the
          Views names listed in this array.
        type: array
        items:
          type: string
        x-go-name: ViewNames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SourceSpecialParameter:
    description: |-
      Specifies additional special settings for a single Source in a Protection
      Job. This Source must be a leaf node in the Source tree.
    type: object
    title: Source Special Parameters.
    properties:
      adSpecialParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Protection Sources of 'kAD' type.
        x-nullable: true
        $ref: '#/definitions/ApplicationSpecialParameters'
      exchangeSpecialParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Protection Sources of 'kExchange' type.
        x-nullable: true
        $ref: '#/definitions/ApplicationSpecialParameters'
      oracleSpecialParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Protection Sources of 'kOracle' type.
        x-nullable: true
        $ref: '#/definitions/OracleSpecialParameters'
      physicalSpecialParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Sources of 'kHost' type in a kPhysical environment.
        x-nullable: true
        $ref: '#/definitions/PhysicalSpecialParameters'
      skipIndexing:
        description: |-
          Specifies not to index the objects in the Protection Source when
          backing up.
        type: boolean
        x-go-name: SkipIndexing
        x-nullable: true
      sourceId:
        description: |-
          Specifies the object id of the Protection Source that these
          special settings apply. This field must refer to a leaf node
          such a VM or a Physical Server.
        type: integer
        format: int64
        x-go-name: SourceId
        x-nullable: true
      sqlSpecialParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Protection Sources of 'kSQL' type.
        x-nullable: true
        $ref: '#/definitions/ApplicationSpecialParameters'
      truncateExchangeLog:
        description: |-
          If true, after the Cohesity Cluster successfully captures a Snapshot
          during a Job Run, the Cluster truncates the Exchange transaction logs on
          a Microsoft Exchange Server. The default value is false.
          This field is deprecated. Use the field in ApplicationParameters inside
          source specific parameter.
          deprecated: true
        type: boolean
        x-go-name: TruncateExchangeLog
        x-nullable: true
      vmCredentials:
        description: |-
          Specifies the administrator credentials to log in to the
          guest Windows system of a VM that hosts the Microsoft Exchange Server.
          If truncateExchangeLog is set to true and the specified source
          is a VM, administrator credentials to log in to the guest Windows system
          of the VM must be provided to truncate the logs.
          This field is only applicable to Sources in the kVMware environment.
          This field is deprecated. Use the field in VmCredentials inside
          source specific parameter.
          deprecated: true
        title: VM Credentials.
        allOf:
        - $ref: '#/definitions/Credentials'
        x-nullable: true
      vmwareSpecialParameters:
        description: |-
          Specifies additional special parameters that are applicable only to
          Protection Sources of 'kVMware' type.
        x-nullable: true
        $ref: '#/definitions/VmwareSpecialParameters'
    x-go-package: cohesity/iris/server/data/public
  SourcesForSid:
    description: |-
      Protection Sources and Views With Access Permissions.
      Specifies the Protection Sources objects and Views that the specified
      principal has permissions to access. The principal is specified using
      a security identifier (SID).
    type: object
    title: Sources for Sid.
    properties:
      protectionSources:
        description: |-
          Array of Protection Sources.

          Specifies the Protection Source objects that the specified principal
          has permissions to access.
        type: array
        items:
          $ref: '#/definitions/ProtectionSource'
        x-go-name: ProtectionSources
        x-nullable: true
      sid:
        description: Specifies the security identifier (SID) of the principal.
        type: string
        x-go-name: Sid
        x-nullable: true
      views:
        description: |-
          Array of View Names.

          Specifies the names of the Views that the specified principal has
          permissions to access.
        type: array
        items:
          $ref: '#/definitions/View'
        x-go-name: Views
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SqlAagHostAndDatabases:
    description: |-
      Specifies AAGs and databases information on an SQL server. If AAGs exist
      on the server, specifies information about the AAG and databases in the
      group for each AAG found on the server.
    type: object
    title: SQL AAG Host and Databases.
    properties:
      aagDatabases:
        description: Specifies a list of AAGs and database members in each AAG.
        type: array
        items:
          $ref: '#/definitions/AagAndDatabases'
        x-go-name: AagDatabases
        x-nullable: true
      applicationNode:
        description: |-
          Specifies the subtree used to store application-level Objects.
          Different environments use the subtree to store application-level
          information. For example for SQL Server, this subtree stores the
          SQL Server instances running on a VM or Physical hosts.
        x-nullable: true
        $ref: '#/definitions/ProtectionSourceNode'
      databases:
        description: |-
          Specifies all database entities found on the server. Database may or
          may not be in an AAG.
        type: array
        items:
          $ref: '#/definitions/ProtectionSource'
        x-go-name: Databases
        x-nullable: true
      errorMessage:
        description: |-
          Specifies an error message when the host is not registered as an SQL
          host.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      unknownHostName:
        description: |-
          Specifies the name of the host that is not registered as an SQL server
          on Cohesity Cluser.
        type: string
        x-go-name: UnknownHostName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SqlBackupJobParams:
    description: Message to capture additional backup job params specific to SQL.
    type: object
    title: SQL Backup Job Parameters.
    properties:
      aagBackupPreferenceType:
        description: |-
          Preference type for backing up databases that are part of an AAG.
          Only applicable if 'use_aag_preferences_from_sql_server' is set to false.
        type: integer
        format: int32
        x-go-name: AagBackupPreferenceType
        x-nullable: true
      backupDatabaseVolumesOnly:
        description: |-
          If set to true, only the volumes associated with databases should be
          backed up. The user cannot select additional volumes at host level for
          backup.

          If set to false, all the volumes on the host machine will be backed up.
          In this case, the user can further select the exact set of volumes
          using host level params.

          Note that the volumes associated with selected databases will always be
          included in the backup.
        type: boolean
        x-go-name: BackupDatabaseVolumesOnly
        x-nullable: true
      backupSystemDbs:
        description: Set to true if system databases should be backed up.
        type: boolean
        x-go-name: BackupSystemDbs
        x-nullable: true
      continueAfterError:
        description: Whether backup should continue after encountering a page checksum
          error.
        type: boolean
        x-go-name: ContinueAfterError
        x-nullable: true
      enableChecksum:
        description: Whether backup checksums are enabled.
        type: boolean
        x-go-name: EnableChecksum
        x-nullable: true
      enableIncrementalBackupAfterRestart:
        description: |-
          If this is set to true, then incremental backup will be performed
          after the server restarts, otherwise a full-backup will be done.
        type: boolean
        x-go-name: EnableIncrementalBackupAfterRestart
        x-nullable: true
      fullBackupType:
        description: The type of SQL full backup to be used for this job.
        type: integer
        format: int32
        x-go-name: FullBackupType
        x-nullable: true
      isCopyOnlyFull:
        description: Whether full backups should be copy-only.
        type: boolean
        x-go-name: IsCopyOnlyFull
        x-nullable: true
      isCopyOnlyLog:
        description: Whether log backups should be copy-only.
        type: boolean
        x-go-name: IsCopyOnlyLog
        x-nullable: true
      numDbsPerBatch:
        description: |-
          The number of databases to be backed up per batch. This is only applicable
          for file based sql backup. If this is not specified, we use the value
          specified in magneto_vss_sql_app_file_batch_size gflag.
        type: integer
        format: int32
        x-go-name: NumDbsPerBatch
        x-nullable: true
      numStreams:
        description: |-
          The number of streams to be used in native sql backup command. This is
          only applicable for native sql backup. If this is not specified, we use
          the value specified in magneto_sql_num_streams_for_each_db_backup gflag.
        type: integer
        format: int32
        x-go-name: NumStreams
        x-nullable: true
      useAagPreferencesFromSqlServer:
        description: |-
          Set to true if we should use AAG preferences specified at the SQL server
          host.
        type: boolean
        x-go-name: UseAagPreferencesFromSqlServer
        x-nullable: true
      userDbPreferenceType:
        description: Preference type for backing up user databases on the host.
        type: integer
        format: int32
        x-go-name: UserDbPreferenceType
        x-nullable: true
      withClause:
        description: |-
          'with_clause' contains 'with clause' to be used in native sql backup
          command. This is only applicable for native sql backup. Here user can
          specify multiple backup options. Example: "WITH BUFFERCOUNT = 575,
          MAXTRANSFERSIZE = 2097152". If this is not specified, we use the value
          specified in magneto_sql_native_backup_with_clause gflag.
        type: string
        x-go-name: WithClause
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  SqlEnvJobParameters:
    description: |-
      Specifies job parameters applicable for all 'kSQL' Environment type
      Protection Sources in a Protection Job.
    type: object
    title: SQL Environment Job Parameters.
    properties:
      aagPreference:
        description: |-
          Specifies the preference for backing up databases that are part of an AAG.
          Only applicable if 'aagPreferenceFromSqlServer' is set to false or not
          given.
          kPrimaryReplicaOnly implies backups should always occur on the primary replica.
          kSecondaryReplicaOnly implies backups should always occur on the secondary replica.
          kPreferSecondaryReplica implies secondary replica is preferred for backups.
          kAnyReplica implies no preference of about whether backups are performed on the primary replica or on a secondary replica. If no secondary replica is available, then performing backups on the primary replica is acceptable.
        type: string
        enum:
        - kPrimaryReplicaOnly
        - kSecondaryReplicaOnly
        - kPreferSecondaryReplica
        - kAnyReplica
        x-go-name: AagPreference
        x-nullable: true
      aagPreferenceFromSqlServer:
        description: |-
          If true, AAG preferences are taken from the SQL server host. If this is
          set to false or not given, preferences can be overridden by
          aagBackupPreference.
        type: boolean
        x-go-name: AagPreferenceFromSqlServer
        x-nullable: true
      backupSystemDatabases:
        description: |-
          If true, system databases are backed up. If this is set to false,
          system databases are not backed up. If this field is not specified,
          default value is true.
        type: boolean
        x-go-name: BackupSystemDatabases
        x-nullable: true
      backupType:
        description: |-
          Specifies the type of the 'kFull' backup job. Specifies whether it is
          Volume level backup or individual files level backup.
          kSqlVSSVolume implies volume based VSS full backup.
          kSqlVSSFile implies file based VSS full backup.
        type: string
        enum:
        - kSqlVSSVolume
        - kSqlVSSFile
        - kSqlNative
        x-go-name: BackupType
        x-nullable: true
      backupVolumesOnly:
        description: |-
          If set to true, only the volumes associated with databases should be
          backed up. The user cannot select additional volumes at host level for
          backup.

          If set to false, all the volumes on the host machine will be backed up.
          In this case, the user can further select the exact set of volumes
          using host level params.

          Note that the volumes associated with selected databases will always be
          included in the backup.
        type: boolean
        x-go-name: BackupVolumesOnly
        x-nullable: true
      incrementalSnapshotUponRestart:
        description: |-
          If true, the backup of type kSqlVssVolume will be incremental
          after restart
        type: boolean
        x-go-name: IncrementalSnapshotUponRestart
        x-nullable: true
      isCopyOnlyFull:
        description: If true, the backup is a full backup with the copy-only option
          specified.
        type: boolean
        x-go-name: IsCopyOnlyFull
        x-nullable: true
      numStreams:
        description: Number of streams to be used in native sql backup.
        type: integer
        format: int32
        x-go-name: NumStreams
        x-nullable: true
      userDatabasePreference:
        description: |-
          Specifies the preference for backing up user databases on the host.
          kBackupAllDatabases implies to backup all databases.
          kBackupAllExceptAAGDatabases implies not to backup AAG databases.
          kBackupOnlyAAGDatabases implies to backup only AAG databases.
        type: string
        enum:
        - kBackupAllDatabases
        - kBackupAllExceptAAGDatabases
        - kBackupOnlyAAGDatabases
        x-go-name: UserDatabasePreference
        x-nullable: true
      withClause:
        description: With clause is used for setting clauese in native sql backup.
        type: string
        x-go-name: WithClause
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SqlProtectionSource:
    description: Specifies an Object representing one SQL Server instance or database.
    type: object
    title: SQL Protection Source.
    properties:
      IsAvailableForVssBackup:
        description: |-
          Specifies whether the database is marked as available for backup according
          to the SQL Server VSS writer. This may be false if either the state of
          the databases is not online, or if the VSS writer is not online.
          This field is set only for type 'kDatabase'.
        type: boolean
        x-nullable: true
      createdTimestamp:
        description: |-
          Specifies the time when the database was created. It is displayed in the
          timezone of the SQL server on which this database is running.
        type: string
        x-go-name: CreatedTimestamp
        x-nullable: true
      databaseName:
        description: |-
          Specifies the database name of the SQL Protection Source, if the type
          is database.
        type: string
        x-go-name: DatabaseName
        x-nullable: true
      dbAagEntityId:
        description: |-
          Specifies the AAG entity id if the database is part of an AAG.
          This field is set only for type 'kDatabase'.
        type: integer
        format: int64
        x-go-name: DbAagEntityId
        x-nullable: true
      dbAagName:
        description: |-
          Specifies the name of the AAG if the database is part of an AAG.
          This field is set only for type 'kDatabase'.
        type: string
        x-go-name: DbAagName
        x-nullable: true
      dbCompatibilityLevel:
        description: |-
          Specifies the versions of SQL server that the database is compatible
          with.
        type: integer
        format: int64
        x-go-name: DbCompatibilityLevel
        x-nullable: true
      dbFileGroups:
        description: |-
          Specifies the information about the set of file groups for this db on
          the host. This is only set if the type is kDatabase.
        type: array
        items:
          type: string
        x-go-name: DbFileGroups
        x-nullable: true
      dbFiles:
        description: |-
          Specifies the last known information about the set of database files
          on the host. This field is set only for type 'kDatabase'.
        type: array
        items:
          $ref: '#/definitions/DbFileInfo'
        x-go-name: DbFiles
        x-nullable: true
      dbOwnerUsername:
        description: Specifies the name of the database owner.
        type: string
        x-go-name: DbOwnerUsername
        x-nullable: true
      id:
        description: Specifies an id that identifies an SQL Object.
        x-nullable: true
        $ref: '#/definitions/SqlSourceId'
      name:
        description: Specifies the instance name of the SQL Protection Source
        type: string
        x-go-name: Name
        x-nullable: true
      ownerId:
        description: Specifies the id of the container VM for the SQL Protection Source.
        type: integer
        format: int64
        x-go-name: OwnerId
        x-nullable: true
      recoveryModel:
        description: |-
          Specifies the Recovery Model for the database in SQL environment.
          Only meaningful for the 'kDatabase' SQL Protection Source.
          Specifies the Recovery Model set for the Microsoft SQL Server.
          'kSimpleRecoveryModel' indicates the Simple SQL Recovery Model which
          does not utilize log backups.
          'kFullRecoveryModel' indicates the Full SQL Recovery Model which
          requires log backups and allows recovery to a single point in time.
          'kBulkLoggedRecoveryModel' indicates the Bulk Logged SQL Recovery Model
          which requires log backups and allows high-performance bulk copy operations.
        type: string
        enum:
        - kSimpleRecoveryModel
        - kFullRecoveryModel
        - kBulkLoggedRecoveryModel
        x-go-name: RecoveryModel
        x-nullable: true
      sqlServerDbState:
        description: |-
          The state of the database as returned by SQL Server.
          Indicates the state of the database. The values correspond to the 'state'
          field in the system table sys.databases. See https://goo.gl/P66XqM.
          'kOnline' indicates that database is in online state.
          'kRestoring' indicates that database is in restore state.
          'kRecovering' indicates that database is in recovery state.
          'kRecoveryPending' indicates that database recovery is in pending state.
          'kSuspect' indicates that primary filegroup is suspect and may be damaged.
          'kEmergency' indicates that manually forced emergency state.
          'kOffline' indicates that database is in offline state.
          'kCopying' indicates that database is in copying state.
          'kOfflineSecondary' indicates that secondary database is in offline state.
        type: string
        enum:
        - kOnline
        - kRestoring
        - kRecovering
        - kRecoveryPending
        - kSuspect
        - kEmergency
        - kOffline
        - kCopying
        - kOfflineSecondary
        x-go-name: SqlServerDbState
        x-nullable: true
      sqlServerInstanceVersion:
        description: The version of the SQL instance.
        x-nullable: true
        $ref: '#/definitions/SQLServerInstanceVersion'
      type:
        description: |-
          Specifies the type of the managed Object in a SQL Protection Source.
          Examples of SQL Objects include 'kInstance' and 'kDatabase'.
          'kInstance' indicates that SQL server instance is being protected.
          'kDatabase' indicates that SQL server database is being protected.
          'kAAG' indicates that SQL AAG (AlwaysOn Availability Group) is being
          protected.
          'kAAGRootContainer' indicates that SQL AAG's root container is being
          protected.
          'kRootContainer' indicates root container for SQL sources.
        type: string
        enum:
        - kInstance
        - kDatabase
        - kAAG
        - kAAGRootContainer
        - kRootContainer
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SqlRestoreParameters:
    description: Specifies the parameters specific the Application Server instance.
    type: object
    title: SQL Application Server Restore Parameters.
    properties:
      captureTailLogs:
        description: |-
          Set this to true if tail logs are to be captured before the restore
          operation. This is only applicable if we are restoring the SQL database
          to its hosting Protection Source, and the database is not being renamed.
        type: boolean
        x-go-name: CaptureTailLogs
        x-nullable: true
      isAutoSyncEnabled:
        description: |-
          This field determines if Auto Sync enabled/disabled for SQL Multi-stage
          Restore task
        type: boolean
        x-go-name: IsAutoSyncEnabled
        x-nullable: true
      keepCdc:
        description: |-
          This field prevents "change data capture" settings from being reomved
          when a database or log backup is restored on another server and database
          is recovered.
        type: boolean
        x-go-name: KeepCdc
        x-nullable: true
      keepOffline:
        description: |-
          Set this to true if we want to restore the database and do not want to
          bring it online after restore.

          This is only applicable if we are restoring the database back to
          its original location.
        type: boolean
        x-go-name: KeepOffline
        x-nullable: true
      newDatabaseName:
        description: Specifies optionally a new name for the restored database.
        type: string
        x-go-name: NewDatabaseName
        x-nullable: true
      newInstanceName:
        description: |-
          Specifies an instance name of the SQL Server that should be restored.
          SQL application has many instances. Each instance has a unique name.
          One of the instances that should be restored must be set in this field.
        type: string
        x-go-name: NewInstanceName
        x-nullable: true
      restoreTimeSecs:
        description: |-
          Specifies the time in the past to which the SQL database needs to be
          restored. This allows for granular recovery of SQL databases. If this is
          not set, the SQL database will be restored from the full/incremental
          snapshot.
        type: integer
        format: int64
        x-go-name: RestoreTimeSecs
        x-nullable: true
      targetDataFilesDirectory:
        description: |-
          Specifies the directory where to put the database data files.
          Missing directory will be automatically created. This field must be
          set if restoring to a different target host.
        type: string
        x-go-name: TargetDataFilesDirectory
        x-nullable: true
      targetLogFilesDirectory:
        description: |-
          Specifies the directory where to put the database log files. Missing
          directory will be automatically created. This field must be set if
          restoring to a different target host.
        type: string
        x-go-name: TargetLogFilesDirectory
        x-nullable: true
      targetSecondaryDataFilesDirectoryList:
        description: |-
          Specifies the secondary data filename pattern and corresponding
          directories of the DB. Secondary data files are optional and are user
          defined. The recommended file extension for secondary files is ".ndf".

          If this option is specified and the destination folders do not exist they
          will be automatically created.
        type: array
        items:
          $ref: '#/definitions/FilenamePatternToDirectory'
        x-go-name: TargetSecondaryDataFilesDirectoryList
        x-nullable: true
      withClause:
        description: |-
          WithClause allows you to specify clauses to be used in native sql restore
          task.
        type: string
        x-go-name: WithClause
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SqlSourceId:
    description: Specifies a unique id for a SQL Protection Source.
    type: object
    title: SQL Source Id.
    properties:
      createdDateMsecs:
        description: |-
          Specifies a unique identifier generated from the date the database is
          created or renamed.
          Cohesity uses this identifier in combination with the databaseId
          to uniquely identify a database.
        type: integer
        format: int64
        x-go-name: CreatedDateMsecs
        x-nullable: true
      databaseId:
        description: |-
          Specifies a unique id of the database but only for the life of the
          database. SQL Server may reuse database ids. Cohesity uses the
          createDateMsecs in combination with this databaseId to
          uniquely identify a database.
        type: integer
        format: int64
        x-go-name: DatabaseId
        x-nullable: true
      instanceId:
        description: |-
          Array of bytes that stores the SQL Server Instance id.

          Specifies unique id for the SQL Server instance.
          This id does not change during the life of the instance.
        type: array
        items:
          type: integer
          format: uint8
        x-go-name: InstanceId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SqlUpdateRestoreTaskOptions:
    type: object
    title: SQL specific options to update a SQL restore task.
    properties:
      enableAutoSync:
        description: Enable/Disable auto_sync for db migration
        type: boolean
        x-go-name: EnableAutoSync
        x-nullable: true
      multiStageRestoreAction:
        description: |-
          This field is set if we are performing an action on a multi-stage SQL
          restore.
        type: integer
        format: int32
        x-go-name: MultiStageRestoreAction
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  SslCertificateConfig:
    description: |-
      SslCertificateConfig represents the SSL certificate object exposed to the
      user.
    type: object
    title: SSL Certificate Configuration.
    properties:
      certificate:
        description: Certificate is a SSL certificate used by Iris HTTPS webserver.
        type: string
        x-go-name: Certificate
        x-nullable: true
      lastUpdateTimeMsecs:
        description: |-
          LastUpdateTimeMsecs is a time in milliseconds at which certificate was
          last updated.
        type: integer
        format: int64
        x-go-name: LastUpdateTimeMsecs
        x-nullable: true
      privateKey:
        description: PrivateKey is a matching private key of the above certificate.
        type: string
        x-go-name: PrivateKey
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SslVerification:
    description: |-
      Specifies information about SSL verification when registering certain
      sources.
    type: object
    title: SSL certification verification settings.
    properties:
      caCertificate:
        description: Contains the contents of CA cert/cert chain.
        type: string
        x-go-name: CaCertificate
        x-nullable: true
      isEnabled:
        description: Whether SSL verification should be performed.
        type: boolean
        x-go-name: IsEnabled
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  StatsGroup:
    description: |-
      StatsGroup describes the details of a stats group. A stats group is a basic
      group of usage stats, it is the usage of a tenant within a storage domain
      may also for a specific consumer type.
    type: object
    title: StatsGroup.
    properties:
      consumer:
        description: Specifies the consumer information of this group.
        x-nullable: true
        $ref: '#/definitions/Consumer'
      entityId:
        description: Specifies the entity id of the group.
        type: string
        x-go-name: EntityId
        x-nullable: true
      id:
        description: Specifies the id of the group.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the group.
        type: string
        x-go-name: Name
        x-nullable: true
      tenantId:
        description: Specifies the id of the organization (tenant) with respect to
          this group.
        type: string
        x-go-name: TenantId
        x-nullable: true
      tenantName:
        description: |-
          Specifies the name of the organization (tenant) with respect to this
          group.
        type: string
        x-go-name: TenantName
        x-nullable: true
      viewBoxId:
        description: |-
          Specifies the id of the view box (storage domain) with respect to this
          group.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewBoxName:
        description: |-
          Specifies the name of the view box (storage domain) with respect to this
          group.
        type: string
        x-go-name: ViewBoxName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  StopRemoteVaultSearchJobParameters:
    description: Request to stop a remote Vault search Job.
    type: object
    title: Search Job Stop Request.
    properties:
      searchJobUid:
        description: Specifies the unique id of the Remote Vault search job in progress.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  StorageDomainStats:
    type: object
    title: StorageDomainStats is the stats of a single view box.
    properties:
      cloudSpillVaultId:
        description: Specifies the cloud spill vault id of the view box (storage domain).
        type: integer
        format: int64
        x-go-name: CloudSpillVaultId
        x-nullable: true
      groupList:
        description: Specifies a list of groups associated to this view box (storage
          domain).
        type: array
        items:
          $ref: '#/definitions/StatsGroup'
        x-go-name: GroupList
        x-nullable: true
      id:
        description: Specifies the id of the view box (storage domain).
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the view box (storage domain).
        type: string
        x-go-name: Name
        x-nullable: true
      quotaHardLimitBytes:
        description: |-
          Specifies the hard limit of physical quota of the view box
          (storage domain).
        type: integer
        format: int64
        x-go-name: QuotaHardLimitBytes
        x-nullable: true
      schemaInfoList:
        description: Specifies a list of schemaInfos of the view box (storage domain).
        type: array
        items:
          $ref: '#/definitions/UsageSchemaInfo'
        x-go-name: SchemaInfoList
        x-nullable: true
      stats:
        description: Specifies details of statistics of the view box (storage domain).
        x-nullable: true
        $ref: '#/definitions/DataUsageStats'
    x-go-package: cohesity/iris/server/data/public
  StorageEfficiencyTile:
    description: |-
      StorageEfficiencyTile gives tile information for the storage saved
      because of compression and dedupe done on the cluster.
    type: object
    title: Storage Efficiency Tile.
    properties:
      dataInBytes:
        description: |-
          Specifies the size of data brought into the cluster. This is the usage
          before data reduction if we ignore the zeroes and effects of cloning.
        type: integer
        format: int64
        x-go-name: DataInBytes
        x-nullable: true
      dataInBytesSamples:
        description: |-
          Specifies the samples taken for Data brought into the cluster in bytes
          in ascending order of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: DataInBytesSamples
        x-nullable: true
      dataInDedupedBytes:
        description: |-
          Specifies the size of data after compression and or dedupe operations
          just before the data is replicated to other nodes as per RF or
          Erasure Coding policy.
        type: integer
        format: int64
        x-go-name: DataInDedupedBytes
        x-nullable: true
      dataInDedupedBytesSamples:
        description: |-
          Specifies the samples taken for morphed data in bytes in ascending order
          of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: DataInDedupedBytesSamples
        x-nullable: true
      dedupeRatio:
        description: |-
          Specifies the current dedupe ratio on the cluster. It is the ratio of
          DataInBytes to DataInDedupedBytes.
        type: number
        format: double
        x-go-name: DedupeRatio
        x-nullable: true
      dedupeRatioSamples:
        description: Specifies the samples for data reduction ratio in ascending order
          of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: DedupeRatioSamples
        x-nullable: true
      durationDays:
        description: |-
          Specifies the duration in days in which the samples were taken.
          For this tile, it is 7 days.
        type: integer
        format: int32
        x-go-name: DurationDays
        x-nullable: true
      intervalSeconds:
        description: |-
          Specifies the interval between the samples in seconds.
          For this tile, it is 1 day which is 86400 seconds.
        type: integer
        format: int32
        x-go-name: IntervalSeconds
        x-nullable: true
      logicalUsedBytes:
        description: Specifies the size of logical data currently represented on the
          cluster.
        type: integer
        format: int64
        x-go-name: LogicalUsedBytes
        x-nullable: true
      logicalUsedBytesSamples:
        description: |-
          Specifies the samples taken for logical data represented in bytes in
          ascending order of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: LogicalUsedBytesSamples
        x-nullable: true
      physicalUsedBytes:
        description: Specifies the size of physical data currently consumed on the
          cluster.
        type: integer
        format: int64
        x-go-name: PhysicalUsedBytes
        x-nullable: true
      physicalUsedBytesSamples:
        description: |-
          Specifies the samples taken for physical data consumed in bytes in
          ascending order of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: PhysicalUsedBytesSamples
        x-nullable: true
      storageReductionRatio:
        description: |-
          Specifies the current storage reduction ratio on the cluster.
          It is the ratio of LogicalUsedBytes to PhysicalUsedBytes.
        type: number
        format: double
        x-go-name: StorageReductionRatio
        x-nullable: true
      storageReductionSamples:
        description: |-
          Specifies the samples for storage reduction ratio in ascending order of
          time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: StorageReductionSamples
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  StoragePolicy:
    description: Specifies the storage options applied to a Storage Domain (View Box).
    type: object
    title: Storage Policy.
    properties:
      appMarkerDetection:
        description: |-
          Specifies Whether to support app marker detection. When this is set to
          true, app markers (like commvault markers) will be removed from data and
          put in separate chunks. This way deduplication is improved as it is done
          on data that has no app markers.
        type: boolean
        x-go-name: AppMarkerDetection
        x-nullable: true
      cloudSpillVaultId:
        description: |-
          Specifies the vault id assigned for an external Storage
          Target to facilitate cloud spill.
        type: integer
        format: int64
        x-go-name: CloudSpillVaultId
        x-nullable: true
      compressionPolicy:
        description: |-
          Specifies the compression setting to be applied to a Storage Domain
          (View Box).
          'kCompressionNone' indicates that data is not compressed.
          'kCompressionLow' indicates that data is compressed using LZ4 or Snappy.
          'kCompressionHigh' indicates that data is compressed in Gzip.
        type: string
        enum:
        - kCompressionNone
        - kCompressionLow
        - kCompressionHigh
        x-go-name: Compression
        x-nullable: true
      deduplicateCompressDelaySecs:
        description: |-
          Specifies the time in seconds when deduplication and compression
          of data on the Storage Domain (View Box) starts.
          If set to 0, deduplication and compression is done inline
          (as the data is being written).
          Otherwise, post-process deduplication and compression is done after the
          specified delay.
        type: integer
        format: int32
        x-go-name: DeduplicateCompressDelaySecs
        x-nullable: true
      deduplicationEnabled:
        description: |-
          Specifies if deduplication is enabled for the Storage Domain (View Box).
          If deduplication is enabled, the Cohesity Cluster eliminates
          duplicate blocks of repeating data stored on the Cluster
          thus reducing the amount of storage space needed to store data.
        type: boolean
        x-go-name: DeduplicationEnabled
        x-nullable: true
      encryptionPolicy:
        description: |-
          Specifies the encryption setting for the Storage Domain (View Box).
          'kEncryptionNone' indicates the data is not encrypted.
          'kEncryptionStrong' indicates the data is encrypted.
        type: string
        enum:
        - kEncryptionNone
        - kEncryptionStrong
        - kEncryptionWeak
        x-go-name: EncryptionLevel
        x-nullable: true
      erasureCodingInfo:
        description: |-
          Specifies information about erasure coding algorithm if erasure coding is
          enabled.
        x-nullable: true
        $ref: '#/definitions/ErasureCodingInfo'
      inlineCompress:
        description: |-
          Specifies if compression should occur inline (as the data is being
          written). This field is only relevant if compression is enabled. If
          deduplication is set to inline, Cohesity recommends setting compression to
          inline.
        type: boolean
        x-go-name: InlineCompress
        x-nullable: true
      inlineDeduplicate:
        description: |-
          Specifies if deduplication should occur inline (as the data is being
          written). This field is only relevant if deduplication is enabled.
        type: boolean
        x-go-name: InlineDeduplicate
        x-nullable: true
      numFailuresTolerated:
        description: |-
          Number of disk failures to tolerate. This is an optional field. Default value
          is 1 for cluster having 3 or more nodes. If erasure coding is not enabled,
          then this specifies the replication factor for the Storage Domain (View Box).
          For RF=2, number of failures to tolerate should be specified as 1. If
          erasure coding is enabled, then this value will be same as number of coded
          stripes.
        type: integer
        format: int32
        x-go-name: NumFailuresTolerated
        x-nullable: true
      numNodeFailuresTolerated:
        description: |-
          Number of node failures to tolerate. If NumNodeFailuresTolerated is set to
          2, then we would tolerate up to two node failures. If the following is not
          set, then the number of node failures tolerated would be same as
          replication factor - 1 for replicated chunk files or number of coded
          stripes for erasure coding chunk files.
        type: integer
        format: int32
        x-go-name: NumNodeFailuresTolerated
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  StoragePolicyOverride:
    description: |-
      Specifies if inline deduplication and compression settings inherited from
      Storage Domain (View Box) should be disabled for this View.
    type: object
    title: Storage Policy Override.
    properties:
      disableInlineDedupAndCompression:
        description: |-
          If false, the inline deduplication and compression settings inherited
          from the Storage Domain (View Box) apply to this View.
          If true, both inline deduplication and compression are disabled for this
          View. This can only be set to true if inline deduplication is set for
          the Storage Domain (View Box).
        type: boolean
        x-go-name: DisableInlineDedupAndCompression
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  StorageSnapshotProviderParams:
    type: object
    properties:
      connectorParams:
        description: Connector params to access the storage snapshot provider.
        x-nullable: true
        $ref: '#/definitions/ConnectorParams'
      entity:
        description: The entity representing the storage snapshot provider.
        x-nullable: true
        $ref: '#/definitions/EntityProto'
    x-go-package: magneto/base/magneto.pb
  StorageStats:
    description: Specifies the storage statistics of the cluster.
    type: object
    title: Storage Statistics
    properties:
      dataProtectionLogicalUsageBytes:
        description: Specifies the logical size of protected objects in bytes.
        type: integer
        format: int64
        x-go-name: DataProtectionLogicalUsageBytes
        x-nullable: true
      dataProtectionPhysicalUsageBytes:
        description: Specifies the physical size of protected objects in bytes.
        type: integer
        format: int64
        x-go-name: DataProtectionPhysicalUsageBytes
        x-nullable: true
      fileServicesLogicalUsageBytes:
        description: Specifies the logical size consumed by file services in bytes.
        type: integer
        format: int64
        x-go-name: FileServicesLogicalUsageBytes
        x-nullable: true
      fileServicesPhysicalUsageBytes:
        description: Specifies the physical size consumed by file services in bytes.
        type: integer
        format: int64
        x-go-name: FileServicesPhysicalUsageBytes
        x-nullable: true
      localAvailableBytes:
        description: Specifies the local storage currently available on the cluster
          in bytes.
        type: integer
        format: int64
        x-go-name: LocalAvailableBytes
        x-nullable: true
      localUsageBytes:
        description: Specifies the local storage currently in use on the cluster in
          bytes.
        type: integer
        format: int64
        x-go-name: LocalUsageBytes
        x-nullable: true
      totalCapacityBytes:
        description: Specifies the total capacity of the cluster in bytes.
        type: integer
        format: int64
        x-go-name: TotalCapacityBytes
        x-nullable: true
  StubbingPolicyProto:
    description: |-
      Stubbing jobs do not use protection policies. Instead, schedule and
      retention policy will be embedded in the BackupJobProto.
    type: object
    title: Message to capture scheduling and retention policies for stubbing jobs.
    properties:
      retentionPolicy:
        description: Retention policy for snapshots taken after each stubbing job
          run.
        x-nullable: true
        $ref: '#/definitions/RetentionPolicyProto'
      schedulingPolicy:
        description: Schedule for running stubbing job.
        x-nullable: true
        $ref: '#/definitions/SchedulingPolicyProto'
    x-go-package: magneto/base/magneto.pb
  Subnet:
    description: |-
      Defines a Subnet (Subnetwork).
      The netmask can be specified by setting netmaskBits or netmaskIp4.
      The netmask can only be set using netmaskIp4 if the IP address
      is an IPv4 address.
    type: object
    title: Subnet
    properties:
      component:
        description: Component that has reserved the subnet.
        type: string
        x-go-name: Component
        x-nullable: true
      description:
        description: Description of the subnet.
        type: string
        x-go-name: Description
        x-nullable: true
      id:
        description: ID of the subnet.
        type: integer
        format: int32
        x-go-name: Id
        x-nullable: true
      ip:
        description: Specifies either an IPv6 address or an IPv4 address.
        type: string
        x-go-name: Ip
        x-nullable: true
      netmaskBits:
        description: Specifies the netmask using bits.
        type: integer
        format: int32
        x-go-name: NetmaskBits
        x-nullable: true
      netmaskIp4:
        description: |-
          Specifies the netmask using an IP4 address.
          The netmask can only be set using netmaskIp4 if the IP address
          is an IPv4 address.
        type: string
        x-go-name: NetmaskIp4
        x-nullable: true
      nfsAccess:
        description: |-
          Specifies whether clients from this subnet can mount using NFS protocol.
          Protocol access level.
          'kDisabled' indicates Protocol access level 'Disabled'
          'kReadOnly' indicates Protocol access level 'ReadOnly'
          'kReadWrite' indicates Protocol access level 'ReadWrite'
        type: string
        enum:
        - kDisabled
        - kReadOnly
        - kReadWrite
        x-go-name: NfsAccess
        x-nullable: true
      nfsAllSquash:
        description: |-
          Specifies whether all clients from this subnet can map view with
          view_all_squash_uid/view_all_squash_gid configured in the view.
        type: boolean
        x-go-name: NfsAllSquash
        x-nullable: true
      nfsRootSquash:
        description: Specifies whether clients from this subnet can mount as root
          on NFS.
        type: boolean
        x-go-name: NfsRootSquash
        x-nullable: true
      smbAccess:
        description: |-
          Specifies whether clients from this subnet can mount using SMB protocol.
          Protocol access level.
          'kDisabled' indicates Protocol access level 'Disabled'
          'kReadOnly' indicates Protocol access level 'ReadOnly'
          'kReadWrite' indicates Protocol access level 'ReadWrite'
        type: string
        enum:
        - kDisabled
        - kReadOnly
        - kReadWrite
        x-go-name: SmbAccess
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SupportedConfig:
    description: |-
      Lists the supported Erasure Coding options for the number of
      Nodes in the Cohesity Cluster. In addition, the minimum number
      of Nodes supported for this Cluster type is defined.
    type: object
    title: Supported Erasure Coding and Node Configurations.
    properties:
      minNodesAllowed:
        description: |-
          Specifies the minimum number of Nodes supported for this Cluster type.
          For example, a Cohesity Cluster hosted directly on hardware must have at
          least 3 Nodes.
        type: integer
        format: int32
        x-go-name: MinNodesAllowed
        x-nullable: true
      supportedErasureCoding:
        description: |-
          Array of Supported Erasure Coding Options.

          List the supported Erasure Coding options for the current number of
          Nodes (nodeCount) in this Cluster.
          Each string in the array is in the following format:
          "NumDataStripes:NumCodedStripes"
          For example if there are 3 nodes in the Cluster, the following
          Erasure Coding mode is returned: 2:1.
          See the Cohesity Dashboard help documentation for details.
        type: array
        items:
          type: string
        x-go-name: SupportedErasureCoding
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SupportedPattern:
    description: |-
      Specifies details of the pattern available for search available in an
      application such as Pattern Finder within Analytics Work Bench.
    type: object
    properties:
      isSystemDefined:
        description: Specifies whether the pattern has been defined by the system
          or the user.
        type: boolean
        x-go-name: IsSystemDefined
        x-nullable: true
      name:
        description: Specifies the name of the Pattern.
        type: string
        x-go-name: Name
        x-nullable: true
      pattern:
        description: Specifies the value of the pattern(Regex).
        type: string
        x-go-name: Pattern
        x-nullable: true
      patternType:
        description: |-
          Specifies the Pattern type.
          'REGULAR' indicates that the pattern contains a regular expression.
          'TEMPLATE' indicates that the pattern has a pre defined input pattern such as
          date of the form 'DD-MM-YYYY'.
        type: string
        enum:
        - REGULAR
        - TEMPLATE
        x-go-name: PatternType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  SwiftParams:
    description: Specifies the parameters of Swift configuration.
    type: object
    title: Swift Parameters.
    properties:
      keystoneId:
        description: Specifies the associated Keystone configuration id.
        type: integer
        format: int64
        x-go-name: KeystoneId
        x-nullable: true
      operatorRoles:
        description: Specifies a list of operator roles.
        type: array
        items:
          type: string
        x-go-name: OperatorRoles
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TagAttribute:
    description: Specifies a VMware tag.
    type: object
    title: VMware Tag Attributes.
    properties:
      gcpTagType:
        description: |-
          Specifies the tag attribute type of GCP.
          Going forward, there will be an additional TagTypes for AWS as well.
          Specifies the type of the tag GCP entity refers to.
          'kNetworkTag' indicates a network tag present on instances.
          'kLabel' indicates a label (key-value pair) present on instances.
          'kCustomMetadata' indicates custom Metadata (key-value pair) present on
          instances.
        type: string
        enum:
        - kNetworkTag
        - kLabel
        - kCustomMetadata
        x-go-name: GcpTagType
        x-nullable: true
      id:
        description: Specifies the Coheisty id of the VM tag.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the VMware name of the VM tag.
        type: string
        x-go-name: Name
        x-nullable: true
      uuid:
        description: |-
          Specifies the VMware Universally Unique Identifier (UUID) of the
          VM tag.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TagsOperationParameters:
    type: object
    title: TagsOperationParameters specifies tagging details.
    properties:
      clusterId:
        description: ClusterId is the Id of the cluster used for constructing JobUid.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: |-
          ClusterIncarnationId is the incarnation Id of the cluster used for
          constructing JobUid.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      documentIds:
        description: DocumentIds are list of documents to be tagged.
        type: array
        items:
          type: string
        x-go-name: DocumentIds
        x-nullable: true
      entityId:
        description: EntityId is the Id of the entity where the file resides.
        type: integer
        format: int64
        x-go-name: EntityId
        x-nullable: true
      jobId:
        description: JobId is the Id of the job that took the snapshot.
        type: integer
        format: int64
        x-go-name: JobId
        x-nullable: true
      jobInstanceIds:
        description: JobInstanceIds to tag corresponding snapshots.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: JobInstanceIds
        x-nullable: true
      tags:
        description: Tags are list of tags that will be operated on to corresponding
          objects.
        type: array
        items:
          type: string
        x-go-name: Tags
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TagsOperationResult:
    type: object
    title: TagsOperationResult specifies the result of tagging operation.
    properties:
      docErrors:
        description: DocErrors are document errors incurred in yoda service while
          tagging.
        type: array
        items:
          $ref: '#/definitions/DocError'
        x-go-name: DocErrors
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TapeMediaInformation:
    description: Provides information about a single tape media in a QStar Archive
      Vault.
    type: object
    title: Tape Media Information.
    properties:
      barcode:
        description: Specifies a unique identifier for the media.
        type: string
        x-go-name: Barcode
        x-nullable: true
      location:
        description: |-
          Specifies the location of the offline media as recorded by the
          backup administrator using media management software.
        type: string
        x-go-name: Location
        x-nullable: true
      online:
        description: |-
          Specifies a flag that indicates if the media is online or offline.
          Offline media must be manually loaded into the media library
          before a recovery can occur.
        type: boolean
        x-go-name: Online
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Task:
    description: Specifies one task.
    type: object
    title: Task.
    properties:
      attributes:
        description: The latest attributes reported for this task.
        type: array
        items:
          $ref: '#/definitions/TaskAttribute'
        x-go-name: Attributes
        x-nullable: true
      endTimeSeconds:
        description: Specifies the end time of the task.
        type: integer
        format: int64
        x-go-name: EndTimeSeconds
        x-nullable: true
      errorMessage:
        description: Specifies an optional error message for this task.
        type: string
        x-go-name: ErrorMessage
        x-nullable: true
      events:
        description: Specifies the events reported for this task.
        type: array
        items:
          $ref: '#/definitions/TaskEvent'
        x-go-name: Events
        x-nullable: true
      expectedEndTimeSeconds:
        description: Specifies the estimated end time of the task.
        type: integer
        format: int64
        x-go-name: ExpectedEndTimeSeconds
        x-nullable: true
      expectedSecondsRemaining:
        description: Specifies the expected remaining time for this task in seconds.
        type: integer
        format: int64
        x-go-name: ExpectedSecondsRemaining
        x-nullable: true
      expectedTotalWorkCount:
        description: |-
          The expected raw count of the total work remaining. This is the highest
          work count value reported by the client. This field can be set to let
          pulse compute percentFinished by looking at the currently reported
          remainingWorkCount and the expectedTotalWorkCount.
        type: integer
        format: int64
        x-go-name: ExpectedTotalWorkCount
        x-nullable: true
      lastUpdateTimeSeconds:
        description: Specifies the timestamp when the last progress was reported.
        type: integer
        format: int64
        x-go-name: LastUpdateTimeSeconds
        x-nullable: true
      percentFinished:
        description: Specifies the reported progress on the task.
        type: number
        format: float
        x-go-name: PercentFinished
        x-nullable: true
      startTimeSeconds:
        description: Specifies the start time of the task.
        type: integer
        format: int64
        x-go-name: StartTimeSeconds
        x-nullable: true
      status:
        description: |-
          Specifies the status of the task being queried.
          'kActive' indicates that the task is still active.
          'kFinished' indicates that the task has finished without any errors.
          'kFinishedWithError' indicates that the task has finished, but that there
          was an errror of some kind.
          'kCancelled' indicates that the task was cancelled.
          'kFinishedGarbageCollected' indicates that the task was garbage collected
          due to its subtasks not finishing within the allotted time.
        type: string
        enum:
        - kActive
        - kFinished
        - kFinishedWithError
        - kCancelled
        - kFinishedGarbageCollected
        x-go-name: Status
        x-nullable: true
      subTasks:
        description: Specifies a list of subtasks belonging to this task.
        type: array
        items:
          description: Specifies one task.
          type: object
          title: Task. (Task)
        x-go-name: SubTasks
        x-nullable: true
      taskPath:
        description: Specifes the path of this task.
        type: string
        x-go-name: TaskPath
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TaskAttribute:
    description: This contains a string name, a value, and a type for the value.
    type: object
    title: Task Attribute.
    properties:
      name:
        description: Specifies the name of this Task Attribute.
        type: string
        x-go-name: Name
        x-nullable: true
      value:
        description: Specifies the value of this Task Attribute.
        type: string
        x-go-name: Value
        x-nullable: true
      valueType:
        description: |-
          Specifies the type of the value contained here. All values are returned as
          pointers to strings, but they can be casted to the type indicated here.
          'kInt64' indicates that the value stored in the Task Attribute is
          a 64-bit integer.
          'kDouble' indicates that the value stored in the Task Attribute is
          a 64 bit floating point number.
          'kString' indicates that the value stored in the Task Attribute is
          a string.
          'kBytes' indicates that the value stored in the Task Attribute is
          an array of bytes.
        type: string
        enum:
        - kInt64
        - kDouble
        - kString
        - kBytes
        x-go-name: ValueType
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TaskEvent:
    description: Specifies events that clients can attach to a task.
    type: object
    title: Task Event.
    properties:
      eventMessage:
        description: Specifies the message associated with an event.
        type: string
        x-go-name: EventMessage
        x-nullable: true
      percentFinished:
        description: Specifies the completion percentage of the task attached to this
          event.
        type: number
        format: float
        x-go-name: PercentFinished
        x-nullable: true
      remainingWorkCount:
        description: Specifies the amount of work remaining for the task attached
          to this event.
        type: integer
        format: int64
        x-go-name: RemainingWorkCount
        x-nullable: true
      timestampSeconds:
        description: Specifies the Unix timestamp that the event occurred.
        type: integer
        format: int64
        x-go-name: TimestampSeconds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TaskNotification:
    description: Structure that captures Task Notifications for a user.
    type: object
    title: Task Notification.
    properties:
      backupTask:
        description: The notifications details of Backup Task.
        x-nullable: true
        $ref: '#/definitions/BackupTaskInfo'
      bulkInstallAppTask:
        description: The notifications details of BulkInstall Task.
        x-nullable: true
        $ref: '#/definitions/BulkInstallAppTaskInfo'
      cloneTask:
        description: The notification details of Clone Task.
        x-nullable: true
        $ref: '#/definitions/CloneTaskInfo'
      createdTimeSecs:
        description: Timestamp at which the notification was created.
        type: integer
        format: int64
        x-go-name: CreatedTimeSecs
        x-nullable: true
      description:
        description: |-
          Description holds the actual notification text generated for
          the event.
        type: string
        x-go-name: Description
        x-nullable: true
      dismissed:
        description: |-
          Dismissed keeps track of whether a notification has been seen
          or not. User may choose to dismiss individual event or all
          notifications at once. Nil or 0 value represents false.
        type: boolean
        x-go-name: Dismissed
        x-nullable: true
      dismissedTimeSecs:
        description: Timestamp at which user dismissed this notification event.
        type: integer
        format: int64
        x-go-name: DismissedTimeSecs
        x-nullable: true
      fieldMessageTask:
        description: The notification details of Field Message Task.
        x-nullable: true
        $ref: '#/definitions/BasicTaskInfo'
      id:
        description: |-
          id identifies a user notification event uniquely.
          This can also be used to dismiss individual notifications.
        type: string
        x-go-name: Id
        x-nullable: true
      recoveryTask:
        description: The notification details of Recovery Task.
        x-nullable: true
        $ref: '#/definitions/RecoveryTaskInfo'
      status:
        description: |-
          Status of the task.
          Status of the task.
          'kSuccess' indicates that task completed successfully.
          'kError' indicates that task encountered errors.
        type: string
        enum:
        - kSuccess
        - kError
        x-go-name: Status
        x-nullable: true
      taskType:
        description: |-
          Task type denotes which type of task this notification is for.
          This param is used to reflect the taskType.
          'Restore' notification type is generated upon completion of Restore tasks.
          'Clone' notification type is generated upon completion of Clone tasks.
          'BackupNow' notification type is generated upon completion of Backup tasks.
          'FieldMessage' notification type is generated when field message from
          Cohesity support is created.
          'bulkInstallApp' notification type is generated from bulk install app
        type: string
        enum:
        - restore
        - clone
        - backupNow
        - fieldMessage
        - bulkInstallApp
        x-go-name: TaskType
        x-nullable: true
      visited:
        description: Visited keeps track of whether a notification has been seen or
          not.
        type: boolean
        x-go-name: Visited
        x-nullable: true
      visitedTimeSecs:
        description: Timestamp at which user visited this notification event.
        type: integer
        format: int64
        x-go-name: VisitedTimeSecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Tenant:
    description: Specifies details about a tenant.
    type: object
    title: Tenant Details.
    properties:
      activeDirectories:
        description: Specifies the active directories this tenant is associated to.
        type: array
        items:
          $ref: '#/definitions/ActiveDirectoryEntry'
        x-go-name: ActiveDirectories
        x-nullable: true
      bifrostEnabled:
        description: Specifies whether bifrost (Ambassador proxy) is enabled for tenant.
        type: boolean
        x-go-name: BifrostEnabled
        x-nullable: true
      clusterHostname:
        description: |-
          The hostname for Cohesity cluster as seen by tenants and as is routable
          from the tenant's network. Tenant's VLAN's hostname, if available can be
          used instead but it is mandatory to provide this value if there's no VLAN
          hostname to use. Also, when set, this field would take precedence over
          VLAN hostname.
        type: string
        x-go-name: ClusterHostname
        x-nullable: true
      clusterIps:
        description: |-
          Set of IPs as seen from the tenant's network for the Cohesity cluster.
          Only one from 'ClusterHostname' and 'ClusterIps' is needed.
        type: array
        items:
          type: string
        x-go-name: ClusterIps
        x-nullable: true
      createdTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the tenant account
          was created on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      deleted:
        description: Specifies if the Tenant is deleted.
        type: boolean
        x-go-name: Deleted
        x-nullable: true
      deletedTimeMsecs:
        description: Specifies the timestamp at which the tenant was deleted.
        type: integer
        format: int64
        x-go-name: DeletedTimeMsecs
        x-nullable: true
      deletionFinished:
        description: Specifies if the object collection is complete for the tenant.
        type: boolean
        x-go-name: DeletionFinished
        x-nullable: true
      deletionInfoVec:
        description: Specifies the current deletion state of object categories.
        type: array
        items:
          $ref: '#/definitions/TenantDeletionInfo'
        x-go-name: DeletionInfo
        x-nullable: true
      description:
        description: Specifies the description of this tenant.
        type: string
        x-go-name: Description
        x-nullable: true
      entityIds:
        description: Specifies the EntityIds this tenant is associated to.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: EntityIds
        x-nullable: true
      lastUpdatedTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the tenant account was last
          modified on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: LastUpdatedTimeMsecs
        x-nullable: true
      ldapProviders:
        description: Specifies the ldap providers this tenant is associated to.
        type: array
        items:
          $ref: '#/definitions/LdapProviderResponse'
        x-go-name: LdapProviders
        x-nullable: true
      name:
        description: Specifies the name of the tenant.
        type: string
        x-go-name: Name
        x-nullable: true
      orgSuffix:
        description: |-
          Specifies the organization suffix needed to construct tenant id. Tenant id
          is not completely auto generated rather chosen by tenant/SP admin as we
          needed same tenant id on multiple clusters to support replication across
          clusters, etc.
        type: string
        x-go-name: OrgSuffix
        x-nullable: true
      parentTenantId:
        description: Specifies the parent tenant of this tenant if available.
        type: string
        x-go-name: ParentTenantId
        x-nullable: true
      policyIds:
        description: Specifies the PolicyIds this tenant is associated to.
        type: array
        items:
          type: string
        x-go-name: PolicyIds
        x-nullable: true
      protectionJobs:
        description: Specifies the ProtectionJobs this tenant is associated to.
        type: array
        items:
          $ref: '#/definitions/BackupJobProto'
        x-go-name: ProtectionJobs
        x-nullable: true
      subscribeToAlertEmails:
        description: Service provider can optionally unsubscribe from the Tenant Alert
          Emails.
        type: boolean
        x-go-name: SubscribeToAlertEmails
        x-nullable: true
      swiftConfig:
        description: Specifies the Swift configuration of this tenant.
        x-nullable: true
        $ref: '#/definitions/SwiftParams'
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewBoxIds:
        description: Specifies the ViewBoxIds this tenant is associated to.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIds
        x-nullable: true
      views:
        description: Specifies the Views this tenant is associated to.
        type: array
        items:
          $ref: '#/definitions/View'
        x-go-name: Views
        x-nullable: true
      vlanIfaceNames:
        description: |-
          Specifies the VlanIfaceNames this tenant is associated to,
          in the format of bond1.200.
        type: array
        items:
          type: string
        x-go-name: VlanIfaceNames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantActiveDirectoryUpdate:
    description: Specifies Active Directory update details response about a tenant.
    type: object
    title: Tenant Active Directory Update.
    properties:
      activeDirectoryDomains:
        description: Specifies the ActiveDirectoryDomain vec for respective tenant.
        type: array
        items:
          type: string
        x-go-name: ActiveDirectoryDomains
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantActiveDirectoryUpdateParameters:
    description: Specifies Active Directory update details about a tenant.
    type: object
    title: Tenant Active Directory Update Details.
    properties:
      activeDirectoryDomains:
        description: Specifies the ActiveDirectoryDomain vec for respective tenant.
        type: array
        items:
          type: string
        x-go-name: ActiveDirectoryDomains
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantConfig:
    description: Specifies struct with basic tenant specific configuration.
    type: object
    title: Tenant Config.
    properties:
      name:
        description: Specifies name of the tenant.
        type: string
        x-go-name: Name
        x-nullable: true
      restricted:
        description: |-
          Whether the user is a restricted user. A restricted user can only view
          the objects he has permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with the user such as
          such as 'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for this user.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantCreateParameters:
    description: Specifies the settings used to create/add a new tenant.
    type: object
    title: Tenant Create Request.
    properties:
      bifrostEnabled:
        description: Specifies whether bifrost (Ambassador proxy) is enabled for tenant.
        type: boolean
        x-go-name: BifrostEnabled
        x-nullable: true
      clusterHostname:
        description: |-
          The hostname for Cohesity cluster as seen by tenants and as is routable
          from the tenant's network. Tenant's VLAN's hostname, if available can be
          used instead but it is mandatory to provide this value if there's no VLAN
          hostname to use. Also, when set, this field would take precedence over
          VLAN hostname.
        type: string
        x-go-name: ClusterHostname
        x-nullable: true
      clusterIps:
        description: |-
          Set of IPs as seen from the tenant's network for the Cohesity cluster.
          Only one from 'ClusterHostname' and 'ClusterIps' is needed.
        type: array
        items:
          type: string
        x-go-name: ClusterIps
        x-nullable: true
      description:
        description: Specifies the description of this tenant.
        type: string
        x-go-name: Description
        x-nullable: true
      name:
        description: Specifies the name of the tenant.
        type: string
        x-go-name: Name
        x-nullable: true
      orgSuffix:
        description: |-
          Specifies the organization suffix needed to construct tenant id. Tenant id
          is not completely auto generated rather chosen by tenant/SP admin as we
          needed same tenant id on multiple clusters to support replication across
          clusters, etc.
        type: string
        x-go-name: OrgSuffix
        x-nullable: true
      parentTenantId:
        description: Specifies the parent tenant of this tenant if available.
        type: string
        x-go-name: ParentTenantId
        x-nullable: true
      subscribeToAlertEmails:
        description: Service provider can optionally unsubscribe from the Tenant Alert
          Emails.
        type: boolean
        x-go-name: SubscribeToAlertEmails
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantDeletionInfo:
    description: |-
      TenantDeletionInfo captures the individual deletion state of a category of
      objects marked tagged with a tenant_id (which has been marked for deletion).
    type: object
    properties:
      category:
        description: Specifies the category of objects whose deletion state is being
          captured.
        type: integer
        format: int32
        x-go-name: Category
        x-nullable: true
      finishedAtTimeMsecs:
        description: Specifies the time when the process finished.
        type: integer
        format: int64
        x-go-name: FinishedAtTimeMsecs
        x-nullable: true
      processedAtNode:
        description: |-
          Specifies the node ip where the process ran. Typically this would be
          Iris Master.
        type: string
        x-go-name: ProcessedAtNode
        x-nullable: true
      retryCount:
        description: Specifies the number of times this task has been retried.
        type: integer
        format: int64
        x-go-name: RetryCount
        x-nullable: true
      startedAtTimeMsecs:
        description: Specifies the time when the process started.
        type: integer
        format: int64
        x-go-name: StartedAtTimeMsecs
        x-nullable: true
      state:
        description: Specifies the deletion completion state of the object category.
        type: integer
        format: int32
        x-go-name: State
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantEntityUpdate:
    description: Specifies entity update details response about a tenant.
    type: object
    title: Tenant Entity Update.
    properties:
      entityIds:
        description: Specifies the EntityIds for respective tenant.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: EntityIds
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantEntityUpdateParameters:
    description: Specifies entity update details about a tenant.
    type: object
    title: Tenant Entity Update Details.
    properties:
      entityIds:
        description: Specifies the EntityIds for respective tenant.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: EntityIds
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantGroupUpdateParameters:
    description: Specifies group update details about a tenant.
    type: object
    title: Tenant Group Update Details.
    properties:
      sids:
        description: Specifies the array of Sid of the groups.
        type: array
        items:
          type: string
        x-go-name: Sids
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantIdData:
    description: Specifies id of a tenant.
    type: object
    title: Tenant Id Details.
    properties:
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantInfo:
    description: Specifies struct with basic tenant details.
    type: object
    title: Tenant Information.
    properties:
      name:
        description: Specifies name of the tenant.
        type: string
        x-go-name: Name
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantLdapProviderUpdate:
    description: Specifies Ldap Provider update details response about a tenant.
    type: object
    title: Tenant Ldap Provider Update.
    properties:
      ldapProviderIds:
        description: Specifies the ids of ldap providers for respective tenant.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: LdapProviderIds
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantLdapProviderUpdateParameters:
    description: Specifies Ldap Provider update details about a tenant.
    type: object
    title: Tenant Ldap Provider Update Details.
    properties:
      ldapProviderIds:
        description: Specifies the ids of ldap providers for respective tenant.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: LdapProviderIds
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantProtectionJobUpdate:
    description: Specifies protection Job update details response about a tenant.
    type: object
    title: Tenant Protection Job Update.
    properties:
      protectionJobIds:
        description: Specifies the ProtectionJobIds vec for respective tenant.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionJobIds
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantProtectionJobUpdateParameters:
    description: Specifies protection job update details about a tenant.
    type: object
    title: Tenant Protection Job Update Details.
    properties:
      protectionJobIds:
        description: Specifies the ProtectionJobIds vec for respective tenant.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ProtectionJobIds
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantProtectionPolicyUpdate:
    description: Specifies protection policy update details response about a tenant.
    type: object
    title: Tenant Protection Policy Update.
    properties:
      policyIds:
        description: Specifies the PolicyIds for respective tenant.
        type: array
        items:
          type: string
        x-go-name: PolicyIds
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantProtectionPolicyUpdateParameters:
    description: Specifies protection policy update details about a tenant.
    type: object
    title: Tenant Protection Policy Update Details.
    properties:
      policyIds:
        description: Specifies the PolicyIds for respective tenant.
        type: array
        items:
          type: string
        x-go-name: PolicyIds
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantProxy:
    description: |-
      Specifies the data for tenant proxy which has been deployed in tenant's
      enviroment.
    type: object
    title: Tenant Proxy.
    properties:
      constituentId:
        description: Specifies the constituent id of the proxy.
        type: integer
        format: int64
        x-go-name: ConstituentId
        x-nullable: true
      ipAddress:
        description: Specifies the ip address of the proxy.
        type: string
        x-go-name: IpAddress
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantStats:
    type: object
    title: TenantStats is the stats of a single tenant.
    properties:
      groupList:
        description: Specifies a list of groups associated to this tenant (organization).
        type: array
        items:
          $ref: '#/definitions/StatsGroup'
        x-go-name: GroupList
        x-nullable: true
      id:
        description: Specifies the id of the tenant (organization).
        type: string
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the tenant (organization).
        type: string
        x-go-name: Name
        x-nullable: true
      schemaInfoList:
        description: Specifies a list of schemaInfos of the tenant (organization).
        type: array
        items:
          $ref: '#/definitions/UsageSchemaInfo'
        x-go-name: SchemaInfoList
        x-nullable: true
      stats:
        description: Specifies details of statistics of the tenant (organization).
        x-nullable: true
        $ref: '#/definitions/DataUsageStats'
    x-go-package: cohesity/iris/server/data/public
  TenantUpdate:
    description: Specifies update details about a tenant.
    type: object
    title: Tenant Update Details.
    properties:
      bifrostEnabled:
        description: Specifies whether bifrost (Ambassador proxy) is enabled for tenant.
        type: boolean
        x-go-name: BifrostEnabled
        x-nullable: true
      clusterHostname:
        description: |-
          The hostname for Cohesity cluster as seen by tenants and as is routable
          from the tenant's network. Tenant's VLAN's hostname, if available can be
          used instead but it is mandatory to provide this value if there's no VLAN
          hostname to use. Also, when set, this field would take precedence over
          VLAN hostname.
        type: string
        x-go-name: ClusterHostname
        x-nullable: true
      clusterIps:
        description: |-
          Set of IPs as seen from the tenant's network for the Cohesity cluster.
          Only one from 'ClusterHostname' and 'ClusterIps' is needed.
        type: array
        items:
          type: string
        x-go-name: ClusterIps
        x-nullable: true
      description:
        description: Specifies the description of this tenant.
        type: string
        x-go-name: Description
        x-nullable: true
      name:
        description: Specifies the name of the tenant.
        type: string
        x-go-name: Name
        x-nullable: true
      subscribeToAlertEmails:
        description: Service provider can optionally unsubscribe from the Tenant Alert
          Emails.
        type: boolean
        x-go-name: SubscribeToAlertEmails
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantUserUpdateParameters:
    description: Specifies user update details about a tenant.
    type: object
    title: Tenant User Update Details.
    properties:
      sids:
        description: Specifies the array of Sid of the users.
        type: array
        items:
          type: string
        x-go-name: SidVec
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantViewBoxUpdate:
    description: Specifies view box update details response about a tenant.
    type: object
    title: Tenant View Box Update.
    properties:
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewBoxIds:
        description: Specifies the ViewBoxIds for respective tenant.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantViewBoxUpdateParameters:
    description: Specifies view box update details about a tenant.
    type: object
    title: Tenant View Box Update Details.
    properties:
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewBoxIds:
        description: Specifies the ViewBoxIds for respective tenant.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewBoxIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantViewUpdate:
    description: Specifies view update details response about a tenant.
    type: object
    title: Tenant View Update.
    properties:
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewNames:
        description: Specifies the PolicyIds for respective tenant.
        type: array
        items:
          type: string
        x-go-name: ViewNames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantViewUpdateParameters:
    description: Specifies view update details about a tenant.
    type: object
    title: Tenant View Update Details.
    properties:
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewNames:
        description: Specifies the PolicyIds for respective tenant.
        type: array
        items:
          type: string
        x-go-name: ViewNames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantVlanUpdate:
    description: Specifies vlan update details response about a tenant.
    type: object
    title: Tenant Vlan Update.
    properties:
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      vlanIfaceNames:
        description: |-
          Specifies the VlanIfaceNames for respective tenant,
          in the format of bond1.200.
        type: array
        items:
          type: string
        x-go-name: VlanIfaceNames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TenantVlanUpdateParameters:
    description: Specifies vlan update details about a tenant.
    type: object
    title: Tenant Vlan Update Details.
    properties:
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      vlanIfaceNames:
        description: |-
          Specifies the VlanIfaceNames for respective tenant,
          in the format of bond1.200.
        type: array
        items:
          type: string
        x-go-name: VlanIfaceNames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TestIdpReachability:
    description: Specifies the parameters to test the reachability of an IdP.
    type: object
    title: Test IdP Reachable.
    properties:
      issuerId:
        description: Specifies the IdP provided Issuer ID for the app.
        type: string
        x-go-name: IssuerId
        x-nullable: true
      ssoUrl:
        description: |-
          Specifies the SSO URL of the IdP service for the customer. This is the
          URL given by IdP when the customer created an account. Customers may use
          this for several clusters that are registered with on IdP site.
        type: string
        x-go-name: SsoUrl
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ThrottlingPolicyOverride:
    description: Specifies throttling policy override for a Datastore in a registered
      entity.
    type: object
    title: Throttling Policy Override.
    properties:
      datastoreId:
        description: Specifies the Protection Source id of the Datastore.
        type: integer
        format: int64
        x-go-name: DatastoreId
        x-nullable: true
      datastoreName:
        description: Specifies the display name of the Datastore.
        type: string
        x-go-name: DatastoreName
        x-nullable: true
      throttlingPolicy:
        description: Specifies the throttling policy that should be applied to this
          Source.
        x-nullable: true
        $ref: '#/definitions/ThrottlingPolicyParameters'
    x-go-package: cohesity/iris/server/data/public
  ThrottlingPolicyParameters:
    description: Specifies the throttling policy for a registered Protection Source.
    type: object
    title: Throttling Policy.
    properties:
      enforceMaxStreams:
        description: |-
          Specifies whether datastore streams are configured for all datastores
          that are part of the registered entity. If set to true, number of
          streams from Cohesity cluster to the registered entity will be limited
          to the value set for maxConcurrentStreams. If not set or set to false,
          there is no max limit for the number of concurrent streams.
        type: boolean
        x-go-name: EnforceMaxStreams
        x-nullable: true
      enforceRegisteredSourceMaxBackups:
        description: |-
          Specifies whether no. of backups are configured for the registered entity. If
          set to true, number of backups made by Cohesity cluster in the registered
          entity will be limited to the value set for
          RegisteredSourceMaxConcurrentBackups. If not set or set to false, there is no
          max limit for the number of concurrent backups.
        type: boolean
        x-go-name: EnforceRegisteredSourceMaxBackups
        x-nullable: true
      isEnabled:
        description: |-
          Indicates whether read operations to the datastores, which are
          part of the registered Protection Source, are throttled.
        type: boolean
        x-go-name: IsEnabled
        x-nullable: true
      latencyThresholds:
        description: |-
          Specifies the thresholds that should be applied to all
          datastores that are part of the registered Object.
        x-nullable: true
        $ref: '#/definitions/LatencyThresholds'
      maxConcurrentStreams:
        description: |-
          Specifies the limit on the number of streams Cohesity cluster will make
          concurrently to the datastores of the registered entity. This limit is
          enforced only when the flag enforceMaxStreams is set to true.
        type: integer
        format: int32
        x-go-name: MaxConcurrentStreams
        x-nullable: true
      registeredSourceMaxConcurrentBackups:
        description: |-
          Specifies the limit on the number of backups Cohesity cluster will make
          concurrently to the registered entity. This limit is
          enforced only when the flag enforceRegisteredSourceMaxBackups is set to true.
        type: integer
        format: int32
        x-go-name: RegisteredSourceMaxConcurrentBackups
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ThroughputTile:
    description: Throughput information for dashboard.
    type: object
    title: Throughput Tile.
    properties:
      maxReadThroughput:
        description: Maxium Read throughput in last 24 hours.
        type: integer
        format: int64
        x-go-name: MaxReadThroughput
        x-nullable: true
      maxWriteThroughput:
        description: Maximum Write throughput in last 24 hours.
        type: integer
        format: int64
        x-go-name: MaxWriteThroughput
        x-nullable: true
      readThroughputSamples:
        description: |-
          Read throughput samples taken for the past 24 hours at 10 minutes
          interval given in descending order of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: ReadThroughputSamples
        x-nullable: true
      writeThroughputSamples:
        description: |-
          Write throughput samples taken for the past 24 hours at 10 minutes
          interval given in descending order of time.
        type: array
        items:
          $ref: '#/definitions/Sample'
        x-go-name: WriteThroughputSamples
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Time:
    description: |-
      A message to encapusulate time of a day. Users of this proto will have to
      store the timezone information separately. For example, when this proto
      is part of a backup job, timezone of the backup job is applied to get the
      absolute time.
    type: object
    properties:
      hour:
        description: The hour when backup should be performed (0 - 23).
        type: integer
        format: int32
        x-go-name: Hour
        x-nullable: true
      minute:
        description: The minute when backup should be performed (0 - 59).
        type: integer
        format: int32
        x-go-name: Minute
        x-nullable: true
    x-go-package: magneto/base/policy.pb
  TimeOfAWeek:
    description: |-
      Specifies a time period by specifying a single daily time period
      and one or more days of the week, for example 9 AM - 5 PM
      on Monday, Wednesday or Friday. If different time periods are required
      on different days, then multiple instances of this Weekly Time Period
      must be specified.
    type: object
    title: Time Period.
    properties:
      days:
        description: |-
          Array of Week Days.

          Specifies a list of days of a week (such as 'kSunday') when the
          time period should be applied.
          If not set, the time range applies to all days of the week.
          Specifies a day in a week such as 'kSunday', 'kMonday', etc.
        type: array
        items:
          type: string
          enum:
          - kSunday
          - kMonday
          - kTuesday
          - kWednesday
          - kThursday
          - kFriday
          - kSaturday
        x-go-name: Days
        x-nullable: true
      endTime:
        description: Specifies the end time for the daily time period.
        title: End Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
      isAllDay:
        description: |-
          All Day.

          Specifies that time range is applied for entire day.
        type: boolean
        x-go-name: IsAllDay
        x-nullable: true
      startTime:
        description: Specifies the start time for the daily time period.
        title: Start Time.
        allOf:
        - $ref: '#/definitions/TimeOfDay'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TimeOfDay:
    description: Specifies a time in day with hours and minutes.
    type: object
    title: Time of Day.
    properties:
      hour:
        description: Specifies an (0-23) hour in a day.
        type: integer
        format: int32
        x-go-name: Hour
        x-nullable: true
      minute:
        description: Specifies a (0-59) minute in an hour.
        type: integer
        format: int32
        x-go-name: Minute
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TimeRangeSettings:
    description: Specifies the time range struct.
    type: object
    title: Time Range.
    properties:
      endTimeUsecs:
        description: |-
          Specifies the end time specified as a Unix epoch Timestamp
          (in microseconds).
        type: integer
        format: int64
        x-go-name: EndTimeUsecs
        x-nullable: true
      jobUid:
        description: |-
          Specifies the job whose finished runs can be used to restore any
          point within this time range.
        x-nullable: true
        $ref: '#/definitions/UniversalId'
      startTimeUsecs:
        description: |-
          Specifies the start time specified as a Unix epoch Timestamp
          (in microseconds).
        type: integer
        format: int64
        x-go-name: StartTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TimeSeriesSchemaResponse:
    description: Specifies the Apollo schema to list the data point.
    type: object
    title: Time series schema response.
    properties:
      schemaInfoList:
        description: Specifies the list of the schema info for an entity.
        type: array
        items:
          $ref: '#/definitions/SchemaInfo'
        x-go-name: SchemaInfoList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  TrendingData:
    description: |-
      Specifies protection runs information per object, aggregated over a period
      of time.
    type: object
    properties:
      cancelled:
        description: Specifies number of cancelled runs.
        type: integer
        format: int64
        x-go-name: Cancelled
        x-nullable: true
      failed:
        description: Specifies number of failed runs.
        type: integer
        format: int64
        x-go-name: Failed
        x-nullable: true
      running:
        description: Specifies number of in-progress runs.
        type: integer
        format: int64
        x-go-name: Running
        x-nullable: true
      successful:
        description: Specifies number of successful runs.
        type: integer
        format: int64
        x-go-name: Successful
        x-nullable: true
      total:
        description: Specifies total number of runs.
        type: integer
        format: int64
        x-go-name: Total
        x-nullable: true
      trendName:
        description: Specifies trend name. This is start of the day/week/month.
        type: string
        x-go-name: TrendName
        x-nullable: true
      trendStartTimeUsecs:
        description: Specifies start of the day/week/month in micro seconds
        type: integer
        format: int64
        x-go-name: TrendStartTimeUsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UnRegisterApplicationServersParameters:
    description: |-
      Specifies the parameters required to unregister
      Application Servers running in a Protection Source.
    type: object
    title: UnRegister Application Servers Parameters.
    properties:
      applications:
        description: |-
          Specifies the types of applications such as 'kSQL', 'kExchange', 'kAD'
          running on the Protection Source.
          overrideDescription: true
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: array
        items:
          type: string
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kAzureNative
          - kKubernetes
          - kElastifile
          - kAD
          - kRDSSnapshotManager
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
        x-go-name: Applications
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UniversalId:
    description: |-
      Specifies an id for an object that is unique across Cohesity Clusters.
      The id is composite of all the ids listed below.
    type: object
    title: Unique Global Id.
    properties:
      clusterId:
        description: Specifies the Cohesity Cluster id where the object was created.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: |-
          Specifies an id for the Cohesity Cluster that is generated when
          a Cohesity Cluster is initially created.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      id:
        description: |-
          Specifies a unique id assigned to an object (such as a Job)
          by the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UniversalIdProto:
    type: object
    properties:
      clusterId:
        description: The id of the cluster at which the object was created.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: The incarnation id of the above cluster.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      objectId:
        description: The object id - this is unique within the above cluster.
        type: integer
        format: int64
        x-go-name: ObjectId
        x-nullable: true
    x-go-package: util/base/universal_id.pb
  UnprotectObjectParams:
    description: Specifies the parameters to unprotect an object.
    type: object
    title: Unprotect Object Params.
    required:
    - protectionSourceId
    - rpoPolicyId
    properties:
      deleteSnapshots:
        description: Specifies whether to delete the snapshots of the Protection Object.
        type: boolean
        x-go-name: DeleteSnapshots
        x-nullable: true
      protectionSourceId:
        description: Specifies the id of the Protection Source to be unprotected.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
      rpoPolicyId:
        description: Specifies the id of the Rpo Policy from which to unprotect the
          object.
        type: string
        x-go-name: RpoPolicyId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateAntivirusServiceGroupParams:
    type: object
    title: Specifies the configuration settings for update an Antivirus service group.
    required:
    - name
    - id
    properties:
      antivirusServices:
        description: Specifies the Antivirus services for this provider.
        type: array
        items:
          $ref: '#/definitions/AntivirusServiceConfigParams'
        x-go-name: AntivirusServices
        x-nullable: true
      description:
        description: Specifies the description of the Antivirus service group.
        type: string
        x-go-name: Description
        x-nullable: true
      id:
        description: Specifies the Id of the Antivirus service group.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      isEnabled:
        description: Specifies whether the antivirus service group is enabled or not.
        type: boolean
        x-go-name: IsEnabled
        x-nullable: true
      name:
        description: Specifies the name of the Antivirus service group.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateApiKeyParams:
    description: Specifies the parameters to update an API key.
    type: object
    title: Parameters to update an API key.
    required:
    - name
    properties:
      expiringTimeMsecs:
        description: Specifies a time stamp when the API key will expire in milli
          seconds.
        type: integer
        format: int64
        x-go-name: ExpiringTimeMsecs
        x-nullable: true
      isActive:
        description: |-
          Specifies if the API key is active. Only an active and not expired API key
          can be used for authentication.
        type: boolean
        x-go-name: IsActive
        x-nullable: true
      name:
        description: Specifies the name of API key.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateAppInstanceSettingsParameters:
    description: Specifies update app instance settings parameters.
    type: object
    title: Update App Instance Settings Parameters.
    properties:
      description:
        description: Description of the app instance.
        type: string
        x-go-name: Description
        x-nullable: true
      settings:
        description: Specifies the desired app instance settings.
        x-nullable: true
        $ref: '#/definitions/AppInstanceSettings'
    x-go-package: cohesity/iris/server/data/public
  UpdateAppInstanceStateParameters:
    description: Specifies update app instance state parameters.
    type: object
    title: Update App Instance State Parameters.
    properties:
      state:
        description: |-
          Specifies the desired app instance state type.
          Specifies operational status of an app instance.
          kInitializing - The app instance has been launched or resumed, but is not fully running yet.
          kRunning - The app instance is running. Check health_status for the actual health.
          kPausing - The app instance is being paused.
          kPaused - The app instance has been paused.
          kTerminating - The app instance is being terminated.
          kTerminated -  The app instance has been terminated.
          kFailed - The app instance has failed due to an unrecoverable error.
        type: string
        enum:
        - kInitializing
        - kRunning
        - kPausing
        - kPaused
        - kTerminating
        - kTerminated
        - kFailed
        x-go-name: State
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateApplicationServerParameters:
    description: |-
      Specifies the parameters required to modify the parameters of previously
      registered Application Servers in a Protection Source.
    type: object
    title: Update Application Server Parameters.
    properties:
      applications:
        description: |-
          Specifies the types of applications such as 'kSQL', 'kExchange', 'kAD'
          running on the Protection Source.
          overrideDescription: true
          Supported environment types such as 'kView', 'kSQL', 'kVMware', etc.
          NOTE: 'kPuppeteer' refers to Cohesity's Remote Adapter.
          'kVMware' indicates the VMware Protection Source environment.
          'kHyperV' indicates the HyperV Protection Source environment.
          'kSQL' indicates the SQL Protection Source environment.
          'kView' indicates the View Protection Source environment.
          'kPuppeteer' indicates the Cohesity's Remote Adapter.
          'kPhysical' indicates the physical Protection Source environment.
          'kPure' indicates the Pure Storage Protection Source environment.
          'Nimble' indicates the Nimble Storage Protection Source environment.
          'kAzure' indicates the Microsoft's Azure Protection Source environment.
          'kNetapp' indicates the Netapp Protection Source environment.
          'kAgent' indicates the Agent Protection Source environment.
          'kGenericNas' indicates the Generic Network Attached Storage Protection
          Source environment.
          'kAcropolis' indicates the Acropolis Protection Source environment.
          'kPhsicalFiles' indicates the Physical Files Protection Source environment.
          'kIsilon' indicates the Dell EMC's Isilon Protection Source environment.
          'kGPFS' indicates IBM's GPFS Protection Source environment.
          'kKVM' indicates the KVM Protection Source environment.
          'kAWS' indicates the AWS Protection Source environment.
          'kExchange' indicates the Exchange Protection Source environment.
          'kHyperVVSS' indicates the HyperV VSS Protection Source
          environment.
          'kOracle' indicates the Oracle Protection Source environment.
          'kGCP' indicates the Google Cloud Platform Protection Source environment.
          'kFlashBlade' indicates the Flash Blade Protection Source environment.
          'kAWSNative' indicates the AWS Native Protection Source environment.
          'kO365' indicates the Office 365 Protection Source environment.
          'kO365Outlook' indicates Office 365 outlook Protection Source environment.
          'kHyperFlex' indicates the Hyper Flex Protection Source environment.
          'kGCPNative' indicates the GCP Native Protection Source environment.
          'kAzureNative' indicates the Azure Native Protection Source environment.
          'kKubernetes' indicates a Kubernetes Protection Source environment.
          'kElastifile' indicates Elastifile Protection Source environment.
          'kAD' indicates Active Directory Protection Source environment.
          'kRDSSnapshotManager' indicates AWS RDS Protection Source environment.
          'kCassandra' indicates Cassandra Protection Source environment.
          'kMongoDB' indicates MongoDB Protection Source environment.
          'kCouchbase' indicates Couchbase Protection Source environment.
          'kHdfs' indicates Hdfs Protection Source environment.
          'kHive' indicates Hive Protection Source environment.
          'kHBase' indicates HBase Protection Source environment.
        type: array
        items:
          type: string
          enum:
          - kVMware
          - kHyperV
          - kSQL
          - kView
          - kPuppeteer
          - kPhysical
          - kPure
          - kNimble
          - kAzure
          - kNetapp
          - kAgent
          - kGenericNas
          - kAcropolis
          - kPhysicalFiles
          - kIsilon
          - kGPFS
          - kKVM
          - kAWS
          - kExchange
          - kHyperVVSS
          - kOracle
          - kGCP
          - kFlashBlade
          - kAWSNative
          - kO365
          - kO365Outlook
          - kHyperFlex
          - kGCPNative
          - kAzureNative
          - kKubernetes
          - kElastifile
          - kAD
          - kRDSSnapshotManager
          - kCassandra
          - kMongoDB
          - kCouchbase
          - kHdfs
          - kHive
          - kHBase
        x-go-name: Applications
        x-nullable: true
      hasPersistentAgent:
        description: |-
          Set this to true if a persistent agent is running on the host. If this is
          specified, then credentials would not be used to log into the host
          environment. This mechanism may be used in environments such as VMware
          to get around UAC permission issues by running the agent as a service
          with the right credentials. If this field is not specified, credentials
          must be specified.
        type: boolean
        x-go-name: HasPersistentAgent
        x-nullable: true
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      protectionSourceId:
        description: |-
          Specifies the Id of the Protection Source that contains one or more
          Application Servers running on it.
        type: integer
        format: int64
        x-go-name: ProtectionSourceId
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateBondParameters:
    description: Specifies the parameters needed to modify the bonding mode of a bond.
    type: object
    title: Update Bond Parameters.
    required:
    - name
    - bondingMode
    properties:
      bondingMode:
        description: |-
          Specifies the new bonding mode.
          'kActiveBackup' indicates active backup bonding mode.
          'k802_3ad' indicates 802.3ad bonding mode.
        type: string
        enum:
        - kActiveBackup
        - k802_3ad
        x-go-name: BondingMode
        x-nullable: true
      lacpRate:
        description: |-
          Specifies the LACP rate. If not specified,
          This value will default to 0 (slow).
        type: string
        x-go-name: LacpRate
        x-nullable: true
      name:
        description: Specifies the name of the bond being updated.
        type: string
        x-go-name: Name
        x-nullable: true
      xmitHashPolicy:
        description: |-
          Specifies the xmit hash policy. If not specified,
          This value will default to 1 (layer3+4).
        type: string
        x-go-name: XmitHashPolicy
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateBondResult:
    description: Specifies the result of a request to update a new bond.
    type: object
    title: Update Bond Result.
    properties:
      message:
        description: Specifies a message describing the result of the operation.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateClusterParams:
    description: |-
      Specifies the configuration settings that can be updated on the
      Cohesity Cluster.
    type: object
    title: Update Cluster.
    properties:
      appsSubnet:
        description: The subnet for Athena apps.
        x-nullable: true
        $ref: '#/definitions/Subnet'
      bannerEnabled:
        description: |-
          Specifies whether UI banner is enabled on the cluster or not. When banner
          is enabled, UI will make an additional API call to fetch the banner and
          show at the login page.
        type: boolean
        x-go-name: BannerEnabled
        x-nullable: true
      clusterAuditLogConfig:
        description: Cluster Audit Log Configuration.
        x-nullable: true
        $ref: '#/definitions/ClusterAuditLogConfiguration'
      dnsServerIps:
        description: |-
          Array of IP Addresses of DNS Servers.

          Specifies the IP addresses of the DNS Servers used by the Cohesity
          Cluster.
        type: array
        items:
          type: string
        x-go-name: DnsServerIps
        x-nullable: true
      domainNames:
        description: |-
          Array of Domain Names.

          The first domain name specified in the array is the fully qualified
          domain name assigned to the Cohesity Cluster. Any additional
          domain names specified are used for the domain search list for
          hostname look-up.
        type: array
        items:
          type: string
        x-go-name: DomainNames
        x-nullable: true
      enableActiveMonitoring:
        description: |-
          Specifies if Cohesity can receive monitoring information from the
          Cohesity Cluster.
          If 'true', remote monitoring of the Cohesity Cluster is allowed.
        type: boolean
        x-go-name: EagleConfigEnableAgent
        x-nullable: true
      enableUpgradePkgPolling:
        description: If 'true', Cohesity's upgrade server is polled for new releases.
        type: boolean
        x-go-name: HaloServerEnabled
        x-nullable: true
      encryptionKeyRotationPeriodSecs:
        description: |-
          Specifies the period of time (in seconds) when encryption keys are rotated.
          By default, the encryption keys are rotated every 77760000 seconds
          (30 days).
        type: integer
        format: int64
        x-go-name: EncryptionKeyRotationPeriodSecs
        x-nullable: true
      faultToleranceLevel:
        description: |-
          Specifies the level which 'MetadataFaultToleranceFactor' applies to.
          'kNode' indicates 'MetadataFaultToleranceFactor' applies to Node level.
          'kChassis' indicates 'MetadataFaultToleranceFactor' applies to Chassis
          level.
          'kRack' indicates 'MetadataFaultToleranceFactor' applies to Rack level.
        type: string
        enum:
        - kNode
        - kChassis
        - kRack
        x-go-name: FaultToleranceLevel
        x-nullable: true
      filerAuditLogConfig:
        description: Filer Audit Log Configuration.
        x-nullable: true
        $ref: '#/definitions/FilerAuditLogConfiguration'
      gateway:
        description: Specifies the gateway IP address.
        type: string
        x-go-name: Gateway
        x-nullable: true
      googleAnalyticsEnabled:
        description: Specifies whether Google Analytics is enabled.
        type: boolean
        x-go-name: GoogleAnalyticsEnabled
        x-nullable: true
      isDocumentationLocal:
        description: |-
          Specifies what version of the documentation is used.
          If 'true', the version of documentation stored locally on the Cohesity
          Cluster is used.
          If 'false', the documentation stored on a Cohesity Web Server
          is used. The default is 'false'.
          Cohesity recommends accessing the Help from the Cohesity Web site which
          provides the newest and most complete version of Help.
        type: boolean
        x-go-name: IsDocumentationLocal
        x-nullable: true
      languageLocale:
        description: Specifies the language and locale for this Cohesity Cluster.
        type: string
        x-go-name: LanguageLocale
        x-nullable: true
      localAuthDomainName:
        description: Domain name for SMB local authentication.
        type: string
        x-go-name: LocalAuthDomainName
        x-nullable: true
      localGroupsEnabled:
        description: |-
          Specifies whether to enable local groups on cluster. Once it is enabled,
          it cannot be disabled.
        type: boolean
        x-go-name: LocalGroupsEnabled
        x-nullable: true
      metadataFaultToleranceFactor:
        description: |-
          Specifies metadata fault tolerance setting for the cluster. This denotes
          the number of simultaneous failures[node] supported by metadata services
          like gandalf and scribe.
        type: integer
        format: int32
        x-go-name: MetadataFaultToleranceFactor
        x-nullable: true
      multiTenancyEnabled:
        description: |-
          Specifies if multi tenancy is enabled in the cluster. Authentication &
          Authorization will always use tenant_id, however, some UI elements may be
          disabled when multi tenancy is disabled.
        type: boolean
        x-go-name: MultiTenancyEnabled
        x-nullable: true
      name:
        description: Specifies the name of the Cohesity Cluster.
        type: string
        x-go-name: Name
        x-nullable: true
      ntpSettings:
        description: |-
          Specifies if the ntp/master slave scheme should be disabled for this
          cluster.
        x-nullable: true
        $ref: '#/definitions/NtpSettingsConfig'
      pcieSsdTierRebalanceDelaySecs:
        description: Specifies the rebalance delay in seconds for cluster PcieSSD
          storage tier.
        type: integer
        format: int32
        x-go-name: PcieSsdTierRebalanceDelaySecs
        x-nullable: true
      reverseTunnelEnabled:
        description: |-
          If 'true', Cohesity's Remote Tunnel is enabled.
          Cohesity can access the Cluster and provide remote assistance
          via a Remote Tunnel.
        type: boolean
        x-go-name: ReverseTunnelEnabled
        x-nullable: true
      reverseTunnelEndTimeMsecs:
        description: |-
          ReverseTunnelEndTimeMsecs specifies the end time in milliseconds since
          epoch until when the reverse tunnel will stay enabled.
        type: integer
        format: int64
        x-go-name: ReverseTunnelEndTimeMsecs
        x-nullable: true
      smbAdDisabled:
        description: |-
          Specifies if Active Directory should be disabled for authentication of SMB
          shares. If 'true', Active Directory is disabled.
        type: boolean
        x-go-name: SmbAdDisabled
        x-nullable: true
      smbMultichannelEnabled:
        description: |-
          Specifies whether SMB multichannel is enabled on the cluster. When this is
          set to true, then any SMB3 multichannel enabled client can establish
          multiple TCP connection per session to the Server.
        type: boolean
        x-go-name: SmbMultichannelEnabled
        x-nullable: true
      stigMode:
        description: Specifies if STIG mode is enabled or not.
        type: boolean
        x-go-name: StigMode
        x-nullable: true
      tenantViewboxSharingEnabled:
        description: |-
          In case multi tenancy is enabled, this flag controls whether multiple
          tenants can be placed on the same viewbox. Once set to true, this flag
          should never become false.
        type: boolean
        x-go-name: TenantViewboxSharingEnabled
        x-nullable: true
      timezone:
        description: |-
          Specifies the timezone to use for showing time in emails, reports,
          filer audit logs, etc.
        type: string
        x-go-name: Timezone
        x-nullable: true
      turboMode:
        description: Specifies if the cluster is in Turbo mode.
        type: boolean
        x-go-name: TurboMode
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateDirQuotaArgs:
    description: |-
      Specifies the arguments for updating the directory quota policies. This
      structure can be used for adding, updating and removing the policies.
    type: object
    title: Update Directory Quota Policies Arguments.
    properties:
      disableDirQuota:
        description: Specifies directory quota to be disabled on the view.
        type: boolean
        x-go-name: DisableDirQuota
        x-nullable: true
      quota:
        description: Specifies a directory quota policy to be updated.
        x-nullable: true
        $ref: '#/definitions/DirQuotaPolicy'
      viewName:
        description: Specifies the name of the view.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateEulaConfig:
    description: Specifies the update to the End User License Agreement information.
    type: object
    title: Update EULA Version.
    properties:
      signedVersion:
        description: Specifies the version of the End User License Agreement that
          was accepted.
        type: integer
        format: int64
        x-go-name: SignedVersion
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateGflagParameters:
    description: Specifies the parameters for updating service gflags.
    type: object
    title: Update Gflag Parameters.
    required:
    - serviceName
    properties:
      effectiveNow:
        description: |-
          Specifies whether to apply the change immediately. If set to true, the
          gflag change will work without restarting the service.
        type: boolean
        x-go-name: EffectiveNow
        x-nullable: true
      gflags:
        description: |-
          Specifies a list of gflags. These will be added to the existing flags
          for the service. The values will be overwritten if required. If no value
          for gflag is specified, this gflag will be reset to default value. If no
          gflag is specified, all gflags for this service will be reset to default
          value.
        type: array
        items:
          $ref: '#/definitions/Gflag'
        x-go-name: Gflags
        x-nullable: true
      reason:
        description: Specifies the reason for clearing gflags.
        type: string
        x-go-name: Reason
        x-nullable: true
      serviceName:
        description: |-
          Specifies the service name.
          'kApollo' is a service for reclaiming freed disk sectors on Nodes in the
          SnapFS distributed file system.
          'kBridge' is a service for managing the SnapFS distributed file system.
          'kGenie' is a service that is responsible for monitoring hardware health
          on the Cluster.
          'kGenieGofer' is a service that links the Genie service to other services
          on the Cluster.
          'kMagneto' is the data protection service of the Cohesity Data Platform.
          'kIris' is the service which serves REST API calls to the UI, CLI, and any
          scripts written by customers.
          'kIrisProxy' is a service that links the Iris service to other services
          on the Cluster.
          'kScribe' is the service responsible for storing filesystem metadata.
          'kStats' is the service that is responsible for retrieving and aggregating
          disk metrics across the Cluster.
          'kYoda' is an elastic search indexing service.
          'kAlerts' is a publisher and subscribing service for alerts.
          'kKeychain' is a service for managing disk encryption keys.
          'kLogWatcher' is a service that scans the log directory and reduces
          the number of logs if required.
          'kStatsCollector' is a service that periodically logs system stats.
          'kGandalf' is a distributed lock service and coordination manager.
          'kNexus' indicates the Nexus service. This is the service that is
          responsible for creation of Clusters and configuration of Nodes and
          networking.
          'kNexusProxy' is a service that links the Nexus service to other services
          on the Cluster.
          'kStorageProxy' is a service for accessing data on external entities.
          'kTricorder' is a diagnostic health testing service for Clusters.
          'kRtClient' is a reverse tunneling client service.
          'kVaultProxy' is a service for managing external targets that Clusters
          can be backed up to.
          'kSmbProxy' is an SMB protocol service.
          'kBridgeProxy' is the service that links the Bridge service to other
          services on the Cluster.
          'kLibrarian' is an elastic search indexing service.
          'kGroot' is a service for managing replication of SQL databases across
          multiple nodes in a Cluster.
          'kEagleAgent' is a service that is responsible for retrieving information
          on Cluster health.
          'kAthena' is a service for running distributed containerized applications
          on the Cohesity Data Platform.
          'kBifrostBroker' is a service for communicating with the Cohesity proxies
          for multitenancy.
          'kSmb2Proxy' is a new SMB protocol service.
          'kOs' can be specified in order to do a full reboot.
          'kAtom' is a service for receiving data for the Continuous Data Protection.
        type: string
        enum:
        - kApollo
        - kBridge
        - kGenie
        - kGenieGofer
        - kMagneto
        - kIris
        - kIrisProxy
        - kScribe
        - kStats
        - kYoda
        - kAlerts
        - kKeychain
        - kLogWatcher
        - kStatsCollecter
        - kGandalf
        - kNexus
        - kNexusProxy
        - kStorageProxy
        - kTricorder
        - kRtClient
        - kVaultProxy
        - kSmbProxy
        - kBridgeProxy
        - kLibrarian
        - kGroot
        - kEagleAgent
        - kAthena
        - kBifrostBroker
        - kSmb2Proxy
        - kOs
        - kAtom
        x-go-name: ServiceName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateIdpConfigurationRequest:
    description: Specifies the parameters of an IdP configuration to be updated.
    type: object
    title: Update IdP Configuration Request.
    properties:
      allowLocalAuthentication:
        description: |-
          Specifies whether to allow local authentication. When IdP is configured,
          only IdP users are allowed to login to the Cluster. Local login is
          disabled except for users with admin role. If this flag is set to true,
          local (non-IdP) logins are allowed for all local and AD users. Local or
          AD users with admin role can login always independent of this flag's
          setting.
        type: boolean
        x-go-name: AllowLocalAuthentication
        x-nullable: true
      certificate:
        description: |-
          Specifies the certificate generated for the app by the IdP service when
          the Cluster is registered as an app. This is required to verify the
          SAML response.
        type: string
        x-go-name: Certificate
        x-nullable: true
      certificateFilename:
        description: Specifies the filename used to upload the certificate.
        type: string
        x-go-name: CertificateFilename
        x-nullable: true
      enable:
        description: |-
          Specifies a flag to enable or disable this IdP service. When it is set
          to true, IdP service is enabled. When it is set to false, IdP service
          is disabled. When an IdP service is created, it is set to true.
        type: boolean
        x-go-name: Enable
        x-nullable: true
      issuerId:
        description: |-
          Specifies the IdP provided Issuer ID for the app.
          For example, exkh1aov1nhHrgFhN0h7.
        type: string
        x-go-name: IssuerId
        x-nullable: true
      roles:
        description: |-
          Specifies a list of roles assigned to an IdP user if samlAttributeName is
          not given.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      samlAttributeName:
        description: |-
          Specifies the SAML attribute name that contains a comma separated list
          of Cluster roles. Either this field or roles must be set. This field
          takes higher precedence than the roles field.
        type: string
        x-go-name: SamlAttributeName
        x-nullable: true
      signRequest:
        description: |-
          Specifies whether to sign the SAML request or not. When it is set
          to true, SAML request will be signed. When it is set to false, SAML
          request is not signed. Default is false. Set this flag to true if
          the IdP site is configured to expect the SAML request from the Cluster
          signed. If this is set to true, users must get the Cluster's certificate
          and upload it on the IdP site.
        type: boolean
        x-go-name: SignRequest
        x-nullable: true
      ssoUrl:
        description: |-
          Specifies the SSO URL of the IdP service for the customer. This is the
          URL given by IdP when the customer created an account. Customers may use
          this for several clusters that are registered with on IdP site.
          For example, dev-332534.oktapreview.com
        type: string
        x-go-name: SsoUrl
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateIgnoredTrustedDomainsParams:
    description: Specifies the params to update the list of ignored trusted domains.
    type: object
    title: Update Blacklisted Trusted Domain Request.
    properties:
      ignoredTrustedDomains:
        description: |-
          Specifies the list of trusted domains that were set by the user to be
          ignored during trusted domain discovery.
        type: array
        items:
          type: string
        x-go-name: IgnoredTrustedDomains
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateInfectedFileParams:
    type: object
    title: Specifies the parameters to update the infected files.
    properties:
      infectedFileIds:
        description: Specifies the list of infected file identifiers.
        type: array
        items:
          $ref: '#/definitions/InfectedFileParam'
        x-go-name: InfectedFileIds
        x-nullable: true
      remediationState:
        description: |-
          Specifies the remediation state of the file. Not setting any value to
          remediation state will reset the infected file.
          Remediation State.
          'kQuarantine' indicates 'Quarantine' state of the file. This state blocks
          the client access. The administrator will have to manually delete, rescan or
          unquarantine the file.
          'kUnquarantine' indicates 'Unquarantine' state of the file.
          The administrator has manually moved files from quarantined to the
          unquarantined state to allow client access. Unquarantined files are
          not scanned for virus until manually reset.
        type: string
        enum:
        - kQuarantine
        - kUnquarantine
        x-go-name: RemediationState
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateInfectedFileResponse:
    type: object
    title: Specifies update infected files response.
    properties:
      updateFailedInfectedFiles:
        description: Specifies the failed update infected files.
        type: array
        items:
          $ref: '#/definitions/InfectedFileId'
        x-go-name: UpdateFailedInfectedFiles
        x-nullable: true
      updateSucceededInfectedFiles:
        description: Specifies the successfully updated infected files.
        type: array
        items:
          $ref: '#/definitions/InfectedFileId'
        x-go-name: UpdateSucceededInfectedFiles
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateLdapProviderParam:
    description: Specifies the update LDAP provider params.
    type: object
    title: Update LDAP Provider Parameters.
    properties:
      adDomainName:
        description: |-
          Specifies the domain name of an Active Directory which is mapped to this
          LDAP provider
        type: string
        x-go-name: AdDomainName
        x-nullable: true
      authType:
        description: |-
          Specifies the authentication type used while connecting to LDAP servers.
          Authentication level.
          'kAnonymous' indicates LDAP authentication type 'Anonymous'
          'kSimple' indicates LDAP authentication type 'Simple'
        type: string
        enum:
        - kAnonymous
        - kSimple
        x-go-name: AuthType
        x-nullable: true
      baseDistinguishedName:
        description: |-
          Specifies the base distinguished name used as the base for LDAP
          search requests.
        type: string
        x-go-name: BaseDistinguishedName
        x-nullable: true
      domainName:
        description: |-
          Specifies the name of the domain name to be used for querying LDAP servers
          from DNS. If PreferredLdapServerList is set, then DomainName field is
          ignored.
        type: string
        x-go-name: DomainName
        x-nullable: true
      id:
        description: Specifies the ID of the LDAP provider.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the name of the LDAP provider.
        type: string
        x-go-name: Name
        x-nullable: true
      port:
        description: Specifies LDAP server port.
        type: integer
        format: int32
        x-go-name: Port
        x-nullable: true
      preferredLdapServerList:
        description: |-
          Specifies the preferred LDAP servers. Server names should be either in
          fully qualified domain name (FQDN) format or IP addresses.
        type: array
        items:
          type: string
        x-go-name: PreferredLdapServerList
        x-nullable: true
      tenantId:
        description: Specifies the unique id of the tenant.
        type: string
        x-go-name: TenantId
        x-nullable: true
      useSsl:
        description: Specifies whether to use SSL for LDAP connections.
        type: boolean
        x-go-name: UseSsl
        x-nullable: true
      userDistinguishedName:
        description: |-
          Specifies the user distinguished name that is used for LDAP authentication.
          It should be provided if the AuthType is set to either kSimple or kSasl.
        type: string
        x-go-name: UserDistinguishedName
        x-nullable: true
      userPassword:
        description: Specifies the user password that is used for LDAP authentication.
        type: string
        x-go-name: UserPassword
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateLdapProviderParams:
    description: Specifies the params to update the LDAP provider info.
    type: object
    title: Update LDAP Provider Request.
    properties:
      ldapProviderId:
        description: Specifies the LDAP provider id which is mapped to an Active Directory
        type: integer
        format: int64
        x-go-name: LdapProviderId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateLinuxPasswordReqParams:
    description: Specifies the user input parameters.
    type: object
    title: Update Linux Password Req Params.
    required:
    - linuxUsername
    - linuxPassword
    properties:
      linuxCurrentPassword:
        description: Specifies the current password.
        type: string
        x-go-name: LinuxCurrentPassword
        x-nullable: true
      linuxPassword:
        description: Specifies the new linux password.
        type: string
        x-go-name: LinuxPassword
        x-nullable: true
      linuxUsername:
        description: Specifies the linux username for which the password will be updated.
        type: string
        x-go-name: LinuxUsername
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateLinuxPasswordResult:
    description: |-
      Specifies the result returned after a successful request to update the
      linux password.
    type: object
    title: Update Linux Password.
    properties:
      message:
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateMachineAccountsParams:
    description: |-
      Specifies the parameters required to update the machine accounts of an
      active directory.
    type: object
    title: Update Machine Accounts Request.
    properties:
      machineAccounts:
        description: |-
          Array of Machine Accounts.

          Specifies an array of computer names used to identify the Cohesity
          Cluster on the domain.
        type: array
        items:
          type: string
        x-go-name: MachineAccounts
        x-nullable: true
      overwriteExistingAccounts:
        description: |-
          Specifies whether the specified machine accounts should overwrite the
          existing machine accounts in this domain.
        type: boolean
        x-go-name: OverwriteExistingAccounts
        x-nullable: true
      password:
        description: Specifies the password for the specified userName.
        type: string
        x-go-name: Password
        x-nullable: true
      userName:
        description: Specifies a userName that has administrative privileges in the
          domain.
        type: string
        x-go-name: UserName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateNotifications:
    description: Specifies the list of notificationIds and the operation to be performed.
    type: object
    title: Update Notification attributes.
    properties:
      action:
        description: |-
          Specifies the operation to be performed on the resource.
          Eg. "action":"dismiss"
        type: string
        x-go-name: Action
        x-nullable: true
      notificationIds:
        description: Specifies the list of NotificationIds to be operated upon.
        type: array
        items:
          type: string
        x-go-name: NotificationIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateProtectionJobRun:
    description: |-
      Specifies a Job Run and the expiration time to update. The expiration
      time defines the retention period for the Job Run and its snapshots.
    type: object
    title: Update Protection Job Run.
    properties:
      copyRunTargets:
        description: |-
          Specifies the retention for archival, replication or extended local
          retention.
        type: array
        items:
          $ref: '#/definitions/RunJobSnapshotTarget'
        x-go-name: CopyRunTargets
        x-nullable: true
      jobUid:
        description: Specifies a unique universal id for the Job.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      runStartTimeUsecs:
        description: |-
          Specifies the start time of the Job Run to update. The start time
          is specified as a Unix epoch Timestamp (in microseconds).
          This uniquely identifies a snapshot. This parameter is required.
        type: integer
        format: int64
        x-go-name: RunStartTimeUsecs
        x-nullable: true
      sourceIds:
        description: |-
          Ids of the Protection Sources. If this is specified, retention time will
          only be updated for the sources specified.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: SourceIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateProtectionJobRunsParam:
    description: Specifies the Job Runs to update with a new expiration times.
    type: object
    title: Update Protection Job Runs Parameters.
    properties:
      jobRuns:
        description: |-
          Array of Job Runs.

          Specifies the Job Runs to update with a new expiration times.
        type: array
        items:
          $ref: '#/definitions/UpdateProtectionJobRun'
        x-go-name: JobRuns
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateProtectionJobsState:
    type: object
    title: Specifies the response of updation of state of multiple Protection Jobs.
    properties:
      failedJobIds:
        description: Specifies a list of Protection Job ids for which updation of
          state failed.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: FailedJobIds
        x-nullable: true
      successfulJobIds:
        description: |-
          Specifies a list of Protection Job ids for which updation of state is
          successful.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: SuccessfulJobIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateProtectionJobsStateRequestBody:
    description: Specifies the parameters to perform an action of list of Protection
      Jobs.
    type: object
    title: Update state parameters of Protection Jobs.
    properties:
      action:
        description: |-
          Specifies the action to be performed on all the specified Protection Jobs.
          Specifies the type of action to be performed on Protection Job.
          'kActivate' specifies that Protection Job should be activated.
          'kDeactivate' specifies that Protection Job should be deactivated.
          'kPause' specifies that Protection Job should be paused.
          'kResume' specifies that Protection Job should be resumed.
        type: string
        enum:
        - kActivate
        - kDeactivate
        - kPause
        - kResume
        x-go-name: Action
        x-nullable: true
      jobIds:
        description: Specifies a list of Protection Job ids for which the state should
          change.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: JobIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateProtectionObjectParameters:
    description: Specifies the parameters to update a Protection Object.
    type: object
    title: Update Protection Object Parameters
    required:
    - protectedSourceUid
    properties:
      pauseBackup:
        description: Specifies if the protection for the Protection Object is to be
          paused.
        type: boolean
        x-go-name: PauseBackup
        x-nullable: true
      protectedSourceUid:
        description: Specifies the unique id of the Protected Source to be updated.
        x-nullable: true
        $ref: '#/definitions/UniversalId'
      rpoPolicyId:
        description: Specifies the unique id of the new RPO policy to assign to the
          object.
        type: string
        x-go-name: RpoPolicyId
        x-nullable: true
      sourceParameters:
        description: Specifies the additional special settings for a Protected Source.
        type: array
        items:
          $ref: '#/definitions/SourceSpecialParameter'
        x-go-name: SourceParameters
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateProtectionSourceParameters:
    description: |-
      UpdateProtectionSourceParameters defines a public data definition
      for updating protection source.
    type: object
    title: Update Protection Source Parameters.
    properties:
      agentEndpoint:
        description: Specifies the agent endpoint if it is different from the source
          endpoint.
        type: string
        x-go-name: AgentEndpoint
        x-nullable: true
      awsCredentials:
        description: Specifies credentials needed to authenticate with AWS Cloud Platform.
        title: AWS Source Credentials.
        x-nullable: true
        $ref: '#/definitions/AwsCredentials'
      awsFleetParams:
        description: |-
          Specifies information related to AWS fleets launched for various purposes.
          This will only be set for kIAMUser entity.
        x-nullable: true
        $ref: '#/definitions/AwsFleetParams'
      azureCredentials:
        description: Specifies credentials needed to authenticate with Azure Cloud
          Platform.
        title: Azure Source Credentials.
        x-nullable: true
        $ref: '#/definitions/AzureCredentials'
      blacklistedIpAddresses:
        description: |-
          Specifies the list of IP Addresses on the registered source to be
          blacklisted for doing any type of IO operations.
        type: array
        items:
          type: string
        x-go-name: BlacklistedIpAddresses
        x-nullable: true
      clusterNetworkInfo:
        description: |-
          Specifies information related to cluster. This is only valid for CE
          clusters. This is only populated for kIAMUser entity.
        x-nullable: true
        $ref: '#/definitions/FleetNetworkParams'
      endpoint:
        description: |-
          Specifies the network endpoint of the Protection Source where it is
          reachable. It could be an URL or hostname or an IP address of the
          Protection Source.
        type: string
        x-go-name: Endpoint
        x-nullable: true
      exchangeDagProtectionPreference:
        description: |-
          Specifies information about the preference order while choosing
          between which database copy of the exchange database which is part of
          DAG should be protected.
        x-nullable: true
        $ref: '#/definitions/ExchangeDAGProtectionPreference'
      forceRegister:
        description: |-
          ForceRegister is applicable to Physical Environment. By default, the agent
          running on a physical host will fail the registration, if it is already
          registered as part of another cluster. By setting this option to true,
          agent can be forced to register with the current cluster. This is a hidden
          parameter and should not be documented externally.
        type: boolean
        x-go-name: ForceRegister
        x-nullable: true
      gcpCredentials:
        description: Specifies credentials needed to authenticate with Google Cloud
          Platform.
        title: GCP Source Credentials.
        x-nullable: true
        $ref: '#/definitions/GcpCredentials'
      hostType:
        description: |-
          Specifies the optional OS type of the Protection Source (such as kWindows
          or kLinux).
          overrideDescription: true
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      kubernetesCredentials:
        description: Specifies the credentials needed to authenticate a Kubernetes
          cluster.
        title: Kubernetes Source Credentials.
        x-nullable: true
        $ref: '#/definitions/KubernetesCredentials'
      minimumFreeSpaceGB:
        description: |-
          Specifies the minimum space in GB after which backup jobs will be canceled
          due to low space.
        type: integer
        format: int64
        x-go-name: MinimumFreeSpaceGB
        x-nullable: true
      nasMountCredentials:
        description: |-
          Specifies the server credentials to connect to a NetApp server.
          This field is required for mounting SMB volumes on NetApp servers.
        title: NAS Server Credentials.
        allOf:
        - $ref: '#/definitions/NasMountCredentialParams'
        x-nullable: true
      office365CredentialsList:
        description: |-
          Office365 Source Credentials.

          Specifies credentials needed to authenticate & authorize user for
          Office365 using MS Graph APIs.
        type: array
        items:
          $ref: '#/definitions/Office365Credentials'
        x-go-name: Office365CredentialsList
        x-nullable: true
      office365Region:
        description: Specifies the region for Office365.
        type: string
        x-go-name: Office365Region
        x-nullable: true
      password:
        description: Specifies password of the username to access the target source.
        type: string
        x-go-name: Password
        x-nullable: true
      reRegister:
        description: |-
          ReRegister is applicable to Physical Environment. By default, the
          agent running on a physical host will fail the registration, if it is
          already registered with the cluster. By setting this option to true, agent
          can be re-registered with the current cluster.
        type: boolean
        x-go-name: ReRegister
        x-nullable: true
      sourceSideDedupEnabled:
        description: |-
          This controls whether to use source side dedup on the source or not.
          This is only applicable to sources which support source side dedup
          (e.g., Linux physical servers).
        type: boolean
        x-go-name: SourceSideDedupEnabled
        x-nullable: true
      sslVerification:
        description: |-
          SSL verification parameter is applicable to VMware environment. It can be
          populated with the server's CA certificate or certificate chain and
          vCenter's certificate will be validated against this.
        x-nullable: true
        $ref: '#/definitions/SslVerification'
      subnets:
        description: |-
          Specifies the list of subnet IP addresses and CIDR prefix for enabeling
          network data transfer. Currently, only Subnet IP and NetbaskBits are valid
          input fields. All other fields provided as input will be ignored.
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: Subnets
        x-nullable: true
      throttlingPolicy:
        description: Specifies the throttling policy that should be applied to this
          Source.
        allOf:
        - $ref: '#/definitions/ThrottlingPolicyParameters'
        x-nullable: true
      throttlingPolicyOverrides:
        description: |-
          Array of Throttling Policy Overrides for Datastores.

          Specifies a list of Throttling Policy for datastores that override the
          common throttling policy specified for the registered Protection Source.
          For datastores not in this list, common policy will still apply.
        type: array
        items:
          $ref: '#/definitions/ThrottlingPolicyOverride'
        x-go-name: ThrottlingPolicyOverrides
        x-nullable: true
      useOAuthForExchangeOnline:
        description: |-
          Specifies whether OAuth should be used for authentication in case of
          Exchange Online.
        type: boolean
        x-go-name: UseOAuthForExchangeOnline
        x-nullable: true
      username:
        description: Specifies username to access the target source.
        type: string
        x-go-name: Username
        x-nullable: true
      vlanParams:
        description: |-
          Specifies the VLAN parameters to be used while taking the backup of this
          entity and is the preferred selection for restoring the same.
          For restores, the VLAN parameters specifed here can be overridden.
          Currently, this is only applicable for Physical hosts running Oracle.
        x-nullable: true
        $ref: '#/definitions/VlanParameters'
    x-go-package: cohesity/iris/server/data/public
  UpdateResolutionParams:
    description: |-
      Apply an existing Resolution to a new list of Alerts, which are specified by
      Alert Ids.
    type: object
    title: Update Alert Resolution Request.
    properties:
      alertIdList:
        description: Specifies the Alerts to resolve, which are specified by Alert
          Ids.
        type: array
        items:
          type: string
        x-go-name: AlertIdList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateRestoreTaskParams:
    description: |-
      UpdateRestoreTaskParams holds the information to update a Restore Task in
      Magneto.
    type: object
    properties:
      adOptions:
        description: Specifies the Active Directory options to update the Restore
          Task with.
        x-nullable: true
        $ref: '#/definitions/AdRestoreOptions'
      enableAutoSync:
        description: Enables Auto Sync feature for SQL Multi-stage Restore task.
        type: boolean
        x-go-name: EnableAutoSync
        x-nullable: true
      restoreTaskId:
        description: Specifies the ID of the existing Restore Task to update.
        type: integer
        format: int64
        x-go-name: RestoreTaskId
        x-nullable: true
      sqlOptions:
        description: |-
          Specifies the sql options to update the Restore Task with.
          Specifies the action type of multi stage SQL restore.

          'kCreate' specifies the create action for a restore.
          'kUpdate' specifies the user action to update an ongoing restore.
          'kFinalize' specifies the user action to finalize a restore.
        type: string
        enum:
        - kCreate
        - kUpdate
        - kFinalize
        x-go-name: SqlOptions
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateSourcesForPrincipalsParams:
    description: |-
      Set Access Permissions for Principals.
      Specifies a list of principals to set access permissions for.
      For each principal, set the Protection Sources and View names
      that the specified principal has permissions to access.
    type: object
    title: Update Sources for Principal Parameters.
    properties:
      sourcesForPrincipals:
        description: |-
          Array of Principals, Sources and Views.

          Specifies a list of principals. For each principal, specify
          the Protection Sources and Views that the principal has
          permissions to access.
        type: array
        items:
          $ref: '#/definitions/SourceForPrincipalParam'
        x-go-name: SourcesForPrincipals
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateTrustedDomainEnableParams:
    description: Specifies the params to update trusted domain enable flag.
    type: object
    title: Update trusted domain enable flag request.
    properties:
      trustedDomainsEnabled:
        description: Request to update enable trusted domains state of an Active Directory.
        type: boolean
        x-go-name: TrustedDomainsEnabled
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateUserQuotaSettingsForView:
    description: Specifies the parameters to update user quota metadata in a view.
    type: object
    title: Update User Quota Settings For View.
    properties:
      defaultUserQuotaPolicy:
        description: The default user quota policy for this view.
        x-nullable: true
        $ref: '#/definitions/QuotaPolicy'
      enableUserQuota:
        description: |-
          If set, it enables/disables the user quota overrides for a view.
          Otherwise, it leaves it at it's previous state.
        type: boolean
        x-go-name: EnableUserQuota
        x-nullable: true
      inheritDefaultPolicyFromViewbox:
        description: |-
          If set to true, the default_policy in view metadata will be cleared and
          the default policy from viewbox will take effect for all users in the
          view.
        type: boolean
        x-go-name: InheritDefaultPolicyFromViewbox
        x-nullable: true
      viewName:
        description: View name of input view.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateViewAliasParam:
    description: Specifies the parameters of updating view alias op.
    type: object
    title: UpdateViewAliasParam.
    properties:
      aliasName:
        description: Name of the alias to be updated.
        type: string
        x-go-name: AliasName
        x-nullable: true
      enableSmbEncryption:
        description: |-
          Specifies the SMB encryption for the View Alias. If set, it enables the
          SMB encryption for the View Alias. Encryption is supported only by SMB 3.x
          dialects. Dialects that do not support would still access data in
          unencrypted format.
        type: boolean
        x-go-name: EnableSmbEncryption
        x-nullable: true
      enableSmbViewDiscovery:
        description: If set, it enables discovery of view alias for SMB.
        type: boolean
        x-go-name: EnableSmbViewDiscovery
        x-nullable: true
      enforceSmbEncryption:
        description: |-
          Specifies the SMB encryption for all the sessions for the View Alias.
          If set, encryption is enforced for all the sessions for the View Alias.
          When enabled all future and existing unencrypted sessions are disallowed.
        type: boolean
        x-go-name: EnforceSmbEncryption
        x-nullable: true
      sharePermissions:
        description: Specifies a list of share level permissions.
        type: array
        items:
          $ref: '#/definitions/SmbPermission'
        x-go-name: SharePermissions
        x-nullable: true
      subnetWhitelist:
        description: |-
          Specifies a list of Subnets with IP addresses that have permissions to
          access the View Alias. (Overrides the Subnets specified at the global
          Cohesity Cluster level and View level.)
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: SubnetWhitelist
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpdateViewParam:
    description: Specifies the settings that define a View.
    type: object
    title: View.
    properties:
      accessSids:
        description: |-
          Array of Security Identifiers (SIDs)

          Specifies the list of security identifiers (SIDs) for the restricted
          Principals who have access to this View.
        type: array
        items:
          type: string
        x-go-name: AccessSids
        x-nullable: true
      antivirusScanConfig:
        description: Specifies the antivirus scan config settings for this View.
        x-nullable: true
        $ref: '#/definitions/AntivirusScanConfig'
      description:
        description: Specifies an optional text description about the View.
        type: string
        x-go-name: Description
        x-nullable: true
      enableFastDurableHandle:
        description: |-
          Specifies whether fast durable handle is enabled. If enabled, view open
          handle will be kept in memory, which results in a higher performance. But
          the handles cannot be recovered if node or service crashes.
        type: boolean
        x-go-name: EnableFastDurableHandle
        x-nullable: true
      enableFilerAuditLogging:
        description: Specifies if Filer Audit Logging is enabled for this view.
        type: boolean
        x-go-name: EnableFilerAuditLogging
        x-nullable: true
      enableLiveIndexing:
        description: Specifies whether to enable live indexing for the view.
        type: boolean
        x-go-name: EnableLiveIndexing
        x-nullable: true
      enableMixedModePermissions:
        description: |-
          If set, mixed mode (NFS and SMB) access is enabled for this view.
          This field is deprecated. Use the field SecurityMode.
          deprecated: true
        type: boolean
        x-go-name: EnableMixedModePermissions
        x-nullable: true
      enableNfsViewDiscovery:
        description: If set, it enables discovery of view for NFS.
        type: boolean
        x-go-name: EnableNfsViewDiscovery
        x-nullable: true
      enableOfflineCaching:
        description: Specifies whether to enable offline file caching of the view.
        type: boolean
        x-go-name: EnableOfflineCaching
        x-nullable: true
      enableSmbAccessBasedEnumeration:
        description: |-
          Specifies if access-based enumeration should be enabled.
          If 'true', only files and folders that the user has permissions to
          access are visible on the SMB share for that user.
        type: boolean
        x-go-name: EnableSmbAccessBasedEnumeration
        x-nullable: true
      enableSmbEncryption:
        description: |-
          Specifies the SMB encryption for the View. If set, it enables the SMB
          encryption for the View. Encryption is supported only by SMB 3.x dialects.
          Dialects that do not support would still access data in unencrypted
          format.
        type: boolean
        x-go-name: EnableSmbEncryption
        x-nullable: true
      enableSmbOplock:
        description: Specifies whether SMB opportunistic lock is enabled.
        type: boolean
        x-go-name: EnableSmbOplock
        x-nullable: true
      enableSmbViewDiscovery:
        description: If set, it enables discovery of view for SMB.
        type: boolean
        x-go-name: EnableSmbViewDiscovery
        x-nullable: true
      enforceSmbEncryption:
        description: |-
          Specifies the SMB encryption for all the sessions for the View.
          If set, encryption is enforced for all the sessions for the View. When
          enabled all future and existing unencrypted sessions are disallowed.
        type: boolean
        x-go-name: EnforceSmbEncryption
        x-nullable: true
      fileExtensionFilter:
        description: |-
          Optional filtering criteria that should be satisfied by all the files
          created in this view. It does not affect existing files.
        x-nullable: true
        $ref: '#/definitions/FileExtensionFilter'
      fileLockConfig:
        description: |-
          Optional config that enables file locking for this view. It cannot be
          disabled during the edit of a view, if it has been enabled during the
          creation of the view. Also, it cannot be enabled if it was disabled
          during the creation of the view.
        x-nullable: true
        $ref: '#/definitions/FileLevelDataLockConfig'
      logicalQuota:
        description: |-
          Specifies an optional logical quota limit (in bytes) for the usage allowed
          on this View.
          (Logical data is when the data is fully hydrated and expanded.)
          This limit overrides the limit inherited from the Storage Domain
          (View Box) (if set).
          If logicalQuota is nil, the limit is inherited from the
          Storage Domain (View Box) (if set).
          A new write is not allowed if the Storage Domain (View Box) will exceed the
          specified quota.
          However, it takes time for the Cohesity Cluster to calculate
          the usage across Nodes, so the limit may be exceeded by a small amount.
          In addition, if the limit is increased or data is removed,
          there may be a delay before the Cohesity Cluster allows more data
          to be written to the View, as the Cluster is calculating the usage
          across Nodes.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      netgroupWhitelist:
        description: |-
          Array of Netgroups.

          Specifies a list of Netgroups that have permissions to access the
          View. (Overrides the Netgroups specified at the global Cohesity
          Cluster level.)
        type: array
        items:
          $ref: '#/definitions/NisNetgroup'
        x-go-name: NetgroupWhitelist
        x-nullable: true
      nfsAllSquash:
        description: Specifies the NFS all squash config.
        x-nullable: true
        $ref: '#/definitions/NfsSquash'
      nfsRootPermissions:
        description: Specifies the NFS root permission config of the view file system.
        x-nullable: true
        $ref: '#/definitions/NfsRootPermissions'
      nfsRootSquash:
        description: Specifies the NFS root squash config.
        x-nullable: true
        $ref: '#/definitions/NfsSquash'
      overrideGlobalNetgroupWhitelist:
        description: |-
          Specifies whether view level client netgroup whitelist overrides cluster
          and global setting.
        type: boolean
        x-go-name: OverrideGlobalNetgroupWhitelist
        x-nullable: true
      overrideGlobalWhitelist:
        description: |-
          Specifies whether view level client subnet whitelist overrides cluster and
          global setting.
        type: boolean
        x-go-name: OverrideGlobalWhitelist
        x-nullable: true
      protocolAccess:
        description: |-
          Specifies the supported Protocols for the View.
          'kAll' enables protocol access to following three views: NFS, SMB and S3.
          'kNFSOnly' enables protocol access to NFS only.
          'kSMBOnly' enables protocol access to SMB only.
          'kS3Only' enables protocol access to S3 only.
          'kSwiftOnly' enables protocol access to Swift only.
        type: string
        enum:
        - kAll
        - kNFSOnly
        - kSMBOnly
        - kS3Only
        - kSwiftOnly
        x-go-name: ProtocolAccess
        x-nullable: true
      qos:
        description: Specifies the Quality of Service (QoS) Policy for the View.
        x-nullable: true
        $ref: '#/definitions/QoS'
      securityMode:
        description: |-
          Specifies the security mode used for this view.
          Currently we support the following modes: Native, Unified and NTFS style.
          'kNativeMode' indicates a native security mode.
          'kUnifiedMode' indicates a unified security mode.
          'kNtfsMode' indicates a NTFS style security mode.
        type: string
        enum:
        - kNativeMode
        - kUnifiedMode
        - kNtfsMode
        x-go-name: SecurityMode
        x-nullable: true
      sharePermissions:
        description: Specifies a list of share level permissions.
        type: array
        items:
          $ref: '#/definitions/SmbPermission'
        x-go-name: SharePermissions
        x-nullable: true
      smbPermissionsInfo:
        description: Specifies the SMB permissions for the View.
        x-nullable: true
        $ref: '#/definitions/SmbPermissionsInfo'
      storagePolicyOverride:
        description: |-
          Specifies if inline deduplication and compression settings inherited from
          the Storage Domain (View Box) should be disabled for this View.
        x-nullable: true
        $ref: '#/definitions/StoragePolicyOverride'
      subnetWhitelist:
        description: |-
          Array of Subnets.

          Specifies a list of Subnets with IP addresses that have permissions to
          access the View. (Overrides the Subnets specified at the global
          Cohesity Cluster level.)
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: SubnetWhitelist
        x-nullable: true
      swiftProjectDomain:
        description: Specifies the Keystone project domain.
        type: string
        x-go-name: SwiftProjectDomain
        x-nullable: true
      swiftProjectName:
        description: Specifies the Keystone project name.
        type: string
        x-go-name: SwiftProjectName
        x-nullable: true
      tenantId:
        description: Optional tenant id who has access to this View.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewLockEnabled:
        description: |-
          Specifies whether view lock is enabled. If enabled the view cannot be
          modified or deleted until unlock. By default it is disabled.
        type: boolean
        x-go-name: ViewLockEnabled
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpgradeClusterParameters:
    description: Specifies the parameters needed for a Cluster Upgrade request.
    type: object
    title: Upgrade Cluster Parameters.
    required:
    - targetSwVersion
    properties:
      targetSwVersion:
        description: |-
          Specifies the target software version. If specified, all Nodes on the
          Cluster will be searched to see if they have had the specified software
          package uploaded to them. If the specified package is found, then it
          will be used for the upgrade.
        type: string
        x-go-name: TargetSwVersion
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpgradeClusterResult:
    description: Specifies the result returned from a request to upgrade a Cluster.
    type: object
    title: Upgrade Cluster Result.
    properties:
      message:
        description: Specifies a message describing the result of the request.
        type: string
        x-go-name: Message
        x-nullable: true
      statusUrl:
        description: |-
          Specifies the URL that can be queried to get the status of the operation
          once it has begun.
        type: string
        x-go-name: StatusUrl
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpgradeNodeParameters:
    description: Specifies the parameters needed for a Node upgrade request.
    type: object
    title: Upgrade Node Parameters.
    properties:
      nodeIds:
        description: |-
          Specifies a list of IDs of additional nodes to be upgraded. These must
          be free Nodes present on the same local network as the Node that the
          request was sent to. The ID of the Node the request was sent to should
          not be included in this list. This parameter can only be specified if
          upgradeAllFreeNodes is not.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: NodeIds
        x-nullable: true
      targetSwVersion:
        description: |-
          Specifies the target software version. The node that the request is sent
          to will search itself for the specified software package and if that
          package is found, it will be used for the upgrade.
        type: string
        x-go-name: TargetSwVersion
        x-nullable: true
      upgradeAllFreeNodes:
        description: |-
          Specifies whether or not to attempt to upgrade all free nodes which
          are currently connected to the same local network as the node that the
          request was sent to. This parameter can only be specified if nodeIds
          is not.
        type: boolean
        x-go-name: UpgradeAllFreeNodes
        x-nullable: true
      upgradeSelf:
        description: |-
          Specifies that the node that the request is being sent to should be
          upgraded. By default, this is set to true.
        type: boolean
        x-go-name: UpgradeSelf
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpgradeNodeResult:
    description: Specifies the result returned from a request to upgrade a Node.
    type: object
    title: Upgrade Node Result.
    properties:
      message:
        description: Specifies a message describing the result of the request.
        type: string
        x-go-name: Message
        x-nullable: true
      statusUrl:
        description: |-
          Specifies a URL that can be queried to get the status of the operation
          once it has begun.
        type: string
        x-go-name: StatusUrl
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpgradePhysicalAgentsMessage:
    description: Specifies the status of an upgrade request.
    type: object
    title: Status of Physical Upgrade Request.
    properties:
      message:
        description: |-
          Specifies the status message returned after initiating an upgrade request.
          Status of each agent upgrade can be obtained by listing Physical Servers
          using the GET /public/protectionSources operation.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UpgradePhysicalServerAgents:
    description: |-
      Specifies a request to upgrade the Cohesity agents on one or more
      Physical Servers registered on the Cohesity Cluster.
    type: object
    title: Upgrade Physical Server Agents Request.
    required:
    - agentIds
    properties:
      agentIds:
        description: |-
          Array of Agent Ids.

          Specifies a list of agentIds associated with the Physical Servers
          to upgrade with the agent release currently available
          from the Cohesity Cluster.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: AgentIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UploadMRJarViewPathWrapper:
    description: |-
      UploadMRJarViewPathWrapper contains jar name and local mount path where the
      Jars will be uploaded.
    type: object
    title: Upload JAR Request.
    properties:
      jarName:
        description: JarName is the name of the uploaded jar.
        type: string
        x-go-name: JarName
        x-nullable: true
      jarPath:
        description: JarPath is the path for the directory where uploaded jar is stored.
        type: string
        x-go-name: JarPath
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UploadPackageResult:
    description: Specifies the result of a request to upload a package to a Cluster.
    type: object
    title: Upload Package Result.
    properties:
      message:
        description: |-
          Specifies a message describing the result of the request to upload
          a package to a Cluster.
        type: string
        x-go-name: Message
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UsageAndPerformanceStats:
    description: |-
      Provides usage and performance statistics
      for entities such as a disks, Nodes or Clusters.
    type: object
    title: Usage and Performance Statistics
    properties:
      dataInBytes:
        description: |-
          Specifies the data read from the protected objects by the Cohesity Cluster
          before any data reduction using deduplication and compression.
        type: integer
        format: int64
        x-go-name: DataInBytes
        x-nullable: true
      dataInBytesAfterReduction:
        description: |-
          Morphed Usage before data is replicated to other nodes as per RF or
          Erasure Coding policy.
        type: integer
        format: int64
        x-go-name: DataInBytesAfterReduction
        x-nullable: true
      minUsablePhysicalCapacityBytes:
        description: |-
          Specifies the minimum usable capacity available
          after erasure coding or RF. This will only be populated for cluster.
          If a cluster has multiple Domains (View Boxes) with different RF or
          erasure coding, this metric will be computed using the scheme that will
          provide least saving.
        type: integer
        format: int64
        x-go-name: MinUsablePhysicalCapacityBytes
        x-nullable: true
      numBytesRead:
        description: Provides the total number of bytes read in the last 30 seconds.
        type: integer
        format: int64
        x-go-name: NumBytesRead
        x-nullable: true
      numBytesWritten:
        description: Provides the total number of bytes written in the last 30 second.
        type: integer
        format: int64
        x-go-name: NumBytesWritten
        x-nullable: true
      physicalCapacityBytes:
        description: |-
          Provides the total physical capacity in bytes of all the storage devices,
          after subtracting space reserved for cluster services
        type: integer
        format: int64
        x-go-name: PhysicalCapacityBytes
        x-nullable: true
      readIos:
        description: Provides the number of Read IOs that occurred in the last 30
          seconds.
        type: integer
        format: int64
        x-go-name: ReadIos
        x-nullable: true
      readLatencyMsecs:
        description: |-
          Provides the Read latency in milliseconds for the Read IOs that occurred
          during the last 30 seconds.
        type: number
        format: double
        x-go-name: ReadLatencyMsecs
        x-nullable: true
      systemCapacityBytes:
        description: |-
          Provides the total available capacity as computed by
          the Linux 'statfs' command.
        type: integer
        format: int64
        x-go-name: SystemCapacityBytes
        x-nullable: true
      systemUsageBytes:
        description: |-
          Provides the usage of bytes, as computed by the Linux 'statfs' command,
          after the size of the data is reduced by
          change-block tracking, compression and deduplication.
        type: integer
        format: int64
        x-go-name: SystemUsageBytes
        x-nullable: true
      totalPhysicalRawUsageBytes:
        description: |-
          Provides the usage of bytes, as computed by the Cohesity Cluster,
          before the size of the data is reduced by
          change-block tracking, compression and deduplication.
        type: integer
        format: int64
        x-go-name: TotalPhysicalRawUsageBytes
        x-nullable: true
      totalPhysicalUsageBytes:
        description: |-
          Provides the data stored locally, after the data has been reduced by
          deduplication and compression, including the space required for honoring
          the resiliency settings (EC/RF).
        type: integer
        format: int64
        x-go-name: TotalPhysicalUsageBytes
        x-nullable: true
      writeIos:
        description: Provides the number of Write IOs that occurred in the last 30
          seconds.
        type: integer
        format: int64
        x-go-name: WriteIos
        x-nullable: true
      writeLatencyMsecs:
        description: |-
          Provides the Write latency in milliseconds for the Write IOs that occurred
          during the last 30 seconds.
        type: number
        format: double
        x-go-name: WriteLatencyMsecs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UsageSchemaInfo:
    description: UsageSchemaInfo describes the schema info of the usage.
    type: object
    title: UsageSchemaInfo
    properties:
      schemaInfoList:
        description: Specifies the list of the schema info for an entity.
        type: array
        items:
          $ref: '#/definitions/SchemaInfo'
        x-go-name: SchemaInfoList
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  User:
    description: Specifies details about a user.
    type: object
    title: User Details.
    properties:
      additionalGroupNames:
        description: |-
          Array of Additional Groups.

          Specifies the names of additional groups this User may belong to.
        type: array
        items:
          type: string
        x-go-name: AdditionalGroupNames
        x-nullable: true
      authenticationType:
        description: |-
          Specifies the authentication type of the user.
          'kAuthLocal' implies authenticated user is a local user.
          'kAuthAd' implies authenticated user is an Active Directory user.
          'kAuthSalesforce' implies authenticated user is a Salesforce user.
          'kAuthGoogle' implies authenticated user is a Google user.
          'kAuthSso' implies authenticated user is an SSO user.
        type: string
        enum:
        - kAuthLocal
        - kAuthAd
        - kAuthSalesforce
        - kAuthGoogle
        - kAuthSso
        x-go-name: AuthenticationType
        x-nullable: true
      clusterIdentifiers:
        description: |-
          Specifies the list of clusters this user has access to. If this is not
          specified, access will be granted to all clusters.
        type: array
        items:
          $ref: '#/definitions/ClusterIdentifier'
        x-go-name: ClusterIdentifiers
        x-nullable: true
      createdTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the user account
          was created on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: CreatedTimeMsecs
        x-nullable: true
      description:
        description: Specifies a description about the user.
        type: string
        x-go-name: Description
        x-nullable: true
      domain:
        description: |-
          Specifies the fully qualified domain name (FQDN) of an Active Directory
          or LOCAL for the default LOCAL domain on the Cohesity Cluster.
          A user is uniquely identified by combination of the username and
          the domain.
        type: string
        x-go-name: Domain
        x-nullable: true
      effectiveTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the user becomes
          effective. Until that time, the user cannot log in.
        type: integer
        format: int64
        x-go-name: EffectiveTimeMsecs
        x-nullable: true
      emailAddress:
        description: Specifies the email address of the user.
        type: string
        x-go-name: Email
        x-nullable: true
      expiredTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the user becomes
          expired. After that, the user cannot log in.
        type: integer
        format: int64
        x-go-name: ExpiredTimeMsecs
        x-nullable: true
      forcePasswordChange:
        description: Specifies whether to force user to change password.
        type: boolean
        x-go-name: ForcePasswordChange
        x-nullable: true
      googleAccount:
        description: |-
          Specifies additional information pertaining to Google account.
          This field is set only for Helios BaaS users who has account on Google.
        x-nullable: true
        $ref: '#/definitions/GoogleAccountInfo'
      groupRoles:
        description: |-
          Specifies the Cohesity roles to associate with the user' group. These
          roles can only be edited from group.
        type: array
        items:
          type: string
        x-go-name: GroupRoles
        x-nullable: true
        readOnly: true
      idpUserInfo:
        description: |-
          Specifies additional information pertaining to an IdP user.
          This field is set only for IdP users who has logged in via IdP.
        x-nullable: true
        $ref: '#/definitions/IdpUserInfo'
      lastUpdatedTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the user account was last
          modified on the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: LastUpdatedTimeMsecs
        x-nullable: true
      orgMembership:
        description: |-
          OrgMembership contains the list of all available tenantIds for this
          user to switch to. Only when creating the session user, this field is
          populated on the fly. We discover the tenantIds from various groups
          assigned to the users.
        type: array
        items:
          $ref: '#/definitions/TenantConfig'
        x-go-name: OrgMembership
        x-nullable: true
      password:
        description: Specifies the password of this user.
        type: string
        x-go-name: Password
        x-nullable: true
      preferences:
        description: Specifies preferences of the user.
        x-nullable: true
        $ref: '#/definitions/Preferences'
      primaryGroupName:
        description: Specifies the name of the primary group of this User.
        type: string
        x-go-name: PrimaryGroupName
        x-nullable: true
      privilegeIds:
        description: |-
          Array of Privileges.

          Specifies the Cohesity privileges from the roles. This will be populated
          based on the union of all privileges in roles.
          Type for unique privilege Id values.
          All below enum values specify a value for all uniquely defined
          privileges in Cohesity.
        type: array
        items:
          type: string
          enum:
          - kPrincipalView
          - kPrincipalModify
          - kAppLaunch
          - kAppsManagement
          - kOrganizationView
          - kOrganizationModify
          - kOrganizationImpersonate
          - kCloneView
          - kCloneModify
          - kClusterView
          - kClusterModify
          - kClusterCreate
          - kClusterSupport
          - kClusterUpgrade
          - kClusterRemoteView
          - kClusterRemoteModify
          - kClusterExternalTargetView
          - kClusterExternalTargetModify
          - kClusterAudit
          - kAlertView
          - kAlertModify
          - kVlanView
          - kVlanModify
          - kHybridExtenderView
          - kHybridExtenderDownload
          - kAdLdapView
          - kAdLdapModify
          - kSchedulerView
          - kSchedulerModify
          - kProtectionView
          - kProtectionModify
          - kProtectionJobOperate
          - kProtectionSourceModify
          - kProtectionPolicyView
          - kProtectionPolicyModify
          - kRestoreView
          - kRestoreModify
          - kRestoreDownload
          - kRemoteRestore
          - kStorageView
          - kStorageModify
          - kStorageDomainView
          - kStorageDomainModify
          - kAnalyticsView
          - kAnalyticsModify
          - kReportsView
          - kMcmModify
          - kDataSecurity
          - kSmbBackup
          - kSmbRestore
          - kSmbTakeOwnership
          - kSmbAuditing
          - kMcmUnregister
          - kMcmUpgrade
          - kMcmModifySuperAdmin
          - kMcmViewSuperAdmin
          - kMcmModifyCohesityAdmin
          - kMcmViewCohesityAdmin
          - kObjectSearch
          - kFileDatalockExpiryTimeDecrease
        x-go-name: PrivilegeIds
        x-nullable: true
      restricted:
        description: |-
          Whether the user is a restricted user. A restricted user can only view
          the objects he has permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with the user such as
          such as 'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for this user.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      s3AccessKeyId:
        description: Specifies the S3 Account Access Key ID.
        type: string
        x-go-name: S3AccessKeyId
        x-nullable: true
      s3AccountId:
        description: Specifies the S3 Account Canonical User ID.
        type: string
        x-go-name: S3AccountId
        x-nullable: true
      s3SecretKey:
        description: Specifies the S3 Account Secret Key.
        type: string
        x-go-name: S3SecretKey
        x-nullable: true
      salesforceAccount:
        description: |-
          Specifies additional information pertaining to Salesforce account.
          This field is set only for Helios users who has account on Salesforce.
        x-nullable: true
        $ref: '#/definitions/SalesforceAccountInfo'
      sid:
        description: |-
          Specifies the unique Security ID (SID) of the user. This field is
          mandatory in modifying user.
        type: string
        x-go-name: Sid
        x-nullable: true
      tenantId:
        description: Specifies the effective Tenant ID of the user.
        type: string
        x-go-name: TenantId
        x-nullable: true
      username:
        description: Specifies the login name of the user.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserDeleteParameters:
    description: Specifies the users to delete on the Cohesity Cluster.
    type: object
    title: Delete Users Request.
    properties:
      domain:
        description: |-
          Specifies the domain associated with the users to delete.
          Only users associated with the same domain can be deleted by a
          single request.
          If no domain is specified, the specified users are deleted from the
          LOCAL domain on the Cohesity Cluster.
          If a non-LOCAL domain is specified, the specified users are deleted
          on the Cohesity Cluster. However, the referenced user principals on the
          Active Directory are not deleted.
        type: string
        x-go-name: Domain
        x-nullable: true
      tenantId:
        description: Specifies the tenant for which the users are to be deleted.
        type: string
        x-go-name: TenantId
        x-nullable: true
      users:
        description: |-
          Array of Users.

          Specifies the list of users to delete on Cohesity Cluster.
          Only users from the same domain can be deleted by a single request.
        type: array
        items:
          type: string
        x-go-name: Usernames
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserId:
    description: Specifies the mapping between an Unix and an SMB SID.
    type: object
    title: User ID.
    properties:
      sid:
        description: |-
          If interested in a user via smb_client, include SID.
          Otherwise, If a valid unix-id to SID mappings are available (i.e., when
          mixed mode is enabled) the server will perform the necessary id mapping
          and return the correct usage irrespective of whether the unix id / SID is
          provided.
          The string is of following format -
          S-1-IdentifierAuthority-SubAuthority1-SubAuthority2-...-SubAuthorityn.
        type: string
        x-go-name: Sid
        x-nullable: true
      unixUid:
        description: |-
          If interested in a user via unix-identifier, include UnixUid.
          Otherwise, If a valid unix-id to SID mappings are available (i.e., when
          mixed mode is enabled) the server will perform the necessary id mapping
          and return the correct usage irrespective of whether the unix id / SID is
          provided.
        type: integer
        format: uint32
        x-go-name: UnixUid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserIdMapping:
    description: Specifies how the Unix and Windows users are mapped in an Active
      Directory.
    type: object
    title: User ID Mapping.
    properties:
      centrifyZoneMapping:
        description: |-
          Specifies a centrify zone when mapping type is set to 'kCentrify'. It
          defines a centrify zone from which the user id mapping info would be
          derived.
        x-nullable: true
        $ref: '#/definitions/CentrifyZone'
      customAttributesMapping:
        description: |-
          Specifies the custom attributes when mapping type is set to
          'kCustomAttributes'. It defines the attribute names to derive the mapping
          for a user of an Active Directory domain.
        x-nullable: true
        $ref: '#/definitions/CustomUnixIdAttributes'
      fixedMapping:
        description: |-
          Specifies the fields when mapping type is set to 'kFixed'. It maps all
          Active Directory users of this domain to a fixed uid, and gid.
        x-nullable: true
        $ref: '#/definitions/FixedUnixIdMapping'
      type:
        description: |-
          Specifies the mapping type used.
          'kRid' indicates the kRid mapping type.
          'kRfc2307' indicates the kRfc2307 mapping type.
          'kSfu30' indicates the kSfu30 mapping type.
          'kCentrify' indicates the mapping type to refer to a centrify zone.
          'kFixed' indicates the mapping from all Active Directory users to a fixed Unix uid, and gid.
          'kCustomAttributes' indicates the mapping to derive from custom attributes defined in an AD domain.
          'kLdapProvider' indicates the Active Directory to LDAP provider mapping.
        type: string
        enum:
        - kRid
        - kRfc2307
        - kSfu30
        - kCentrify
        - kFixed
        - kCustomAttributes
        - kLdapProvider
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserInfo:
    description: Specifies struct with basic user details.
    type: object
    title: User Information.
    properties:
      domain:
        description: Specifies domain name of the user.
        type: string
        x-go-name: Domain
        x-nullable: true
      sid:
        description: Specifies unique Security ID (SID) of the user.
        type: string
        x-go-name: Sid
        x-nullable: true
      tenantId:
        description: Specifies the tenant to which the user belongs to.
        type: string
        x-go-name: TenantId
        x-nullable: true
      userName:
        description: Specifies user name of the user.
        type: string
        x-go-name: UserName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserInformation:
    description: |-
      A message to encapsulate information about the user who made the request.
      Request should be filtered by these fields if specified so that only the
      objects that the user is permissioned for are returned. If both sid_vec &
      tenant_id are specified then an intersection of respective results should
      be returned.
    type: object
    title: User Information.
    properties:
      includeSubtenantObjects:
        description: |-
          Whether objects owned by subtenants should be returned. This would
          require a prefix search with the passed tenant_id.
          All tenants are considered sub-tenants of the admin. For GET requests, if
          tenant id is empty(admin user is querying) and if this flag is false, we
          will only return untagged objects. If it is true, we will return
          everything.
        type: boolean
        x-go-name: IncludeSubtenantObjects
        x-nullable: true
      pulseAttributeVec:
        description: |-
          Specifies the KeyValuePair that client (eg. Iris) wants to persist along
          with the corresponding (soon-to-be-created) Pulse task for the current
          action. Eg. pulse_attribute_vec can drive user notifications by
          associating a Pulse Task with user SID and later Pulse can be searched by
          client specified Sid to get all finished tasks for the logged in user.
        type: array
        items:
          $ref: '#/definitions/KeyValuePair'
        x-go-name: PulseAttributeVec
        x-nullable: true
      sidVec:
        description: |-
          If specified, only the objects associated with these SIDs should be
          returned.
        type: array
        items:
          $ref: '#/definitions/ClusterConfigProto_SID'
        x-go-name: SidVec
        x-nullable: true
      tenantIdVec:
        description: |-
          If specified, only the objects associated with this tenant should be
          returned. A given tenant ID is always a prefix of the ids of its
          subtenants. Eg. if tenant_id of cluster admin is empty string then it will
          be a prefix match for all the tenants on the cluster.
        type: array
        items:
          type: string
        x-go-name: TenantIdVec
        x-nullable: true
    x-go-package: magneto/base/permissions.pb
  UserParameters:
    description: |-
      Specifies the settings used to create/add a new user or modify an
      existing user.
    type: object
    title: User Request.
    properties:
      additionalGroupNames:
        description: |-
          Array of Additional Groups.

          Specifies the names of additional groups this User may belong to.
        type: array
        items:
          type: string
        x-go-name: AdditionalGroupNames
        x-nullable: true
      clusterIdentifiers:
        description: |-
          Specifies the list of clusters this user has access to. If this is not
          specified, access will be granted to all clusters.
        type: array
        items:
          $ref: '#/definitions/ClusterIdentifier'
        x-go-name: ClusterIdentifiers
        x-nullable: true
      description:
        description: Specifies a description about the user.
        type: string
        x-go-name: Description
        x-nullable: true
      domain:
        description: |-
          Specifies the fully qualified domain name (FQDN) of an Active Directory
          or LOCAL for the default LOCAL domain on the Cohesity Cluster.
          A user is uniquely identified by combination of the username and
          the domain.
        type: string
        x-go-name: Domain
        x-nullable: true
      effectiveTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the user becomes
          effective. Until that time, the user cannot log in.
        type: integer
        format: int64
        x-go-name: EffectiveTimeMsecs
        x-nullable: true
      emailAddress:
        description: Specifies the email address of the user.
        type: string
        x-go-name: Email
        x-nullable: true
      expiredTimeMsecs:
        description: |-
          Specifies the epoch time in milliseconds when the user becomes
          expired. After that, the user cannot log in.
        type: integer
        format: int64
        x-go-name: ExpiredTimeMsecs
        x-nullable: true
      password:
        description: Specifies the password of this user.
        type: string
        x-go-name: Password
        x-nullable: true
      primaryGroupName:
        description: Specifies the name of the primary group of this User.
        type: string
        x-go-name: PrimaryGroupName
        x-nullable: true
      privilegeIds:
        description: |-
          Array of Privileges.

          Specifies the Cohesity privileges from the roles. This will be populated
          based on the union of all privileges in roles.
          Type for unique privilege Id values.
          All below enum values specify a value for all uniquely defined
          privileges in Cohesity.
        type: array
        items:
          type: string
          enum:
          - kPrincipalView
          - kPrincipalModify
          - kAppLaunch
          - kAppsManagement
          - kOrganizationView
          - kOrganizationModify
          - kOrganizationImpersonate
          - kCloneView
          - kCloneModify
          - kClusterView
          - kClusterModify
          - kClusterCreate
          - kClusterSupport
          - kClusterUpgrade
          - kClusterRemoteView
          - kClusterRemoteModify
          - kClusterExternalTargetView
          - kClusterExternalTargetModify
          - kClusterAudit
          - kAlertView
          - kAlertModify
          - kVlanView
          - kVlanModify
          - kHybridExtenderView
          - kHybridExtenderDownload
          - kAdLdapView
          - kAdLdapModify
          - kSchedulerView
          - kSchedulerModify
          - kProtectionView
          - kProtectionModify
          - kProtectionJobOperate
          - kProtectionSourceModify
          - kProtectionPolicyView
          - kProtectionPolicyModify
          - kRestoreView
          - kRestoreModify
          - kRestoreDownload
          - kRemoteRestore
          - kStorageView
          - kStorageModify
          - kStorageDomainView
          - kStorageDomainModify
          - kAnalyticsView
          - kAnalyticsModify
          - kReportsView
          - kMcmModify
          - kDataSecurity
          - kSmbBackup
          - kSmbRestore
          - kSmbTakeOwnership
          - kSmbAuditing
          - kMcmUnregister
          - kMcmUpgrade
          - kMcmModifySuperAdmin
          - kMcmViewSuperAdmin
          - kMcmModifyCohesityAdmin
          - kMcmViewCohesityAdmin
          - kObjectSearch
          - kFileDatalockExpiryTimeDecrease
        x-go-name: PrivilegeIds
        x-nullable: true
      restricted:
        description: |-
          Whether the user is a restricted user. A restricted user can only view
          the objects he has permissions to.
        type: boolean
        x-go-name: Restricted
        x-nullable: true
      roles:
        description: |-
          Array of Roles.

          Specifies the Cohesity roles to associate with the user such as
          such as 'Admin', 'Ops' or 'View'.
          The Cohesity roles determine privileges on the Cohesity Cluster
          for this user.
        type: array
        items:
          type: string
        x-go-name: Roles
        x-nullable: true
      username:
        description: Specifies the login name of the user.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserPreferencesResult:
    description: Specifies the result of user preference.
    type: object
    title: User Preferences Result
    properties:
      preferences:
        description: Preferences is a key-value map of preferences.
        type: object
        additionalProperties:
          type: string
        x-go-name: Preferences
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserQuota:
    description: Specifies the quota policy applied to a user.
    type: object
    title: User Quota Policy.
    properties:
      quotaPolicy:
        description: User quota policy applied to this user.
        x-nullable: true
        $ref: '#/definitions/QuotaPolicy'
      sid:
        description: |-
          If interested in a user via smb_client, include SID.
          Otherwise, If a valid unix-id to SID mappings are available (i.e., when
          mixed mode is enabled) the server will perform the necessary id mapping
          and return the correct usage irrespective of whether the unix id / SID is
          provided.
          The string is of following format -
          S-1-IdentifierAuthority-SubAuthority1-SubAuthority2-...-SubAuthorityn.
        type: string
        x-go-name: Sid
        x-nullable: true
      unixUid:
        description: |-
          If interested in a user via unix-identifier, include UnixUid.
          Otherwise, If a valid unix-id to SID mappings are available (i.e., when
          mixed mode is enabled) the server will perform the necessary id mapping
          and return the correct usage irrespective of whether the unix id / SID is
          provided.
        type: integer
        format: uint32
        x-go-name: UnixUid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserQuotaAndUsage:
    description: |-
      Specifies the quota override and usage statistics
      for a particular user.
    type: object
    title: User Quota And Usage.
    properties:
      quotaPolicy:
        description: User quota policy applied to this user.
        x-nullable: true
        $ref: '#/definitions/QuotaPolicy'
      sid:
        description: |-
          If interested in a user via smb_client, include SID.
          Otherwise, If a valid unix-id to SID mappings are available (i.e., when
          mixed mode is enabled) the server will perform the necessary id mapping
          and return the correct usage irrespective of whether the unix id / SID is
          provided.
          The string is of following format -
          S-1-IdentifierAuthority-SubAuthority1-SubAuthority2-...-SubAuthorityn.
        type: string
        x-go-name: Sid
        x-nullable: true
      unixUid:
        description: |-
          If interested in a user via unix-identifier, include UnixUid.
          Otherwise, If a valid unix-id to SID mappings are available (i.e., when
          mixed mode is enabled) the server will perform the necessary id mapping
          and return the correct usage irrespective of whether the unix id / SID is
          provided.
        type: integer
        format: uint32
        x-go-name: UnixUid
        x-nullable: true
      usageBytes:
        description: Current logical usage of user id in the input view.
        type: integer
        format: int64
        x-go-name: UsageBytes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserQuotaSettings:
    description: Specifies the quota settings parameters for a particular user.
    type: object
    title: User Quota Settings.
    properties:
      defaultUserQuotaPolicy:
        description: The default user quota policy for this view.
        x-nullable: true
        $ref: '#/definitions/QuotaPolicy'
      enableUserQuota:
        description: |-
          If set, it enables/disables the user quota overrides for a view.
          Otherwise, it leaves it at it's previous state.
        type: boolean
        x-go-name: EnableUserQuota
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserQuotaSummaryForUser:
    description: Speifies the summary of quota information for a particular user.
    type: object
    title: User Quota Summary For User.
    properties:
      numViewsAboveAlertThreshold:
        description: Number of views in which user has exceeded alert threshold limit.
        type: integer
        format: uint32
        x-go-name: NumViewsAboveAlertThreshold
        x-nullable: true
      numViewsAboveHardLimit:
        description: Number of views in which the user has exceeded hard limit.
        type: integer
        format: uint32
        x-go-name: NumViewsAboveHardLimit
        x-nullable: true
      totalNumViews:
        description: |-
          Total number of views in which the user has a quota policy specified
          or has non-zero usage.
        type: integer
        format: uint32
        x-go-name: TotalNumViews
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserQuotaSummaryForView:
    description: Specifies the user quota summary information/result for a view.
    type: object
    title: User Quota Summary For View.
    properties:
      defaultUserQuotaPolicy:
        description: |-
          Default quota policy applied to all the users in the view who doesn't
          have a policy override.
        x-nullable: true
        $ref: '#/definitions/QuotaPolicy'
      numUsersAboveAlertThreshold:
        description: Number of users who has exceeded their specified alert limit.
        type: integer
        format: int64
        x-go-name: NumUsersAboveAlertThreshold
        x-nullable: true
      numUsersAboveHardLimit:
        description: Number of users who has exceeded their specified quota hard limit.
        type: integer
        format: int64
        x-go-name: NumUsersAboveHardLimit
        x-nullable: true
      totalNumUsers:
        description: |-
          Total number of users who has either a user quota policy override
          specified or has non-zero logical usage.
        type: integer
        format: int64
        x-go-name: TotalNumUsers
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UserSshKey:
    description: UserSshKey specifies username and ssh key.
    type: object
    title: User ssh key info.
    properties:
      sshKey:
        description: Specifies SSH key needed to be added to the username passed.
        type: string
        x-go-name: SshKey
        x-nullable: true
      username:
        description: Specifies name of the user to add.
        type: string
        x-go-name: Username
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  UuidConfigProto:
    type: object
    title: Proto to specify UUID config of an object.
    properties:
      preserveUuid:
        type: boolean
        x-go-name: PreserveUuid
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  VCloudDirectorInfo:
    type: object
    title: VCloudDirectorInfo Information.
    properties:
      endpoint:
        description: vCenter endpoint.
        type: string
        x-go-name: Endpoint
        x-nullable: true
      name:
        description: vCenter name.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VMwareBackupEnvParams:
    description: Message to capture any additional backup params for a VMware environment.
    type: object
    title: VMware Backup Environment Parameters.
    properties:
      allowCrashConsistentSnapshot:
        description: |-
          Whether to fallback to take a crash-consistent snapshot incase taking
          an app-consistent snapshot fails.
        type: boolean
        x-go-name: AllowCrashConsistentSnapshot
        x-nullable: true
      allowNbdsslTransportFallback:
        description: |-
          Whether to fallback to use NBDSSL transport for backup in case using
          SAN transport backup fails.
        type: boolean
        x-go-name: AllowNbdsslTransportFallback
        x-nullable: true
      allowVmsWithPhysicalRdmDisks:
        description: |-
          Physical RDM disks cannot be backed up using VADP. By default the backups
          of such VMs will fail. If this is set to true, then such VMs in this
          backup job will be backed up by excluding the physical RDM disks.
        type: boolean
        x-go-name: AllowVmsWithPhysicalRdmDisks
        x-nullable: true
      vmwareDiskExclusionInfo:
        description: |-
          List of Virtual Disk(s) to be excluded from the backup job. These disks
          will be excluded for all VMs in this environment unless overriden by the
          disk exclusion list from BackupSourceParams.VMwareBackupSourceParams.
        type: array
        items:
          $ref: '#/definitions/VMwareDiskExclusionProto'
        x-go-name: VmwareDiskExclusionInfo
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  VMwareBackupSourceParams:
    description: Message to capture additional backup params for a VMware type source.
    type: object
    title: VMware Backup Source Parameters.
    properties:
      sourceAppParams:
        description: |-
          This message will capture params for applications that are running as
          part of the server.
        x-nullable: true
        $ref: '#/definitions/SourceAppParams'
      vmCredentials:
        description: |-
          Target entity credentials.
          This should usually be set if the source_app_params is set, i.e any
          additional operations that require access within the guest.
        x-nullable: true
        $ref: '#/definitions/Credentials'
      vmwareDiskExclusionInfo:
        description: |-
          List of Virtual Disk(s) to be excluded from the backup job for the source.
          Overrides the exclusion list requested (if any) through
          EnvBackupParams.VMwareBackupEnvParams.
        type: array
        items:
          $ref: '#/definitions/VMwareDiskExclusionProto'
        x-go-name: VmwareDiskExclusionInfo
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  VMwareDiskExclusionProto:
    description: |-
      This message contains basic info of the disk to be excluded from backup.
      The info contained here:
      1. should be enough to identify the disk during the backup job.
      2. is a subset of the message fetched to be displayed to the end user.
      Example: entities/vmware.proto.
      Note: Currently this is only implemented for VMware type source.
    type: object
    title: VMware Disk Exclusion Proto.
    properties:
      controllerBusNumber:
        description: Controller's bus-id controlling the virtual disk in question.
        type: integer
        format: int64
        x-go-name: ControllerBusNumber
        x-nullable: true
      controllerType:
        description: Controller's type (SCSI, IDE etc).
        type: string
        x-go-name: ControllerType
        x-nullable: true
      unitNumber:
        description: Disk unit number to identify the virtual disk within a controller.
        type: integer
        format: int64
        x-go-name: UnitNumber
        x-nullable: true
    x-go-package: magneto/base/env_params.pb
  VMwareObjectId:
    description: |-
      Specifies a unique Protection Source id across Cohesity Clusters.
      It is derived from the id of the VMware Protection Source.
    type: object
    title: VMware Object Id.
    properties:
      morItem:
        description: Specifies the Managed Object Reference Item.
        type: string
        x-go-name: MorItem
        x-nullable: true
      morType:
        description: Specifies the Managed Object Reference Type.
        type: string
        x-go-name: MorType
        x-nullable: true
      uuid:
        description: Specifies a Universally Unique Identifier (UUID) of a VMware
          Object.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VMwareProtectionSource:
    description: Specifies a Protection Source in a VMware environment.
    type: object
    title: VMware Protection Source.
    properties:
      agentId:
        description: Specifies the id of the persistent agent.
        type: integer
        format: int64
        x-go-name: AgentId
        x-nullable: true
      agents:
        description: |-
          Specifies the list of agent information on the Virtual Machine.
          This is set only if the Virtual Machine has persistent agent.
        type: array
        items:
          $ref: '#/definitions/AgentInformation'
        x-go-name: Agents
        x-nullable: true
      connectionState:
        description: |-
          Specifies the connection state of the Object and are only valid for
          ESXi hosts ('kHostSystem') or Virtual Machines ('kVirtualMachine').
          These enums are equivalent to the connection states documented in
          VMware's reference documentation.
          Examples of Cohesity connection states include 'kConnected',
          'kDisconnected', 'kInacccessible', etc.
          'kConnected' indicates that server has access to virtual machine.
          'kDisconnected' indicates that server is currently disconnected to virtual
          machine.
          'kInaccessible' indicates that one or more configuration files are
          inacccessible.
          'kInvalid' indicates that virtual machine configuration is invalid.
          'kOrphaned' indicates that virtual machine is no longer registered on the
          host it is associated with.
          'kNotResponding' indicates that virtual machine has failed to respond
          due to external issues such as network connectivity, host not running etc.
        type: string
        enum:
        - kConnected
        - kDisconnected
        - kInaccessible
        - kInvalid
        - kOrphaned
        - kNotResponding
        x-go-name: ConnectionState
        x-nullable: true
      datastoreInfo:
        description: Specifies additional information of entities of type 'kDatastore'.
        x-nullable: true
        $ref: '#/definitions/DatastoreInfo'
      folderType:
        description: |-
          Specifies the folder type for the 'kFolder' Object.
          'kVMFolder' indicates folder can hold VMs or vApps.
          'kHostFolder' indicates folder can hold hosts and compute resources.
          'kDatastoreFolder' indicates folder can hold datastores and storage pods.
          'kNetworkFolder' indicates folder can hold networks and switches.
          'kRootFolder' indicates folder can hold datacenters.
        type: string
        enum:
        - kVMFolder
        - kHostFolder
        - kDatastoreFolder
        - kNetworkFolder
        - kRootFolder
        x-go-name: FolderType
        x-nullable: true
      hasPersistentAgent:
        description: |-
          Set to true if a persistent agent is running on the Virtual Machine.
          This is populated for entities of type 'kVirtualMachine'.
        type: boolean
        x-go-name: HasPersistentAgent
        x-nullable: true
      hostType:
        description: |-
          Specifies the host type for the 'kVirtualMachine' Object.
          'kLinux' indicates the Linux operating system.
          'kWindows' indicates the Microsoft Windows operating system.
          'kAix' indicates the IBM AIX operating system.
          'kSolaris' indicates the Oracle Solaris operating system.
          'kSapHana' indicates the Sap Hana database system developed by SAP SE.
          'kOther' indicates the other types of operating system.
        type: string
        enum:
        - kLinux
        - kWindows
        - kAix
        - kSolaris
        - kSapHana
        - kOther
        x-go-name: HostType
        x-nullable: true
      id:
        description: Specifies the UUID of the VMware Protection Source.
        x-nullable: true
        $ref: '#/definitions/VMwareObjectId'
      ipDetails:
        description: This field can be used to capture IP Addresses for entities that
          have it.
        x-nullable: true
        $ref: '#/definitions/IpDetails'
      isVmTemplate:
        description: IsTemplate specifies if the VM is a template or not.
        type: boolean
        x-go-name: IsVmTemplate
        x-nullable: true
      name:
        description: Specifies a human readable name of the Protection Source.
        type: string
        x-go-name: Name
        x-nullable: true
      tagAttributes:
        description: |-
          Specifies the optional list of VM Tag attributes associated with this
          Object.
        type: array
        items:
          $ref: '#/definitions/TagAttribute'
        x-go-name: TagAttributes
        x-nullable: true
      toolsRunningStatus:
        description: |-
          Specifies the status of VMware Tools for the guest OS on the VM.
          This is only valid for the 'kVirtualMachine' type.
          'kGuestToolsRunning' means the VMware tools are running on the guest OS.
          'kGuestToolsNotRunning' means the VMware tools are not running on the
          guest OS.
          'kUnknown' means the state of the VMware tools on the guest OS is not
          known.
          'kGuestToolsExecutingScripts' means the guest OS is currently executing
          scripts using VMware tools.
        type: string
        enum:
        - kUnknown
        - kGuestToolsExecutingScripts
        - kGuestToolsNotRunning
        - kGuestToolsRunning
        x-go-name: VMwareToolsRunningStatus
        x-nullable: true
      type:
        description: |-
          Specifies the type of managed Object in a VMware Protection Source.
          Examples of VMware Objects include 'kVCenter', 'kFolder', 'kDatacenter',
          'kResourcePool', 'kDatastore', 'kVirtualMachine', etc.
          'kVCenter' indicates the vCenter entity in a VMware protection source type.
          'kFolder indicates the folder entity (of any kind) in a VMware protection source type.
          'kDatacenter' indicates the datacenter entity in a VMware protection source type.
          'kComputeResource' indicates the physical compute resource entity in a VMware
          protection source type.
          'kResourcePool' indicates the set of physical resources within a compute resource
          or cloudcompute resource.
          'kDataStore' indicates the datastore entity in a VMware protection source type.
          'kHostSystem' indicates the ESXi host entity in a VMware protection source type.
          'kVirtualMachine' indicates the virtual machine entity in a VMware protection source type.
          'kVirtualApp' indicates the virtual app entity in a VMware protection source type.
          'kStandaloneHost' indicates the standalone ESXi host entity (not managed by vCenter)
          in a VMware protection source type.
          'kStoragePod' indicates the storage pod entity in a VMware protection source type.
          'kNetwork' indicates the standard vSwitch in a VMware protection source type.
          'kDistributedVirtualPortgroup' indicates a distributed vSwitch port group in a
          VMware protection source type.
          'kTagCategory' indicates a tag category entity in a VMware protection source type.
          'kTag' indicates a tag entity in a VMware protection source type.
          'kOpaqueNetwork' indicates an opaque network which is created and managed by an
          entity outside of vSphere.
          'kvCloudDirector' indicates a vCloud director entity in a VMware protection source type.
          'kOrganization' indicates an Organization under a vCD in a VMware protection source type.
          'kVirtualDatacenter' indicates a virtual datacenter entity in a VMware protection source type.
          'kCatalog' indicates a VCD catalog entity in a VMware protection source type.
          'kOrgMetadata' indicates an VCD organization metadata in a VMware protection source type.
          'kStoragePolicy' indicates a storage policy associated with the vApp in a VMware protection source type.
        type: string
        enum:
        - kVCenter
        - kFolder
        - kDatacenter
        - kComputeResource
        - kClusterComputeResource
        - kResourcePool
        - kDatastore
        - kHostSystem
        - kVirtualMachine
        - kVirtualApp
        - kStandaloneHost
        - kStoragePod
        - kNetwork
        - kDistributedVirtualPortgroup
        - kTagCategory
        - kTag
        - kOpaqueNetwork
        - kvCloudDirector
        - kOrganization
        - kVirtualDatacenter
        - kCatalog
        - kOrgMetadata
        - kStoragePolicy
        x-go-name: Type
        x-nullable: true
      vCloudDirectorInfo:
        description: Specifies an array of vCenters to be registered
        type: array
        items:
          $ref: '#/definitions/VCloudDirectorInfo'
        x-go-name: VCloudDirectorInfo
        x-nullable: true
      version:
        description: |-
          For vCenter and ESXi, this will show the software version. For VMs, this
          will show the hardware version.
        type: string
        x-go-name: Version
        x-nullable: true
      virtualDisks:
        description: |-
          Specifies an array of virtual disks that are part of the Virtual Machine.
          This is populated for entities of type 'kVirtualMachine'.
        type: array
        items:
          $ref: '#/definitions/VirtualDiskInfo'
        x-go-name: VirtualDisks
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Value:
    description: Specifies a data type and data field used to store data.
    type: object
    title: Value.
    properties:
      data:
        x-nullable: true
        $ref: '#/definitions/Value_Data'
      type:
        description: |-
          Specifies the type of value.
          0 specifies a data point of type Int64.
          1 specifies a data point of type Double.
          2 specifies a data point of type String.
          3 specifies a data point of type Bytes.
        type: integer
        format: int32
        x-go-name: Type
        x-nullable: true
    x-go-package: stats/base/stats_types.pb
  Value_Data:
    description: |-
      Specifies the fields to store data of a given type.
      Specify data in the appropriate field for the current data type.
    type: object
    title: Data.
    properties:
      bytesValue:
        description: |-
          Specifies the field to store an array of bytes if the current
          data type is bytes. Specify a value for this field when type
          is equal to 4.
        type: array
        items:
          type: integer
          format: uint8
        x-go-name: BytesValue
        x-nullable: true
      doubleValue:
        description: |-
          Specifies the field to store data if the current data type is a
          double value. Specify a value for this field when type is equal to 2.
        type: number
        format: double
        x-go-name: DoubleValue
        x-nullable: true
      int64Value:
        description: |-
          Specifies the field to store data if the current data type is a
          int64 value. Specify a value for this field when type is equal to 1.
        type: integer
        format: int64
        x-go-name: Int64Value
        x-nullable: true
      stringValue:
        description: |-
          Specifies the field to store data if the current data type is a
          string value. Specify a value for this field when type is equal to 3.
        type: string
        x-go-name: StringValue
        x-nullable: true
    x-go-package: stats/base/stats_types.pb
  Vault:
    description: |-
      Specifies an external storage location and is equivalent to
      an External Target in the Cohesity Dashboard.
      A Vault can provide an additional Cloud Tier where cold data of the
      Cohesity Cluster can be stored in the Cloud.
      A Vault can also provide archive storage for backup data. This archive data
      is stored on Tapes and in Cloud Vaults.
    type: object
    title: Vault.
    properties:
      caTrustedCertificate:
        description: Specifies the CA (certificate authority) trusted certificate.
        type: string
        x-go-name: CaTrustedCertificate
        x-nullable: true
      clientCertificate:
        description: Specifies the client CA  certificate. This certificate is in
          pem format.
        type: string
        x-go-name: ClientCertificate
        x-nullable: true
      clientPrivateKey:
        description: Specifies the client private key. This certificate is in pem
          format.
        type: string
        x-go-name: ClientPrivateKey
        x-nullable: true
      compressionPolicy:
        description: |-
          Specifies whether to send data to the Vault in a
          compressed format.
          'kCompressionNone' indicates that data is not compressed.
          'kCompressionLow' indicates that data is compressed using LZ4 or Snappy.
          'kCompressionHigh' indicates that data is compressed in Gzip.
        type: string
        enum:
        - kCompressionNone
        - kCompressionLow
        - kCompressionHigh
        x-go-name: Compression
        x-nullable: true
      config:
        description: Specifies the settings required to connect to the Vault (External
          Target).
        x-nullable: true
        $ref: '#/definitions/VaultConfig'
      customerManagingEncryptionKeys:
        description: |-
          Specifies whether to manage the encryption key manually or let the
          Cohesity Cluster manage it. If true, you must get the encryption key
          store it outside the Cluster, before disaster strikes such as the
          source local Cohesity Cluster being down.
          You can get the encryption key by downloading it
          using the Cohesity Dashboard or by calling the
          GET /public/vaults/encryptionKey/{id} operation.
        type: boolean
        x-go-name: CustomerManagingEncryptionKeys
        x-nullable: true
      dedupEnabled:
        description: Specifies whether to deduplicate data before sending it to the
          Vault.
        type: boolean
        x-go-name: DedupEnabled
        x-nullable: true
      deleteVaultError:
        description: Specifies the error message when deleting a vault.
        type: string
        x-go-name: DeleteVaultError
        x-nullable: true
      description:
        description: Specifies a description about the Vault.
        type: string
        x-go-name: Description
        x-nullable: true
      desiredWalLocation:
        description: |-
          Desired location for write ahead logs(wal).
          'kHomePartition' indicates desired wal location to be the home partition.
          'kDisk' indicates desired wal location to be the same disk as chunk repo.
          'kScribe' indicates desired wal location to be scribe.
          'kScribeTable' indicates chunk repository state is kept as key-value
          pairs in scribe.
        type: string
        enum:
        - kHomePartition
        - kDisk
        - kScribe
        - kScribeTable
        x-go-name: DesiredWalLocation
        x-nullable: true
      encryptionKeyFileDownloaded:
        description: |-
          Specifies if the encryption key file has been downloaded using the
          Cohesity Dashboard (Cohesity UI).
          If true, the encryption key has been downloaded using the Cohesity
          Dashboard. An encryption key can only be downloaded once using the
          Cohesity Dashboard.
        type: boolean
        x-go-name: EncryptionKeyFileDownloaded
        x-nullable: true
      encryptionPolicy:
        description: |-
          Specifies whether to send and store data in an encrypted format.
          'kEncryptionNone' indicates the data is not encrypted.
          'kEncryptionStrong' indicates the data is encrypted.
        type: string
        enum:
        - kEncryptionNone
        - kEncryptionStrong
        - kEncryptionWeak
        x-go-name: EncryptionLevel
        x-nullable: true
      externalTargetType:
        description: |-
          Specifies the type of Vault.
          'kNearline' indicates a Google Nearline Vault.
          'kGlacier' indicates an AWS Glacier Vault.
          'kS3' indicates an AWS S3 Vault.
          'kAzureStandard' indicates a Microsoft Azure Standard Vault.
          'kS3Compatible' indicates an S3 Compatible Vault.
          (See the online help for supported types.)
          'kQStarTape' indicates a QStar Tape Vault.
          'kGoogleStandard' indicates a Google Standard Vault.
          'kGoogleDRA' indicates a Google DRA Vault.
          'kAmazonS3StandardIA' indicates an Amazon S3 Standard-IA Vault.
          'kAWSGovCloud' indicates an AWS Gov Cloud Vault.
          'kNAS' indicates a NAS Vault.
          'kColdline' indicates a Google Coldline Vault.
          'kAzureGovCloud' indicates a Microsoft Azure Gov Cloud Vault.
          'kAzureArchive' indicates an Azure Archive Vault.
          'kAzure' indicates an Azure Vault.
          'kGoogle' indicates a Google Vault.
          'kAmazon' indicates an Amazon Vault.
          'kOracle' indicates an Oracle Vault.
          'kOracleTierStandard' indicates an Oracle Tier Standard Vault.
          'kOracleTierArchive' indicates an Oracle Tier Archive Vault.
          'kAmazonC2S' indicates an Amazon Commercial Cloud Services Vault.
        type: string
        enum:
        - kNearline
        - kGlacier
        - kS3
        - kAzureStandard
        - kS3Compatible
        - kQStarTape
        - kGoogleStandard
        - kGoogleDRA
        - kAmazonS3StandardIA
        - kAWSGovCloud
        - kNAS
        - kColdline
        - kAzureGovCloud
        - kAzureArchive
        - kAzure
        - kGoogle
        - kAmazon
        - kOracle
        - kOracleTierStandard
        - kOracleTierArchive
        - kAmazonC2S
        x-go-name: ExternalTargetType
        x-nullable: true
      fullArchiveIntervalDays:
        description: |-
          Specifies the number days between full archives to the Vault.
          The current default is 90 days.
          This is only meaningful when incrementalArchivesEnabled is true and
          the Vault usage type is kArchival.
        type: integer
        format: int64
        x-go-name: FullArchiveIntervalDays
        x-nullable: true
      id:
        description: Specifies an id that identifies the Vault.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      incrementalArchivesEnabled:
        description: |-
          Specifies whether to perform incremental archival when sending data
          to the Vault.
          If false, only full backups are performed.
          If true, incremental backups are performed between the full backups.
        type: boolean
        x-go-name: IncrementalArchivesEnabled
        x-nullable: true
      isPasswordEncrypted:
        description: Specifies if given password is not encrypted or not in the cluster
          config.
        type: boolean
        x-go-name: IsPasswordEncrypted
        x-nullable: true
      keyFileDownloadTimeUsecs:
        description: |-
          Specifies the time (in microseconds) when the encryption key file was
          downloaded from the Cohesity Dashboard (Cohesity UI).
          An encryption key can only be downloaded once
          using the Cohesity Dashboard.
        type: integer
        format: int64
        x-go-name: KeyFileDownloadTimeUsecs
        x-nullable: true
      keyFileDownloadUser:
        description: |-
          Specifies the user who downloaded the encryption key from the
          Cohesity Dashboard (Cohesity UI). This field
          is only populated if encryption is enabled for the Vault and
          customerManagingEncryptionKeys is true.
        type: string
        x-go-name: KeyFileDownloadUser
        x-nullable: true
      name:
        description: Specifies the name of the Vault.
        type: string
        x-go-name: Name
        x-nullable: true
      removalState:
        description: |-
          Specifies the state of the vault to be removed.
          'kDontRemove' means the state of object is functional and
          it is not being removed.
          'kMarkedForRemoval' means the object is being removed.
          'kOkToRemove' means the object has been removed on the Cohesity Cluster and
          if the object is physical, it can be removed from the Cohesity Cluster.
        type: string
        enum:
        - kDontRemove
        - kMarkedForRemoval
        - kOkToRemove
        x-go-name: RemovalState
        x-nullable: true
      type:
        description: |-
          Specifies the type of Vault.
          This field is deprecated. This field is split into ExternalTargetType in
          and TierType in respective credentials. Initialize those
          fields instead.
          deprecated: true
          'kNearline' indicates a Google Nearline Vault.
          'kGlacier' indicates an AWS Glacier Vault.
          'kS3' indicates an AWS S3 Vault.
          'kAzureStandard' indicates a Microsoft Azure Standard Vault.
          'kS3Compatible' indicates an S3 Compatible Vault.
          (See the online help for supported types.)
          'kQStarTape' indicates a QStar Tape Vault.
          'kGoogleStandard' indicates a Google Standard Vault.
          'kGoogleDRA' indicates a Google DRA Vault.
          'kAmazonS3StandardIA' indicates an Amazon S3 Standard-IA Vault.
          'kAWSGovCloud' indicates an AWS Gov Cloud Vault.
          'kNAS' indicates a NAS Vault.
          'kColdline' indicates a Google Coldline Vault.
          'kAzureGovCloud' indicates a Microsoft Azure Gov Cloud Vault.
          'kAzureArchive' indicates an Azure Archive Vault.
          'kAzure' indicates an Azure Vault.
          'kGoogle' indicates a Google Vault.
          'kAmazon' indicates an Amazon Vault.
          'kOracle' indicates an Oracle Vault.
          'kOracleTierStandard' indicates an Oracle Tier Standard Vault.
          'kOracleTierArchive' indicates an Oracle Tier Archive Vault.
          'kAmazonC2S' indicates an Amazon Commercial Cloud Services Vault.
        type: string
        enum:
        - kNearline
        - kGlacier
        - kS3
        - kAzureStandard
        - kS3Compatible
        - kQStarTape
        - kGoogleStandard
        - kGoogleDRA
        - kAmazonS3StandardIA
        - kAWSGovCloud
        - kNAS
        - kColdline
        - kAzureGovCloud
        - kAzureArchive
        - kAzure
        - kGoogle
        - kAmazon
        - kOracle
        - kOracleTierStandard
        - kOracleTierArchive
        - kAmazonC2S
        x-go-name: Type
        x-nullable: true
      usageType:
        description: |-
          Specifies the usage type of the Vault.
          'kArchival' indicates the Vault provides archive storage for backup data.
          'kCloudSpill' indicates the Vault provides additional storage for cold data.
        type: string
        enum:
        - kArchival
        - kCloudSpill
        x-go-name: UsageType
        x-nullable: true
      vaultBandwidthLimits:
        description: Specifies bandwidth limit.
        x-nullable: true
        $ref: '#/definitions/VaultBandwidthLimits'
    x-go-package: cohesity/iris/server/data/public
  VaultBandwidthLimits:
    description: |-
      VaultBandwidthLimits represents the network bandwidth limits
      while uploading/downloading data to/from the external media.
    type: object
    title: Vault Bandwidth Limits.
    properties:
      download:
        description: Specifies the max rate limit at which we download the data.
        x-nullable: true
        $ref: '#/definitions/BandwidthLimit'
      upload:
        description: Specifies the max rate limit at which we upload the data.
        x-nullable: true
        $ref: '#/definitions/BandwidthLimit'
    x-go-package: cohesity/iris/server/data/public
  VaultConfig:
    description: |-
      Specifies the settings required to connect to a specific Vault type.
      For some Vaults, you must also specify a storage location (bucketName).
    type: object
    title: Vault Configuration.
    properties:
      amazon:
        description: |-
          Specifies the cloud credentials to connect to a Amazon
          service account. Glacier, S3, and S3-compatible clouds use this
          credential.
        title: Amazon Cloud Credentials.
        x-nullable: true
        $ref: '#/definitions/AmazonCloudCredentials'
      azure:
        description: |-
          Specifies the cloud credentials to connect to a Microsoft
          Azure service account.
        title: Azure Cloud Credentials.
        x-nullable: true
        $ref: '#/definitions/AzureCloudCredentials'
      bucketName:
        description: |-
          Specifies the name of a storage location of the Vault,
          where objects are stored. For Google and AMS, this
          storage location is called a bucket. For Microsoft Azure, this
          storage location is called a container. For QStar and NAS, you
          do not specify a storage location.
        type: string
        x-go-name: BucketName
        x-nullable: true
      google:
        description: |-
          Specifies the cloud credentials to connect to a Google
          service account.
        title: Google Cloud Credentials.
        x-nullable: true
        $ref: '#/definitions/GoogleCloudCredentials'
      nas:
        description: Specifies the server credentials to connect to a NetApp server.
        title: NAS Server Credentials.
        x-nullable: true
        $ref: '#/definitions/NasCredentials'
      oracle:
        description: |-
          Specifies the Oracle cloud credentials to connect to a Amazon
          service account.
        title: Oracle Cloud Credentials.
        x-nullable: true
        $ref: '#/definitions/OracleCloudCredentials'
      qstar:
        description: |-
          Specifies the server credentials to connect to a QStar service
          to manage the media Vault.
        title: QStar Media Credentials.
        x-nullable: true
        $ref: '#/definitions/QStarServerCredentials'
    x-go-package: cohesity/iris/server/data/public
  VaultDeleteParams:
    type: object
    title: Delete Vault Request.
    properties:
      forceDelete:
        description: |-
          Specifies whether to force delete the vault.
          If the flag is set to true, the RemovalState of the vault is changed to
          'kMarkedForRemoval' and Eventually vault is removed from cluster config
          and archived metadata from scribe is removed without necessarily deleting
          the associated archived data.
        type: boolean
        x-go-name: ForceDelete
        x-nullable: true
      id:
        description: Specifies an id that identifies the Vault.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      includeMarkedForRemoval:
        description: Specifies if Vaults that are marked for removal should be returned.
        type: boolean
        x-go-name: IncludeMarkedForRemoval
        x-nullable: true
      retry:
        description: Specifies whether to retry a request after failure.
        type: boolean
        x-go-name: Retry
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VaultEncryptionKey:
    description: Specifies the encryption information needed to restore data.
    type: object
    title: Vault Encryption Key.
    properties:
      clusterName:
        description: |-
          Specifies the name of the source Cohesity Cluster
          that archived the data on the Vault.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      encryptionKeyData:
        description: |-
          Specifies the encryption key data corresponding to the specified keyUid.
          It contains a Key Encryption Key (KEK) or a
          Encrypted Data Encryption Key (eDEK).
        type: string
        x-go-name: EncryptionKeyData
        x-nullable: true
      keyUid:
        description: Specifies the universal id of the Data Encryption Key.
        title: Universal Id.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      vaultId:
        description: |-
          Specifies the id of the Vault whose data is encrypted by
          this key.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
      vaultName:
        description: Specifies the name of the Vault whose data is encrypted by this
          key.
        type: string
        x-go-name: VaultName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VaultParams_RestoreParams:
    type: object
    title: Params for initiate restore.
    properties:
      glacier:
        x-nullable: true
        $ref: '#/definitions/VaultParams_RestoreParams_Glacier'
    x-go-package: bridge/vault/base/vault.pb
  VaultParams_RestoreParams_Glacier:
    type: object
    title: Params for Glacier.
    properties:
      retrievalType:
        type: integer
        format: int32
        x-go-name: RetrievalType
        x-nullable: true
    x-go-package: bridge/vault/base/vault.pb
  VaultProviderStatsByEnv:
    description: Specifies the Vault stats by environments.
    type: object
    title: Vault Provider Stats By Env.
    properties:
      count:
        description: Specifies the count of the objects of the specified environment.
        type: integer
        format: int64
        x-go-name: Count
        x-nullable: true
      environment:
        description: Specifies the environment type.
        type: string
        enum:
        - kVMware
        - kHyperV
        - kSQL
        - kView
        - kPuppeteer
        - kPhysical
        - kPure
        - kNimble
        - kAzure
        - kNetapp
        - kAgent
        - kGenericNas
        - kAcropolis
        - kPhysicalFiles
        - kIsilon
        - kGPFS
        - kKVM
        - kAWS
        - kExchange
        - kHyperVVSS
        - kOracle
        - kGCP
        - kFlashBlade
        - kAWSNative
        - kVCD
        - kO365
        - kO365Outlook
        - kHyperFlex
        - kGCPNative
        - kAzureNative
        - kAD
        - kAWSSnapshotManager
        x-go-name: Environment
        x-nullable: true
      size:
        description: Specifies the size of the entities of the specified environment.
        type: integer
        format: int64
        x-go-name: Size
        x-nullable: true
  VaultProviderStatsInfo:
    description: Specifies the stats for each vault.
    type: object
    title: Vault Provider Stats Info.
    properties:
      changeRate:
        description: Specifies the relative change of size of entities on the vault.
        type: integer
        format: int64
        x-go-name: ChangeRate
        x-nullable: true
      clusterId:
        description: Specifies the cluster id.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: Specifies the cluster incarnation id.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      clusterName:
        description: Specifies the cluster name.
        type: string
        x-go-name: ClusterName
        x-nullable: true
      readBandwidth:
        description: Specifies the average read bandwidth over the last 24 hours.
        type: integer
        format: int64
        x-go-name: ReadBandwidth
        x-nullable: true
      statsByEnv:
        description: Specifies the stats by environments.
        type: array
        items:
          $ref: '#/definitions/VaultProviderStatsByEnv'
        x-go-name: StatsByEnv
      vaultGroup:
        description: Specifies the cloud vendor type.
        type: string
        enum:
        - kAws
        - kAzure
        - kGcp
        - kOracle
        - kNas
        - kQStar
        - kS3C
        - kOther
        x-go-name: VaultGroup
        x-nullable: true
      vaultId:
        description: Specifies the Vault id.
        type: integer
        format: int64
        x-go-name: VaultId
        x-nullable: true
      vaultType:
        description: Specifies the External Target type.
        type: string
        enum:
        - kNearline
        - kGlacier
        - kS3
        - kAzureStandard
        - kS3Compatible
        - kQStarTape
        - kGoogleStandard
        - kGoogleDRA
        - kAmazonS3StandardIA
        - kAWSGovCloud
        - kNAS
        - kColdline
        - kAzureGovCloud
        - kAzureArchive
        - kAzure
        - kGoogle
        - kAmazon
        - kOracle
        - kOracleTierStandard
        - kOracleTierArchive
        - kAmazonC2S
        x-go-name: VaultType
        x-nullable: true
      vaultname:
        description: Specifies the Vault name.
        type: string
        x-go-name: VaultName
        x-nullable: true
      writeBandwidth:
        description: Specifies the average write bandwidth over the last 24 hours.
        type: integer
        format: int64
        x-go-name: WriteBandwidth
        x-nullable: true
  VaultProviderStatsList:
    description: Specifies the stats by provider for each vault.
    type: array
    title: Vault Provider Stats List.
    items:
      $ref: '#/definitions/VaultProviderStatsInfo'
  VaultRunInfo:
    description: Specifies the information about a specific vault run.
    type: object
    title: VaultRunInfo
    properties:
      count:
        description: Specifies the count of runs that ended in the specified state
          between the start time passed in and the current timestamp.
        type: integer
        format: int64
        x-go-name: Count
        x-nullable: true
      timestamp:
        description: Specifies the Unix timestamp at which the run entered the specified
          state.
        type: integer
        format: int64
        x-go-name: Timestamp
        x-nullable: true
  VaultRunStatsSummary:
    description: Specifies the stats by run type for each vault run.
    type: object
    title: Vault Run Stats Summary.
    properties:
      failureTimeSeries:
        description: Specifies the time series for the failed runs that ended in the
          given time frame.
        type: array
        items:
          $ref: '#/definitions/VaultRunInfo'
        x-go-name: FailureTimeSeries
      numFailedRuns:
        description: Specifies the number of runs that ended in failure during the
          given time frame.
        type: integer
        format: int64
        x-go-name: NumFailedRuns
        x-nullable: true
      numInProgressRuns:
        description: Specifies the number of runs that were currently in progress
          at the time that the API call was made.
        type: integer
        format: int64
        x-go-name: NumInProgressRuns
        x-nullable: true
      numQueuedRuns:
        description: Specifies the number of runs that were currently queued at the
          time that the API call was made.
        type: integer
        format: int64
        x-go-name: NumQueuedRuns
        x-nullable: true
      numSuccessfulRuns:
        description: Specifies the number of runs that ended in success during the
          given time frame.
        type: integer
        format: int64
        x-go-name: NumSuccessfulRuns
        x-nullable: true
      successTimeSeries:
        description: Specifies the time series for the successful runs that ended
          in the given time frame.
        type: array
        items:
          $ref: '#/definitions/VaultRunInfo'
        x-go-name: SuccessTimeSeries
  VaultStats:
    description: Specifies the storage usage on vaults.
    type: object
    title: Vault Stats.
    properties:
      awsUsageBytes:
        description: Specifies the usage on AWS vaults.
        type: integer
        format: int64
        x-go-name: AWSUsageBytes
        x-nullable: true
      azureUsageBytes:
        description: Specifies the usage on Azure vaults.
        type: integer
        format: int64
        x-go-name: AzureUsageBytes
        x-nullable: true
      gcpUsageBytes:
        description: Specifies the usage on GCP vaults.
        type: integer
        format: int64
        x-go-name: GCPUsageBytes
        x-nullable: true
      nasUsageBytes:
        description: Specifies the usage on NAS vaults.
        type: integer
        format: int64
        x-go-name: NASUsageBytes
        x-nullable: true
      oracleUsageBytes:
        description: Specifies the usage on Oracle vaults.
        type: integer
        format: int64
        x-go-name: OracleUsageBytes
        x-nullable: true
      qstarUsageBytes:
        description: Specifies the usage on QStar Tape vaults.
        type: integer
        format: int64
        x-go-name: QStarUsageBytes
        x-nullable: true
      s3cUsageBytes:
        description: Specifies the usage on S3 Compatible vaults.
        type: integer
        format: int64
        x-go-name: S3cUsageBytes
        x-nullable: true
      vaultStatsList:
        description: Specifies the stats of all vaults on the cluster.
        type: array
        items:
          $ref: '#/definitions/VaultStatsInfo'
        x-go-name: VaultStatsList
  VaultStatsInfo:
    description: Specifies the stats for each vault.
    type: object
    title: Vault Stats.
    properties:
      id:
        description: Specifies the Vault Id.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      name:
        description: Specifies the Vault name.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: Specifies the Vault type.
        type: string
        enum:
        - kNearline
        - kGlacier
        - kS3
        - kAzureStandard
        - kS3Compatible
        - kQStarTape
        - kGoogleStandard
        - kGoogleDRA
        - kAmazonS3StandardIA
        - kAWSGovCloud
        - kNAS
        - kColdline
        - kAzureGovCloud
        - kAzureArchive
        - kAzure
        - kGoogle
        - kAmazon
        - kOracle
        - kOracleTierStandard
        - kOracleTierArchive
        - kAmazonC2S
        x-go-name: Type
        x-nullable: true
      usageBytes:
        description: Specifies the bytes used by the Vault.
        type: integer
        format: int64
        x-go-name: UsageBytes
        x-nullable: true
  VcdStorageProfile:
    description: Specifies a storage profile for use while recovering to a VMware
      VCD.
    type: object
    title: Vcd Storage Profile.
    properties:
      name:
        description: Specifies the name of the storage profile.
        type: string
        x-go-name: Name
        x-nullable: true
      uuid:
        description: Specifies the UUID of the storage profile as identified by the
          VCD.
        type: string
        x-go-name: Uuid
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  View:
    description: |-
      Specifies settings for defining a storage location (called a View)
      with NFS and SMB mount paths in a Storage Domain (View Box) on the Cohesity
      Cluster.
    type: object
    title: View.
    properties:
      accessSids:
        description: |-
          Array of Security Identifiers (SIDs)

          Specifies the list of security identifiers (SIDs) for the restricted
          Principals who have access to this View.
        type: array
        items:
          type: string
        x-go-name: AccessSids
        x-nullable: true
      aliases:
        description: |-
          Aliases created for the view. A view alias allows a directory path inside
          a view to be mounted using the alias name.
        type: array
        items:
          $ref: '#/definitions/ViewAlias'
        x-go-name: Aliases
        x-nullable: true
      allSmbMountPaths:
        description: |-
          Array of SMB Paths.

          Specifies the possible paths that can be used to mount this View
          as a SMB share. If Active Directory has multiple account names;
          each machine account has its own path.
        type: array
        items:
          type: string
        x-go-name: AllSmbMountPaths
        x-nullable: true
      antivirusScanConfig:
        description: Specifies the antivirus scan config settings for this View.
        x-nullable: true
        $ref: '#/definitions/AntivirusScanConfig'
      basicMountPath:
        description: |-
          Specifies the NFS mount path of the View (without the hostname
          information).
          This path is used to support NFS mounting of the paths specified in the
          nfsExportPathList on Windows systems.
        type: string
        x-go-name: BasicMountPath
        x-nullable: true
      caseInsensitiveNamesEnabled:
        description: |-
          Specifies whether to support case insensitive file/folder names. This
          parameter can only be set during create and cannot be changed.
        type: boolean
        x-go-name: CaseInsensitiveNamesEnabled
        x-nullable: true
      createTimeMsecs:
        description: Specifies the time that the View was created in milliseconds.
        type: integer
        format: int64
        x-go-name: CreateTimeMsecs
        x-nullable: true
      dataLockExpiryUsecs:
        description: |-
          DataLock (Write Once Read Many) lock expiry epoch time in microseconds. If
          a view is marked as a DataLock view, only a Data Security Officer (a user
          having Data Security Privilege) can delete the view until the lock expiry
          time.
        type: integer
        format: int64
        x-go-name: DataLockExpiryUsecs
        x-nullable: true
      description:
        description: Specifies an optional text description about the View.
        type: string
        x-go-name: Description
        x-nullable: true
      enableFastDurableHandle:
        description: |-
          Specifies whether fast durable handle is enabled. If enabled, view open
          handle will be kept in memory, which results in a higher performance. But
          the handles cannot be recovered if node or service crashes.
        type: boolean
        x-go-name: EnableFastDurableHandle
        x-nullable: true
      enableFilerAuditLogging:
        description: Specifies if Filer Audit Logging is enabled for this view.
        type: boolean
        x-go-name: EnableFilerAuditLogging
        x-nullable: true
      enableLiveIndexing:
        description: Specifies whether to enable live indexing for the view.
        type: boolean
        x-go-name: EnableLiveIndexing
        x-nullable: true
      enableMixedModePermissions:
        description: |-
          If set, mixed mode (NFS and SMB) access is enabled for this view.
          This field is deprecated. Use the field SecurityMode.
          deprecated: true
        type: boolean
        x-go-name: EnableMixedModePermissions
        x-nullable: true
      enableNfsViewDiscovery:
        description: If set, it enables discovery of view for NFS.
        type: boolean
        x-go-name: EnableNfsViewDiscovery
        x-nullable: true
      enableOfflineCaching:
        description: Specifies whether to enable offline file caching of the view.
        type: boolean
        x-go-name: EnableOfflineCaching
        x-nullable: true
      enableSmbAccessBasedEnumeration:
        description: |-
          Specifies if access-based enumeration should be enabled.
          If 'true', only files and folders that the user has permissions to
          access are visible on the SMB share for that user.
        type: boolean
        x-go-name: EnableSmbAccessBasedEnumeration
        x-nullable: true
      enableSmbEncryption:
        description: |-
          Specifies the SMB encryption for the View. If set, it enables the SMB
          encryption for the View. Encryption is supported only by SMB 3.x dialects.
          Dialects that do not support would still access data in unencrypted
          format.
        type: boolean
        x-go-name: EnableSmbEncryption
        x-nullable: true
      enableSmbOplock:
        description: Specifies whether SMB opportunistic lock is enabled.
        type: boolean
        x-go-name: EnableSmbOplock
        x-nullable: true
      enableSmbViewDiscovery:
        description: If set, it enables discovery of view for SMB.
        type: boolean
        x-go-name: EnableSmbViewDiscovery
        x-nullable: true
      enforceSmbEncryption:
        description: |-
          Specifies the SMB encryption for all the sessions for the View.
          If set, encryption is enforced for all the sessions for the View. When
          enabled all future and existing unencrypted sessions are disallowed.
        type: boolean
        x-go-name: EnforceSmbEncryption
        x-nullable: true
      fileExtensionFilter:
        description: |-
          Optional filtering criteria that should be satisfied by all the files
          created in this view. It does not affect existing files.
        x-nullable: true
        $ref: '#/definitions/FileExtensionFilter'
      fileLockConfig:
        description: |-
          Optional config that enables file locking for this view. It cannot be
          disabled during the edit of a view, if it has been enabled during the
          creation of the view. Also, it cannot be enabled if it was disabled
          during the creation of the view.
        x-nullable: true
        $ref: '#/definitions/FileLevelDataLockConfig'
      isTargetForMigratedData:
        description: Specifies if a view contains migrated data.
        type: boolean
        x-go-name: IsTargetForMigratedData
        x-nullable: true
      logicalQuota:
        description: |-
          Specifies an optional logical quota limit (in bytes) for the usage allowed
          on this View.
          (Logical data is when the data is fully hydrated and expanded.)
          This limit overrides the limit inherited from the Storage Domain
          (View Box) (if set).
          If logicalQuota is nil, the limit is inherited from the
          Storage Domain (View Box) (if set).
          A new write is not allowed if the Storage Domain (View Box) will exceed the
          specified quota.
          However, it takes time for the Cohesity Cluster to calculate
          the usage across Nodes, so the limit may be exceeded by a small amount.
          In addition, if the limit is increased or data is removed,
          there may be a delay before the Cohesity Cluster allows more data
          to be written to the View, as the Cluster is calculating the usage
          across Nodes.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      logicalUsageBytes:
        description: LogicalUsageBytes is the logical usage in bytes for the view.
        type: integer
        format: int64
        x-go-name: LogicalUsageBytes
        x-nullable: true
      name:
        description: Specifies the name of the View.
        type: string
        x-go-name: Name
        x-nullable: true
      netgroupWhitelist:
        description: |-
          Array of Netgroups.

          Specifies a list of Netgroups that have permissions to access the
          View. (Overrides the Netgroups specified at the global Cohesity
          Cluster level.)
        type: array
        items:
          $ref: '#/definitions/NisNetgroup'
        x-go-name: NetgroupWhitelist
        x-nullable: true
      nfsAllSquash:
        description: Specifies the NFS all squash config.
        x-nullable: true
        $ref: '#/definitions/NfsSquash'
      nfsMountPath:
        description: Specifies the path for mounting this View as an NFS share.
        type: string
        x-go-name: NfsMountPath
        x-nullable: true
      nfsRootPermissions:
        description: Specifies the NFS root permission config of the view file system.
        x-nullable: true
        $ref: '#/definitions/NfsRootPermissions'
      nfsRootSquash:
        description: Specifies the NFS root squash config.
        x-nullable: true
        $ref: '#/definitions/NfsSquash'
      overrideGlobalNetgroupWhitelist:
        description: |-
          Specifies whether view level client netgroup whitelist overrides cluster
          and global setting.
        type: boolean
        x-go-name: OverrideGlobalNetgroupWhitelist
        x-nullable: true
      overrideGlobalWhitelist:
        description: |-
          Specifies whether view level client subnet whitelist overrides cluster and
          global setting.
        type: boolean
        x-go-name: OverrideGlobalWhitelist
        x-nullable: true
      protocolAccess:
        description: |-
          Specifies the supported Protocols for the View.
          'kAll' enables protocol access to following three views: NFS, SMB and S3.
          'kNFSOnly' enables protocol access to NFS only.
          'kSMBOnly' enables protocol access to SMB only.
          'kS3Only' enables protocol access to S3 only.
          'kSwiftOnly' enables protocol access to Swift only.
        type: string
        enum:
        - kAll
        - kNFSOnly
        - kSMBOnly
        - kS3Only
        - kSwiftOnly
        x-go-name: ProtocolAccess
        x-nullable: true
      qos:
        description: Specifies the Quality of Service (QoS) Policy for the View.
        x-nullable: true
        $ref: '#/definitions/QoS'
      s3AccessPath:
        description: Specifies the path to access this View as an S3 share.
        type: string
        x-go-name: S3AccessPath
        x-nullable: true
      s3KeyMappingConfig:
        description: |-
          Specifies the S3 key mapping config of the view. This parameter can only
          be set during create and cannot be changed.
          Configuration of S3 key mapping.

          Specifies the type of S3 key mapping config.
        type: string
        enum:
        - kRandom
        - kShort
        - kLong
        - kHierarchical
        x-go-name: S3KeyMappingConfig
        x-nullable: true
      securityMode:
        description: |-
          Specifies the security mode used for this view.
          Currently we support the following modes: Native, Unified and NTFS style.
          'kNativeMode' indicates a native security mode.
          'kUnifiedMode' indicates a unified security mode.
          'kNtfsMode' indicates a NTFS style security mode.
        type: string
        enum:
        - kNativeMode
        - kUnifiedMode
        - kNtfsMode
        x-go-name: SecurityMode
        x-nullable: true
      sharePermissions:
        description: Specifies a list of share level permissions.
        type: array
        items:
          $ref: '#/definitions/SmbPermission'
        x-go-name: SharePermissions
        x-nullable: true
      smbMountPath:
        description: Specifies the main path for mounting this View as an SMB share.
        type: string
        x-go-name: SmbMountPath
        x-nullable: true
      smbPermissionsInfo:
        description: Specifies the SMB permissions for the View.
        x-nullable: true
        $ref: '#/definitions/SmbPermissionsInfo'
      stats:
        description: |-
          Specifies statistics about the View.
          readOnly: true
        x-nullable: true
        $ref: '#/definitions/ViewStats'
      storagePolicyOverride:
        description: |-
          Specifies if inline deduplication and compression settings inherited from
          the Storage Domain (View Box) should be disabled for this View.
        x-nullable: true
        $ref: '#/definitions/StoragePolicyOverride'
      subnetWhitelist:
        description: |-
          Array of Subnets.

          Specifies a list of Subnets with IP addresses that have permissions to
          access the View. (Overrides the Subnets specified at the global
          Cohesity Cluster level.)
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: SubnetWhitelist
        x-nullable: true
      swiftProjectDomain:
        description: Specifies the Keystone project domain.
        type: string
        x-go-name: SwiftProjectDomain
        x-nullable: true
      swiftProjectName:
        description: Specifies the Keystone project name.
        type: string
        x-go-name: SwiftProjectName
        x-nullable: true
      swiftUserDomain:
        description: Specifies the Keystone user domain.
        type: string
        x-go-name: SwiftUserDomain
        x-nullable: true
      swiftUsername:
        description: Specifies the Keystone username.
        type: string
        x-go-name: SwiftUsername
        x-nullable: true
      tenantId:
        description: Optional tenant id who has access to this View.
        type: string
        x-go-name: TenantId
        x-nullable: true
      viewBoxId:
        description: Specifies the id of the Storage Domain (View Box) where the View
          is stored.
        type: integer
        format: int64
        x-go-name: ViewBoxId
        x-nullable: true
      viewBoxName:
        description: Specifies the name of the Storage Domain (View Box) where the
          View is stored.
        type: string
        x-go-name: ViewBoxName
        x-nullable: true
      viewId:
        description: Specifies an id of the View assigned by the Cohesity Cluster.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
      viewLockEnabled:
        description: |-
          Specifies whether view lock is enabled. If enabled the view cannot be
          modified or deleted until unlock. By default it is disabled.
        type: boolean
        x-go-name: ViewLockEnabled
        x-nullable: true
      viewProtection:
        description: Specifies information about the Protection Jobs protecting this
          View.
        x-nullable: true
        $ref: '#/definitions/ViewProtection'
    x-go-package: cohesity/iris/server/data/public
  ViewAlias:
    description: Specifies the parameters of a view alias.
    type: object
    title: Alias.
    properties:
      aliasName:
        description: Alias name.
        type: string
        x-go-name: AliasName
        x-nullable: true
      enableSmbEncryption:
        description: |-
          Specifies the SMB encryption for the View Alias. If set, it enables the
          SMB encryption for the View Alias. Encryption is supported only by SMB 3.x
          dialects. Dialects that do not support would still access data in
          unencrypted format.
        type: boolean
        x-go-name: EnableSmbEncryption
        x-nullable: true
      enableSmbViewDiscovery:
        description: If set, it enables discovery of view alias for SMB.
        type: boolean
        x-go-name: EnableSmbViewDiscovery
        x-nullable: true
      enforceSmbEncryption:
        description: |-
          Specifies the SMB encryption for all the sessions for the View Alias.
          If set, encryption is enforced for all the sessions for the View Alias.
          When enabled all future and existing unencrypted sessions are disallowed.
        type: boolean
        x-go-name: EnforceSmbEncryption
        x-nullable: true
      sharePermissions:
        description: Specifies a list of share level permissions.
        type: array
        items:
          $ref: '#/definitions/SmbPermission'
        x-go-name: SharePermissions
        x-nullable: true
      subnetWhitelist:
        description: |-
          Specifies a list of Subnets with IP addresses that have permissions to
          access the View Alias. (Overrides the Subnets specified at the global
          Cohesity Cluster level and View level.)
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: SubnetWhitelist
        x-nullable: true
      viewName:
        description: View name.
        type: string
        x-go-name: ViewName
        x-nullable: true
      viewPath:
        description: View path for the alias.
        type: string
        x-go-name: ViewPath
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ViewBox:
    description: Provides details about a Storage Domain (View Box).
    type: object
    title: Domain (View Box).
    required:
    - name
    - clusterPartitionId
    properties:
      adDomainName:
        description: Specifies an active directory domain that this view box is mapped
          to.
        type: string
        x-go-name: AdDomainName
        x-nullable: true
      clientSubnetWhiteList:
        description: |-
          Array of Subnets.

          Specifies the Subnets from which this Storage Domain (View Box) accepts
          requests.
        type: array
        items:
          $ref: '#/definitions/Subnet'
        x-go-name: ClientSubnetWhitelist
        x-nullable: true
      cloudDownWaterfallThresholdPct:
        description: |-
          Specifies the cloud down water-fall threshold percentage. This indicates
          how full should a viewbox at least be before we down water-fall its data
          to cloud tier. If this field is set, the physical quota limit must be set
          also and will be used as viewbox capacity.
        type: integer
        format: int32
        x-go-name: CloudDownWaterfallThresholdPct
        x-nullable: true
      cloudDownWaterfallThresholdSecs:
        description: |-
          Specifies the cloud down water-fall threshold seconds. This indicates
          what's the time threshold on water-falling data to cloud tier.
        type: integer
        format: int32
        x-go-name: CloudDownWaterfallThresholdSecs
        x-nullable: true
      clusterPartitionId:
        description: |-
          Specifies the Cluster Partition id where the Storage Domain (View Box) is
          located.
        type: integer
        format: int64
        x-go-name: ClusterPartitionId
        x-nullable: true
      clusterPartitionName:
        description: |-
          Specifies the Cohesity Cluster name where the Storage Domain (View Box) is
          located.
        type: string
        x-go-name: ClusterPartitionName
        x-nullable: true
        readOnly: true
      defaultUserQuotaPolicy:
        description: |-
          Specifies an optional quota policy/limits that are inherited by all users
          within the views in this viewbox.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      defaultViewQuotaPolicy:
        description: |-
          Specifies an optional default logical quota limit (in bytes)
          for the Views in this Storage Domain (View Box).
          (Logical data is when the data is fully hydrated and expanded.)
          However, this inherited quota can be overwritten at the View level.
          A new write is not allowed if the Storage Domain (View Box) will exceed
          the specified quota.
          However, it takes time for the Cohesity Cluster to calculate
          the usage across Nodes, so the limit may be exceeded by a small amount.
          In addition, if the limit is increased or data is removed,
          there may be delay before the Cohesity Cluster allows more data
          to be written to the Storage Domain (View Box), as the Cluster is
          calculating the usage across Nodes.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      directArchiveEnabled:
        description: |-
          Specifies whether this viewbox can be used as a staging area while copying
          a largedataset that can't fit on the cluster to an external target. The
          amount of data that can be stored on the viewbox can be specified using
          'physical_quota'.
        type: boolean
        x-go-name: DirectArchiveEnabled
        x-nullable: true
      id:
        description: Specifies the Id of the Storage Domain (View Box).
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      isRecommended:
        description: |-
          Recommendation for the view if the template id was passed during query.
          We say the view is to be recommended, if the dedup and inlinecompression
          both are same as the template's property.
        type: boolean
        x-go-name: IsRecommended
        x-nullable: true
      ldapProviderId:
        description: |-
          When set, the following provides the LDAP provider the view box is
          mapped to. For any view from this view box, when accessed via NFS the
          following LDAP provider is looked up for getting Unix IDs of the
          corresponding user. Similarly, when a view is accessed via SMB and if
          the AD user's domain matches with the view box's AD, the following LDAP
          provider will be used to lookup Unix IDs for the corresponding AD user.
          Additionally there is also a mapping between LDAP provider and AD domain
          that is stored in AD provider config. It will be used if AD is not set
          on the view box.
        type: integer
        format: int64
        x-go-name: LdapProviderId
        x-nullable: true
      name:
        description: Specifies the name of the Storage Domain (View Box).
        type: string
        x-go-name: Name
        x-nullable: true
      nisDomainNameVec:
        description: Specifies the NIS domain that this view box is mapped to.
        type: array
        items:
          type: string
        x-go-name: NisDomainNameVec
        x-nullable: true
      physicalQuota:
        description: |-
          Specifies an optional quota limit (in bytes) for the physical
          usage of this Storage Domain (View Box).
          This quota limit defines a physical limit for size of the data that
          can be physically stored on the Storage Domain (View Box), after the data
          has been reduced by change block tracking, compression and deduplication.
          The physical usage is the aggregate sum of the data stored for this
          Storage Domain (View Box) on all disks in the Cluster.
          (The usage includes Cloud Tier data and user data.)
          A new write is not allowed if the Storage Domain (View Box) will exceed
          the specified quota. However, it takes time for the Cohesity Cluster to
          calculate the usage across Nodes, so the limit may be exceeded by a small
          amount. In addition, if the limit is increased or data is removed,
          there may be a delay before the Cohesity Cluster allows more data
          to be written to the Storage Domain (View Box), as the Cluster is
          calculating the usage across Nodes.
        allOf:
        - $ref: '#/definitions/QuotaPolicy'
        x-nullable: true
      removalState:
        description: |-
          Specifies the current removal state of the Storage Domain (View Box).
          'kDontRemove' means the state of object is functional and
          it is not being removed.
          'kMarkedForRemoval' means the object is being removed.
          'kOkToRemove' means the object has been removed on the Cohesity Cluster and
          if the object is physical, it can be removed from the Cohesity Cluster.
        type: string
        enum:
        - kDontRemove
        - kMarkedForRemoval
        - kOkToRemove
        x-go-name: RemovalState
        x-nullable: true
      s3BucketsAllowed:
        description: |-
          Specifies whether creation of a S3 bucket is allowed in this
          Storage Domain (View Box).
          When a new S3 bucket creation request arrives, we'll look at all the View
          Boxes and the first Storage Domain (View Box) that allows creating S3
          buckets in it will be the one where the bucket will be placed.
        type: boolean
        x-go-name: S3BucketsAllowed
        x-nullable: true
      schemaInfoList:
        description: Specifies the time series schema info of the view box.
        type: array
        items:
          $ref: '#/definitions/SchemaInfo'
        x-go-name: SchemaInfoList
        x-nullable: true
      stats:
        description: |-
          Specifies statistics about the Storage Domain (View Box).
          readOnly: true
        x-nullable: true
        $ref: '#/definitions/ViewBoxStats'
      storagePolicy:
        description: Specifies the storage options applied to the Storage Domain (View
          Box).
        x-nullable: true
        $ref: '#/definitions/StoragePolicy'
      tenantIdVec:
        description: |-
          Optional ids for the tenants that this view box belongs. This must be
          checked before granting access to users. Unless the cluster enables view
          box sharing between tenants is allowed, there shall be at most one item
          in this list. Note that if all tenant may be deleted - such viewboxes
          must be garbage collected. This is currently done by a background thread
          in iris.
        type: array
        items:
          type: string
        x-go-name: TenantIdVec
        x-nullable: true
      treatFileSyncAsDataSync:
        description: |-
          If 'true', when the Cohesity Cluster is writing to a file, the
          file modification time is not persisted synchronously during the
          file write, so the modification time may not be accurate.
          (Typically the file modification time is off by 30 seconds but
          it can be longer.)
          Only set to 'false' if your environment requires a very accurate
          modification time.
          The default value is 'true' which provides the best Cohesity
          Cluster performance.
        type: boolean
        x-go-name: TreatFileSyncAsDataSync
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ViewBoxPairInfo:
    description: |-
      Specifies a pairing between a Storage Domain (View Box) on local Cluster
      with a Storage Domain (View Box) on a remote Cluster.
      When replication is configured between a local Cluster and a
      remote Cluster, the Snapshots are replicated from the specified
      Storage Domain (View Box) on the local Cluster to the Storage Domain
      (View Box) on the remote Cluster. See the online help for details about the
      supported Storage Domains (View Box) pairings between Clusters.
    type: object
    title: Storage Domain (View Box) Pairing.
    properties:
      localViewBoxId:
        description: Specifies the id of the Storage Domain (View Box) on the local
          Cluster.
        type: integer
        format: int64
        x-go-name: LocalViewBoxId
        x-nullable: true
      localViewBoxName:
        description: Specifies the name of the Storage Domain (View Box) on the local
          Cluster.
        type: string
        x-go-name: LocalViewBoxName
        x-nullable: true
      remoteViewBoxId:
        description: Specifies the id of the Storage Domain (View Box) on the remote
          Cluster.
        type: integer
        format: int64
        x-go-name: RemoteViewBoxId
        x-nullable: true
      remoteViewBoxName:
        description: Specifies the name of the Storage Domain (View Box) on the remote
          Cluster.
        type: string
        x-go-name: RemoteViewBoxName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ViewBoxStats:
    description: Provides statistics about the Storage Domain (View Box).
    type: object
    title: Storage Domain (View Box) Stats.
    properties:
      cloudUsagePerfStats:
        description: |-
          Provides the usage statistics for the data stored in the
          cloud for the Storage Domain (View Box). Performance statistics are not
          populated.
        x-nullable: true
        $ref: '#/definitions/UsageAndPerformanceStats'
      dataUsageStats:
        description: |-
          Specifies the data usage metric of the data stored on the Storage Domain
          (View Box).
        title: Data Usage Statistics.
        x-nullable: true
        $ref: '#/definitions/DataUsageStats'
      id:
        description: Specifies the id of the Storage Domain (View Box).
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
      localUsagePerfStats:
        description: |-
          Provides usage statistics for the locally stored data
          on the Storage Domain (View Box). Performance statistics are not populated.
        x-nullable: true
        $ref: '#/definitions/UsageAndPerformanceStats'
      logicalStats:
        description: Provides the logical usage statistics for the Storage Domain
          (View Box).
        x-nullable: true
        $ref: '#/definitions/LogicalStats'
      usagePerfStats:
        description: |-
          Provides usage and performance statistics for the Storage Domain
          (View Box)
          (includes both local and cloud data).
        x-nullable: true
        $ref: '#/definitions/UsageAndPerformanceStats'
    x-go-package: cohesity/iris/server/data/public
  ViewIdMappingProto_FileLevelDataLockConfig:
    type: object
    title: File level data lock configuration.
    properties:
      autoLockDurationUsecs:
        description: |-
          Auto-lock automatically commit files to WORM state in the filesystem if
          they have not been modified for an administrator-specified period of
          time. When the auto-lock is enabled, this field must be set to idle time
          duration after which file would be automatically locked. Auto locking
          will be disabled when configured with default value of -1.
        type: integer
        format: int64
        x-go-name: AutoLockDurationUsecs
        x-nullable: true
      defaultRetentionDurationUsecs:
        description: |-
          Default retention duration is used when an explicit retention timestamp
          is not set by user/application when locking a file. If the administrator
          does not want to enforce this, this field must not be set. If file
          requires being retained forever by default, this must be set to
          INT64_MAX. If minimum and maximum retention are enforced, then this must
          be always between these two durations.
        type: integer
        format: int64
        x-go-name: DefaultRetentionDurationUsecs
        x-nullable: true
      holdTimestampUsecs:
        description: |-
          Specifies timestamp to protect locked files until a specific date.
          This would override retention periods and deny any mutable or remove
          operations on locked files until a specific date.
        type: integer
        format: int64
        x-go-name: HoldTimestampUsecs
        x-nullable: true
      maxRetentionDurationUsecs:
        description: |-
          Specifies maximum retention duration of worm locked file. If the
          administrator does not want to enforce this, this must not be set. If
          default and max retention duration are enforced, max retention
          duration must be greater than or equal to default retention duration.
          If min and max retention duration are enforced, max retention duration
          must be greater than and equal to min retention duration.
        type: integer
        format: int64
        x-go-name: MaxRetentionDurationUsecs
        x-nullable: true
      minRetentionDurationUsecs:
        description: |-
          Minimum and maximum retention duration allow the administrator to
          enforce retention duration that falls within a specified range. If
          the administrator does not want to enforce this, this must not be set.
          If the file requires being retained forever, this must be set to
          INT64_MAX. If default retention is enforced, this must be less than or
          equal to default retention. If max retention are enforced, default
          retention duration must be less than and equal to max retention
          duration.
        type: integer
        format: int64
        x-go-name: MinRetentionDurationUsecs
        x-nullable: true
      mode:
        description: Explicit locking mode.
        type: integer
        format: int32
        x-go-name: Mode
        x-nullable: true
      protocol:
        description: Explicit locking protocol.
        type: integer
        format: int32
        x-go-name: Protocol
        x-nullable: true
    x-go-package: bridge/view_keeper/view_metadata.pb
  ViewIdMappingProto_ProtocolAccessInfo:
    type: object
    properties:
      iscsiAccess:
        description: Access control for iSCSI protocol for this view.
        type: integer
        format: int32
        x-go-name: IscsiAccess
        x-nullable: true
      nfsAccess:
        description: Access control for NFS protocol for this view.
        type: integer
        format: int32
        x-go-name: NfsAccess
        x-nullable: true
      s3Access:
        description: Access control for S3 protocol for this view.
        type: integer
        format: int32
        x-go-name: S3Access
        x-nullable: true
      smbAccess:
        description: Access control for SMB protocol for this view.
        type: integer
        format: int32
        x-go-name: SmbAccess
        x-nullable: true
      swiftAccess:
        description: Access control for Swift protocol for this view.
        type: integer
        format: int32
        x-go-name: SwiftAccess
        x-nullable: true
    x-go-package: bridge/view_keeper/view_metadata.pb
  ViewParams:
    type: object
    title: Contains information needed when creating or cloning a view.
    properties:
      clientSubnetWhitelistVec:
        description: |-
          List of external client subnets from where requests will be received for
          the new view.
        type: array
        items:
          $ref: '#/definitions/ClusterConfigProto_Subnet'
        x-go-name: ClientSubnetWhitelistVec
        x-nullable: true
      disableNfsAccess:
        description: Whether to disable NFS access in the new view.
        type: boolean
        x-go-name: DisableNfsAccess
        x-nullable: true
      protocolAccessInfo:
        description: The protocol access override (if any) of the view.
        x-nullable: true
        $ref: '#/definitions/ViewIdMappingProto_ProtocolAccessInfo'
      qosMappingVec:
        description: The qos mappings (if any) for the new view.
        type: array
        items:
          $ref: '#/definitions/ClusterConfigProto_QoSMapping'
        x-go-name: QosMappingVec
        x-nullable: true
      storagePolicyOverride:
        description: The storage policy override (if any) for the new view.
        x-nullable: true
        $ref: '#/definitions/ClusterConfigProto_StoragePolicyOverride'
      viewDescription:
        description: The description to be applied to the new view.
        type: string
        x-go-name: ViewDescription
        x-nullable: true
      wormLockExpiryUsecs:
        description: |-
          This value 'worm_lock_expiry_usecs' if specified will be set on the cloned
          view. This guarantees that the cloned view cannot be removed till the
          specified timestamp has reached.
          NOTE: If this is specified the clone view will be marked as immutable.
        type: integer
        format: int64
        x-go-name: WormLockExpiryUsecs
        x-nullable: true
    x-go-package: magneto/master/base/master.pb
  ViewPrivileges:
    description: |-
      ViewPrivileges specifies which views are allowed to be accessed by an app
      instance.
    type: object
    title: View privileges.
    properties:
      privilegesType:
        description: |-
          Specifies if all, none or specific views are allowed to be accessed.
          Specifies if all, none or specific views are allowed to be accessed.
          kNone - None of the views have access.
          kAll - All the views have access.
          kSpecific - Only specific views have access.
        type: string
        enum:
        - kNone
        - kAll
        - kSpecific
        x-go-name: PrivilegesType
        x-nullable: true
      viewIds:
        description: |-
          Specifies the ids of the views which are allowed to be accessed in case
          the privilege type is kSpecific.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: ViewIds
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ViewProtection:
    description: |-
      Specifies information about the Protection Jobs that are protecting the
      View.
    type: object
    title: View Protection.
    properties:
      inactive:
        description: |-
          Specifies if this View is an inactive View that was created on this
          Remote Cluster to store the Snapshots created by replication.
          This inactive View cannot be NFS or SMB mounted.
        type: boolean
        x-go-name: Inactive
        x-nullable: true
      magnetoEntityId:
        description: Specifies the id of the Protection Source that is using this
          View.
        type: integer
        format: int64
        x-go-name: MagnetoEntityId
        x-nullable: true
      protectionJobs:
        description: |-
          Array of Protection Jobs.

          Specifies the Protection Jobs that are protecting the View.
        type: array
        items:
          $ref: '#/definitions/ProtectionJobInfo'
        x-go-name: ProtectionJobs
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ViewProtectionSource:
    description: Specifies a Protection Source in a View environment.
    type: object
    title: View Protection Source.
    properties:
      id:
        description: |-
          Specifies a unique id of a Protection Source for a View.
          The id is unique across Cohesity Clusters.
        allOf:
        - $ref: '#/definitions/UniversalId'
        x-nullable: true
      name:
        description: Specifies a human readable name of the Protection Source of a
          View.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          Specifies the type of managed Object in a View Protection Source
          environment.
          Examples of View Objects include 'kViewBox' or 'kView'.
          'kViewBox' indicates Storage Domain as a Protection Source type.
          'kView' indicates View as a Protection Source type.
        type: string
        enum:
        - kViewBox
        - kView
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ViewProtocolStats:
    description: Specifies the View Protocol stats.
    type: object
    title: View Protocol Statistics.
    properties:
      protocols:
        description: Specifies the protocols supported on these Views.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kSmb
          - kS3
          - kIscsi
          x-nullable: true
        x-go-name: Protocols
      sizeBytes:
        description: Specifies the size of all the Views in bytes which are using
          the specified protocol.
        type: integer
        format: int64
        x-go-name: SizeBytes
        x-nullable: true
      viewCount:
        description: Specifies the number of Views which are using the specified protocol.
        type: integer
        format: int64
        x-go-name: ViewCount
        x-nullable: true
  ViewProtocolStatsList:
    description: Specifies the View Protocol stats List.
    type: array
    title: View Protocol Statistics List.
    items:
      $ref: '#/definitions/ViewProtocolStats'
  ViewStatInfo:
    description: Specifies the View stats per view.
    type: object
    title: View Statistics per View.
    properties:
      clusterId:
        description: Specifies the cluster Id.
        type: integer
        format: int64
        x-go-name: ClusterId
        x-nullable: true
      clusterIncarnationId:
        description: Specifies the cluster Incarnation Id.
        type: integer
        format: int64
        x-go-name: ClusterIncarnationId
        x-nullable: true
      dataReadBytes:
        description: Specifies the data read in bytes.
        type: integer
        format: int64
        x-go-name: DataReadBytes
        x-nullable: true
      dataWrittenBytes:
        description: Specifies the data written in bytes.
        type: integer
        format: int64
        x-go-name: DataWrittenBytes
        x-nullable: true
      logicalUsedBytes:
        description: Specifies the logical size used in bytes.
        type: integer
        format: int64
        x-go-name: LogicalUsedBytes
        x-nullable: true
      peakReadThroughput:
        description: Specifies the peak data read in bytes per second in the last
          day.
        type: integer
        format: int64
        x-go-name: PeakReadThroughput
        x-nullable: true
      peakWriteThroughput:
        description: Specifies the peak data written in bytes per second in the last
          day.
        type: integer
        format: int64
        x-go-name: PeakWriteThroughput
        x-nullable: true
      physicalUsedBytes:
        description: Specifies the physical size used in bytes.
        type: integer
        format: int64
        x-go-name: PhysicalUsedBytes
        x-nullable: true
      protocols:
        description: Specifies the protocols of this view.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kSmb
          - kS3
          - kIscsi
          x-nullable: true
      storageReductionRatio:
        description: Specifies the storage reduction ratio.
        type: number
        format: float
        x-go-name: StorageReductionRatio
        x-nullable: true
      viewId:
        description: Specifies the view Id.
        type: integer
        format: int64
        x-go-name: ViewId
        x-nullable: true
      viewName:
        description: Specifies the view name.
        type: string
        x-go-name: ViewName
        x-nullable: true
  ViewStats:
    description: Provides statistics about the View.
    type: object
    title: View Stats.
    properties:
      dataUsageStats:
        description: Specifies the data usage metric of the data stored in this View.
        title: Data Usage Statistics.
        x-nullable: true
        $ref: '#/definitions/DataUsageStats'
      id:
        description: Specifies the id of the View.
        type: integer
        format: int64
        x-go-name: Id
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ViewStatsSnapshot:
    description: Specifies the list statistics for each View for a given timestamp.
    type: object
    title: View Statistics
    properties:
      timestamp:
        description: Specifies the unix time in milliseconds when these values were
          generated
        type: integer
        format: int64
        x-go-name: Timestamp
        x-nullable: true
      viewStatsList:
        description: Specifies the list of Views and their statistics at the given
          timestamp.
        type: array
        items:
          $ref: '#/definitions/ViewStatInfo'
        x-go-name: ViewStatsList
  ViewTimeSeriesStats:
    description: Specifies the View Time Series stats.
    type: object
    title: View Time Series Statistics.
    properties:
      timestampMsecs:
        description: Specifies the timestamp in milliseconds.
        type: integer
        format: int64
        x-go-name: TimestampMsecs
        x-nullable: true
      value:
        description: Specifies the value of the specified metric at the timestamp.
        type: integer
        format: int64
        x-go-name: Value
        x-nullable: true
  ViewTimeSeriesStatsList:
    description: Specifies the View Time Series stats list.
    type: array
    title: View Time Series Statistics List.
    items:
      $ref: '#/definitions/ViewTimeSeriesStats'
  ViewUserQuotaParameters:
    description: Specifies the params to create and edit a user quota policy in a
      view.
    type: object
    title: View User Quota Parameters.
    properties:
      userQuotaPolicy:
        description: The user quota policies that need to be updated.
        x-nullable: true
        $ref: '#/definitions/UserQuota'
      viewName:
        description: View name of input view.
        type: string
        x-go-name: ViewName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  ViewUserQuotas:
    description: |-
      Specifies the Result parameters for all user quotas
      of a view.
    type: object
    title: View User Quotas.
    properties:
      cookie:
        description: |-
          This cookie can be used in the succeeding call to list user quotas and
          usages to get the next set of user quota overrides. If set to nil, it
          means that there's no more results that the server could provide.
        type: string
        x-go-name: Cookie
        x-nullable: true
      quotaAndUsageInAllViews:
        description: The quota and usage information for a user in all his views.
        type: array
        items:
          $ref: '#/definitions/QuotaAndUsageInView'
        x-go-name: QuotaAndUsageInAllViews
        x-nullable: true
      summaryForUser:
        description: |-
          UserQuotaSummaryForUser is the summary for user quotas in all views for
          a user.
        x-nullable: true
        $ref: '#/definitions/UserQuotaSummaryForUser'
      summaryForView:
        description: UserQuotaSummaryForView is the summary for user quotas in a view.
        x-nullable: true
        $ref: '#/definitions/UserQuotaSummaryForView'
      userQuotaSettings:
        description: The default user quota policy for this view.
        x-nullable: true
        $ref: '#/definitions/UserQuotaSettings'
      usersQuotaAndUsage:
        description: The list of user quota policies/overrides and usages.
        type: array
        items:
          $ref: '#/definitions/UserQuotaAndUsage'
        x-go-name: UsersQuotaAndUsage
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VirtualDiskId:
    description: |-
      This message defines the proto that can be used to identify the disks in
      different environments.
    type: object
    properties:
      controllerBusNumber:
        description: Controller's bus-id controlling the virtual disk in question.
        type: integer
        format: int64
        x-go-name: ControllerBusNumber
        x-nullable: true
      controllerType:
        description: Controller's type (SCSI, IDE etc).
        type: string
        x-go-name: ControllerType
        x-nullable: true
      diskId:
        description: |-
          Original disk id. This is sufficient to identify the disk information, but
          in some scenarios, user's may specify the controller option instead.
        type: string
        x-go-name: DiskId
        x-nullable: true
      unitNumber:
        description: Disk unit number to identify the virtual disk within a controller.
        type: integer
        format: int64
        x-go-name: UnitNumber
        x-nullable: true
    x-go-package: magneto/base/magneto.pb
  VirtualDiskIdInformation:
    description: |-
      Specifies information about virtual disk which includes disk uuid,
      controller type, bus number and unit number.
    type: object
    title: Virtual Disk Id.
    properties:
      busNumber:
        description: Specifies the Id of the controller bus that controls the disk.
        type: integer
        format: int64
        x-go-name: BusNumber
        x-nullable: true
      controllerType:
        description: Specifies the controller type like SCSI, or IDE etc.
        type: string
        x-go-name: ControllerType
        x-nullable: true
      diskId:
        description: Specifies the uuid of the virtual disk.
        type: string
        x-go-name: DiskId
        x-nullable: true
      unitNumber:
        description: |-
          Specifies the disk file name. This is the VMDK name and not the
          flat file name.
        type: integer
        format: int64
        x-go-name: UnitNumber
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VirtualDiskInfo:
    type: object
    title: Virtual Disk Information.
    properties:
      busNumber:
        description: Specifies the Id of the controller bus that controls the disk.
        type: integer
        format: int64
        x-go-name: BusNumber
        x-nullable: true
      controllerType:
        description: Specifies the controller type like SCSI, or IDE etc.
        type: string
        x-go-name: ControllerType
        x-nullable: true
      filename:
        description: Specifies the host file name used as the virtual disk.
        type: string
        x-go-name: Filename
        x-nullable: true
      unitNumber:
        description: |-
          Specifies the disk file name. This is the VMDK name and not the
          flat file name.
        type: integer
        format: int64
        x-go-name: UnitNumber
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VirtualDiskInformation:
    type: object
    title: Specifies information about the virtual disk.
    properties:
      busNumber:
        description: Specifies the Id of the controller bus that controls the disk.
        type: integer
        format: int64
        x-go-name: BusNumber
        x-nullable: true
      controllerType:
        description: Specifies the controller type like SCSI, or IDE etc.
        type: string
        x-go-name: ControllerType
        x-nullable: true
      diskId:
        description: |-
          Specifies original disk id. This is sufficient to identify the disk
          information, but in some scenarios, users may specify the controller
          option instead.
        type: string
        x-go-name: DiskId
        x-nullable: true
      diskLocation:
        description: |-
          Specifies location of the disk, e.g. this will contain the location of
          datastore in VMware environment.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      diskSizeInBytes:
        description: Specifies size of the virtual disk in bytes.
        type: integer
        format: int64
        x-go-name: DiskSizeInBytes
        x-nullable: true
      filePath:
        description: Specifies the original file path if applicable.
        type: string
        x-go-name: FilePath
        x-nullable: true
      mountPoints:
        description: Specifies the list of mount points.
        type: array
        items:
          type: string
        x-go-name: MountPoints
        x-nullable: true
      unitNumber:
        description: |-
          Specifies the disk file name. This is the VMDK name and not the
          flat file name.
        type: integer
        format: int64
        x-go-name: UnitNumber
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VirtualDiskMapping:
    description: |-
      Specifies the request data struct for virtual disk mapping with only the
      disk ids.
    type: object
    title: Virtual Disk Mapping.
    properties:
      diskToOverwrite:
        description: |-
          Specifies information about disk which user wants to overwrite. If
          specified, then powerOffVmBeforeRecovery must be true.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskIdInformation'
      sourceDisk:
        description: Specifies information about the source disk.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskIdInformation'
      targetLocationId:
        description: |-
          Specifies the target location information, for e.g. a datastore in
          VMware environment. If diskToOverwrite is specified, then the target
          location is automatically deduced.
        type: integer
        format: int64
        x-go-name: TargetLocationId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VirtualDiskMappingResponse:
    description: |-
      Specifies information about virtual disks where a user can specify mappings
      of source disk and destination disk to overwrite.
    type: object
    title: Virtual Disk Mapping Response.
    properties:
      diskToOverwrite:
        description: |-
          Specifies information about disk which user wants to overwrite. If
          specified, then powerOffVmBeforeRecovery must be true.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskIdInformation'
      sourceDisk:
        description: Specifies information about the source disk.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskIdInformation'
      targetLocation:
        description: |-
          Specifies the target location information, for e.g. a datastore in
          VMware environment. If diskToOverwrite is specified, then the target
          location is automatically deduced.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
    x-go-package: cohesity/iris/server/data/public
  VirtualDiskRecoverTaskState:
    description: Specifies the complete information about a recover virtual disk task
      state.
    type: object
    title: Virtual Disk Recover State.
    properties:
      error:
        description: |-
          The error encountered by task (if any). Only valid if the task has
          finished.
        x-nullable: true
        $ref: '#/definitions/RequestError'
      isInstantRecoveryFinished:
        description: Specifies if instant recovery of the virtual disk is complete.
        type: boolean
        x-go-name: IsInstantRecoveryFinished
        x-nullable: true
      taskState:
        description: |-
          Specifies the current state of the restore virtual disks task.
          Specifies the current state of the restore virtual disks task.
          'kDetachDisksDone' indicates the detached state of disks.
          'kSetupDisksDone' indicates that disks setup is completed.
          'kMigrateDisksStarted' indicates that disks are being migrated.
          'kMigrateDisksDone' indicates that disk migration is completed.
          'kUnMountDatastoreDone' indicates that disk has unmounted the datastore.
        type: string
        enum:
        - kDetachDisksDone
        - kSetupDisksDone
        - kMigrateDisksStarted
        - kMigrateDisksDone
        - kUnMountDatastoreDone
        x-go-name: TaskState
        x-nullable: true
      virtualDiskRestoreResponse:
        description: Specifies the response for recovery of virtual disks of a vm.
        x-nullable: true
        $ref: '#/definitions/VirtualDiskRestoreResponse'
    x-go-package: cohesity/iris/server/data/public
  VirtualDiskRestoreParameters:
    description: Specifies the parameters to recover virtual disks of a vm.
    type: object
    title: Virtual Disk Restore Parameters.
    properties:
      powerOffVmBeforeRecovery:
        description: Specifies whether to power off the VM before recovering virtual
          disks.
        type: boolean
        x-go-name: PowerOffVmBeforeRecovery
        x-nullable: true
      powerOnVmAfterRecovery:
        description: Specifies whether to power on the VM after recovering virtual
          disks.
        type: boolean
        x-go-name: PowerOnVmAfterRecovery
        x-nullable: true
      targetSourceId:
        description: Specifies the target entity to which the disks should be attached.
        type: integer
        format: int64
        x-go-name: TargetSourceId
        x-nullable: true
      virtualDiskMappings:
        description: Specifies the list of virtual disks mappings.
        type: array
        items:
          $ref: '#/definitions/VirtualDiskMapping'
        x-go-name: VirtualDiskMappings
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VirtualDiskRestoreResponse:
    description: |-
      Specifies the parameters to recover virtual disks of a vm with full
      Protection Source.
    type: object
    title: Virtual Disk Restore Response.
    properties:
      powerOffVmBeforeRecovery:
        description: Specifies whether to power off the VM before recovering virtual
          disks.
        type: boolean
        x-go-name: PowerOffVmBeforeRecovery
        x-nullable: true
      powerOnVmAfterRecovery:
        description: Specifies whether to power on the VM after recovering virtual
          disks.
        type: boolean
        x-go-name: PowerOnVmAfterRecovery
        x-nullable: true
      targetSource:
        description: Specifies the target entity to which the disks should be attached.
        x-nullable: true
        $ref: '#/definitions/ProtectionSource'
      virtualDiskMappings:
        description: Specifies the list of virtual disks mappings.
        type: array
        items:
          $ref: '#/definitions/VirtualDiskMappingResponse'
        x-go-name: VirtualDiskMappings
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VirtualNodeConfiguration:
    description: Specifies the configuration for a node in the Cluster.
    type: object
    title: Virtual Node Configuration.
    properties:
      nodeId:
        description: Specifies the Node ID for this node.
        type: integer
        format: int64
        x-go-name: NodeId
        x-nullable: true
      nodeIp:
        description: Specifies the Node IP address for this node.
        type: string
        x-go-name: NodeIp
        x-nullable: true
      useAsComputeNode:
        description: Specifies whether to use the Node for compute only.
        type: boolean
        x-go-name: UseAsComputeNode
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  Vlan:
    description: |-
      Specifies the settings of a VLAN.
      Its used by both Request and Response structures.
    type: object
    title: VLAN.
    properties:
      addToClusterPartition:
        description: |-
          Specifies whether to add the VLAN IPs to the cluster partition
          that already has one or more IPs from this VLAN.
        type: boolean
        x-go-name: AddToClusterPartition
        x-nullable: true
      allTenantAccess:
        description: |-
          Specifies if this VLAN can be used by all tenants without explicit
          assignment to them. This option can only be set true for VLANs that are
          not assigned to any tenant.
        type: boolean
        x-go-name: AllTenantAccess
        x-nullable: true
      appIpVecInUse:
        description: |-
          Set to true when ips are in use by Athena Apps.
          Note: If it is true then vlan interface can't be deleted.
        type: boolean
        x-go-name: AppIpVecInUse
        x-nullable: true
      appsips:
        description: |-
          Array of Athena Apps IPs.

          Specifies a list of Athena IPs in the VLAN.
        type: array
        items:
          type: string
        x-go-name: AppsIps
        x-nullable: true
      description:
        description: Specifies a description of the VLAN.
        type: string
        x-go-name: Description
        x-nullable: true
      gateway:
        description: |-
          Specifies the Gateway of the VLAN. It can carry V4 or V6 in case of
          requests, and carrises V4 in case of response.
        type: string
        x-go-name: Gateway
        x-nullable: true
      gatewayV6:
        description: Specifies the Gateway of the VLAN.
        type: string
        x-go-name: GatewayV6
        x-nullable: true
      hostname:
        description: Specifies the hostname of the VLAN.
        type: string
        x-go-name: Hostname
        x-nullable: true
      id:
        description: Specifies the id of the VLAN.
        type: integer
        format: int32
        x-go-name: Id
        x-nullable: true
      ifaceGroupName:
        description: |-
          Specifies the interface group name of the VLAN. It is in the format of
          <base_interface_group_name>.<vlan_id>.
        type: string
        x-go-name: IfaceGroupName
        x-nullable: true
      interfaceName:
        description: Specifies the interface name of the VLAN.
        type: string
        x-go-name: InterfaceName
        x-nullable: true
      ipFamily:
        description: |-
          Specifies IP family. Based on this, subnet/gateway field contains
          V4 or V6 values. Used in Request.
        type: integer
        format: int32
        x-go-name: IpFamily
        x-nullable: true
      ipPoolMap:
        description: |-
          IpPoolMap.

          Pool IPs to program VIP followers.
        type: object
        additionalProperties:
          type: array
          items:
            type: string
        x-go-name: IpPoolMap
        x-nullable: true
      ipRange:
        description: IP Range for vip addition
        x-nullable: true
        $ref: '#/definitions/IpRange'
      ips:
        description: |-
          Array of IPs.

          Specifies a list of IPs in the VLAN.
        type: array
        items:
          type: string
        x-go-name: Ips
        x-nullable: true
      mtu:
        type: integer
        format: int32
        x-go-name: Mtu
        x-nullable: true
      subnet:
        description: |-
          Specifies the subnet of the VLAN.
          The netmask can be specified by setting netmaskBits or netmaskIp4.
          The netmask can only be set using netmaskIp4 if the IP address is
          an IPv4 address. It can carry V4 or V6 in case of requests, and carries
          V4 in case of response.
        title: Subnet.
        allOf:
        - $ref: '#/definitions/Subnet'
        x-nullable: true
      subnetV6:
        description: |-
          Specifies the subnet of the VLAN.
          The netmask can be specified by setting netmaskBits or netmaskIp4.
          The netmask can only be set using netmaskIp4 if the IP address is
          an IPv4 address.
        title: Subnet.
        allOf:
        - $ref: '#/definitions/Subnet'
        x-nullable: true
      tenantId:
        description: Optional tenant id that this vlan belongs to.
        type: string
        x-go-name: TenantId
        x-nullable: true
      vlanName:
        description: Specifies the VLAN name of the vlanId.
        type: string
        x-go-name: VlanName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VlanParameters:
    description: Specifies VLAN parameters for the restore operation.
    type: object
    title: VLAN Parameters.
    properties:
      disableVlan:
        description: |-
          Specifies whether to use the VIPs even when VLANs are configured on the
          Cluster. If configured, VLAN IP addresses are used by default.
          If VLANs are not configured, this flag is ignored.
          Set this flag to true to force using the partition VIPs when VLANs are
          configured on the Cluster.
        type: boolean
        x-go-name: DisableVlan
        x-nullable: true
      interfaceName:
        description: |-
          Specifies the physical interface group name to use for mounting
          Cohesity's view on the remote host. If specified, Cohesity hostname or
          the IP address on this VLAN is used.
        type: string
        x-go-name: InterfaceName
        x-nullable: true
      vlan:
        description: |-
          Specifies the VLAN to use for mounting Cohesity's view on the remote
          host. If specified, Cohesity hostname or the IP address on this VLAN
          is used.
        type: integer
        format: int32
        x-go-name: Vlan
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VlanParams:
    type: object
    title: Contains vlan params associated with the backup/restore operation.
    properties:
      disableVlan:
        description: |-
          If this is set to true, then even if VLANs are configured on the system,
          the partition VIPs will be used for the restore.
        type: boolean
        x-go-name: DisableVlan
        x-nullable: true
      interfaceName:
        description: |-
          Interface group to use for restore. If this is not specified, primary
          interface group for the cluster will be used.
        type: string
        x-go-name: InterfaceName
        x-nullable: true
      vlanId:
        description: |-
          If this is set, then the Cohesity host name or the IP address associated
          with this vlan is used for mounting Cohesity's view on the remote host.
        type: integer
        format: int32
        x-go-name: VlanId
        x-nullable: true
    x-go-package: magneto/base/common.pb
  VmDirEntry:
    description: VmDirEntry is the struct to represent a file or a folder on a VM.
    type: object
    title: VM Directory Entry.
    properties:
      fstatInfo:
        description: FstatInfo is the stat information for the file.
        x-nullable: true
        $ref: '#/definitions/FileStatInfo'
      fullPath:
        description: FullPath is the full path of the file/directory.
        type: string
        x-go-name: FullPath
        x-nullable: true
      name:
        description: |-
          Name is the name of the file or folder. For /test/file.txt, name will be
          file.txt.
        type: string
        x-go-name: Name
        x-nullable: true
      type:
        description: |-
          DirEntryType is the type of entry i.e. file/folder.
          Specifies the type of directory entry.

          'kFile' indicates that current entry is of file type.
          'kDirectory' indicates that current entry is of directory type.
          'kSymlink' indicates that current entry is of symbolic link.
        type: string
        enum:
        - kFile
        - kDirectory
        - kSymlink
        x-go-name: Type
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmDirectoryListResult:
    description: |-
      VmDirectoryListResult is a struct containing information about each
      directory entry.
    type: object
    title: VM Directory List Result.
    properties:
      cookie:
        description: |-
          Cookie is used for paginating results. If ReadVMDirResult is returning
          partial results, this field will be set. Supplying this cookie will
          resume listing from where this result left off.
        type: string
        x-go-name: Cookie
        x-nullable: true
      entries:
        description: |-
          Entries is the array of files and folders that are immediate children
          of the parent directory specified in the request.
        type: array
        items:
          $ref: '#/definitions/VmDirEntry'
        x-go-name: Entries
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmGroup:
    description: VmGroup specifies information of a VM Group.
    type: object
    title: User group info.
    properties:
      name:
        description: Specifies name of the VM group.
        type: string
        x-go-name: Name
        x-nullable: true
      vms:
        description: Specifies VMs in the group.
        type: array
        items:
          $ref: '#/definitions/VmInfo'
        x-go-name: Vms
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmInfo:
    description: VmInfo specifies information of a VM.
    type: object
    title: VM information.
    properties:
      healthDetail:
        description: Specifies the reason if vm is unhealthy.
        type: string
        x-go-name: HealthDetail
        x-nullable: true
      healthStatus:
        description: Specifies the current health status of the app instance.
        type: integer
        format: int32
        x-go-name: HealthStatus
        x-nullable: true
      name:
        description: Specifies name of the VM.
        type: string
        x-go-name: Name
        x-nullable: true
      nodePorts:
        description: Specifies nodeports assigned to the vm.
        type: array
        items:
          $ref: '#/definitions/NodePort'
        x-go-name: NodePorts
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmNameInfo:
    description: |-
      Struct containing vm-name and ui-name (to be displayed on the UI to get
      number of replicas as input) as members.
    type: object
    properties:
      uiName:
        description: UI-name. To be displayed on the UI.
        type: string
        x-go-name: UiName
        x-nullable: true
      vmName:
        description: Vm-name.
        type: string
        x-go-name: VmName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmNumReplicas:
    type: object
    title: Struct containing vm-name and replica count as members.
    properties:
      numReplicas:
        description: Replica count.
        type: integer
        format: int64
        x-go-name: NumReplicas
        x-nullable: true
      vmName:
        description: Vm-name.
        type: string
        x-go-name: VmName
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmVolumesInformation:
    description: Specifies information about a logical volume found a VM.
    type: object
    title: VM Volume Information.
    properties:
      filesystemVolumes:
        description: |-
          Array of Filesystem Volumes.

          Specifies information about the filesystem volumes found in a
          logical volume.
        type: array
        items:
          $ref: '#/definitions/FilesystemVolume'
        x-go-name: FilesystemVolumes
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmwareCloneParameters:
    description: Specifies the information required for recovering or cloning VmWare
      VMs.
    type: object
    title: VmWare Clone Parameters.
    properties:
      datastoreFolderId:
        description: |-
          Specifies the folder where the restore datastore should be created.
          This is applicable only when the VMs are being cloned.
        type: integer
        format: int64
        x-go-name: DatastoreFolderId
        x-nullable: true
      detachNetwork:
        description: |-
          Specifies whether the network should be detached from the
          recovered or cloned VMs.
        type: boolean
        x-go-name: DetachNetwork
        x-nullable: true
      disableNetwork:
        description: |-
          Specifies whether the network should be left in disabled state.
          Attached network is enabled by default. Set this flag to true to
          disable it.
        type: boolean
        x-go-name: DisableNetwork
        x-nullable: true
      networkId:
        description: |-
          Specifies a network configuration to be attached to the cloned or
          recovered object.
          For kCloneVMs and kRecoverVMs tasks, original network configuration
          is detached if the cloned or recovered object is kept under a different
          parent Protection Source or a different Resource Pool.
          By default, for kRecoverVMs task, original network configuration is
          preserved if the recovered object is kept under the same parent
          Protection Source and the same Resource Pool.
          Specify this field to override the preserved network configuration or
          to attach a new network configuration to the cloned or recovered objects.
          You can get the networkId of the kNetwork object by setting
          includeNetworks to 'true' in the GET /public/protectionSources operation.
          In the response, get the id of the desired kNetwork object, the resource
          pool, and the registered parent Protection Source.
        type: integer
        format: int64
        x-go-name: NetworkId
        x-nullable: true
      networkMappings:
        description: |-
          Specifies the parameters for mapping the source and target
          networks. This field can be used if restoring to a different
          parent source.
          This will replace the NetworkId and DisableNetwork that are
          used to provide configuration for a single network. Unless the
          support for mapping is available for all the entities old keys
          can be used to attach a new network.
          Supports 'kVMware' for now.
        type: array
        items:
          $ref: '#/definitions/NetworkMapping'
        x-go-name: NetworkMappings
        x-nullable: true
      poweredOn:
        description: |-
          Specifies the power state of the cloned or recovered objects.
          By default, the cloned or recovered objects are powered off.
        type: boolean
        x-go-name: KeepPoweredOn
        x-nullable: true
      prefix:
        description: |-
          Specifies a prefix to prepended to the source object name to derive a
          new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Prefix
        x-nullable: true
      preserveCustomAttributesDuringClone:
        description: |-
          Specifies whether or not to preserve the custom attributes during the
          clone operation. The default behavior is 'true'.
        type: boolean
        x-go-name: PreserveCustomAttributesDuringClone
        x-nullable: true
      preserveTags:
        description: |-
          Specifies whether or not to preserve tags during the clone operation. The
          default behavior is 'true'.
        type: boolean
        x-go-name: PreserveTags
        x-nullable: true
      recoveryProcessType:
        description: |-
          Specifies the type of recovery process to be performed. If unspecified,
          then an instant recovery will be performed.
          Specifies the recovery process type to be used..
          'kInstantRecovery' indicates that an instant recovery should be performed.
          'kCopyRecovery' indicates that a copy recovery should be performed.
        type: string
        enum:
        - kInstantRecovery
        - kCopyRecovery
        x-go-name: RecoveryProcessType
        x-nullable: true
      resourcePoolId:
        description: |-
          Specifies the resource pool where the cloned or recovered objects are
          attached. This field is mandatory for kCloneVMs Restore Tasks always.
          For kRecoverVMs Restore Tasks, this field is mandatory only if
          newParentId field is specified. If this field is not specified,
          recovered objects are attached to the original resource pool under the
          original parent.
        type: integer
        format: int64
        x-go-name: ResourcePoolId
        x-nullable: true
      storageProfileName:
        description: |-
          Specifies the name of the destination storage profile while restoring to
          an alternate VCD location.
        type: string
        x-go-name: StorageProfileName
        x-nullable: true
      storageProfileVcdUuid:
        description: |-
          Specifies the UUID of the storage profile while restoring to an alternate
          VCD location.
        type: string
        x-go-name: StorageProfileVcdUuid
        x-nullable: true
      suffix:
        description: |-
          Specifies a suffix to appended to the original source object name
          to derive a new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Suffix
        x-nullable: true
      vAppId:
        description: Specifies the ID of the vApp to which a VM should be restored.
        type: integer
        format: int64
        x-go-name: VAppId
        x-nullable: true
      vdcId:
        description: Specifies the ID of the VDC to which a VM should be restored.
        type: integer
        format: int64
        x-go-name: VdcId
        x-nullable: true
      vmFolderId:
        description: |-
          Specifies a folder where the VMs should be restored. This is applicable
          only when the VMs are being restored to an alternate location or if clone
          is being performed.
        type: integer
        format: int64
        x-go-name: VmFolderId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmwareEnvJobParameters:
    description: |-
      Specifies job parameters applicable for all 'kVMware' Environment type
      Protection Sources in a Protection Job.
    type: object
    title: Vmware Environment Job Parameters.
    properties:
      excludedDisks:
        description: |-
          Specifies the list of Disks to be excluded from backing up. These disks
          are excluded from all Protection Sources in the Protection Job.
        type: array
        items:
          $ref: '#/definitions/DiskUnit'
        x-go-name: ExcludedDisks
        x-nullable: true
      fallbackToCrashConsistent:
        description: |-
          If true, takes a crash-consistent snapshot when app-consistent snapshot
          fails. Otherwise, the snapshot attempt is marked failed.
        type: boolean
        x-go-name: FallbackToCrashConsistent
        x-nullable: true
      skipPhysicalRdmDisks:
        description: |-
          If true, skip physical RDM disks when backing up VMs. Otherwise, backup
          of VMs having physical RDM will fail.
        type: boolean
        x-go-name: SkipPhysicalRdmDisks
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmwareRestoreParameters:
    description: Specifies the information required for recovering or cloning VmWare
      VMs.
    type: object
    title: VmWare Restore Parameters.
    properties:
      additionalDatastoreIds:
        description: Specifies additional datastores where the object should be recovered
          to.
        type: array
        items:
          type: integer
          format: int64
        x-go-name: AdditionalDatastoreIds
        x-nullable: true
      datastoreFolderId:
        description: |-
          Specifies the folder where the restore datastore should be created.
          This is applicable only when the VMs are being cloned.
        type: integer
        format: int64
        x-go-name: DatastoreFolderId
        x-nullable: true
      datastoreId:
        description: |-
          Specifies the datastore where the object's files should be
          recovered to.
          This field is mandatory to recover objects to a different
          resource pool or to a different parent source.
          If not specified, objects are recovered to their
          original datastore locations in the parent source.
        type: integer
        format: int64
        x-go-name: DatastoreId
        x-nullable: true
      detachNetwork:
        description: |-
          Specifies whether the network should be detached from the
          recovered or cloned VMs.
        type: boolean
        x-go-name: DetachNetwork
        x-nullable: true
      disableNetwork:
        description: |-
          Specifies whether the network should be left in disabled state.
          Attached network is enabled by default. Set this flag to true to
          disable it.
        type: boolean
        x-go-name: DisableNetwork
        x-nullable: true
      networkId:
        description: |-
          Specifies a network configuration to be attached to the cloned or
          recovered object.
          For kCloneVMs and kRecoverVMs tasks, original network configuration
          is detached if the cloned or recovered object is kept under a different
          parent Protection Source or a different Resource Pool.
          By default, for kRecoverVMs task, original network configuration is
          preserved if the recovered object is kept under the same parent
          Protection Source and the same Resource Pool.
          Specify this field to override the preserved network configuration or
          to attach a new network configuration to the cloned or recovered objects.
          You can get the networkId of the kNetwork object by setting
          includeNetworks to 'true' in the GET /public/protectionSources operation.
          In the response, get the id of the desired kNetwork object, the resource
          pool, and the registered parent Protection Source.
        type: integer
        format: int64
        x-go-name: NetworkId
        x-nullable: true
      networkMappings:
        description: |-
          Specifies the parameters for mapping the source and target
          networks. This field can be used if restoring to a different
          parent source.
          This will replace the NetworkId and DisableNetwork that are
          used to provide configuration for a single network. Unless the
          support for mapping is available for all the entities old keys
          can be used to attach a new network.
          Supports 'kVMware' for now.
        type: array
        items:
          $ref: '#/definitions/NetworkMapping'
        x-go-name: NetworkMappings
        x-nullable: true
      poweredOn:
        description: |-
          Specifies the power state of the cloned or recovered objects.
          By default, the cloned or recovered objects are powered off.
        type: boolean
        x-go-name: KeepPoweredOn
        x-nullable: true
      prefix:
        description: |-
          Specifies a prefix to prepended to the source object name to derive a
          new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Prefix
        x-nullable: true
      preserveCustomAttributesDuringClone:
        description: |-
          Specifies whether or not to preserve the custom attributes during the
          clone operation. The default behavior is 'true'.
        type: boolean
        x-go-name: PreserveCustomAttributesDuringClone
        x-nullable: true
      preserveTags:
        description: |-
          Specifies whether or not to preserve tags during the clone operation. The
          default behavior is 'true'.
        type: boolean
        x-go-name: PreserveTags
        x-nullable: true
      recoveryProcessType:
        description: |-
          Specifies the type of recovery process to be performed. If unspecified,
          then an instant recovery will be performed.
          Specifies the recovery process type to be used..
          'kInstantRecovery' indicates that an instant recovery should be performed.
          'kCopyRecovery' indicates that a copy recovery should be performed.
        type: string
        enum:
        - kInstantRecovery
        - kCopyRecovery
        x-go-name: RecoveryProcessType
        x-nullable: true
      resourcePoolId:
        description: |-
          Specifies the resource pool where the cloned or recovered objects are
          attached. This field is mandatory for kCloneVMs Restore Tasks always.
          For kRecoverVMs Restore Tasks, this field is mandatory only if
          newParentId field is specified. If this field is not specified,
          recovered objects are attached to the original resource pool under the
          original parent.
        type: integer
        format: int64
        x-go-name: ResourcePoolId
        x-nullable: true
      storageProfileName:
        description: |-
          Specifies the name of the destination storage profile while restoring to
          an alternate VCD location.
        type: string
        x-go-name: StorageProfileName
        x-nullable: true
      storageProfileVcdUuid:
        description: |-
          Specifies the UUID of the storage profile while restoring to an alternate
          VCD location.
        type: string
        x-go-name: StorageProfileVcdUuid
        x-nullable: true
      suffix:
        description: |-
          Specifies a suffix to appended to the original source object name
          to derive a new name for the recovered or cloned object.
          By default, cloned or recovered objects retain their original name.
          Length of this field is limited to 8 characters.
        type: string
        x-go-name: Suffix
        x-nullable: true
      vAppId:
        description: Specifies the ID of the vApp to which a VM should be restored.
        type: integer
        format: int64
        x-go-name: VAppId
        x-nullable: true
      vdcId:
        description: Specifies the ID of the VDC to which a VM should be restored.
        type: integer
        format: int64
        x-go-name: VdcId
        x-nullable: true
      vmFolderId:
        description: |-
          Specifies a folder where the VMs should be restored. This is applicable
          only when the VMs are being restored to an alternate location or if clone
          is being performed.
        type: integer
        format: int64
        x-go-name: VmFolderId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VmwareSpecialParameters:
    description: |-
      Specifies additional special settings applicable for a Protection Source
      of 'kVMware' type in a Protection Job.
    type: object
    title: Vmware Source Special Job Parameters.
    properties:
      applicationParameters:
        description: |-
          Specifies parameters that are related to applications running on the
          Protection Source.
        x-nullable: true
        $ref: '#/definitions/ApplicationParameters'
      excludedDisks:
        description: |-
          Specifies the list of Disks to be excluded from backing up. These disks
          are excluded from all Protection Sources in the Protection Job.
        type: array
        items:
          $ref: '#/definitions/DiskUnit'
        x-go-name: ExcludedDisks
        x-nullable: true
      vmCredentials:
        description: |-
          Specifies the administrator credentials to log in to the
          guest Windows system of a VM that hosts the Microsoft Exchange Server.
          If truncateExchangeLog is set to true and the specified source
          is a VM, administrator credentials to log in to the guest Windows system
          of the VM must be provided to truncate the logs.
          This field is only applicable to Sources in the kVMware environment.
        title: VM Credentials.
        allOf:
        - $ref: '#/definitions/Credentials'
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VolumeInfo:
    type: object
    title: Information about each logical volume (filesystem).
    properties:
      diskVec:
        description: |-
          Information about all the disks and partitions needed to mount this
          logical volume.
        type: array
        items:
          $ref: '#/definitions/VolumeInfo_DiskInfo'
        x-go-name: DiskVec
        x-nullable: true
      displayName:
        description: Display name.
        type: string
        x-go-name: DisplayName
        x-nullable: true
      filesystemType:
        description: Filesystem on this volume.
        type: string
        x-go-name: FilesystemType
        x-nullable: true
      fsLabel:
        description: Filesystem label.
        type: string
        x-go-name: FsLabel
        x-nullable: true
      fsUuid:
        description: Filesystem uuid.
        type: string
        x-go-name: FsUuid
        x-nullable: true
      isBootable:
        description: Is this volume bootable?
        type: boolean
        x-go-name: IsBootable
        x-nullable: true
      isDedup:
        description: |-
          Is this a dedup volume?
          Currently, set to true only for ntfs dedup volume.
        type: boolean
        x-go-name: IsDedup
        x-nullable: true
      isSupported:
        description: Is this a supported Volume (filesystem)?
        type: boolean
        x-go-name: IsSupported
        x-nullable: true
      lvInfo:
        description: This field is set only for lvm and ldm volume only.
        x-nullable: true
        $ref: '#/definitions/VolumeInfo_LogicalVolumeInfo'
      volumeGuid:
        description: |-
          The guid of the volume represented by this virtual disk.
          This information will be originally populated by magneto for physical
          environments.
        type: string
        x-go-name: VolumeGuid
        x-nullable: true
      volumeType:
        description: Whether this volume is simple, lvm or ldm.
        type: integer
        format: int32
        x-go-name: VolumeType
        x-nullable: true
    x-go-package: yoda/base/volume_info.pb
  VolumeInfo_DiskInfo:
    type: object
    title: Information about each disk in volume.
    properties:
      diskFileName:
        description: Disk name. This is the vmdk names, and not the flat file name.
        type: string
        x-go-name: DiskFileName
        x-nullable: true
      diskFormat:
        description: |-
          Disk format type of this file.
          See util/disklib/base/enums.proto for available types.
        type: integer
        format: int32
        x-go-name: DiskFormat
        x-nullable: true
      diskUuid:
        description: Disk uuid.
        type: string
        x-go-name: DiskUuid
        x-nullable: true
      partitionType:
        description: Disk partition type.
        type: integer
        format: int32
        x-go-name: PartitionType
        x-nullable: true
      partitionVec:
        description: Information about all the partitions in this disk.
        type: array
        items:
          $ref: '#/definitions/VolumeInfo_DiskInfo_PartitionInfo'
        x-go-name: PartitionVec
        x-nullable: true
      physicalRangeVec:
        description: |-
          This disk is formed by following physical ranges.
          Ranges are arranged sequentially to form a disk.
        type: array
        items:
          $ref: '#/definitions/VolumeInfo_DiskInfo_PhysicalRange'
        x-go-name: PhysicalRangeVec
        x-nullable: true
      sectorSize:
        description: |-
          Sector size of disk.
          This is sector size of disk which is formed by mapping the physical
          ranges of the disk into a linear device.
        type: integer
        format: int64
        x-go-name: SectorSize
        x-nullable: true
      vmdkSize:
        description: Disk size in bytes.
        type: integer
        format: int64
        x-go-name: VmdkSize
        x-nullable: true
    x-go-package: yoda/base/volume_info.pb
  VolumeInfo_DiskInfo_PartitionInfo:
    description: |-
      Offset/Length here is relative to the logical range starting at 0,
      formed by mapping the physical ranges of the disk into a linear device.
    type: object
    title: Information about each Partition.
    properties:
      length:
        description: Length of partition in bytes.
        type: integer
        format: int64
        x-go-name: Length
        x-nullable: true
      partitionNumber:
        description: Partition number.
        type: integer
        format: int64
        x-go-name: PartitionNumber
        x-nullable: true
      partitionTypeUuid:
        description: |-
          Partition type uuid.
          If disk is unpartitioned, this field will not be set.
          If disk is MBR partitioned, this field will be set to partition type.
          Example: 83 (from below fdisk output) [This value is in hex]
          bash$ fdisk -l foobar.vmdk
          Device        Boot Start   End    Sectors  Size Id Type
          foobar.vmdk1       2048  1050623  1048576  512M 83 Linux
          If disk is GPT partitioned, this field will be set to partition type
          GUID.
          Example: fc63daf-8483-4772-8e793d69d8477de4 (Linux filesystem data)
        type: string
        x-go-name: PartitionTypeUuid
        x-nullable: true
      partitionUuid:
        description: |-
          Partition uuid.
          If disk is unpartitioned, this field will not be set.
          If disk is MBR partitioned, this field will not be set.
          If disk is GPT partitioned, this field will be set to partition GUID.
        type: string
        x-go-name: PartitionUuid
        x-nullable: true
      startOffset:
        description: Start offset of partition in bytes.
        type: integer
        format: int64
        x-go-name: StartOffset
        x-nullable: true
    x-go-package: yoda/base/volume_info.pb
  VolumeInfo_DiskInfo_PhysicalRange:
    type: object
    title: This message represents a physical contiguous range in disk file.
    properties:
      length:
        description: Length of this range in bytes.
        type: integer
        format: int64
        x-go-name: Length
        x-nullable: true
      offset:
        description: Offset of this range in disk file from beginning of file.
        type: integer
        format: int64
        x-go-name: Offset
        x-nullable: true
    x-go-package: yoda/base/volume_info.pb
  VolumeInfo_LogicalVolumeInfo:
    description: |-
      This is extra attribute which uniquely identifies a logical volume in LVM
      or LDM.
    type: object
    title: The proto is used only for LVM (Linux) or LDM (Windows).
    properties:
      deviceTree:
        description: |-
          The tree defining how to combine partitions to create this logical
          volume.
        x-nullable: true
        $ref: '#/definitions/DeviceTree'
      logicalVolumeName:
        description: Logical volume name.
        type: string
        x-go-name: LogicalVolumeName
        x-nullable: true
      logicalVolumeUuid:
        description: Logical volume uuid.
        type: string
        x-go-name: LogicalVolumeUuid
        x-nullable: true
      volumeGroupName:
        description: Volume group name.
        type: string
        x-go-name: VolumeGroupName
        x-nullable: true
      volumeGroupUuid:
        description: Volume group uuid.
        type: string
        x-go-name: VolumeGroupUuid
        x-nullable: true
    x-go-package: yoda/base/volume_info.pb
  VolumeSecurityInfo:
    description: Specifies information about NetApp volume security settings.
    type: object
    title: Volume Security Information.
    properties:
      groupId:
        description: Specifies the Unix group ID for this volume. 0 indicates the
          root id.
        type: integer
        format: int32
        x-go-name: GroupId
        x-nullable: true
      permissions:
        description: Specifies the Unix permission bits in octal string format.
        type: string
        x-go-name: Permissions
        x-nullable: true
      style:
        description: |-
          Specifies the security style associated with this volume.
          Specifies the type of a NetApp Volume.
          'kUnix' indicates Unix-style security.
          'kNtfs' indicates Windows NTFS-style security.
          'kMixed' indicates mixed-style security.
          'kUnified' indicates Unified-style security.
        type: string
        enum:
        - kUnix
        - kNtfs
        - kMixed
        - kUnified
        x-go-name: Style
        x-nullable: true
      userId:
        description: Specifies the Unix user id for this volume. 0 indicates the root
          id.
        type: integer
        format: int32
        x-go-name: UserId
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  VserverNetworkInterface:
    description: |-
      Specifies information about a logical network interface on a
      NetApp Vserver. The interface's IP address is the mount point for a
      specific data protocol, such as NFS or CIFS.
    type: object
    title: Vserver Network Interface.
    properties:
      dataProtocols:
        description: |-
          Array of Data Protocols.

          Specifies the set of data protocols supported by this interface.
          'kNfs' indicates NFS connections.
          'kCifs' indicates SMB (CIFS) connections.
          'kIscsi' indicates iSCSI connections.
          'kFc' indicates Fiber Channel connections.
          'kFcache' indicates Flex Cache connections.
          'kHttp' indicates HTTP connections.
          'kNdmp' indicates NDMP connections.
          'kManagement' indicates non-data connections used for management purposes.
          'kNvme' indicates NVMe connections.
        type: array
        items:
          type: string
          enum:
          - kNfs
          - kCifs
          - kIscsi
          - kFc
          - kFcache
          - kHttp
          - kNdmp
          - kManagement
          - kNvme
        x-go-name: DataProtocols
        x-nullable: true
      ipAddress:
        description: Specifies the IP address of this interface.
        type: string
        x-go-name: IpAddress
        x-nullable: true
      name:
        description: Specifies the name of this interface.
        type: string
        x-go-name: Name
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  WebHookDeliveryTarget:
    description: |-
      WebHookDeliveryTarget
      Specifies the external api url to hit along with the related options for it.
    type: object
    properties:
      curlOptions:
        description: Specifies curl options used to invoke external api url defined
          above.
        type: string
        x-go-name: CurlOptions
        x-nullable: true
      externalApiUrl:
        type: string
        x-go-name: ExternalApiUrl
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  WindowsHostSnapshotParameters:
    description: Specifies settings that are meaningful only on Windows hosts.
    type: object
    title: Windows Host Snapshot Parameters.
    properties:
      copyOnlyBackup:
        description: |-
          Specifies whether to backup regardless of the state of each file's
          backup history. Backup history will not be updated. Refer Microsoft
          documentation on VSS_BT_COPY.
        type: boolean
        x-go-name: CopyOnlyBackup
        x-nullable: true
      disableMetadata:
        description: |-
          Specifies whether to disable fetching and storing of some metadata
          on Cohesity Cluster to save storage space. Otherwise, there will be
          some metadata fetched and stored on Cohesity Cluster.
        type: boolean
        x-go-name: DisableMetadata
        x-nullable: true
      disableNotification:
        description: |-
          Specifies whether to disable some notification steps when taking
          snapshots.
        type: boolean
        x-go-name: DisableNotification
        x-nullable: true
      excludedVssWriters:
        description: |-
          Specifies a list of Windows VSS writers that are excluded from backups.
          For example, "ASR Writer", "System Writer". Refer Microsoft documentaion
          for a complete list.
        type: array
        items:
          type: string
        x-go-name: ExcludedVssWriters
        x-nullable: true
    x-go-package: cohesity/iris/server/data/public
  WormRetentionProto:
    description: |-
      Message that specifies the WORM attributes. WORM attributes can be
      associated with any of the following:
      1. backup policy: compliance or administrative policy with worm retention.
      2. backup runs: worm retention inherited from policy at successful backup
      run completion..
      3. backup tasks do not inherit WORM retention. Instead they check for WORM
      property on the corresponding backup run.
      There are no WORM attributes associated with the backup job.
    type: object
    properties:
      policyType:
        description: |-
          The type of WORM policy set on this run. This field is irrelevant
          while objects are on legal hold. Objects put on legal hold automatically
          raise the WORM level on the object behaviorally to the strictest level
          i.e. kCompliance.
        type: integer
        format: int32
        x-go-name: PolicyType
        x-nullable: true
      retentionSecs:
        description: Retention time for datalock in seconds. This will be always relative
          time.
        type: integer
        format: int64
        x-go-name: RetentionSecs
        x-nullable: true
      version:
        description: Version number for this proto.
        type: integer
        format: int32
        x-go-name: Version
        x-nullable: true
    x-go-package: magneto/base/worm.pb
responses:
  ActivateViewAliasesResponse:
    description: Success
    schema:
      $ref: '#/definitions/ActivateViewAliasesResult'
  AdObjectsRestoreStatusResponse:
    description: Success
    schema:
      $ref: '#/definitions/AdObjectsRestoreStatus'
  AddActiveDirectoryPrincipalsResponse:
    description: Success
    schema:
      description: |-
        List of users or groups that were added to the Cohesity Cluster
        for Active Directory principals.
      type: array
      title: Array of Added Users and Groups.
      items:
        $ref: '#/definitions/AddedActiveDirectoryPrincipal'
  AddIdpPrincipalsResponse:
    description: Success
    schema:
      description: |-
        List of users or groups that were added to the Cohesity Cluster
        for Idp principals.
      type: array
      title: Array of Added Users and Groups.
      items:
        $ref: '#/definitions/AddedIdpPrincipal'
  AddRouteResponse:
    description: Success
    schema:
      $ref: '#/definitions/Route'
  AnalyzeJarResponse:
    description: Success
    schema:
      $ref: '#/definitions/AnalyseJarResult'
  AntivirusServiceGroupStateResponse:
    description: Success
    schema:
      $ref: '#/definitions/AntivirusServiceGroupStateParams'
  AppendHostsResponse:
    description: Success
    schema:
      $ref: '#/definitions/HostResult'
  ApplicationResponse:
    description: Success
    schema:
      $ref: '#/definitions/MapReduceInfo'
  CancelMapReduceInstanceRunResponse:
    description: Success
    schema:
      $ref: '#/definitions/KillMapReduceInstanceResult'
  ChangeServiceStateResponse:
    description: Success
    schema:
      $ref: '#/definitions/ChangeServiceStateResult'
  CheckIdpReachableResponse:
    description: Success
    schema:
      $ref: '#/definitions/IdpReachabilityTestResult'
  CloneDirectoryResponse:
    description: Success
  CloneViewResponse:
    description: Success
    schema:
      $ref: '#/definitions/View'
  ClusterPartitionResponse:
    description: Success
    schema:
      $ref: '#/definitions/ClusterPartition'
  ClusterResponse:
    description: Successful Response
    schema:
      $ref: '#/definitions/Cluster'
  CompareAdObjectsResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/ComparedADObject'
  CreateActiveDirectoryResponse:
    description: Success
    schema:
      $ref: '#/definitions/ActiveDirectoryEntry'
  CreateAntivirusServiceGroupResponse:
    description: Success
    schema:
      $ref: '#/definitions/AntivirusServiceGroup'
  CreateApiKeyResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreatedApiKey'
  CreateBondResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreateBondResult'
  CreateCloneRefreshTaskResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestoreTaskWrapper'
  CreateCloneTaskResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestoreTask'
  CreateCloudClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreateClusterResult'
  CreateDeployTaskResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestoreTask'
  CreateDownloadFilesAndFoldersResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestoreTask'
  CreateGroupResponse:
    description: Success
    schema:
      $ref: '#/definitions/Group'
  CreateIdpResponse:
    description: Success
    schema:
      $ref: '#/definitions/IdpServiceConfiguration'
  CreateInterfaceGroupResponse:
    description: Success
    schema:
      $ref: '#/definitions/InterfaceGroup'
  CreateIpConfigResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreateIpConfigResult'
  CreateKmsConfigResponse:
    description: Response after KMS has been created.
    schema:
      $ref: '#/definitions/KmsConfigurationResponse'
  CreateLdapProviderResponse:
    description: Success
    schema:
      $ref: '#/definitions/LdapProviderResponse'
  CreateMcmRoleOpResponse:
    description: Success
    schema:
      $ref: '#/definitions/Role'
  CreateNotificationRulesResponse:
    description: Success
    schema:
      $ref: '#/definitions/NotificationRule'
  CreatePhysicalClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreateClusterResult'
  CreateProtectionJobResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionJob'
  CreateProtectionPolicyResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionPolicy'
  CreateRecoverTaskResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestoreTask'
  CreateRemoteClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/RemoteCluster'
  CreateRemoteVaultRestoreTaskResponse:
    description: Success
    schema:
      $ref: '#/definitions/UniversalId'
  CreateRemoteVaultSearchJobResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreatedRemoteVaultSearchJobUid'
  CreateResolutionResponse:
    description: Success
    schema:
      $ref: '#/definitions/AlertResolution'
  CreateRestoreFilesTaskResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestoreTask'
  CreateRoleResponse:
    description: Success
    schema:
      $ref: '#/definitions/Role'
  CreateSchedulerJobResponse:
    description: Success
    schema:
      $ref: '#/definitions/SchedulerProto_SchedulerJob'
  CreateTenantResponse:
    description: Create Tenants response
    schema:
      $ref: '#/definitions/Tenant'
  CreateUserResponse:
    description: Success
    schema:
      $ref: '#/definitions/User'
  CreateVaultResponse:
    description: Success
    schema:
      $ref: '#/definitions/Vault'
  CreateViewAliasResponse:
    description: Success
    schema:
      $ref: '#/definitions/ViewAlias'
  CreateViewBoxResponse:
    description: Success
    schema:
      $ref: '#/definitions/ViewBox'
  CreateViewResponse:
    description: Success
    schema:
      $ref: '#/definitions/View'
  CreateViewUserQuotaResponse:
    description: Success
    schema:
      $ref: '#/definitions/UserQuotaAndUsage'
  CreateVirtualClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreateClusterResult'
  DeleteHostsResponse:
    description: Success
    schema:
      $ref: '#/definitions/HostResult'
  DeleteInfectedFilesResponse:
    description: Success
    schema:
      $ref: '#/definitions/DeleteInfectedFileResponse'
  DeployHostCertResponse:
    description: Host Certificate Download Response.
    schema:
      $ref: '#/definitions/CertificateDetails'
  DownloadCftFileResponse:
    description: Success
    schema:
      $ref: '#/definitions/DownloadCftResponse'
  DownloadPackageResponse:
    description: Success
    schema:
      $ref: '#/definitions/DownloadPackageResult'
  DownloadPhysicalAgentResponse:
    description: Success
    schema:
      type: array
      title: Specifies the content of the physical agent binary.
      items:
        type: integer
        format: uint8
  DownloadResponse:
    description: Success
    schema:
      $ref: '#/definitions/ExtractFileRangeResult'
  DownloadTenantsProxyResponse:
    description: Tenants Proxy Download Response.
    schema:
      type: array
      title: Specifies the content of the tenants proxy.
      items:
        type: integer
        format: uint8
  EditHostsResponse:
    description: Success
    schema:
      $ref: '#/definitions/HostResult'
  EmailReportResponse:
    description: Success
    schema:
      $ref: '#/definitions/SchedulerProto_SchedulerJob_ScheduleJobParameters_ReportJobParameter'
  Error:
    description: Error
    schema:
      $ref: '#/definitions/RequestError'
  ErrorResponse:
    description: Error
    schema:
      $ref: '#/definitions/Error'
  ExpandCloudClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreateClusterResult'
  ExpandPhysicalClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreateClusterResult'
  ExternalClientSubnetsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ExternalClientSubnets'
  GenerateAccessTokenResponse:
    description: Success
    schema:
      $ref: '#/definitions/AccessToken'
  GetActiveAlertsStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ActiveAlertsStats'
  GetActiveDirectoryResponse:
    description: Success
    schema:
      description: List of Active Directory domains that the Cohesity Cluster has
        joined.
      type: array
      title: Array of Active Directories.
      items:
        $ref: '#/definitions/ActiveDirectoryEntry'
  GetAdDomainRootTopologyResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/AdRootTopologyObject'
  GetAgentDeploymentReportResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/AgentDeploymentStatusResponse'
  GetAlertByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/Alert'
  GetAlertCategoriesResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/AlertCategoryName'
  GetAlertTypesResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/AlertMetadata'
  GetAlertsResponse:
    description: Success
    schema:
      type: array
      title: List of Alerts that match the specified filter criteria.
      items:
        $ref: '#/definitions/Alert'
  GetAllJobRunsResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/GetAllJobRunsResult'
  GetAntivirusServiceGroupResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/AntivirusServiceGroup'
  GetApiKeyByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/ApiKey'
  GetApiKeysResponse:
    description: Success
    schema:
      type: array
      title: Specifies a list of API keys for this user.
      items:
        $ref: '#/definitions/ApiKey'
  GetAppInstancesResponse:
    description: GetAppInstancesResponse specifies response for getting apps
    schema:
      type: array
      items:
        $ref: '#/definitions/AppInstance'
  GetAppSettingsResponse:
    description: Success
    schema:
      $ref: '#/definitions/AppsConfig'
  GetApplicationByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/MapReduceInfo'
  GetApplicationsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ApplicationsWrapper'
  GetAppsResponse:
    description: GetAppsResponse specifies response for getting apps
    schema:
      type: array
      items:
        $ref: '#/definitions/App'
  GetArchiveMediaInfoResponse:
    description: Success
    schema:
      description: |-
        List the tape media in QStar Archive Vault that match the specified
        filters.
      type: array
      title: Array of Tape Media.
      items:
        $ref: '#/definitions/TapeMediaInformation'
  GetAuditLogsActionsResponse:
    description: Success
    schema:
      type: array
      title: List of audit log actions.
      items:
        type: string
  GetAuditLogsCategoriesResponse:
    description: Success
    schema:
      type: array
      title: List of audit log categories.
      items:
        type: string
  GetBackgroundActivityScheduleResponse:
    description: Success
    schema:
      $ref: '#/definitions/BandwidthLimit'
  GetBandwidthSettingsResponse:
    description: Success
    schema:
      $ref: '#/definitions/VaultBandwidthLimits'
  GetBannerResponse:
    description: GetBannerResponse response.
    schema:
      $ref: '#/definitions/Banner'
  GetBasicClusterInfoResponse:
    description: Success
    schema:
      $ref: '#/definitions/BasicClusterInfo'
  GetCertificateResponse:
    description: List Host Certificate Response.
    schema:
      $ref: '#/definitions/ListCertResponse'
  GetClusterCreationProgressResponse:
    description: Success
    schema:
      $ref: '#/definitions/ClusterCreationProgressResult'
  GetClusterKeysResponse:
    description: Success
    schema:
      $ref: '#/definitions/ClusterPublicKeys'
  GetClusterPartitionsResponse:
    description: Success
    schema:
      description: |-
        Specifies a list of Cluster Partitions that match the specified
        filter criteria.
      type: array
      title: Array of Cluster Partitions.
      items:
        $ref: '#/definitions/ClusterPartition'
  GetClusterStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ClusterStats'
  GetClusterStatusResponse:
    description: Success
    schema:
      $ref: '#/definitions/ClusterStatusResult'
  GetConsumerStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/GetConsumerStatsResult'
  GetDashboardResponse:
    description: Success
    schema:
      $ref: '#/definitions/DashboardResponse'
  GetDataTransferFromVaultsSummaryResponse:
    description: Success
    schema:
      $ref: '#/definitions/DataTransferFromVaultsSummaryResponse'
  GetDataTransferToVaultsSummaryResponse:
    description: Success
    schema:
      $ref: '#/definitions/DataTransferToVaultsSummaryResponse'
  GetDirQuotaInfoResponse:
    description: Success
    schema:
      $ref: '#/definitions/DirQuotaInfo'
  GetEntitiesResponse:
    description: Success
    schema:
      description: Specifies a list of entities.
      type: array
      title: Array of Entities.
      items:
        $ref: '#/definitions/EntityProto'
  GetEntitiesSchemaResponse:
    description: Success
    schema:
      description: Specifies a list of entity schemas.
      type: array
      title: Array of Entity Schemas.
      items:
        $ref: '#/definitions/EntitySchemaProto'
  GetEntitySchemaByNameResponse:
    description: Success
    schema:
      description: Specifies a list of entity schemas.
      type: array
      title: Array of Entity Schemas.
      items:
        $ref: '#/definitions/EntitySchemaProto'
  GetFileDistributionStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/FileDistributionStatsList'
  GetFileFstatInformationResponse:
    description: Success
    schema:
      $ref: '#/definitions/FileFstatResult'
  GetFileLockStatusResponse:
    description: Get lock file status response
    schema:
      $ref: '#/definitions/FileLockStatus'
  GetFileSnapshotsInformationResponse:
    description: Success
    schema:
      description: |-
        Specifies an array of snapshots that contain the folder or file.
        In addition, information about each file or folder is provided.
      type: array
      title: Array of Snapshots and File/Folder Information.
      items:
        $ref: '#/definitions/FileSnapshotInformation'
  GetGdprReportResponse:
    description: GetGdprReportResponse defines the response for GetGdprReport.
    schema:
      type: array
      items:
        $ref: '#/definitions/ObjectInformation'
  GetGroupsResponse:
    description: Success
    schema:
      description: Specifies the groups that match the specified filter criteria.
      type: array
      title: Array of Groups.
      items:
        $ref: '#/definitions/Group'
  GetIcapConnectionStatusResponse:
    description: Success
    schema:
      $ref: '#/definitions/IcapConnectionStatusResponse'
  GetIdpsResponse:
    description: Success
    schema:
      description: Specifies a list of IdP configurations.
      type: array
      title: Array of IdP configurations.
      items:
        $ref: '#/definitions/IdpServiceConfiguration'
  GetInfectedFilesResponse:
    description: Success
    schema:
      $ref: '#/definitions/InfectedFiles'
  GetInterfaceGroupsResponse:
    description: Success
    schema:
      type: array
      title: Specifies a list of the interface groups.
      items:
        $ref: '#/definitions/InterfaceGroup'
  GetJobRunInfoResponse:
    description: Success
    schema:
      $ref: '#/definitions/GetJobRunInfoResult'
  GetKmsConfigResponse:
    description: Specifies a list of KMS configurations.
    schema:
      description: |-
        KMS Configuration corresponding to the server name
        specified in the list KMS request.
      type: array
      items:
        $ref: '#/definitions/KmsConfigurationResponse'
  GetLastProtectionRunStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/LastProtectionRunStats'
  GetLdapProviderResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/LdapProviderResponse'
  GetListNlmLocksResponse:
    description: Success
    schema:
      $ref: '#/definitions/ListNlmLocksResponse'
  GetMRUploadJarPathResponse:
    description: Success
    schema:
      $ref: '#/definitions/GetMRJarUploadPathResult'
  GetMapReduceAppRunsResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/AppRunHistory'
  GetMapReduceFileFormatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/MapReduceFileFormats'
  GetMapperByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/MapperInfo'
  GetMappersResponse:
    description: Success
    schema:
      $ref: '#/definitions/MappersWrapper'
  GetMcmPrivilegesOpResponse:
    description: Success
    schema:
      description: Specifies a list of mcm privileges.
      type: array
      title: Array of mcm Privileges.
      items:
        $ref: '#/definitions/PrivilegeInfo'
  GetMcmRoleOpResponse:
    description: Success
    schema:
      $ref: '#/definitions/Role'
  GetMcmRolesOpResponse:
    description: Success
    schema:
      description: Specifies a list of roles.
      type: array
      title: Array of Roles.
      items:
        $ref: '#/definitions/Role'
  GetMcmUserByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/User'
  GetMcmUserPrivilegesOpResponse:
    description: Success
    schema:
      description: Specifies a list of mcm user privileges.
      type: array
      title: Array of mcm user Privileges.
      items:
        type: string
  GetMcmUsersResponse:
    description: Success
    schema:
      description: Specifies a list of mcm users.
      type: array
      title: Array of mcm users.
      items:
        $ref: '#/definitions/User'
  GetNodeByIdResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/Node'
  GetNodeStatsResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/NodeStats'
  GetNodeStatusResponse:
    description: Success
    schema:
      $ref: '#/definitions/NodeStatusResult'
  GetNodesResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/Node'
  GetNotificationRulesResponse:
    description: Success
    schema:
      type: array
      title: Array of Notification Rules.
      items:
        $ref: '#/definitions/NotificationRule'
  GetNotificationsResponse:
    description: Success
    schema:
      $ref: '#/definitions/Notifications'
  GetObjectsDetailsResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/GetObjectsDetailsResult'
  GetPostgresResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/PostgresNodeInfo'
  GetPrivilegesResponse:
    description: Success
    schema:
      description: Specifies a list of privileges.
      type: array
      title: Array of Privileges.
      items:
        $ref: '#/definitions/PrivilegeInfo'
  GetProtectedObjectsSummaryResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectedObjectsSummary'
  GetProtectionJobAuditResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/ProtectionJobAuditTrail'
  GetProtectionJobByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionJob'
  GetProtectionJobsResponse:
    description: Success
    schema:
      type: array
      title: Array of Protection Jobs.
      items:
        $ref: '#/definitions/ProtectionJob'
  GetProtectionObjectSummaryResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionObjectSummary'
  GetProtectionPoliciesResponse:
    description: Success
    schema:
      description: List of Protections Policies that match the specified filter criteria.
      type: array
      title: Array of Protection Policies.
      items:
        $ref: '#/definitions/ProtectionPolicy'
  GetProtectionPolicyByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionPolicy'
  GetProtectionPolicySummaryResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionPolicySummary'
  GetProtectionRunErrorsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionRunErrors'
  GetProtectionRunsResponse:
    description: Success
    schema:
      type: array
      title: Array of Protection Job Runs.
      items:
        $ref: '#/definitions/ProtectionRunInstance'
  GetProtectionRunsStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionRunsStats'
  GetProtectionSourcesObjectByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionSource'
  GetProtectionSourcesObjectsResponse:
    description: Success
    schema:
      type: array
      title: Array of Protection Source Objects.
      items:
        $ref: '#/definitions/ProtectionSource'
  GetQoSPoliciesResponse:
    description: Success
    schema:
      type: array
      title: List of QoS Policies.
      items:
        $ref: '#/definitions/QoSPolicy'
  GetReducerByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/ReducerInfo'
  GetReducersResponse:
    description: Success
    schema:
      $ref: '#/definitions/ReducersWrapper'
  GetRemoteClusterByIdResponse:
    description: Success
    schema:
      description: |-
        A single remote Cluster instance with the specified Cluster id is returned
        in this Array.
      type: array
      title: Single Remote Cluster in Array.
      items:
        $ref: '#/definitions/RemoteCluster'
  GetRemoteClustersResponse:
    description: Success
    schema:
      description: |-
        Specifies the remote Clusters that are registered on this Cluster
        for replication that match the specified filter criteria.
      type: array
      title: Array of Remote Clusters.
      items:
        $ref: '#/definitions/RemoteCluster'
  GetRemoteVaultSearchJobResultsResponse:
    description: Success
    schema:
      $ref: '#/definitions/RemoteVaultSearchJobResults'
  GetReplicationEncryptionKeyResponse:
    description: Success
    schema:
      $ref: '#/definitions/ReplicationEncryptionKeyReponse'
  GetResolutionByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/AlertResolution'
  GetResolutionsResponse:
    description: Success
    schema:
      type: array
      title: List of Alert Resolutions that match the specified filter criteria.
      items:
        $ref: '#/definitions/AlertResolution'
  GetRestorePointsForTimeRangeResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestorePointsForTimeRange'
  GetRestoreStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestoreStats'
  GetRestoreSummaryByObjectTypeReportResponse:
    description: Success
    schema:
      description: Specifies a list of restore sources summary grouped by the object
        type.
      type: array
      title: Array of Restore source summary by object type.
      items:
        $ref: '#/definitions/RestoreSourceSummaryByObjectTypeElement'
  GetRestoreTaskByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/RestoreTask'
  GetRestoreTasksResponse:
    description: Success
    schema:
      type: array
      title: Array of Restore Tasks.
      items:
        $ref: '#/definitions/RestoreTask'
  GetRolesResponse:
    description: Success
    schema:
      description: Specifies a list of roles.
      type: array
      title: Array of Roles.
      items:
        $ref: '#/definitions/Role'
  GetRoutesResponse:
    description: Success
    schema:
      description: Specifies a list of the Static Routes.
      type: array
      title: Array of Static Routes.
      items:
        $ref: '#/definitions/Route'
  GetSchedulerJobsResponse:
    description: Success
    schema:
      $ref: '#/definitions/SchedulerProto'
  GetServiceGflagResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/ServiceGflags'
  GetSessionUserResponse:
    description: Success
    schema:
      $ref: '#/definitions/User'
  GetSmbConnectionsResponse:
    description: Success
    schema:
      type: array
      title: Get Smb connection status.
      items:
        $ref: '#/definitions/SmbConnection'
  GetSmbFileOpensResponse:
    description: Success
    schema:
      $ref: '#/definitions/SmbActiveFileOpensResponse'
  GetStorageStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/StorageStats'
  GetSupportedPatternsResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/SupportedPattern'
  GetTasksResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/Task'
  GetTenantStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/GetTenantStatsResult'
  GetTenantsProxiesResponse:
    description: Get Tenants Proxies Response.
    schema:
      type: array
      items:
        $ref: '#/definitions/TenantProxy'
  GetTenantsProxyConfigResponse:
    description: Get Tenants Proxy Config Response.
    schema:
      type: array
      items:
        type: integer
        format: uint8
  GetTenantsResponse:
    description: Get Tenants Response.
    schema:
      description: Array of tenants
      type: array
      items:
        $ref: '#/definitions/Tenant'
  GetTimeSeriesSchemaResponse:
    description: Success
    schema:
      $ref: '#/definitions/TimeSeriesSchemaResponse'
  GetTimeSeriesStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/MetricDataBlock'
  GetUserPrivilegesResponse:
    description: Success
    schema:
      description: List of privileges for the session user.
      type: array
      title: Array of Privileges.
      items:
        type: string
  GetUsersResponse:
    description: Success
    schema:
      description: Specifies the users that match the specified search criteria.
      type: array
      title: Array of Users.
      items:
        $ref: '#/definitions/User'
  GetVaultByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/Vault'
  GetVaultEncryptionKeyResponse:
    description: Success
    schema:
      $ref: '#/definitions/VaultEncryptionKey'
  GetVaultProviderStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/VaultProviderStatsList'
  GetVaultRunStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/VaultRunStatsSummary'
  GetVaultStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/VaultStats'
  GetVaultsResponse:
    description: Success
    schema:
      description: List of Vaults that match the specified filter criteria.
      type: array
      title: Array of Vaults.
      items:
        $ref: '#/definitions/Vault'
  GetViewBoxByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/ViewBox'
  GetViewBoxStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/GetViewBoxStatsResult'
  GetViewBoxesResponse:
    description: Success
    schema:
      description: |-
        List of Storage Domains (View Boxes) that match the specified filter
        criteria.
      type: array
      title: Array of View Boxes.
      items:
        $ref: '#/definitions/ViewBox'
  GetViewByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/View'
  GetViewByNameResponse:
    description: Success
    schema:
      $ref: '#/definitions/View'
  GetViewProtocolStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ViewProtocolStatsList'
  GetViewStatsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ViewStatsSnapshot'
  GetViewUserQuotasResponse:
    description: Success
    schema:
      $ref: '#/definitions/ViewUserQuotas'
  GetViewsByShareNameResponse:
    description: Success
    schema:
      $ref: '#/definitions/GetViewsByShareNameResult'
  GetViewsResponse:
    description: Success
    schema:
      $ref: '#/definitions/GetViewsResult'
  GetVirtualDiskInformationResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/VirtualDiskInformation'
  GetVlanByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/Vlan'
  GetVlansResponse:
    description: Success
    schema:
      description: Specifies a list of VLANs for this Cohesity Cluster.
      type: array
      title: Array of VLANs.
      items:
        $ref: '#/definitions/Vlan'
  GetVmDirectoryListResponse:
    description: Success
    schema:
      $ref: '#/definitions/VmDirectoryListResult'
  GetVmVolumesInformationResponse:
    description: Success
    schema:
      $ref: '#/definitions/VmVolumesInformation'
  GetWebServerCertificateResponse:
    description: Success
    schema:
      $ref: '#/definitions/SslCertificateConfig'
  ImportConfigResponse:
    description: Success
  InstallAppResponse:
    description: Success
    schema:
      $ref: '#/definitions/App'
  IoPreferentialTierResponse:
    description: Success
    schema:
      $ref: '#/definitions/IoPreferentialTier'
  IpConfigResponse:
    description: Success
    schema:
      $ref: '#/definitions/IpConfig'
  LaunchAppInstanceResponse:
    description: Success
    schema:
      $ref: '#/definitions/AppInstanceIdParameter'
  LdapProviderStatusResponse:
    description: Success
    schema:
      $ref: '#/definitions/LdapProviderStatus'
  LicenseUsageResponse:
    description: Success
    schema:
      $ref: '#/definitions/LicenseAccountUsageRsp'
  LinuxSupportUserBashShellAccessResponse:
    description: Success
    schema:
      $ref: '#/definitions/LinuxSupportUserBashShellAccessResult'
  LinuxSupportUserSudoAccessResponse:
    description: Success
    schema:
      $ref: '#/definitions/LinuxSupportUserSudoAccessResult'
  ListApplicationServersResponse:
    description: Success
    schema:
      description: |-
        Specifies a list of Application Servers found in a Protection Source
        tree given the root node id of the Protection Source tree and filtered
        by the application type like 'kSQL', or 'kExchange'.
      type: array
      title: Array of Application Servers.
      items:
        $ref: '#/definitions/RegisteredApplicationServer'
  ListCentrifyZonesResponse:
    description: Success
    schema:
      type: array
      title: Array of Centrify zones.
      items:
        $ref: '#/definitions/ListCentrifyZone'
  ListDataStoreInformationResponse:
    description: Success
    schema:
      description: |-
        Specifies a list of datastores for a given virtual machine in VMware
        environment.
      type: array
      items:
        $ref: '#/definitions/ProtectionSource'
  ListDomainControllersResponse:
    description: Success
    schema:
      $ref: '#/definitions/DomainControllers'
  ListExchangeDagHostsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ExchangeDagHostsResponse'
  ListFreeNodesResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/FreeNodeInformation'
  ListHostsResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/HostEntry'
  ListInterfaceResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/NodeNetworkInterfaces'
  ListPackagesResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/PackageDetails'
  ListPreferredDcResponse:
    description: Success
    schema:
      type: array
      title: Array of Preferred Domain controllers.
      items:
        $ref: '#/definitions/PreferredDomainController'
  ListProtectedObjectsResponse:
    description: Success
    schema:
      description: |-
        Specifies a list of Protected Objects in a registered Protection Source
        and the protection stats.
      type: array
      items:
        $ref: '#/definitions/ProtectedVmInfo'
  ListProtectionSourcesRegistrationInfoResponse:
    description: Success
    schema:
      $ref: '#/definitions/GetRegistrationInfoResponse'
  ListProtectionSourcesResponse:
    description: Success
    schema:
      description: |-
        List of Protection Sources and Object subtrees matching
        the specified filter criteria.
      type: array
      title: Array of Sources and Subtrees.
      items:
        $ref: '#/definitions/ProtectionSourceNode'
  ListProtectionSourcesRootNodesResponse:
    description: Success
    schema:
      description: |-
        Specifies the array of root nodes of Protection Source trees with
        registration information.
      type: array
      title: Array of Root Nodes.
      items:
        $ref: '#/definitions/ProtectionSourceNode'
  ListRemoteVaultRestoreTasksStatusResponse:
    description: Success
    schema:
      description: List of details about the statuses of remote Vault restore tasks.
      type: array
      title: Array of Remote Vault Restore Tasks Statuses.
      items:
        $ref: '#/definitions/RemoteVaultRestoreTaskStatus'
  ListRemoteVaultSearchJobByIdResponse:
    description: Success
    schema:
      $ref: '#/definitions/RemoteVaultSearchJobInformation'
  ListRemoteVaultSearchJobsResponse:
    description: Success
    schema:
      description: Specifies of a list of searches of remote Vaults.
      type: array
      title: Array of Remote Vault Searches.
      items:
        $ref: '#/definitions/RemoteVaultSearchJobInformation'
  ListServiceStatesResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/ServiceStateResult'
  ListSourcesForPrincipalsResponse:
    description: Success
    schema:
      description: |-
        Specifies the Protection Source objects and Views that the specified
        list of principals have permissions to access.
      type: array
      title: Array of Protection Source Objects and Views.
      items:
        $ref: '#/definitions/SourcesForSid'
  ListSqlAagHostsAndDatabasesResponse:
    description: |-
      List SQL AAG hosts and databases response.
      Success
    schema:
      type: array
      items:
        $ref: '#/definitions/SqlAagHostAndDatabases'
  ListStorageProfilesResponse:
    description: Success
    schema:
      $ref: '#/definitions/ListStorageProfilesResponseBody'
  ListVirtualMachinesResponse:
    description: Success
    schema:
      type: array
      title: Array of Protection Source VM Leaf Nodes.
      items:
        $ref: '#/definitions/ProtectionSource'
  MapperResponse:
    description: Success
    schema:
      $ref: '#/definitions/MapperInfo'
  McmGlobalSearchOpResponse:
    description: Success
    schema:
      description: |-
        Specifies the list of all the objects returned by search operation along
        with its protection status on mcm.
      type: array
      items:
        $ref: '#/definitions/ProtectionSourceResponse'
  McmGlobalSearchRunOpResponse:
    description: Success
    schema:
      description: |-
        Specifies the list of all the objects returned by search operation along
        with its protection status on mcm.
      type: array
      items:
        $ref: '#/definitions/ProtectionSourceResponse'
  NoContentResponse:
    description: No Content
  NodeHardwareInfoHandlerResponse:
    description: Success
    schema:
      $ref: '#/definitions/HardwareInfo'
  NodeStopHandlerResponse:
    description: (empty)
    schema:
      $ref: '#/definitions/NodeStopOp'
  NotFoundResponse:
    description: Not Found
  OverwriteViewResponse:
    description: Success
    schema:
      $ref: '#/definitions/View'
  ProtectObjectResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/ProtectedObject'
  ProtectedObjectsTrendsReportResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/ProtectionTrend'
  ProtectionSourcesJobRunsReportResponse:
    description: Success
    schema:
      description: |-
        Specifies a list of Protection Sources Objects and the Snapshots that
        contain backups of these Objects.
      type: array
      title: Array of Protection Sources and Snapshots.
      items:
        $ref: '#/definitions/ProtectionSourcesJobRunsReportElement'
  ProtectionSourcesJobsSummaryReportResponseBodyWrapper:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionSourcesJobsSummaryReportResponseWrapper'
  RedirectResponse:
    description: 302 Found
  ReducerResponse:
    description: Success
    schema:
      $ref: '#/definitions/ReducerInfo'
  RegisterApplicationServersResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionSource'
  RegisterProtectionSourceResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionSource'
  RenameViewResponse:
    description: Success
    schema:
      $ref: '#/definitions/View'
  ResetS3SecretKeyResponse:
    description: New S3 Secret Access Key.
    schema:
      $ref: '#/definitions/NewS3SecretAccessKey'
  RotateUserApiKeyResponse:
    description: Success
    schema:
      $ref: '#/definitions/CreatedApiKey'
  RunDiagnosticsResponse:
    description: Success
    schema:
      $ref: '#/definitions/RunDiagnosticsMessage'
  RunMapReduceAppInstanceResponse:
    description: Success
    schema:
      $ref: '#/definitions/RunMapReduceInstanceResult'
  SearchActiveDirectoryPrincipalsResponse:
    description: Success
    schema:
      description: List of principals matching the specified filter criteria.
      type: array
      title: Array of Active Directory Principals.
      items:
        $ref: '#/definitions/ActiveDirectoryPrincipal'
  SearchAdObjectsResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/ADObject'
  SearchClusterAuditLogsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ClusterAuditLogsSearchResult'
  SearchObjectsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ObjectSearchResults'
  SearchPrincipalsResponse:
    description: Success
    schema:
      description: List of principals matching the specified filter criteria.
      type: array
      title: Array of Principals.
      items:
        $ref: '#/definitions/Principal'
  SearchProtectionRunsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionRunResponse'
  SearchProtectionSourcesResponse:
    description: Success
    schema:
      description: |-
        Specifies the list of all the objects returned by search operation along
        with its protection status.
      type: array
      items:
        $ref: '#/definitions/ProtectionSourceResponse'
  SearchRestoredFilesResponse:
    description: Success
    schema:
      $ref: '#/definitions/FileSearchResults'
  SendSnmpTestTrapResponse:
    description: Success
    schema:
      $ref: '#/definitions/SendSnmpTestTrapResult'
  ShowSystemLedResponse:
    description: Success
    schema:
      $ref: '#/definitions/ShowSystemLedInfoResult'
  SubnetResponse:
    description: Success
    schema:
      type: array
      items:
        $ref: '#/definitions/Subnet'
  SuccessResponse:
    description: Success Response
  TagsOperationResponse:
    description: Tags Operation Response.
    schema:
      $ref: '#/definitions/TagsOperationResult'
  UnregisterApplicationServersResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionSource'
  UpdateActiveDirectoryMachineAccountsResponse:
    description: Success
    schema:
      $ref: '#/definitions/ActiveDirectoryEntry'
  UpdateActiveDirectoryResponse:
    description: Success
    schema:
      $ref: '#/definitions/ActiveDirectoryEntry'
  UpdateAntivirusServiceGroupResponse:
    description: Success
    schema:
      $ref: '#/definitions/AntivirusServiceGroup'
  UpdateAppSettingsResponse:
    description: Success
    schema:
      $ref: '#/definitions/AppsConfig'
  UpdateApplicationServersResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionSource'
  UpdateBackgroundActivityScheduleResponse:
    description: Success
    schema:
      $ref: '#/definitions/BandwidthLimit'
  UpdateBannerResponse:
    description: UpdateBannerResponse response.
    schema:
      $ref: '#/definitions/Banner'
  UpdateBondResponse:
    description: Success
    schema:
      $ref: '#/definitions/UpdateBondResult'
  UpdateClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/Cluster'
  UpdateEulaConfigResponse:
    description: Success
    schema:
      $ref: '#/definitions/UpdateEulaConfig'
  UpdateGroupResponse:
    description: Success
    schema:
      $ref: '#/definitions/Group'
  UpdateIdpResponse:
    description: Success
    schema:
      $ref: '#/definitions/IdpServiceConfiguration'
  UpdateInfectedFilesResponse:
    description: Success
    schema:
      $ref: '#/definitions/UpdateInfectedFileResponse'
  UpdateInterfaceGroupResponse:
    description: Success
    schema:
      $ref: '#/definitions/InterfaceGroup'
  UpdateInterfaceResponse:
    description: Success
    schema:
      $ref: '#/definitions/Interface'
  UpdateKmsConfigResponse:
    description: Response after KMS has been updated.
    schema:
      $ref: '#/definitions/KmsConfigurationResponse'
  UpdateLdapProviderResponse:
    description: Success
    schema:
      $ref: '#/definitions/LdapProviderResponse'
  UpdateLinuxPasswordResponse:
    description: Success
    schema:
      $ref: '#/definitions/UpdateLinuxPasswordResult'
  UpdateMcmRoleOpResponse:
    description: Success
    schema:
      $ref: '#/definitions/Role'
  UpdateNotificationRulesResponse:
    description: Success
    schema:
      $ref: '#/definitions/NotificationRule'
  UpdateProtectionJobResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionJob'
  UpdateProtectionJobsStateResponse:
    description: Success
    schema:
      $ref: '#/definitions/UpdateProtectionJobsState'
  UpdateProtectionObjectResponse:
    description: |-
      UpdateProtectionObjectRequest is the response of updating a Protection
      Object.
      Success
    schema:
      $ref: '#/definitions/ProtectionJob'
  UpdateProtectionPolicyResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionPolicy'
  UpdateRemoteClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/RemoteCluster'
  UpdateResolutionResponse:
    description: Success
    schema:
      $ref: '#/definitions/AlertResolution'
  UpdateRestoreTaskResponse:
    description: |-
      Specifies the response of the UpdateRestoreTask API.
      Success
    schema:
      $ref: '#/definitions/RestoreTask'
  UpdateRoleResponse:
    description: Success
    schema:
      $ref: '#/definitions/Role'
  UpdateSchedulerJobResponse:
    description: Success
    schema:
      $ref: '#/definitions/SchedulerProto_SchedulerJob'
  UpdateTenantActiveDirectoryResponse:
    description: Tenant Active Directory Mapping Response.
    schema:
      $ref: '#/definitions/TenantActiveDirectoryUpdate'
  UpdateTenantEntityResponse:
    description: Tenant Entity Update Response.
    schema:
      $ref: '#/definitions/TenantEntityUpdate'
  UpdateTenantGroupsResponse:
    description: Tenant Group Mapping Response.
    schema:
      type: array
      items:
        $ref: '#/definitions/Group'
  UpdateTenantLdapProviderResponse:
    description: Tenant Ldap Provider Mapping Response.
    schema:
      $ref: '#/definitions/TenantLdapProviderUpdate'
  UpdateTenantProtectionJobResponse:
    description: Tenant Protection Job Mapping Response.
    schema:
      $ref: '#/definitions/TenantProtectionJobUpdate'
  UpdateTenantProtectionPolicyResponse:
    description: Tenant Protection Policy Mapping Response.
    schema:
      $ref: '#/definitions/TenantProtectionPolicyUpdate'
  UpdateTenantResponse:
    description: Update Tenants Response
    schema:
      $ref: '#/definitions/Tenant'
  UpdateTenantUsersResponse:
    description: Tenant Users Mapping Response.
    schema:
      type: array
      items:
        $ref: '#/definitions/User'
  UpdateTenantViewBoxResponse:
    description: Tenant View Box Update Response.
    schema:
      $ref: '#/definitions/TenantViewBoxUpdate'
  UpdateTenantViewResponse:
    description: Tenant View Mapping Response.
    schema:
      $ref: '#/definitions/TenantViewUpdate'
  UpdateTenantVlanResponse:
    description: Tenant Vlan Update Response.
    schema:
      $ref: '#/definitions/TenantVlanUpdate'
  UpdateUserApiKeyResponse:
    description: Success
    schema:
      $ref: '#/definitions/ApiKey'
  UpdateUserResponse:
    description: Success
    schema:
      $ref: '#/definitions/User'
  UpdateVaultResponse:
    description: Success
    schema:
      $ref: '#/definitions/Vault'
  UpdateViewAliasResponse:
    description: Success
    schema:
      $ref: '#/definitions/ViewAlias'
  UpdateViewBoxResponse:
    description: Success
    schema:
      $ref: '#/definitions/ViewBox'
  UpdateViewDirQuotaResponse:
    description: Success
    schema:
      $ref: '#/definitions/DirQuotaInfo'
  UpdateViewResponse:
    description: Success
    schema:
      $ref: '#/definitions/View'
  UpdateViewUserQuotaResponse:
    description: Success
    schema:
      $ref: '#/definitions/UserQuotaAndUsage'
  UpdateWebServerCertificateResponse:
    description: Success
    schema:
      $ref: '#/definitions/SslCertificateConfig'
  UpdatedProtectionSourceResponse:
    description: Success
    schema:
      $ref: '#/definitions/ProtectionSourceNode'
  UpgradeClusterResponse:
    description: Success
    schema:
      $ref: '#/definitions/UpgradeClusterResult'
  UpgradeNodeResponse:
    description: Success
    schema:
      $ref: '#/definitions/UpgradeNodeResult'
  UpgradePhysicalAgentsResponse:
    description: Success
    schema:
      $ref: '#/definitions/UpgradePhysicalAgentsMessage'
  UploadJarResponse:
    description: Success
    schema:
      $ref: '#/definitions/UploadMRJarViewPathWrapper'
  UploadPackageResponse:
    description: Success
    schema:
      $ref: '#/definitions/UploadPackageResult'
  UserPreferencesResponse:
    description: Success
    schema:
      $ref: '#/definitions/UserPreferencesResult'
  UserQuotaSettingsResponse:
    description: The User Quota settings applied to a view.
    schema:
      $ref: '#/definitions/UserQuotaSettings'
  VlanResponse:
    description: Success
    schema:
      $ref: '#/definitions/Vlan'
